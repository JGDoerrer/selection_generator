<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="278" onload="init(evt)" viewBox="0 0 1200 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="261.00"> </text><svg id="frames" x="10" width="1180" total_samples="110221"><g><title>updatecan (150 samples, 0.14%)</title><rect x="0.0000%" y="197" width="0.1361%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="150"/><text x="0.2500%" y="207.50"></text></g><g><title>testcanlab (270 samples, 0.24%)</title><rect x="0.1361%" y="197" width="0.2450%" height="15" fill="rgb(217,0,24)" fg:x="150" fg:w="270"/><text x="0.3861%" y="207.50"></text></g><g><title>processnode (75 samples, 0.07%)</title><rect x="0.3838%" y="197" width="0.0680%" height="15" fill="rgb(221,193,54)" fg:x="423" fg:w="75"/><text x="0.6338%" y="207.50"></text></g><g><title>permset (15 samples, 0.01%)</title><rect x="0.4518%" y="197" width="0.0136%" height="15" fill="rgb(248,212,6)" fg:x="498" fg:w="15"/><text x="0.7018%" y="207.50"></text></g><g><title>processnode (42 samples, 0.04%)</title><rect x="0.4654%" y="181" width="0.0381%" height="15" fill="rgb(208,68,35)" fg:x="513" fg:w="42"/><text x="0.7154%" y="191.50"></text></g><g><title>othernode0 (175 samples, 0.16%)</title><rect x="0.4654%" y="197" width="0.1588%" height="15" fill="rgb(232,128,0)" fg:x="513" fg:w="175"/><text x="0.7154%" y="207.50"></text></g><g><title>processnode (58 samples, 0.05%)</title><rect x="0.6333%" y="181" width="0.0526%" height="15" fill="rgb(207,160,47)" fg:x="698" fg:w="58"/><text x="0.8833%" y="191.50"></text></g><g><title>othernode0 (15 samples, 0.01%)</title><rect x="0.6859%" y="181" width="0.0136%" height="15" fill="rgb(228,23,34)" fg:x="756" fg:w="15"/><text x="0.9359%" y="191.50"></text></g><g><title>nauty (74 samples, 0.07%)</title><rect x="0.6333%" y="197" width="0.0671%" height="15" fill="rgb(218,30,26)" fg:x="698" fg:w="74"/><text x="0.8833%" y="207.50"></text></g><g><title>firstpathnode0 (13 samples, 0.01%)</title><rect x="0.7158%" y="181" width="0.0118%" height="15" fill="rgb(220,122,19)" fg:x="789" fg:w="13"/><text x="0.9658%" y="191.50"></text></g><g><title>firstpathnode0 (14 samples, 0.01%)</title><rect x="0.7158%" y="197" width="0.0127%" height="15" fill="rgb(250,228,42)" fg:x="789" fg:w="14"/><text x="0.9658%" y="207.50"></text></g><g><title>doref (81 samples, 0.07%)</title><rect x="0.7285%" y="197" width="0.0735%" height="15" fill="rgb(240,193,28)" fg:x="803" fg:w="81"/><text x="0.9785%" y="207.50"></text></g><g><title>breakout (320 samples, 0.29%)</title><rect x="0.8057%" y="197" width="0.2903%" height="15" fill="rgb(216,20,37)" fg:x="888" fg:w="320"/><text x="1.0557%" y="207.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (30 samples, 0.03%)</title><rect x="1.0960%" y="197" width="0.0272%" height="15" fill="rgb(206,188,39)" fg:x="1208" fg:w="30"/><text x="1.3460%" y="207.50"></text></g><g><title>updatecan (87 samples, 0.08%)</title><rect x="1.1277%" y="181" width="0.0789%" height="15" fill="rgb(217,207,13)" fg:x="1243" fg:w="87"/><text x="1.3777%" y="191.50"></text></g><g><title>targetcell (86 samples, 0.08%)</title><rect x="1.2094%" y="181" width="0.0780%" height="15" fill="rgb(231,73,38)" fg:x="1333" fg:w="86"/><text x="1.4594%" y="191.50"></text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (217 samples, 0.20%)</title><rect x="1.3074%" y="85" width="0.1969%" height="15" fill="rgb(225,20,46)" fg:x="1441" fg:w="217"/><text x="1.5574%" y="95.50"></text></g><g><title>core::hash::BuildHasher::hash_one (377 samples, 0.34%)</title><rect x="1.3074%" y="101" width="0.3420%" height="15" fill="rgb(210,31,41)" fg:x="1441" fg:w="377"/><text x="1.5574%" y="111.50"></text></g><g><title>[libc.so.6] (65 samples, 0.06%)</title><rect x="1.6494%" y="53" width="0.0590%" height="15" fill="rgb(221,200,47)" fg:x="1818" fg:w="65"/><text x="1.8994%" y="63.50"></text></g><g><title>[libc.so.6] (112 samples, 0.10%)</title><rect x="1.6494%" y="69" width="0.1016%" height="15" fill="rgb(226,26,5)" fg:x="1818" fg:w="112"/><text x="1.8994%" y="79.50"></text></g><g><title>malloc (140 samples, 0.13%)</title><rect x="1.6494%" y="85" width="0.1270%" height="15" fill="rgb(249,33,26)" fg:x="1818" fg:w="140"/><text x="1.8994%" y="95.50"></text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (237 samples, 0.22%)</title><rect x="1.7764%" y="69" width="0.2150%" height="15" fill="rgb(235,183,28)" fg:x="1958" fg:w="237"/><text x="2.0264%" y="79.50"></text></g><g><title>core::hash::BuildHasher::hash_one (400 samples, 0.36%)</title><rect x="1.7764%" y="85" width="0.3629%" height="15" fill="rgb(221,5,38)" fg:x="1958" fg:w="400"/><text x="2.0264%" y="95.50"></text></g><g><title>[libc.so.6] (21 samples, 0.02%)</title><rect x="2.1393%" y="69" width="0.0191%" height="15" fill="rgb(247,18,42)" fg:x="2358" fg:w="21"/><text x="2.3893%" y="79.50"></text></g><g><title>cfree (24 samples, 0.02%)</title><rect x="2.1393%" y="85" width="0.0218%" height="15" fill="rgb(241,131,45)" fg:x="2358" fg:w="24"/><text x="2.3893%" y="95.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h8fd17c7ae4142cd8E.llvm.17490832254640039515 (778 samples, 0.71%)</title><rect x="1.6494%" y="101" width="0.7059%" height="15" fill="rgb(249,31,29)" fg:x="1818" fg:w="778"/><text x="1.8994%" y="111.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,319 samples, 1.20%)</title><rect x="1.3074%" y="117" width="1.1967%" height="15" fill="rgb(225,111,53)" fg:x="1441" fg:w="1319"/><text x="1.5574%" y="127.50"></text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (2,818 samples, 2.56%)</title><rect x="2.5041%" y="101" width="2.5567%" height="15" fill="rgb(238,160,17)" fg:x="2760" fg:w="2818"/><text x="2.7541%" y="111.50">_Z..</text></g><g><title>core::hash::BuildHasher::hash_one (4,747 samples, 4.31%)</title><rect x="2.5041%" y="117" width="4.3068%" height="15" fill="rgb(214,148,48)" fg:x="2760" fg:w="4747"/><text x="2.7541%" y="127.50">core:..</text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="6.8109%" y="85" width="0.0127%" height="15" fill="rgb(232,36,49)" fg:x="7507" fg:w="14"/><text x="7.0609%" y="95.50"></text></g><g><title>[libc.so.6] (131 samples, 0.12%)</title><rect x="6.8109%" y="101" width="0.1189%" height="15" fill="rgb(209,103,24)" fg:x="7507" fg:w="131"/><text x="7.0609%" y="111.50"></text></g><g><title>cfree (174 samples, 0.16%)</title><rect x="6.8109%" y="117" width="0.1579%" height="15" fill="rgb(229,88,8)" fg:x="7507" fg:w="174"/><text x="7.0609%" y="127.50"></text></g><g><title>malloc (25 samples, 0.02%)</title><rect x="6.9787%" y="85" width="0.0227%" height="15" fill="rgb(213,181,19)" fg:x="7692" fg:w="25"/><text x="7.2287%" y="95.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hac0e1b2680fdd7e1E.llvm.438141049330634999 (49 samples, 0.04%)</title><rect x="6.9687%" y="101" width="0.0445%" height="15" fill="rgb(254,191,54)" fg:x="7681" fg:w="49"/><text x="7.2187%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (86 samples, 0.08%)</title><rect x="6.9687%" y="117" width="0.0780%" height="15" fill="rgb(241,83,37)" fg:x="7681" fg:w="86"/><text x="7.2187%" y="127.50"></text></g><g><title>rust_new::poset::Poset::dual (410 samples, 0.37%)</title><rect x="7.0531%" y="101" width="0.3720%" height="15" fill="rgb(233,36,39)" fg:x="7774" fg:w="410"/><text x="7.3031%" y="111.50"></text></g><g><title>malloc (132 samples, 0.12%)</title><rect x="7.4251%" y="85" width="0.1198%" height="15" fill="rgb(226,3,54)" fg:x="8184" fg:w="132"/><text x="7.6751%" y="95.50"></text></g><g><title>[libc.so.6] (429 samples, 0.39%)</title><rect x="7.5448%" y="69" width="0.3892%" height="15" fill="rgb(245,192,40)" fg:x="8316" fg:w="429"/><text x="7.7948%" y="79.50"></text></g><g><title>cfree (560 samples, 0.51%)</title><rect x="7.5448%" y="85" width="0.5081%" height="15" fill="rgb(238,167,29)" fg:x="8316" fg:w="560"/><text x="7.7948%" y="95.50"></text></g><g><title>__rust_dealloc (12 samples, 0.01%)</title><rect x="8.0529%" y="85" width="0.0109%" height="15" fill="rgb(232,182,51)" fg:x="8876" fg:w="12"/><text x="8.3029%" y="95.50"></text></g><g><title>__rust_alloc (12 samples, 0.01%)</title><rect x="8.0720%" y="85" width="0.0109%" height="15" fill="rgb(231,60,39)" fg:x="8897" fg:w="12"/><text x="8.3220%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (17 samples, 0.02%)</title><rect x="8.0919%" y="69" width="0.0154%" height="15" fill="rgb(208,69,12)" fg:x="8919" fg:w="17"/><text x="8.3419%" y="79.50"></text></g><g><title>__rdl_alloc_zeroed (20 samples, 0.02%)</title><rect x="8.0919%" y="85" width="0.0181%" height="15" fill="rgb(235,93,37)" fg:x="8919" fg:w="20"/><text x="8.3419%" y="95.50"></text></g><g><title>__rdl_alloc (14 samples, 0.01%)</title><rect x="8.1101%" y="85" width="0.0127%" height="15" fill="rgb(213,116,39)" fg:x="8939" fg:w="14"/><text x="8.3601%" y="95.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (14 samples, 0.01%)</title><rect x="8.1101%" y="69" width="0.0127%" height="15" fill="rgb(222,207,29)" fg:x="8939" fg:w="14"/><text x="8.3601%" y="79.50"></text></g><g><title>[libc.so.6] (178 samples, 0.16%)</title><rect x="8.1228%" y="69" width="0.1615%" height="15" fill="rgb(206,96,30)" fg:x="8953" fg:w="178"/><text x="8.3728%" y="79.50"></text></g><g><title>__libc_calloc (330 samples, 0.30%)</title><rect x="8.1228%" y="85" width="0.2994%" height="15" fill="rgb(218,138,4)" fg:x="8953" fg:w="330"/><text x="8.3728%" y="95.50"></text></g><g><title>rust_new::poset::Poset::canonify_without_dual (6,101 samples, 5.54%)</title><rect x="7.4251%" y="101" width="5.5352%" height="15" fill="rgb(250,191,14)" fg:x="8184" fg:w="6101"/><text x="7.6751%" y="111.50">rust_ne..</text></g><g><title>_ZN8rust_new5poset5Poset8canonify17h30dc4c8a258ef2c5E.llvm.13423650305899673430 (6,733 samples, 6.11%)</title><rect x="7.0531%" y="117" width="6.1086%" height="15" fill="rgb(239,60,40)" fg:x="7774" fg:w="6733"/><text x="7.3031%" y="127.50">_ZN8rust..</text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (15 samples, 0.01%)</title><rect x="13.1617%" y="53" width="0.0136%" height="15" fill="rgb(206,27,48)" fg:x="14507" fg:w="15"/><text x="13.4117%" y="63.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (137 samples, 0.12%)</title><rect x="13.1617%" y="69" width="0.1243%" height="15" fill="rgb(225,35,8)" fg:x="14507" fg:w="137"/><text x="13.4117%" y="79.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (1,016 samples, 0.92%)</title><rect x="13.1617%" y="85" width="0.9218%" height="15" fill="rgb(250,213,24)" fg:x="14507" fg:w="1016"/><text x="13.4117%" y="95.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (5,525 samples, 5.01%)</title><rect x="13.1617%" y="101" width="5.0127%" height="15" fill="rgb(247,123,22)" fg:x="14507" fg:w="5525"/><text x="13.4117%" y="111.50">_ZN8ru..</text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (10,625 samples, 9.64%)</title><rect x="13.1617%" y="117" width="9.6397%" height="15" fill="rgb(231,138,38)" fg:x="14507" fg:w="10625"/><text x="13.4117%" y="127.50">_ZN8rust_new5p..</text></g><g><title>_ZN8rust_new5poset5Poset15reduce_elements17h5d3b081c2d486ef0E.llvm.13423650305899673430 (9,129 samples, 8.28%)</title><rect x="22.8015%" y="117" width="8.2825%" height="15" fill="rgb(231,145,46)" fg:x="25132" fg:w="9129"/><text x="23.0515%" y="127.50">_ZN8rust_new..</text></g><g><title>rust_new::poset::Poset::remove_less (43,105 samples, 39.11%)</title><rect x="1.3074%" y="133" width="39.1078%" height="15" fill="rgb(251,118,11)" fg:x="1441" fg:w="43105"/><text x="1.5574%" y="143.50">rust_new::poset::Poset::remove_less</text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (51 samples, 0.05%)</title><rect x="40.4152%" y="101" width="0.0463%" height="15" fill="rgb(217,147,25)" fg:x="44546" fg:w="51"/><text x="40.6652%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (93 samples, 0.08%)</title><rect x="40.4152%" y="117" width="0.0844%" height="15" fill="rgb(247,81,37)" fg:x="44546" fg:w="93"/><text x="40.6652%" y="127.50"></text></g><g><title>malloc (16 samples, 0.01%)</title><rect x="40.4995%" y="101" width="0.0145%" height="15" fill="rgb(209,12,38)" fg:x="44639" fg:w="16"/><text x="40.7495%" y="111.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="40.4995%" y="85" width="0.0145%" height="15" fill="rgb(227,1,9)" fg:x="44639" fg:w="16"/><text x="40.7495%" y="95.50"></text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (57 samples, 0.05%)</title><rect x="40.5141%" y="85" width="0.0517%" height="15" fill="rgb(248,47,43)" fg:x="44655" fg:w="57"/><text x="40.7641%" y="95.50"></text></g><g><title>core::hash::BuildHasher::hash_one (91 samples, 0.08%)</title><rect x="40.5141%" y="101" width="0.0826%" height="15" fill="rgb(221,10,30)" fg:x="44655" fg:w="91"/><text x="40.7641%" y="111.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h8fd17c7ae4142cd8E.llvm.17490832254640039515 (145 samples, 0.13%)</title><rect x="40.4995%" y="117" width="0.1316%" height="15" fill="rgb(210,229,1)" fg:x="44639" fg:w="145"/><text x="40.7495%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (283 samples, 0.26%)</title><rect x="40.4152%" y="133" width="0.2568%" height="15" fill="rgb(222,148,37)" fg:x="44546" fg:w="283"/><text x="40.6652%" y="143.50"></text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (25 samples, 0.02%)</title><rect x="40.6719%" y="117" width="0.0227%" height="15" fill="rgb(234,67,33)" fg:x="44829" fg:w="25"/><text x="40.9219%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (42 samples, 0.04%)</title><rect x="40.6719%" y="133" width="0.0381%" height="15" fill="rgb(247,98,35)" fg:x="44829" fg:w="42"/><text x="40.9219%" y="143.50"></text></g><g><title>[libc.so.6] (16 samples, 0.01%)</title><rect x="40.7291%" y="85" width="0.0145%" height="15" fill="rgb(247,138,52)" fg:x="44892" fg:w="16"/><text x="40.9791%" y="95.50"></text></g><g><title>cfree (22 samples, 0.02%)</title><rect x="40.7291%" y="101" width="0.0200%" height="15" fill="rgb(213,79,30)" fg:x="44892" fg:w="22"/><text x="40.9791%" y="111.50"></text></g><g><title>__libc_calloc (13 samples, 0.01%)</title><rect x="40.7545%" y="101" width="0.0118%" height="15" fill="rgb(246,177,23)" fg:x="44920" fg:w="13"/><text x="41.0045%" y="111.50"></text></g><g><title>rust_new::poset::Poset::canonify_without_dual (408 samples, 0.37%)</title><rect x="40.7245%" y="117" width="0.3702%" height="15" fill="rgb(230,62,27)" fg:x="44887" fg:w="408"/><text x="40.9745%" y="127.50"></text></g><g><title>_ZN8rust_new5poset5Poset8canonify17h30dc4c8a258ef2c5E.llvm.13423650305899673430 (412 samples, 0.37%)</title><rect x="40.7218%" y="133" width="0.3738%" height="15" fill="rgb(216,154,8)" fg:x="44884" fg:w="412"/><text x="40.9718%" y="143.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (65 samples, 0.06%)</title><rect x="41.0956%" y="117" width="0.0590%" height="15" fill="rgb(244,35,45)" fg:x="45296" fg:w="65"/><text x="41.3456%" y="127.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (131 samples, 0.12%)</title><rect x="41.0956%" y="133" width="0.1189%" height="15" fill="rgb(251,115,12)" fg:x="45296" fg:w="131"/><text x="41.3456%" y="143.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="41.2145%" y="53" width="0.0118%" height="15" fill="rgb(240,54,50)" fg:x="45427" fg:w="13"/><text x="41.4645%" y="63.50"></text></g><g><title>_ZN5alloc11collections9vec_deque21VecDeque$LT$T$C$A$GT$4grow17h01637d1d0bb8f419E.llvm.18310228103551759347 (14 samples, 0.01%)</title><rect x="41.2145%" y="133" width="0.0127%" height="15" fill="rgb(233,84,52)" fg:x="45427" fg:w="14"/><text x="41.4645%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (14 samples, 0.01%)</title><rect x="41.2145%" y="117" width="0.0127%" height="15" fill="rgb(207,117,47)" fg:x="45427" fg:w="14"/><text x="41.4645%" y="127.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hac0e1b2680fdd7e1E.llvm.438141049330634999 (14 samples, 0.01%)</title><rect x="41.2145%" y="101" width="0.0127%" height="15" fill="rgb(249,43,39)" fg:x="45427" fg:w="14"/><text x="41.4645%" y="111.50"></text></g><g><title>realloc (14 samples, 0.01%)</title><rect x="41.2145%" y="85" width="0.0127%" height="15" fill="rgb(209,38,44)" fg:x="45427" fg:w="14"/><text x="41.4645%" y="95.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="41.2145%" y="69" width="0.0127%" height="15" fill="rgb(236,212,23)" fg:x="45427" fg:w="14"/><text x="41.4645%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (44,152 samples, 40.06%)</title><rect x="1.3074%" y="165" width="40.0577%" height="15" fill="rgb(242,79,21)" fg:x="1441" fg:w="44152"/><text x="1.5574%" y="175.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T..</text></g><g><title>rust_new::poset::Poset::enlarge_and_remove_less (44,152 samples, 40.06%)</title><rect x="1.3074%" y="149" width="40.0577%" height="15" fill="rgb(211,96,35)" fg:x="1441" fg:w="44152"/><text x="1.5574%" y="159.50">rust_new::poset::Poset::enlarge_and_remove_less</text></g><g><title>rust_new::search_backward::main (44,184 samples, 40.09%)</title><rect x="1.2883%" y="181" width="40.0867%" height="15" fill="rgb(253,215,40)" fg:x="1420" fg:w="44184"/><text x="1.5383%" y="191.50">rust_new::search_backward::main</text></g><g><title>rust_new::poset::Poset::canonify_without_dual (28 samples, 0.03%)</title><rect x="41.3887%" y="181" width="0.0254%" height="15" fill="rgb(211,81,21)" fg:x="45619" fg:w="28"/><text x="41.6387%" y="191.50"></text></g><g><title>rust_new::cache_tree::CacheTree&lt;_&gt;::new (22 samples, 0.02%)</title><rect x="41.4141%" y="181" width="0.0200%" height="15" fill="rgb(208,190,38)" fg:x="45647" fg:w="22"/><text x="41.6641%" y="191.50"></text></g><g><title>processnode (37 samples, 0.03%)</title><rect x="41.4349%" y="181" width="0.0336%" height="15" fill="rgb(235,213,38)" fg:x="45670" fg:w="37"/><text x="41.6849%" y="191.50"></text></g><g><title>permset (697 samples, 0.63%)</title><rect x="41.4685%" y="181" width="0.6324%" height="15" fill="rgb(237,122,38)" fg:x="45707" fg:w="697"/><text x="41.7185%" y="191.50"></text></g><g><title>othernode0 (22 samples, 0.02%)</title><rect x="42.1009%" y="181" width="0.0200%" height="15" fill="rgb(244,218,35)" fg:x="46404" fg:w="22"/><text x="42.3509%" y="191.50"></text></g><g><title>nextelement (174 samples, 0.16%)</title><rect x="42.1226%" y="181" width="0.1579%" height="15" fill="rgb(240,68,47)" fg:x="46428" fg:w="174"/><text x="42.3726%" y="191.50"></text></g><g><title>malloc (34 samples, 0.03%)</title><rect x="42.2941%" y="181" width="0.0308%" height="15" fill="rgb(210,16,53)" fg:x="46617" fg:w="34"/><text x="42.5441%" y="191.50"></text></g><g><title>maketargetcell (153 samples, 0.14%)</title><rect x="42.3250%" y="181" width="0.1388%" height="15" fill="rgb(235,124,12)" fg:x="46651" fg:w="153"/><text x="42.5750%" y="191.50"></text></g><g><title>longprune (42 samples, 0.04%)</title><rect x="42.4638%" y="181" width="0.0381%" height="15" fill="rgb(224,169,11)" fg:x="46804" fg:w="42"/><text x="42.7138%" y="191.50"></text></g><g><title>isautom (395 samples, 0.36%)</title><rect x="42.5019%" y="181" width="0.3584%" height="15" fill="rgb(250,166,2)" fg:x="46846" fg:w="395"/><text x="42.7519%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (32 samples, 0.03%)</title><rect x="42.8603%" y="181" width="0.0290%" height="15" fill="rgb(242,216,29)" fg:x="47241" fg:w="32"/><text x="43.1103%" y="191.50"></text></g><g><title>fmperm (59 samples, 0.05%)</title><rect x="42.8893%" y="181" width="0.0535%" height="15" fill="rgb(230,116,27)" fg:x="47273" fg:w="59"/><text x="43.1393%" y="191.50"></text></g><g><title>firstpathnode0 (39 samples, 0.04%)</title><rect x="42.9428%" y="181" width="0.0354%" height="15" fill="rgb(228,99,48)" fg:x="47332" fg:w="39"/><text x="43.1928%" y="191.50"></text></g><g><title>doref (185 samples, 0.17%)</title><rect x="42.9782%" y="181" width="0.1678%" height="15" fill="rgb(253,11,6)" fg:x="47371" fg:w="185"/><text x="43.2282%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (383 samples, 0.35%)</title><rect x="43.1460%" y="181" width="0.3475%" height="15" fill="rgb(247,143,39)" fg:x="47556" fg:w="383"/><text x="43.3960%" y="191.50"></text></g><g><title>cheapautom (35 samples, 0.03%)</title><rect x="43.4935%" y="181" width="0.0318%" height="15" fill="rgb(236,97,10)" fg:x="47939" fg:w="35"/><text x="43.7435%" y="191.50"></text></g><g><title>cfree (40 samples, 0.04%)</title><rect x="43.5253%" y="181" width="0.0363%" height="15" fill="rgb(233,208,19)" fg:x="47974" fg:w="40"/><text x="43.7753%" y="191.50"></text></g><g><title>breakout (124 samples, 0.11%)</title><rect x="43.5616%" y="181" width="0.1125%" height="15" fill="rgb(216,164,2)" fg:x="48014" fg:w="124"/><text x="43.8116%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (17 samples, 0.02%)</title><rect x="43.6741%" y="181" width="0.0154%" height="15" fill="rgb(220,129,5)" fg:x="48138" fg:w="17"/><text x="43.9241%" y="191.50"></text></g><g><title>__rdl_alloc_zeroed (20 samples, 0.02%)</title><rect x="43.6895%" y="181" width="0.0181%" height="15" fill="rgb(242,17,10)" fg:x="48155" fg:w="20"/><text x="43.9395%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc_zeroed (20 samples, 0.02%)</title><rect x="43.6895%" y="165" width="0.0181%" height="15" fill="rgb(242,107,0)" fg:x="48155" fg:w="20"/><text x="43.9395%" y="175.50"></text></g><g><title>__libc_calloc (32 samples, 0.03%)</title><rect x="43.7076%" y="181" width="0.0290%" height="15" fill="rgb(251,28,31)" fg:x="48175" fg:w="32"/><text x="43.9576%" y="191.50"></text></g><g><title>_ZN8rust_new5poset5Poset8canonify17h30dc4c8a258ef2c5E.llvm.13423650305899673430 (46 samples, 0.04%)</title><rect x="43.7412%" y="181" width="0.0417%" height="15" fill="rgb(233,223,10)" fg:x="48212" fg:w="46"/><text x="43.9912%" y="191.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (934 samples, 0.85%)</title><rect x="43.7829%" y="181" width="0.8474%" height="15" fill="rgb(215,21,27)" fg:x="48258" fg:w="934"/><text x="44.0329%" y="191.50"></text></g><g><title>_ZN8rust_new5poset5Poset15reduce_elements17h5d3b081c2d486ef0E.llvm.13423650305899673430 (39 samples, 0.04%)</title><rect x="44.6303%" y="181" width="0.0354%" height="15" fill="rgb(232,23,21)" fg:x="49192" fg:w="39"/><text x="44.8803%" y="191.50"></text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (44 samples, 0.04%)</title><rect x="44.6657%" y="181" width="0.0399%" height="15" fill="rgb(244,5,23)" fg:x="49231" fg:w="44"/><text x="44.9157%" y="191.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hac0e1b2680fdd7e1E.llvm.438141049330634999 (16 samples, 0.01%)</title><rect x="44.7056%" y="181" width="0.0145%" height="15" fill="rgb(226,81,46)" fg:x="49275" fg:w="16"/><text x="44.9556%" y="191.50"></text></g><g><title>[libc.so.6] (196 samples, 0.18%)</title><rect x="44.7202%" y="181" width="0.1778%" height="15" fill="rgb(247,70,30)" fg:x="49291" fg:w="196"/><text x="44.9702%" y="191.50"></text></g><g><title>[unknown] (48,245 samples, 43.77%)</title><rect x="1.1277%" y="197" width="43.7712%" height="15" fill="rgb(212,68,19)" fg:x="1243" fg:w="48245"/><text x="1.3777%" y="207.50">[unknown]</text></g><g><title>permset (118 samples, 0.11%)</title><rect x="44.9143%" y="181" width="0.1071%" height="15" fill="rgb(240,187,13)" fg:x="49505" fg:w="118"/><text x="45.1643%" y="191.50"></text></g><g><title>nextelement (22 samples, 0.02%)</title><rect x="45.0214%" y="181" width="0.0200%" height="15" fill="rgb(223,113,26)" fg:x="49623" fg:w="22"/><text x="45.2714%" y="191.50"></text></g><g><title>maketargetcell (36 samples, 0.03%)</title><rect x="45.0413%" y="181" width="0.0327%" height="15" fill="rgb(206,192,2)" fg:x="49645" fg:w="36"/><text x="45.2913%" y="191.50"></text></g><g><title>doref (492 samples, 0.45%)</title><rect x="45.0785%" y="181" width="0.4464%" height="15" fill="rgb(241,108,4)" fg:x="49686" fg:w="492"/><text x="45.3285%" y="191.50"></text></g><g><title>breakout (122 samples, 0.11%)</title><rect x="45.5249%" y="181" width="0.1107%" height="15" fill="rgb(247,173,49)" fg:x="50178" fg:w="122"/><text x="45.7749%" y="191.50"></text></g><g><title>[anon] (805 samples, 0.73%)</title><rect x="44.9143%" y="197" width="0.7304%" height="15" fill="rgb(224,114,35)" fg:x="49505" fg:w="805"/><text x="45.1643%" y="207.50"></text></g><g><title>updatecan (37 samples, 0.03%)</title><rect x="45.6447%" y="181" width="0.0336%" height="15" fill="rgb(245,159,27)" fg:x="50310" fg:w="37"/><text x="45.8947%" y="191.50"></text></g><g><title>testcanlab (63 samples, 0.06%)</title><rect x="45.6782%" y="181" width="0.0572%" height="15" fill="rgb(245,172,44)" fg:x="50347" fg:w="63"/><text x="45.9282%" y="191.50"></text></g><g><title>permset (131 samples, 0.12%)</title><rect x="45.7445%" y="181" width="0.1189%" height="15" fill="rgb(236,23,11)" fg:x="50420" fg:w="131"/><text x="45.9945%" y="191.50"></text></g><g><title>nextelement (70 samples, 0.06%)</title><rect x="45.8660%" y="181" width="0.0635%" height="15" fill="rgb(205,117,38)" fg:x="50554" fg:w="70"/><text x="46.1160%" y="191.50"></text></g><g><title>nauty (27 samples, 0.02%)</title><rect x="45.9295%" y="181" width="0.0245%" height="15" fill="rgb(237,72,25)" fg:x="50624" fg:w="27"/><text x="46.1795%" y="191.50"></text></g><g><title>malloc (17 samples, 0.02%)</title><rect x="45.9540%" y="181" width="0.0154%" height="15" fill="rgb(244,70,9)" fg:x="50651" fg:w="17"/><text x="46.2040%" y="191.50"></text></g><g><title>maketargetcell (320 samples, 0.29%)</title><rect x="45.9695%" y="181" width="0.2903%" height="15" fill="rgb(217,125,39)" fg:x="50668" fg:w="320"/><text x="46.2195%" y="191.50"></text></g><g><title>isautom (46 samples, 0.04%)</title><rect x="46.2698%" y="181" width="0.0417%" height="15" fill="rgb(235,36,10)" fg:x="50999" fg:w="46"/><text x="46.5198%" y="191.50"></text></g><g><title>fmperm (14 samples, 0.01%)</title><rect x="46.3115%" y="181" width="0.0127%" height="15" fill="rgb(251,123,47)" fg:x="51045" fg:w="14"/><text x="46.5615%" y="191.50"></text></g><g><title>doref (65 samples, 0.06%)</title><rect x="46.3242%" y="181" width="0.0590%" height="15" fill="rgb(221,13,13)" fg:x="51059" fg:w="65"/><text x="46.5742%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.01%)</title><rect x="46.3832%" y="181" width="0.0136%" height="15" fill="rgb(238,131,9)" fg:x="51124" fg:w="15"/><text x="46.6332%" y="191.50"></text></g><g><title>breakout (71 samples, 0.06%)</title><rect x="46.3968%" y="181" width="0.0644%" height="15" fill="rgb(211,50,8)" fg:x="51139" fg:w="71"/><text x="46.6468%" y="191.50"></text></g><g><title>__libc_calloc (14 samples, 0.01%)</title><rect x="46.4612%" y="181" width="0.0127%" height="15" fill="rgb(245,182,24)" fg:x="51210" fg:w="14"/><text x="46.7112%" y="191.50"></text></g><g><title>_ZN81_$LT$std..collections..hash..map..DefaultHasher$u20$as$u20$core..hash..Hasher$GT$5write17h0fbb5d2db9c85b4fE.llvm.14121454688850793684 (115 samples, 0.10%)</title><rect x="46.4739%" y="181" width="0.1043%" height="15" fill="rgb(242,14,37)" fg:x="51224" fg:w="115"/><text x="46.7239%" y="191.50"></text></g><g><title>[[stack]] (1,060 samples, 0.96%)</title><rect x="45.6447%" y="197" width="0.9617%" height="15" fill="rgb(246,228,12)" fg:x="50310" fg:w="1060"/><text x="45.8947%" y="207.50"></text></g><g><title>[libc.so.6] (31 samples, 0.03%)</title><rect x="46.5782%" y="181" width="0.0281%" height="15" fill="rgb(213,55,15)" fg:x="51339" fg:w="31"/><text x="46.8282%" y="191.50"></text></g><g><title>updatecan (118 samples, 0.11%)</title><rect x="46.6064%" y="181" width="0.1071%" height="15" fill="rgb(209,9,3)" fg:x="51370" fg:w="118"/><text x="46.8564%" y="191.50"></text></g><g><title>testcanlab (100 samples, 0.09%)</title><rect x="46.7134%" y="181" width="0.0907%" height="15" fill="rgb(230,59,30)" fg:x="51488" fg:w="100"/><text x="46.9634%" y="191.50"></text></g><g><title>rust_new::poset::Poset::remove_less (27 samples, 0.02%)</title><rect x="46.8041%" y="181" width="0.0245%" height="15" fill="rgb(209,121,21)" fg:x="51588" fg:w="27"/><text x="47.0541%" y="191.50"></text></g><g><title>rust_new::poset::Poset::canonify_without_dual (118 samples, 0.11%)</title><rect x="46.8314%" y="181" width="0.1071%" height="15" fill="rgb(220,109,13)" fg:x="51618" fg:w="118"/><text x="47.0814%" y="191.50"></text></g><g><title>refine1 (204 samples, 0.19%)</title><rect x="46.9384%" y="181" width="0.1851%" height="15" fill="rgb(232,18,1)" fg:x="51736" fg:w="204"/><text x="47.1884%" y="191.50"></text></g><g><title>permset (825 samples, 0.75%)</title><rect x="47.1235%" y="181" width="0.7485%" height="15" fill="rgb(215,41,42)" fg:x="51940" fg:w="825"/><text x="47.3735%" y="191.50"></text></g><g><title>nextelement (228 samples, 0.21%)</title><rect x="47.8738%" y="181" width="0.2069%" height="15" fill="rgb(224,123,36)" fg:x="52767" fg:w="228"/><text x="48.1238%" y="191.50"></text></g><g><title>isautom (144 samples, 0.13%)</title><rect x="48.0870%" y="181" width="0.1306%" height="15" fill="rgb(240,125,3)" fg:x="53002" fg:w="144"/><text x="48.3370%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.03%)</title><rect x="48.2177%" y="181" width="0.0336%" height="15" fill="rgb(205,98,50)" fg:x="53146" fg:w="37"/><text x="48.4677%" y="191.50"></text></g><g><title>fmperm (17 samples, 0.02%)</title><rect x="48.2512%" y="181" width="0.0154%" height="15" fill="rgb(205,185,37)" fg:x="53183" fg:w="17"/><text x="48.5012%" y="191.50"></text></g><g><title>doref (339 samples, 0.31%)</title><rect x="48.2667%" y="181" width="0.3076%" height="15" fill="rgb(238,207,15)" fg:x="53200" fg:w="339"/><text x="48.5167%" y="191.50"></text></g><g><title>cfree (34 samples, 0.03%)</title><rect x="48.5833%" y="181" width="0.0308%" height="15" fill="rgb(213,199,42)" fg:x="53549" fg:w="34"/><text x="48.8333%" y="191.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h8fd17c7ae4142cd8E.llvm.17490832254640039515 (17 samples, 0.02%)</title><rect x="48.6141%" y="181" width="0.0154%" height="15" fill="rgb(235,201,11)" fg:x="53583" fg:w="17"/><text x="48.8641%" y="191.50"></text></g><g><title>_ZN8rust_new5poset5Poset23add_and_close_recursive17h461d6cfd10d27d7dE.llvm.13423650305899673430 (322 samples, 0.29%)</title><rect x="48.6368%" y="181" width="0.2921%" height="15" fill="rgb(207,46,11)" fg:x="53608" fg:w="322"/><text x="48.8868%" y="191.50"></text></g><g><title>_ZN8rust_new5poset5Poset15reduce_elements17h5d3b081c2d486ef0E.llvm.13423650305899673430 (41 samples, 0.04%)</title><rect x="48.9290%" y="181" width="0.0372%" height="15" fill="rgb(241,35,35)" fg:x="53930" fg:w="41"/><text x="49.1790%" y="191.50"></text></g><g><title>rust_new (53,992 samples, 48.99%)</title><rect x="0.0000%" y="213" width="48.9852%" height="15" fill="rgb(243,32,47)" fg:x="0" fg:w="53992"/><text x="0.2500%" y="223.50">rust_new</text></g><g><title>[[heap]] (2,622 samples, 2.38%)</title><rect x="46.6064%" y="197" width="2.3789%" height="15" fill="rgb(247,202,23)" fg:x="51370" fg:w="2622"/><text x="46.8564%" y="207.50">[[..</text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="48.9725%" y="181" width="0.0127%" height="15" fill="rgb(219,102,11)" fg:x="53978" fg:w="14"/><text x="49.2225%" y="191.50"></text></g><g><title>permset (516 samples, 0.47%)</title><rect x="48.9852%" y="165" width="0.4682%" height="15" fill="rgb(243,110,44)" fg:x="53992" fg:w="516"/><text x="49.2352%" y="175.50"></text></g><g><title>updatecan (937 samples, 0.85%)</title><rect x="48.9852%" y="181" width="0.8501%" height="15" fill="rgb(222,74,54)" fg:x="53992" fg:w="937"/><text x="49.2352%" y="191.50"></text></g><g><title>permset (133 samples, 0.12%)</title><rect x="49.8362%" y="149" width="0.1207%" height="15" fill="rgb(216,99,12)" fg:x="54930" fg:w="133"/><text x="50.0862%" y="159.50"></text></g><g><title>updatecan (285 samples, 0.26%)</title><rect x="49.8362%" y="165" width="0.2586%" height="15" fill="rgb(226,22,26)" fg:x="54930" fg:w="285"/><text x="50.0862%" y="175.50"></text></g><g><title>permset (201 samples, 0.18%)</title><rect x="50.0948%" y="149" width="0.1824%" height="15" fill="rgb(217,163,10)" fg:x="55215" fg:w="201"/><text x="50.3448%" y="159.50"></text></g><g><title>testcanlab (598 samples, 0.54%)</title><rect x="50.0948%" y="165" width="0.5425%" height="15" fill="rgb(213,25,53)" fg:x="55215" fg:w="598"/><text x="50.3448%" y="175.50"></text></g><g><title>orbjoin (426 samples, 0.39%)</title><rect x="50.6374%" y="165" width="0.3865%" height="15" fill="rgb(252,105,26)" fg:x="55813" fg:w="426"/><text x="50.8874%" y="175.50"></text></g><g><title>nextelement (463 samples, 0.42%)</title><rect x="51.0239%" y="149" width="0.4201%" height="15" fill="rgb(220,39,43)" fg:x="56239" fg:w="463"/><text x="51.2739%" y="159.50"></text></g><g><title>isautom (1,056 samples, 0.96%)</title><rect x="51.0239%" y="165" width="0.9581%" height="15" fill="rgb(229,68,48)" fg:x="56239" fg:w="1056"/><text x="51.2739%" y="175.50"></text></g><g><title>memset@plt (18 samples, 0.02%)</title><rect x="51.9819%" y="149" width="0.0163%" height="15" fill="rgb(252,8,32)" fg:x="57295" fg:w="18"/><text x="52.2319%" y="159.50"></text></g><g><title>[libc.so.6] (63 samples, 0.06%)</title><rect x="51.9983%" y="149" width="0.0572%" height="15" fill="rgb(223,20,43)" fg:x="57313" fg:w="63"/><text x="52.2483%" y="159.50"></text></g><g><title>fmperm (368 samples, 0.33%)</title><rect x="51.9819%" y="165" width="0.3339%" height="15" fill="rgb(229,81,49)" fg:x="57295" fg:w="368"/><text x="52.2319%" y="175.50"></text></g><g><title>processnode (3,710 samples, 3.37%)</title><rect x="49.8362%" y="181" width="3.3660%" height="15" fill="rgb(236,28,36)" fg:x="54930" fg:w="3710"/><text x="50.0862%" y="191.50">pro..</text></g><g><title>permset (47 samples, 0.04%)</title><rect x="53.2022%" y="133" width="0.0426%" height="15" fill="rgb(249,185,26)" fg:x="58640" fg:w="47"/><text x="53.4522%" y="143.50"></text></g><g><title>updatecan (228 samples, 0.21%)</title><rect x="53.2022%" y="149" width="0.2069%" height="15" fill="rgb(249,174,33)" fg:x="58640" fg:w="228"/><text x="53.4522%" y="159.50"></text></g><g><title>permset (225 samples, 0.20%)</title><rect x="53.4091%" y="133" width="0.2041%" height="15" fill="rgb(233,201,37)" fg:x="58868" fg:w="225"/><text x="53.6591%" y="143.50"></text></g><g><title>testcanlab (686 samples, 0.62%)</title><rect x="53.4091%" y="149" width="0.6224%" height="15" fill="rgb(221,78,26)" fg:x="58868" fg:w="686"/><text x="53.6591%" y="159.50"></text></g><g><title>orbjoin (57 samples, 0.05%)</title><rect x="54.0314%" y="149" width="0.0517%" height="15" fill="rgb(250,127,30)" fg:x="59554" fg:w="57"/><text x="54.2814%" y="159.50"></text></g><g><title>nextelement (128 samples, 0.12%)</title><rect x="54.0832%" y="133" width="0.1161%" height="15" fill="rgb(230,49,44)" fg:x="59611" fg:w="128"/><text x="54.3332%" y="143.50"></text></g><g><title>isautom (361 samples, 0.33%)</title><rect x="54.0832%" y="149" width="0.3275%" height="15" fill="rgb(229,67,23)" fg:x="59611" fg:w="361"/><text x="54.3332%" y="159.50"></text></g><g><title>fmperm (39 samples, 0.04%)</title><rect x="54.4107%" y="149" width="0.0354%" height="15" fill="rgb(249,83,47)" fg:x="59972" fg:w="39"/><text x="54.6607%" y="159.50"></text></g><g><title>processnode (1,860 samples, 1.69%)</title><rect x="53.2022%" y="165" width="1.6875%" height="15" fill="rgb(215,43,3)" fg:x="58640" fg:w="1860"/><text x="53.4522%" y="175.50"></text></g><g><title>permset (17 samples, 0.02%)</title><rect x="54.8897%" y="117" width="0.0154%" height="15" fill="rgb(238,154,13)" fg:x="60500" fg:w="17"/><text x="55.1397%" y="127.50"></text></g><g><title>updatecan (207 samples, 0.19%)</title><rect x="54.8897%" y="133" width="0.1878%" height="15" fill="rgb(219,56,2)" fg:x="60500" fg:w="207"/><text x="55.1397%" y="143.50"></text></g><g><title>permset (285 samples, 0.26%)</title><rect x="55.0775%" y="117" width="0.2586%" height="15" fill="rgb(233,0,4)" fg:x="60707" fg:w="285"/><text x="55.3275%" y="127.50"></text></g><g><title>testcanlab (872 samples, 0.79%)</title><rect x="55.0775%" y="133" width="0.7911%" height="15" fill="rgb(235,30,7)" fg:x="60707" fg:w="872"/><text x="55.3275%" y="143.50"></text></g><g><title>orbjoin (26 samples, 0.02%)</title><rect x="55.8687%" y="133" width="0.0236%" height="15" fill="rgb(250,79,13)" fg:x="61579" fg:w="26"/><text x="56.1187%" y="143.50"></text></g><g><title>nextelement (166 samples, 0.15%)</title><rect x="55.8923%" y="117" width="0.1506%" height="15" fill="rgb(211,146,34)" fg:x="61605" fg:w="166"/><text x="56.1423%" y="127.50"></text></g><g><title>isautom (437 samples, 0.40%)</title><rect x="55.8923%" y="133" width="0.3965%" height="15" fill="rgb(228,22,38)" fg:x="61605" fg:w="437"/><text x="56.1423%" y="143.50"></text></g><g><title>fmperm (22 samples, 0.02%)</title><rect x="56.2887%" y="133" width="0.0200%" height="15" fill="rgb(235,168,5)" fg:x="62042" fg:w="22"/><text x="56.5387%" y="143.50"></text></g><g><title>processnode (2,104 samples, 1.91%)</title><rect x="54.8897%" y="149" width="1.9089%" height="15" fill="rgb(221,155,16)" fg:x="60500" fg:w="2104"/><text x="55.1397%" y="159.50">p..</text></g><g><title>updatecan (145 samples, 0.13%)</title><rect x="56.7986%" y="117" width="0.1316%" height="15" fill="rgb(215,215,53)" fg:x="62604" fg:w="145"/><text x="57.0486%" y="127.50"></text></g><g><title>permset (236 samples, 0.21%)</title><rect x="56.9302%" y="101" width="0.2141%" height="15" fill="rgb(223,4,10)" fg:x="62749" fg:w="236"/><text x="57.1802%" y="111.50"></text></g><g><title>testcanlab (740 samples, 0.67%)</title><rect x="56.9302%" y="117" width="0.6714%" height="15" fill="rgb(234,103,6)" fg:x="62749" fg:w="740"/><text x="57.1802%" y="127.50"></text></g><g><title>nextelement (125 samples, 0.11%)</title><rect x="57.6052%" y="101" width="0.1134%" height="15" fill="rgb(227,97,0)" fg:x="63493" fg:w="125"/><text x="57.8552%" y="111.50"></text></g><g><title>isautom (328 samples, 0.30%)</title><rect x="57.6052%" y="117" width="0.2976%" height="15" fill="rgb(234,150,53)" fg:x="63493" fg:w="328"/><text x="57.8552%" y="127.50"></text></g><g><title>processnode (1,589 samples, 1.44%)</title><rect x="56.7986%" y="133" width="1.4416%" height="15" fill="rgb(228,201,54)" fg:x="62604" fg:w="1589"/><text x="57.0486%" y="143.50"></text></g><g><title>updatecan (96 samples, 0.09%)</title><rect x="58.2403%" y="101" width="0.0871%" height="15" fill="rgb(222,22,37)" fg:x="64193" fg:w="96"/><text x="58.4903%" y="111.50"></text></g><g><title>permset (137 samples, 0.12%)</title><rect x="58.3274%" y="85" width="0.1243%" height="15" fill="rgb(237,53,32)" fg:x="64289" fg:w="137"/><text x="58.5774%" y="95.50"></text></g><g><title>testcanlab (439 samples, 0.40%)</title><rect x="58.3274%" y="101" width="0.3983%" height="15" fill="rgb(233,25,53)" fg:x="64289" fg:w="439"/><text x="58.5774%" y="111.50"></text></g><g><title>nextelement (87 samples, 0.08%)</title><rect x="58.7284%" y="85" width="0.0789%" height="15" fill="rgb(210,40,34)" fg:x="64731" fg:w="87"/><text x="58.9784%" y="95.50"></text></g><g><title>isautom (217 samples, 0.20%)</title><rect x="58.7284%" y="101" width="0.1969%" height="15" fill="rgb(241,220,44)" fg:x="64731" fg:w="217"/><text x="58.9784%" y="111.50"></text></g><g><title>processnode (927 samples, 0.84%)</title><rect x="58.2403%" y="117" width="0.8410%" height="15" fill="rgb(235,28,35)" fg:x="64193" fg:w="927"/><text x="58.4903%" y="127.50"></text></g><g><title>updatecan (17 samples, 0.02%)</title><rect x="59.0813%" y="85" width="0.0154%" height="15" fill="rgb(210,56,17)" fg:x="65120" fg:w="17"/><text x="59.3313%" y="95.50"></text></g><g><title>permset (32 samples, 0.03%)</title><rect x="59.0967%" y="69" width="0.0290%" height="15" fill="rgb(224,130,29)" fg:x="65137" fg:w="32"/><text x="59.3467%" y="79.50"></text></g><g><title>testcanlab (98 samples, 0.09%)</title><rect x="59.0967%" y="85" width="0.0889%" height="15" fill="rgb(235,212,8)" fg:x="65137" fg:w="98"/><text x="59.3467%" y="95.50"></text></g><g><title>nextelement (16 samples, 0.01%)</title><rect x="59.1856%" y="69" width="0.0145%" height="15" fill="rgb(223,33,50)" fg:x="65235" fg:w="16"/><text x="59.4356%" y="79.50"></text></g><g><title>isautom (42 samples, 0.04%)</title><rect x="59.1856%" y="85" width="0.0381%" height="15" fill="rgb(219,149,13)" fg:x="65235" fg:w="42"/><text x="59.4356%" y="95.50"></text></g><g><title>processnode (188 samples, 0.17%)</title><rect x="59.0813%" y="101" width="0.1706%" height="15" fill="rgb(250,156,29)" fg:x="65120" fg:w="188"/><text x="59.3313%" y="111.50"></text></g><g><title>doref (15 samples, 0.01%)</title><rect x="59.2519%" y="101" width="0.0136%" height="15" fill="rgb(216,193,19)" fg:x="65308" fg:w="15"/><text x="59.5019%" y="111.50"></text></g><g><title>othernode0 (240 samples, 0.22%)</title><rect x="59.0813%" y="117" width="0.2177%" height="15" fill="rgb(216,135,14)" fg:x="65120" fg:w="240"/><text x="59.3313%" y="127.50"></text></g><g><title>maketargetcell (16 samples, 0.01%)</title><rect x="59.3027%" y="117" width="0.0145%" height="15" fill="rgb(241,47,5)" fg:x="65364" fg:w="16"/><text x="59.5527%" y="127.50"></text></g><g><title>refine1 (96 samples, 0.09%)</title><rect x="59.3254%" y="101" width="0.0871%" height="15" fill="rgb(233,42,35)" fg:x="65389" fg:w="96"/><text x="59.5754%" y="111.50"></text></g><g><title>nextelement (35 samples, 0.03%)</title><rect x="59.4125%" y="101" width="0.0318%" height="15" fill="rgb(231,13,6)" fg:x="65485" fg:w="35"/><text x="59.6625%" y="111.50"></text></g><g><title>doref (150 samples, 0.14%)</title><rect x="59.3254%" y="117" width="0.1361%" height="15" fill="rgb(207,181,40)" fg:x="65389" fg:w="150"/><text x="59.5754%" y="127.50"></text></g><g><title>othernode0 (1,547 samples, 1.40%)</title><rect x="58.2403%" y="133" width="1.4035%" height="15" fill="rgb(254,173,49)" fg:x="64193" fg:w="1547"/><text x="58.4903%" y="143.50"></text></g><g><title>nextelement (35 samples, 0.03%)</title><rect x="59.6438%" y="133" width="0.0318%" height="15" fill="rgb(221,1,38)" fg:x="65740" fg:w="35"/><text x="59.8938%" y="143.50"></text></g><g><title>targetcell (47 samples, 0.04%)</title><rect x="59.6756%" y="117" width="0.0426%" height="15" fill="rgb(206,124,46)" fg:x="65775" fg:w="47"/><text x="59.9256%" y="127.50"></text></g><g><title>maketargetcell (81 samples, 0.07%)</title><rect x="59.6756%" y="133" width="0.0735%" height="15" fill="rgb(249,21,11)" fg:x="65775" fg:w="81"/><text x="59.9256%" y="143.50"></text></g><g><title>longprune (33 samples, 0.03%)</title><rect x="59.7490%" y="133" width="0.0299%" height="15" fill="rgb(222,201,40)" fg:x="65856" fg:w="33"/><text x="59.9990%" y="143.50"></text></g><g><title>nextelement (22 samples, 0.02%)</title><rect x="59.7790%" y="101" width="0.0200%" height="15" fill="rgb(235,61,29)" fg:x="65889" fg:w="22"/><text x="60.0290%" y="111.50"></text></g><g><title>refine1 (262 samples, 0.24%)</title><rect x="59.7790%" y="117" width="0.2377%" height="15" fill="rgb(219,207,3)" fg:x="65889" fg:w="262"/><text x="60.0290%" y="127.50"></text></g><g><title>nextelement (61 samples, 0.06%)</title><rect x="60.0167%" y="117" width="0.0553%" height="15" fill="rgb(222,56,46)" fg:x="66151" fg:w="61"/><text x="60.2667%" y="127.50"></text></g><g><title>doref (382 samples, 0.35%)</title><rect x="59.7790%" y="133" width="0.3466%" height="15" fill="rgb(239,76,54)" fg:x="65889" fg:w="382"/><text x="60.0290%" y="143.50"></text></g><g><title>breakout (53 samples, 0.05%)</title><rect x="60.1274%" y="133" width="0.0481%" height="15" fill="rgb(231,124,27)" fg:x="66273" fg:w="53"/><text x="60.3774%" y="143.50"></text></g><g><title>othernode0 (4,289 samples, 3.89%)</title><rect x="56.7986%" y="149" width="3.8913%" height="15" fill="rgb(249,195,6)" fg:x="62604" fg:w="4289"/><text x="57.0486%" y="159.50">othe..</text></g><g><title>nextelement (61 samples, 0.06%)</title><rect x="60.6899%" y="149" width="0.0553%" height="15" fill="rgb(237,174,47)" fg:x="66893" fg:w="61"/><text x="60.9399%" y="159.50"></text></g><g><title>targetcell (90 samples, 0.08%)</title><rect x="60.7452%" y="133" width="0.0817%" height="15" fill="rgb(206,201,31)" fg:x="66954" fg:w="90"/><text x="60.9952%" y="143.50"></text></g><g><title>maketargetcell (180 samples, 0.16%)</title><rect x="60.7452%" y="149" width="0.1633%" height="15" fill="rgb(231,57,52)" fg:x="66954" fg:w="180"/><text x="60.9952%" y="159.50"></text></g><g><title>longprune (86 samples, 0.08%)</title><rect x="60.9085%" y="149" width="0.0780%" height="15" fill="rgb(248,177,22)" fg:x="67134" fg:w="86"/><text x="61.1585%" y="159.50"></text></g><g><title>nextelement (35 samples, 0.03%)</title><rect x="60.9866%" y="117" width="0.0318%" height="15" fill="rgb(215,211,37)" fg:x="67220" fg:w="35"/><text x="61.2366%" y="127.50"></text></g><g><title>refine1 (518 samples, 0.47%)</title><rect x="60.9866%" y="133" width="0.4700%" height="15" fill="rgb(241,128,51)" fg:x="67220" fg:w="518"/><text x="61.2366%" y="143.50"></text></g><g><title>nextelement (113 samples, 0.10%)</title><rect x="61.4565%" y="133" width="0.1025%" height="15" fill="rgb(227,165,31)" fg:x="67738" fg:w="113"/><text x="61.7065%" y="143.50"></text></g><g><title>doref (726 samples, 0.66%)</title><rect x="60.9866%" y="149" width="0.6587%" height="15" fill="rgb(228,167,24)" fg:x="67220" fg:w="726"/><text x="61.2366%" y="159.50"></text></g><g><title>[libc.so.6] (20 samples, 0.02%)</title><rect x="61.6561%" y="133" width="0.0181%" height="15" fill="rgb(228,143,12)" fg:x="67958" fg:w="20"/><text x="61.9061%" y="143.50"></text></g><g><title>breakout (112 samples, 0.10%)</title><rect x="61.6471%" y="149" width="0.1016%" height="15" fill="rgb(249,149,8)" fg:x="67948" fg:w="112"/><text x="61.8971%" y="159.50"></text></g><g><title>othernode0 (8,620 samples, 7.82%)</title><rect x="54.8897%" y="165" width="7.8207%" height="15" fill="rgb(243,35,44)" fg:x="60500" fg:w="8620"/><text x="55.1397%" y="175.50">othernode0</text></g><g><title>nextelement (93 samples, 0.08%)</title><rect x="62.7104%" y="165" width="0.0844%" height="15" fill="rgb(246,89,9)" fg:x="69120" fg:w="93"/><text x="62.9604%" y="175.50"></text></g><g><title>targetcell (140 samples, 0.13%)</title><rect x="62.7947%" y="149" width="0.1270%" height="15" fill="rgb(233,213,13)" fg:x="69213" fg:w="140"/><text x="63.0447%" y="159.50"></text></g><g><title>[libc.so.6] (17 samples, 0.02%)</title><rect x="62.9254%" y="149" width="0.0154%" height="15" fill="rgb(233,141,41)" fg:x="69357" fg:w="17"/><text x="63.1754%" y="159.50"></text></g><g><title>maketargetcell (279 samples, 0.25%)</title><rect x="62.7947%" y="165" width="0.2531%" height="15" fill="rgb(239,167,4)" fg:x="69213" fg:w="279"/><text x="63.0447%" y="175.50"></text></g><g><title>longprune (148 samples, 0.13%)</title><rect x="63.0479%" y="165" width="0.1343%" height="15" fill="rgb(209,217,16)" fg:x="69492" fg:w="148"/><text x="63.2979%" y="175.50"></text></g><g><title>nextelement (63 samples, 0.06%)</title><rect x="63.1822%" y="133" width="0.0572%" height="15" fill="rgb(219,88,35)" fg:x="69640" fg:w="63"/><text x="63.4322%" y="143.50"></text></g><g><title>refine1 (658 samples, 0.60%)</title><rect x="63.1822%" y="149" width="0.5970%" height="15" fill="rgb(220,193,23)" fg:x="69640" fg:w="658"/><text x="63.4322%" y="159.50"></text></g><g><title>nextelement (126 samples, 0.11%)</title><rect x="63.7791%" y="149" width="0.1143%" height="15" fill="rgb(230,90,52)" fg:x="70298" fg:w="126"/><text x="64.0291%" y="159.50"></text></g><g><title>doref (932 samples, 0.85%)</title><rect x="63.1822%" y="165" width="0.8456%" height="15" fill="rgb(252,106,19)" fg:x="69640" fg:w="932"/><text x="63.4322%" y="175.50"></text></g><g><title>[libc.so.6] (32 samples, 0.03%)</title><rect x="64.0413%" y="149" width="0.0290%" height="15" fill="rgb(206,74,20)" fg:x="70587" fg:w="32"/><text x="64.2913%" y="159.50"></text></g><g><title>breakout (163 samples, 0.15%)</title><rect x="64.0323%" y="165" width="0.1479%" height="15" fill="rgb(230,138,44)" fg:x="70577" fg:w="163"/><text x="64.2823%" y="175.50"></text></g><g><title>othernode0 (13,434 samples, 12.19%)</title><rect x="53.2022%" y="181" width="12.1882%" height="15" fill="rgb(235,182,43)" fg:x="58640" fg:w="13434"/><text x="53.4522%" y="191.50">othernode0</text></g><g><title>nextelement (445 samples, 0.40%)</title><rect x="65.3904%" y="181" width="0.4037%" height="15" fill="rgb(242,16,51)" fg:x="72074" fg:w="445"/><text x="65.6404%" y="191.50"></text></g><g><title>nautil_check (19 samples, 0.02%)</title><rect x="65.7942%" y="181" width="0.0172%" height="15" fill="rgb(248,9,4)" fg:x="72519" fg:w="19"/><text x="66.0442%" y="191.50"></text></g><g><title>naugraph_check (14 samples, 0.01%)</title><rect x="65.8114%" y="181" width="0.0127%" height="15" fill="rgb(210,31,22)" fg:x="72538" fg:w="14"/><text x="66.0614%" y="191.50"></text></g><g><title>memset@plt (24 samples, 0.02%)</title><rect x="65.8241%" y="181" width="0.0218%" height="15" fill="rgb(239,54,39)" fg:x="72552" fg:w="24"/><text x="66.0741%" y="191.50"></text></g><g><title>targetcell (398 samples, 0.36%)</title><rect x="65.8459%" y="165" width="0.3611%" height="15" fill="rgb(230,99,41)" fg:x="72576" fg:w="398"/><text x="66.0959%" y="175.50"></text></g><g><title>memset@plt (15 samples, 0.01%)</title><rect x="66.2070%" y="165" width="0.0136%" height="15" fill="rgb(253,106,12)" fg:x="72974" fg:w="15"/><text x="66.4570%" y="175.50"></text></g><g><title>[libc.so.6] (90 samples, 0.08%)</title><rect x="66.2206%" y="165" width="0.0817%" height="15" fill="rgb(213,46,41)" fg:x="72989" fg:w="90"/><text x="66.4706%" y="175.50"></text></g><g><title>maketargetcell (1,127 samples, 1.02%)</title><rect x="65.8459%" y="181" width="1.0225%" height="15" fill="rgb(215,133,35)" fg:x="72576" fg:w="1127"/><text x="66.0959%" y="191.50"></text></g><g><title>longprune (340 samples, 0.31%)</title><rect x="66.8684%" y="181" width="0.3085%" height="15" fill="rgb(213,28,5)" fg:x="73703" fg:w="340"/><text x="67.1184%" y="191.50"></text></g><g><title>permset (69 samples, 0.06%)</title><rect x="67.1769%" y="117" width="0.0626%" height="15" fill="rgb(215,77,49)" fg:x="74043" fg:w="69"/><text x="67.4269%" y="127.50"></text></g><g><title>updatecan (115 samples, 0.10%)</title><rect x="67.1769%" y="133" width="0.1043%" height="15" fill="rgb(248,100,22)" fg:x="74043" fg:w="115"/><text x="67.4269%" y="143.50"></text></g><g><title>permset (37 samples, 0.03%)</title><rect x="67.2812%" y="117" width="0.0336%" height="15" fill="rgb(208,67,9)" fg:x="74158" fg:w="37"/><text x="67.5312%" y="127.50"></text></g><g><title>testcanlab (93 samples, 0.08%)</title><rect x="67.2812%" y="133" width="0.0844%" height="15" fill="rgb(219,133,21)" fg:x="74158" fg:w="93"/><text x="67.5312%" y="143.50"></text></g><g><title>orbjoin (86 samples, 0.08%)</title><rect x="67.3656%" y="133" width="0.0780%" height="15" fill="rgb(246,46,29)" fg:x="74251" fg:w="86"/><text x="67.6156%" y="143.50"></text></g><g><title>nextelement (103 samples, 0.09%)</title><rect x="67.4436%" y="117" width="0.0934%" height="15" fill="rgb(246,185,52)" fg:x="74337" fg:w="103"/><text x="67.6936%" y="127.50"></text></g><g><title>isautom (237 samples, 0.22%)</title><rect x="67.4436%" y="133" width="0.2150%" height="15" fill="rgb(252,136,11)" fg:x="74337" fg:w="237"/><text x="67.6936%" y="143.50"></text></g><g><title>fmperm (78 samples, 0.07%)</title><rect x="67.6586%" y="133" width="0.0708%" height="15" fill="rgb(219,138,53)" fg:x="74574" fg:w="78"/><text x="67.9086%" y="143.50"></text></g><g><title>processnode (809 samples, 0.73%)</title><rect x="67.1769%" y="149" width="0.7340%" height="15" fill="rgb(211,51,23)" fg:x="74043" fg:w="809"/><text x="67.4269%" y="159.50"></text></g><g><title>permset (46 samples, 0.04%)</title><rect x="67.9108%" y="101" width="0.0417%" height="15" fill="rgb(247,221,28)" fg:x="74852" fg:w="46"/><text x="68.1608%" y="111.50"></text></g><g><title>updatecan (121 samples, 0.11%)</title><rect x="67.9108%" y="117" width="0.1098%" height="15" fill="rgb(251,222,45)" fg:x="74852" fg:w="121"/><text x="68.1608%" y="127.50"></text></g><g><title>permset (51 samples, 0.05%)</title><rect x="68.0206%" y="101" width="0.0463%" height="15" fill="rgb(217,162,53)" fg:x="74973" fg:w="51"/><text x="68.2706%" y="111.50"></text></g><g><title>testcanlab (197 samples, 0.18%)</title><rect x="68.0206%" y="117" width="0.1787%" height="15" fill="rgb(229,93,14)" fg:x="74973" fg:w="197"/><text x="68.2706%" y="127.50"></text></g><g><title>orbjoin (78 samples, 0.07%)</title><rect x="68.1993%" y="117" width="0.0708%" height="15" fill="rgb(209,67,49)" fg:x="75170" fg:w="78"/><text x="68.4493%" y="127.50"></text></g><g><title>nextelement (65 samples, 0.06%)</title><rect x="68.2701%" y="101" width="0.0590%" height="15" fill="rgb(213,87,29)" fg:x="75248" fg:w="65"/><text x="68.5201%" y="111.50"></text></g><g><title>isautom (182 samples, 0.17%)</title><rect x="68.2701%" y="117" width="0.1651%" height="15" fill="rgb(205,151,52)" fg:x="75248" fg:w="182"/><text x="68.5201%" y="127.50"></text></g><g><title>fmperm (60 samples, 0.05%)</title><rect x="68.4352%" y="117" width="0.0544%" height="15" fill="rgb(253,215,39)" fg:x="75430" fg:w="60"/><text x="68.6852%" y="127.50"></text></g><g><title>processnode (810 samples, 0.73%)</title><rect x="67.9108%" y="133" width="0.7349%" height="15" fill="rgb(221,220,41)" fg:x="74852" fg:w="810"/><text x="68.1608%" y="143.50"></text></g><g><title>permset (41 samples, 0.04%)</title><rect x="68.6457%" y="85" width="0.0372%" height="15" fill="rgb(218,133,21)" fg:x="75662" fg:w="41"/><text x="68.8957%" y="95.50"></text></g><g><title>updatecan (102 samples, 0.09%)</title><rect x="68.6457%" y="101" width="0.0925%" height="15" fill="rgb(221,193,43)" fg:x="75662" fg:w="102"/><text x="68.8957%" y="111.50"></text></g><g><title>permset (85 samples, 0.08%)</title><rect x="68.7383%" y="85" width="0.0771%" height="15" fill="rgb(240,128,52)" fg:x="75764" fg:w="85"/><text x="68.9883%" y="95.50"></text></g><g><title>testcanlab (273 samples, 0.25%)</title><rect x="68.7383%" y="101" width="0.2477%" height="15" fill="rgb(253,114,12)" fg:x="75764" fg:w="273"/><text x="68.9883%" y="111.50"></text></g><g><title>orbjoin (57 samples, 0.05%)</title><rect x="68.9859%" y="101" width="0.0517%" height="15" fill="rgb(215,223,47)" fg:x="76037" fg:w="57"/><text x="69.2359%" y="111.50"></text></g><g><title>nextelement (61 samples, 0.06%)</title><rect x="69.0377%" y="85" width="0.0553%" height="15" fill="rgb(248,225,23)" fg:x="76094" fg:w="61"/><text x="69.2877%" y="95.50"></text></g><g><title>isautom (150 samples, 0.14%)</title><rect x="69.0377%" y="101" width="0.1361%" height="15" fill="rgb(250,108,0)" fg:x="76094" fg:w="150"/><text x="69.2877%" y="111.50"></text></g><g><title>fmperm (25 samples, 0.02%)</title><rect x="69.1738%" y="101" width="0.0227%" height="15" fill="rgb(228,208,7)" fg:x="76244" fg:w="25"/><text x="69.4238%" y="111.50"></text></g><g><title>processnode (810 samples, 0.73%)</title><rect x="68.6457%" y="117" width="0.7349%" height="15" fill="rgb(244,45,10)" fg:x="75662" fg:w="810"/><text x="68.8957%" y="127.50"></text></g><g><title>permset (17 samples, 0.02%)</title><rect x="69.3806%" y="69" width="0.0154%" height="15" fill="rgb(207,125,25)" fg:x="76472" fg:w="17"/><text x="69.6306%" y="79.50"></text></g><g><title>updatecan (99 samples, 0.09%)</title><rect x="69.3806%" y="85" width="0.0898%" height="15" fill="rgb(210,195,18)" fg:x="76472" fg:w="99"/><text x="69.6306%" y="95.50"></text></g><g><title>permset (116 samples, 0.11%)</title><rect x="69.4704%" y="69" width="0.1052%" height="15" fill="rgb(249,80,12)" fg:x="76571" fg:w="116"/><text x="69.7204%" y="79.50"></text></g><g><title>testcanlab (363 samples, 0.33%)</title><rect x="69.4704%" y="85" width="0.3293%" height="15" fill="rgb(221,65,9)" fg:x="76571" fg:w="363"/><text x="69.7204%" y="95.50"></text></g><g><title>orbjoin (17 samples, 0.02%)</title><rect x="69.7998%" y="85" width="0.0154%" height="15" fill="rgb(235,49,36)" fg:x="76934" fg:w="17"/><text x="70.0498%" y="95.50"></text></g><g><title>nextelement (68 samples, 0.06%)</title><rect x="69.8152%" y="69" width="0.0617%" height="15" fill="rgb(225,32,20)" fg:x="76951" fg:w="68"/><text x="70.0652%" y="79.50"></text></g><g><title>isautom (204 samples, 0.19%)</title><rect x="69.8152%" y="85" width="0.1851%" height="15" fill="rgb(215,141,46)" fg:x="76951" fg:w="204"/><text x="70.0652%" y="95.50"></text></g><g><title>fmperm (23 samples, 0.02%)</title><rect x="70.0003%" y="85" width="0.0209%" height="15" fill="rgb(250,160,47)" fg:x="77155" fg:w="23"/><text x="70.2503%" y="95.50"></text></g><g><title>processnode (898 samples, 0.81%)</title><rect x="69.3806%" y="101" width="0.8147%" height="15" fill="rgb(216,222,40)" fg:x="76472" fg:w="898"/><text x="69.6306%" y="111.50"></text></g><g><title>updatecan (71 samples, 0.06%)</title><rect x="70.1953%" y="69" width="0.0644%" height="15" fill="rgb(234,217,39)" fg:x="77370" fg:w="71"/><text x="70.4453%" y="79.50"></text></g><g><title>permset (87 samples, 0.08%)</title><rect x="70.2598%" y="53" width="0.0789%" height="15" fill="rgb(207,178,40)" fg:x="77441" fg:w="87"/><text x="70.5098%" y="63.50"></text></g><g><title>testcanlab (258 samples, 0.23%)</title><rect x="70.2598%" y="69" width="0.2341%" height="15" fill="rgb(221,136,13)" fg:x="77441" fg:w="258"/><text x="70.5098%" y="79.50"></text></g><g><title>nextelement (46 samples, 0.04%)</title><rect x="70.5002%" y="53" width="0.0417%" height="15" fill="rgb(249,199,10)" fg:x="77706" fg:w="46"/><text x="70.7502%" y="63.50"></text></g><g><title>isautom (121 samples, 0.11%)</title><rect x="70.5002%" y="69" width="0.1098%" height="15" fill="rgb(249,222,13)" fg:x="77706" fg:w="121"/><text x="70.7502%" y="79.50"></text></g><g><title>processnode (574 samples, 0.52%)</title><rect x="70.1953%" y="85" width="0.5208%" height="15" fill="rgb(244,185,38)" fg:x="77370" fg:w="574"/><text x="70.4453%" y="95.50"></text></g><g><title>updatecan (21 samples, 0.02%)</title><rect x="70.7161%" y="53" width="0.0191%" height="15" fill="rgb(236,202,9)" fg:x="77944" fg:w="21"/><text x="70.9661%" y="63.50"></text></g><g><title>permset (48 samples, 0.04%)</title><rect x="70.7352%" y="37" width="0.0435%" height="15" fill="rgb(250,229,37)" fg:x="77965" fg:w="48"/><text x="70.9852%" y="47.50"></text></g><g><title>testcanlab (133 samples, 0.12%)</title><rect x="70.7352%" y="53" width="0.1207%" height="15" fill="rgb(206,174,23)" fg:x="77965" fg:w="133"/><text x="70.9852%" y="63.50"></text></g><g><title>nextelement (16 samples, 0.01%)</title><rect x="70.8558%" y="37" width="0.0145%" height="15" fill="rgb(211,33,43)" fg:x="78098" fg:w="16"/><text x="71.1058%" y="47.50"></text></g><g><title>isautom (43 samples, 0.04%)</title><rect x="70.8558%" y="53" width="0.0390%" height="15" fill="rgb(245,58,50)" fg:x="78098" fg:w="43"/><text x="71.1058%" y="63.50"></text></g><g><title>processnode (250 samples, 0.23%)</title><rect x="70.7161%" y="69" width="0.2268%" height="15" fill="rgb(244,68,36)" fg:x="77944" fg:w="250"/><text x="70.9661%" y="79.50"></text></g><g><title>testcanlab (34 samples, 0.03%)</title><rect x="70.9529%" y="37" width="0.0308%" height="15" fill="rgb(232,229,15)" fg:x="78205" fg:w="34"/><text x="71.2029%" y="47.50"></text></g><g><title>isautom (13 samples, 0.01%)</title><rect x="70.9838%" y="37" width="0.0118%" height="15" fill="rgb(254,30,23)" fg:x="78239" fg:w="13"/><text x="71.2338%" y="47.50"></text></g><g><title>processnode (66 samples, 0.06%)</title><rect x="70.9429%" y="53" width="0.0599%" height="15" fill="rgb(235,160,14)" fg:x="78194" fg:w="66"/><text x="71.1929%" y="63.50"></text></g><g><title>othernode0 (82 samples, 0.07%)</title><rect x="70.9429%" y="69" width="0.0744%" height="15" fill="rgb(212,155,44)" fg:x="78194" fg:w="82"/><text x="71.1929%" y="79.50"></text></g><g><title>refine1 (23 samples, 0.02%)</title><rect x="71.0209%" y="53" width="0.0209%" height="15" fill="rgb(226,2,50)" fg:x="78280" fg:w="23"/><text x="71.2709%" y="63.50"></text></g><g><title>doref (36 samples, 0.03%)</title><rect x="71.0209%" y="69" width="0.0327%" height="15" fill="rgb(234,177,6)" fg:x="78280" fg:w="36"/><text x="71.2709%" y="79.50"></text></g><g><title>othernode0 (423 samples, 0.38%)</title><rect x="70.7161%" y="85" width="0.3838%" height="15" fill="rgb(217,24,9)" fg:x="77944" fg:w="423"/><text x="70.9661%" y="95.50"></text></g><g><title>targetcell (13 samples, 0.01%)</title><rect x="71.1053%" y="69" width="0.0118%" height="15" fill="rgb(220,13,46)" fg:x="78373" fg:w="13"/><text x="71.3553%" y="79.50"></text></g><g><title>maketargetcell (26 samples, 0.02%)</title><rect x="71.1053%" y="85" width="0.0236%" height="15" fill="rgb(239,221,27)" fg:x="78373" fg:w="26"/><text x="71.3553%" y="95.50"></text></g><g><title>refine1 (79 samples, 0.07%)</title><rect x="71.1353%" y="69" width="0.0717%" height="15" fill="rgb(222,198,25)" fg:x="78406" fg:w="79"/><text x="71.3853%" y="79.50"></text></g><g><title>nextelement (23 samples, 0.02%)</title><rect x="71.2069%" y="69" width="0.0209%" height="15" fill="rgb(211,99,13)" fg:x="78485" fg:w="23"/><text x="71.4569%" y="79.50"></text></g><g><title>doref (113 samples, 0.10%)</title><rect x="71.1353%" y="85" width="0.1025%" height="15" fill="rgb(232,111,31)" fg:x="78406" fg:w="113"/><text x="71.3853%" y="95.50"></text></g><g><title>breakout (12 samples, 0.01%)</title><rect x="71.2378%" y="85" width="0.0109%" height="15" fill="rgb(245,82,37)" fg:x="78519" fg:w="12"/><text x="71.4878%" y="95.50"></text></g><g><title>othernode0 (1,358 samples, 1.23%)</title><rect x="70.1953%" y="101" width="1.2321%" height="15" fill="rgb(227,149,46)" fg:x="77370" fg:w="1358"/><text x="70.4453%" y="111.50"></text></g><g><title>nextelement (18 samples, 0.02%)</title><rect x="71.4274%" y="101" width="0.0163%" height="15" fill="rgb(218,36,50)" fg:x="78728" fg:w="18"/><text x="71.6774%" y="111.50"></text></g><g><title>targetcell (22 samples, 0.02%)</title><rect x="71.4437%" y="85" width="0.0200%" height="15" fill="rgb(226,80,48)" fg:x="78746" fg:w="22"/><text x="71.6937%" y="95.50"></text></g><g><title>maketargetcell (48 samples, 0.04%)</title><rect x="71.4437%" y="101" width="0.0435%" height="15" fill="rgb(238,224,15)" fg:x="78746" fg:w="48"/><text x="71.6937%" y="111.50"></text></g><g><title>longprune (33 samples, 0.03%)</title><rect x="71.4873%" y="101" width="0.0299%" height="15" fill="rgb(241,136,10)" fg:x="78794" fg:w="33"/><text x="71.7373%" y="111.50"></text></g><g><title>refine1 (159 samples, 0.14%)</title><rect x="71.5172%" y="85" width="0.1443%" height="15" fill="rgb(208,32,45)" fg:x="78827" fg:w="159"/><text x="71.7672%" y="95.50"></text></g><g><title>nextelement (22 samples, 0.02%)</title><rect x="71.6615%" y="85" width="0.0200%" height="15" fill="rgb(207,135,9)" fg:x="78986" fg:w="22"/><text x="71.9115%" y="95.50"></text></g><g><title>doref (213 samples, 0.19%)</title><rect x="71.5172%" y="101" width="0.1932%" height="15" fill="rgb(206,86,44)" fg:x="78827" fg:w="213"/><text x="71.7672%" y="111.50"></text></g><g><title>breakout (30 samples, 0.03%)</title><rect x="71.7105%" y="101" width="0.0272%" height="15" fill="rgb(245,177,15)" fg:x="79040" fg:w="30"/><text x="71.9605%" y="111.50"></text></g><g><title>othernode0 (2,967 samples, 2.69%)</title><rect x="69.3806%" y="117" width="2.6919%" height="15" fill="rgb(206,64,50)" fg:x="76472" fg:w="2967"/><text x="69.6306%" y="127.50">ot..</text></g><g><title>nextelement (21 samples, 0.02%)</title><rect x="72.0725%" y="117" width="0.0191%" height="15" fill="rgb(234,36,40)" fg:x="79439" fg:w="21"/><text x="72.3225%" y="127.50"></text></g><g><title>targetcell (43 samples, 0.04%)</title><rect x="72.0915%" y="101" width="0.0390%" height="15" fill="rgb(213,64,8)" fg:x="79460" fg:w="43"/><text x="72.3415%" y="111.50"></text></g><g><title>maketargetcell (81 samples, 0.07%)</title><rect x="72.0915%" y="117" width="0.0735%" height="15" fill="rgb(210,75,36)" fg:x="79460" fg:w="81"/><text x="72.3415%" y="127.50"></text></g><g><title>longprune (29 samples, 0.03%)</title><rect x="72.1650%" y="117" width="0.0263%" height="15" fill="rgb(229,88,21)" fg:x="79541" fg:w="29"/><text x="72.4150%" y="127.50"></text></g><g><title>nextelement (18 samples, 0.02%)</title><rect x="72.1913%" y="85" width="0.0163%" height="15" fill="rgb(252,204,47)" fg:x="79570" fg:w="18"/><text x="72.4413%" y="95.50"></text></g><g><title>refine1 (253 samples, 0.23%)</title><rect x="72.1913%" y="101" width="0.2295%" height="15" fill="rgb(208,77,27)" fg:x="79570" fg:w="253"/><text x="72.4413%" y="111.50"></text></g><g><title>nextelement (50 samples, 0.05%)</title><rect x="72.4209%" y="101" width="0.0454%" height="15" fill="rgb(221,76,26)" fg:x="79823" fg:w="50"/><text x="72.6709%" y="111.50"></text></g><g><title>doref (330 samples, 0.30%)</title><rect x="72.1913%" y="117" width="0.2994%" height="15" fill="rgb(225,139,18)" fg:x="79570" fg:w="330"/><text x="72.4413%" y="127.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="72.4953%" y="101" width="0.0209%" height="15" fill="rgb(230,137,11)" fg:x="79905" fg:w="23"/><text x="72.7453%" y="111.50"></text></g><g><title>breakout (80 samples, 0.07%)</title><rect x="72.4916%" y="117" width="0.0726%" height="15" fill="rgb(212,28,1)" fg:x="79901" fg:w="80"/><text x="72.7416%" y="127.50"></text></g><g><title>othernode0 (4,759 samples, 4.32%)</title><rect x="68.6457%" y="133" width="4.3177%" height="15" fill="rgb(248,164,17)" fg:x="75662" fg:w="4759"/><text x="68.8957%" y="143.50">other..</text></g><g><title>nextelement (48 samples, 0.04%)</title><rect x="72.9634%" y="133" width="0.0435%" height="15" fill="rgb(222,171,42)" fg:x="80421" fg:w="48"/><text x="73.2134%" y="143.50"></text></g><g><title>targetcell (41 samples, 0.04%)</title><rect x="73.0070%" y="117" width="0.0372%" height="15" fill="rgb(243,84,45)" fg:x="80469" fg:w="41"/><text x="73.2570%" y="127.50"></text></g><g><title>maketargetcell (112 samples, 0.10%)</title><rect x="73.0070%" y="133" width="0.1016%" height="15" fill="rgb(252,49,23)" fg:x="80469" fg:w="112"/><text x="73.2570%" y="143.50"></text></g><g><title>longprune (35 samples, 0.03%)</title><rect x="73.1086%" y="133" width="0.0318%" height="15" fill="rgb(215,19,7)" fg:x="80581" fg:w="35"/><text x="73.3586%" y="143.50"></text></g><g><title>nextelement (39 samples, 0.04%)</title><rect x="73.1403%" y="101" width="0.0354%" height="15" fill="rgb(238,81,41)" fg:x="80616" fg:w="39"/><text x="73.3903%" y="111.50"></text></g><g><title>refine1 (310 samples, 0.28%)</title><rect x="73.1403%" y="117" width="0.2813%" height="15" fill="rgb(210,199,37)" fg:x="80616" fg:w="310"/><text x="73.3903%" y="127.50"></text></g><g><title>nextelement (44 samples, 0.04%)</title><rect x="73.4216%" y="117" width="0.0399%" height="15" fill="rgb(244,192,49)" fg:x="80926" fg:w="44"/><text x="73.6716%" y="127.50"></text></g><g><title>doref (399 samples, 0.36%)</title><rect x="73.1403%" y="133" width="0.3620%" height="15" fill="rgb(226,211,11)" fg:x="80616" fg:w="399"/><text x="73.3903%" y="143.50"></text></g><g><title>[libc.so.6] (23 samples, 0.02%)</title><rect x="73.5050%" y="117" width="0.0209%" height="15" fill="rgb(236,162,54)" fg:x="81018" fg:w="23"/><text x="73.7550%" y="127.50"></text></g><g><title>breakout (66 samples, 0.06%)</title><rect x="73.5032%" y="133" width="0.0599%" height="15" fill="rgb(220,229,9)" fg:x="81016" fg:w="66"/><text x="73.7532%" y="143.50"></text></g><g><title>othernode0 (6,748 samples, 6.12%)</title><rect x="67.9108%" y="149" width="6.1222%" height="15" fill="rgb(250,87,22)" fg:x="74852" fg:w="6748"/><text x="68.1608%" y="159.50">othernod..</text></g><g><title>nextelement (29 samples, 0.03%)</title><rect x="74.0331%" y="149" width="0.0263%" height="15" fill="rgb(239,43,17)" fg:x="81600" fg:w="29"/><text x="74.2831%" y="159.50"></text></g><g><title>targetcell (39 samples, 0.04%)</title><rect x="74.0594%" y="133" width="0.0354%" height="15" fill="rgb(231,177,25)" fg:x="81629" fg:w="39"/><text x="74.3094%" y="143.50"></text></g><g><title>[libc.so.6] (13 samples, 0.01%)</title><rect x="74.0948%" y="133" width="0.0118%" height="15" fill="rgb(219,179,1)" fg:x="81668" fg:w="13"/><text x="74.3448%" y="143.50"></text></g><g><title>maketargetcell (137 samples, 0.12%)</title><rect x="74.0594%" y="149" width="0.1243%" height="15" fill="rgb(238,219,53)" fg:x="81629" fg:w="137"/><text x="74.3094%" y="159.50"></text></g><g><title>longprune (45 samples, 0.04%)</title><rect x="74.1837%" y="149" width="0.0408%" height="15" fill="rgb(232,167,36)" fg:x="81766" fg:w="45"/><text x="74.4337%" y="159.50"></text></g><g><title>nextelement (32 samples, 0.03%)</title><rect x="74.2245%" y="117" width="0.0290%" height="15" fill="rgb(244,19,51)" fg:x="81811" fg:w="32"/><text x="74.4745%" y="127.50"></text></g><g><title>refine1 (354 samples, 0.32%)</title><rect x="74.2245%" y="133" width="0.3212%" height="15" fill="rgb(224,6,22)" fg:x="81811" fg:w="354"/><text x="74.4745%" y="143.50"></text></g><g><title>nextelement (46 samples, 0.04%)</title><rect x="74.5457%" y="133" width="0.0417%" height="15" fill="rgb(224,145,5)" fg:x="82165" fg:w="46"/><text x="74.7957%" y="143.50"></text></g><g><title>doref (453 samples, 0.41%)</title><rect x="74.2245%" y="149" width="0.4110%" height="15" fill="rgb(234,130,49)" fg:x="81811" fg:w="453"/><text x="74.4745%" y="159.50"></text></g><g><title>[libc.so.6] (14 samples, 0.01%)</title><rect x="74.6464%" y="133" width="0.0127%" height="15" fill="rgb(254,6,2)" fg:x="82276" fg:w="14"/><text x="74.8964%" y="143.50"></text></g><g><title>breakout (82 samples, 0.07%)</title><rect x="74.6382%" y="149" width="0.0744%" height="15" fill="rgb(208,96,46)" fg:x="82267" fg:w="82"/><text x="74.8882%" y="159.50"></text></g><g><title>othernode0 (8,879 samples, 8.06%)</title><rect x="67.1769%" y="165" width="8.0556%" height="15" fill="rgb(239,3,39)" fg:x="74043" fg:w="8879"/><text x="67.4269%" y="175.50">othernode0</text></g><g><title>nextelement (87 samples, 0.08%)</title><rect x="75.2325%" y="165" width="0.0789%" height="15" fill="rgb(233,210,1)" fg:x="82922" fg:w="87"/><text x="75.4825%" y="175.50"></text></g><g><title>targetcell (54 samples, 0.05%)</title><rect x="75.3114%" y="149" width="0.0490%" height="15" fill="rgb(244,137,37)" fg:x="83009" fg:w="54"/><text x="75.5614%" y="159.50"></text></g><g><title>[libc.so.6] (18 samples, 0.02%)</title><rect x="75.3640%" y="149" width="0.0163%" height="15" fill="rgb(240,136,2)" fg:x="83067" fg:w="18"/><text x="75.6140%" y="159.50"></text></g><g><title>maketargetcell (197 samples, 0.18%)</title><rect x="75.3114%" y="165" width="0.1787%" height="15" fill="rgb(239,18,37)" fg:x="83009" fg:w="197"/><text x="75.5614%" y="175.50"></text></g><g><title>permset (78 samples, 0.07%)</title><rect x="75.4911%" y="101" width="0.0708%" height="15" fill="rgb(218,185,22)" fg:x="83207" fg:w="78"/><text x="75.7411%" y="111.50"></text></g><g><title>updatecan (135 samples, 0.12%)</title><rect x="75.4911%" y="117" width="0.1225%" height="15" fill="rgb(225,218,4)" fg:x="83207" fg:w="135"/><text x="75.7411%" y="127.50"></text></g><g><title>permset (29 samples, 0.03%)</title><rect x="75.6135%" y="101" width="0.0263%" height="15" fill="rgb(230,182,32)" fg:x="83342" fg:w="29"/><text x="75.8635%" y="111.50"></text></g><g><title>testcanlab (121 samples, 0.11%)</title><rect x="75.6135%" y="117" width="0.1098%" height="15" fill="rgb(242,56,43)" fg:x="83342" fg:w="121"/><text x="75.8635%" y="127.50"></text></g><g><title>orbjoin (59 samples, 0.05%)</title><rect x="75.7233%" y="117" width="0.0535%" height="15" fill="rgb(233,99,24)" fg:x="83463" fg:w="59"/><text x="75.9733%" y="127.50"></text></g><g><title>nextelement (54 samples, 0.05%)</title><rect x="75.7768%" y="101" width="0.0490%" height="15" fill="rgb(234,209,42)" fg:x="83522" fg:w="54"/><text x="76.0268%" y="111.50"></text></g><g><title>isautom (125 samples, 0.11%)</title><rect x="75.7768%" y="117" width="0.1134%" height="15" fill="rgb(227,7,12)" fg:x="83522" fg:w="125"/><text x="76.0268%" y="127.50"></text></g><g><title>fmperm (50 samples, 0.05%)</title><rect x="75.8903%" y="117" width="0.0454%" height="15" fill="rgb(245,203,43)" fg:x="83647" fg:w="50"/><text x="76.1403%" y="127.50"></text></g><g><title>processnode (620 samples, 0.56%)</title><rect x="75.4911%" y="133" width="0.5625%" height="15" fill="rgb(238,205,33)" fg:x="83207" fg:w="620"/><text x="75.7411%" y="143.50"></text></g><g><title>permset (34 samples, 0.03%)</title><rect x="76.0536%" y="85" width="0.0308%" height="15" fill="rgb(231,56,7)" fg:x="83827" fg:w="34"/><text x="76.3036%" y="95.50"></text></g><g><title>updatecan (70 samples, 0.06%)</title><rect x="76.0536%" y="101" width="0.0635%" height="15" fill="rgb(244,186,29)" fg:x="83827" fg:w="70"/><text x="76.3036%" y="111.50"></text></g><g><title>permset (45 samples, 0.04%)</title><rect x="76.1171%" y="85" width="0.0408%" height="15" fill="rgb(234,111,31)" fg:x="83897" fg:w="45"/><text x="76.3671%" y="95.50"></text></g><g><title>testcanlab (124 samples, 0.11%)</title><rect x="76.1171%" y="101" width="0.1125%" height="15" fill="rgb(241,149,10)" fg:x="83897" fg:w="124"/><text x="76.3671%" y="111.50"></text></g><g><title>orbjoin (19 samples, 0.02%)</title><rect x="76.2296%" y="101" width="0.0172%" height="15" fill="rgb(249,206,44)" fg:x="84021" fg:w="19"/><text x="76.4796%" y="111.50"></text></g><g><title>nextelement (51 samples, 0.05%)</title><rect x="76.2468%" y="85" width="0.0463%" height="15" fill="rgb(251,153,30)" fg:x="84040" fg:w="51"/><text x="76.4968%" y="95.50"></text></g><g><title>isautom (117 samples, 0.11%)</title><rect x="76.2468%" y="101" width="0.1062%" height="15" fill="rgb(239,152,38)" fg:x="84040" fg:w="117"/><text x="76.4968%" y="111.50"></text></g><g><title>processnode (452 samples, 0.41%)</title><rect x="76.0536%" y="117" width="0.4101%" height="15" fill="rgb(249,139,47)" fg:x="83827" fg:w="452"/><text x="76.3036%" y="127.50"></text></g><g><title>permset (16 samples, 0.01%)</title><rect x="76.4637%" y="69" width="0.0145%" height="15" fill="rgb(244,64,35)" fg:x="84279" fg:w="16"/><text x="76.7137%" y="79.50"></text></g><g><title>updatecan (59 samples, 0.05%)</title><rect x="76.4637%" y="85" width="0.0535%" height="15" fill="rgb(216,46,15)" fg:x="84279" fg:w="59"/><text x="76.7137%" y="95.50"></text></g><g><title>permset (59 samples, 0.05%)</title><rect x="76.5172%" y="69" width="0.0535%" height="15" fill="rgb(250,74,19)" fg:x="84338" fg:w="59"/><text x="76.7672%" y="79.50"></text></g><g><title>testcanlab (160 samples, 0.15%)</title><rect x="76.5172%" y="85" width="0.1452%" height="15" fill="rgb(249,42,33)" fg:x="84338" fg:w="160"/><text x="76.7672%" y="95.50"></text></g><g><title>nextelement (30 samples, 0.03%)</title><rect x="76.6705%" y="69" width="0.0272%" height="15" fill="rgb(242,149,17)" fg:x="84507" fg:w="30"/><text x="76.9205%" y="79.50"></text></g><g><title>isautom (81 samples, 0.07%)</title><rect x="76.6705%" y="85" width="0.0735%" height="15" fill="rgb(244,29,21)" fg:x="84507" fg:w="81"/><text x="76.9205%" y="95.50"></text></g><g><title>processnode (394 samples, 0.36%)</title><rect x="76.4637%" y="101" width="0.3575%" height="15" fill="rgb(220,130,37)" fg:x="84279" fg:w="394"/><text x="76.7137%" y="111.50"></text></g><g><title>updatecan (28 samples, 0.03%)</title><rect x="76.8211%" y="69" width="0.0254%" height="15" fill="rgb(211,67,2)" fg:x="84673" fg:w="28"/><text x="77.0711%" y="79.50"></text></g><g><title>permset (25 samples, 0.02%)</title><rect x="76.8465%" y="53" width="0.0227%" height="15" fill="rgb(235,68,52)" fg:x="84701" fg:w="25"/><text x="77.0965%" y="63.50"></text></g><g><title>testcanlab (76 samples, 0.07%)</title><rect x="76.8465%" y="69" width="0.0690%" height="15" fill="rgb(246,142,3)" fg:x="84701" fg:w="76"/><text x="77.0965%" y="79.50"></text></g><g><title>nextelement (12 samples, 0.01%)</title><rect x="76.9182%" y="53" width="0.0109%" height="15" fill="rgb(241,25,7)" fg:x="84780" fg:w="12"/><text x="77.1682%" y="63.50"></text></g><g><title>isautom (34 samples, 0.03%)</title><rect x="76.9182%" y="69" width="0.0308%" height="15" fill="rgb(242,119,39)" fg:x="84780" fg:w="34"/><text x="77.1682%" y="79.50"></text></g><g><title>processnode (183 samples, 0.17%)</title><rect x="76.8211%" y="85" width="0.1660%" height="15" fill="rgb(241,98,45)" fg:x="84673" fg:w="183"/><text x="77.0711%" y="95.50"></text></g><g><title>permset (15 samples, 0.01%)</title><rect x="76.9971%" y="37" width="0.0136%" height="15" fill="rgb(254,28,30)" fg:x="84867" fg:w="15"/><text x="77.2471%" y="47.50"></text></g><g><title>testcanlab (32 samples, 0.03%)</title><rect x="76.9971%" y="53" width="0.0290%" height="15" fill="rgb(241,142,54)" fg:x="84867" fg:w="32"/><text x="77.2471%" y="63.50"></text></g><g><title>isautom (18 samples, 0.02%)</title><rect x="77.0271%" y="53" width="0.0163%" height="15" fill="rgb(222,85,15)" fg:x="84900" fg:w="18"/><text x="77.2771%" y="63.50"></text></g><g><title>processnode (83 samples, 0.08%)</title><rect x="76.9871%" y="69" width="0.0753%" height="15" fill="rgb(210,85,47)" fg:x="84856" fg:w="83"/><text x="77.2371%" y="79.50"></text></g><g><title>processnode (16 samples, 0.01%)</title><rect x="77.0624%" y="53" width="0.0145%" height="15" fill="rgb(224,206,25)" fg:x="84939" fg:w="16"/><text x="77.3124%" y="63.50"></text></g><g><title>othernode0 (19 samples, 0.02%)</title><rect x="77.0624%" y="69" width="0.0172%" height="15" fill="rgb(243,201,19)" fg:x="84939" fg:w="19"/><text x="77.3124%" y="79.50"></text></g><g><title>othernode0 (126 samples, 0.11%)</title><rect x="76.9871%" y="85" width="0.1143%" height="15" fill="rgb(236,59,4)" fg:x="84856" fg:w="126"/><text x="77.2371%" y="95.50"></text></g><g><title>refine1 (28 samples, 0.03%)</title><rect x="77.1142%" y="69" width="0.0254%" height="15" fill="rgb(254,179,45)" fg:x="84996" fg:w="28"/><text x="77.3642%" y="79.50"></text></g><g><title>doref (37 samples, 0.03%)</title><rect x="77.1142%" y="85" width="0.0336%" height="15" fill="rgb(226,14,10)" fg:x="84996" fg:w="37"/><text x="77.3642%" y="95.50"></text></g><g><title>othernode0 (417 samples, 0.38%)</title><rect x="76.8211%" y="101" width="0.3783%" height="15" fill="rgb(244,27,41)" fg:x="84673" fg:w="417"/><text x="77.0711%" y="111.50"></text></g><g><title>maketargetcell (20 samples, 0.02%)</title><rect x="77.2058%" y="101" width="0.0181%" height="15" fill="rgb(235,35,32)" fg:x="85097" fg:w="20"/><text x="77.4558%" y="111.50"></text></g><g><title>refine1 (60 samples, 0.05%)</title><rect x="77.2294%" y="85" width="0.0544%" height="15" fill="rgb(218,68,31)" fg:x="85123" fg:w="60"/><text x="77.4794%" y="95.50"></text></g><g><title>nextelement (18 samples, 0.02%)</title><rect x="77.2838%" y="85" width="0.0163%" height="15" fill="rgb(207,120,37)" fg:x="85183" fg:w="18"/><text x="77.5338%" y="95.50"></text></g><g><title>doref (94 samples, 0.09%)</title><rect x="77.2294%" y="101" width="0.0853%" height="15" fill="rgb(227,98,0)" fg:x="85123" fg:w="94"/><text x="77.4794%" y="111.50"></text></g><g><title>othernode0 (1,094 samples, 0.99%)</title><rect x="76.4637%" y="117" width="0.9926%" height="15" fill="rgb(207,7,3)" fg:x="84279" fg:w="1094"/><text x="76.7137%" y="127.50"></text></g><g><title>nextelement (15 samples, 0.01%)</title><rect x="77.4562%" y="117" width="0.0136%" height="15" fill="rgb(206,98,19)" fg:x="85373" fg:w="15"/><text x="77.7062%" y="127.50"></text></g><g><title>targetcell (16 samples, 0.01%)</title><rect x="77.4698%" y="101" width="0.0145%" height="15" fill="rgb(217,5,26)" fg:x="85388" fg:w="16"/><text x="77.7198%" y="111.50"></text></g><g><title>maketargetcell (38 samples, 0.03%)</title><rect x="77.4698%" y="117" width="0.0345%" height="15" fill="rgb(235,190,38)" fg:x="85388" fg:w="38"/><text x="77.7198%" y="127.50"></text></g><g><title>refine1 (126 samples, 0.11%)</title><rect x="77.5115%" y="101" width="0.1143%" height="15" fill="rgb(247,86,24)" fg:x="85434" fg:w="126"/><text x="77.7615%" y="111.50"></text></g><g><title>nextelement (25 samples, 0.02%)</title><rect x="77.6259%" y="101" width="0.0227%" height="15" fill="rgb(205,101,16)" fg:x="85560" fg:w="25"/><text x="77.8759%" y="111.50"></text></g><g><title>doref (167 samples, 0.15%)</title><rect x="77.5115%" y="117" width="0.1515%" height="15" fill="rgb(246,168,33)" fg:x="85434" fg:w="167"/><text x="77.7615%" y="127.50"></text></g><g><title>breakout (28 samples, 0.03%)</title><rect x="77.6631%" y="117" width="0.0254%" height="15" fill="rgb(231,114,1)" fg:x="85601" fg:w="28"/><text x="77.9131%" y="127.50"></text></g><g><title>othernode0 (2,016 samples, 1.83%)</title><rect x="76.0536%" y="133" width="1.8291%" height="15" fill="rgb(207,184,53)" fg:x="83827" fg:w="2016"/><text x="76.3036%" y="143.50">o..</text></g><g><title>nextelement (24 samples, 0.02%)</title><rect x="77.8826%" y="133" width="0.0218%" height="15" fill="rgb(224,95,51)" fg:x="85843" fg:w="24"/><text x="78.1326%" y="143.50"></text></g><g><title>targetcell (18 samples, 0.02%)</title><rect x="77.9044%" y="117" width="0.0163%" height="15" fill="rgb(212,188,45)" fg:x="85867" fg:w="18"/><text x="78.1544%" y="127.50"></text></g><g><title>maketargetcell (67 samples, 0.06%)</title><rect x="77.9044%" y="133" width="0.0608%" height="15" fill="rgb(223,154,38)" fg:x="85867" fg:w="67"/><text x="78.1544%" y="143.50"></text></g><g><title>refine1 (150 samples, 0.14%)</title><rect x="77.9752%" y="117" width="0.1361%" height="15" fill="rgb(251,22,52)" fg:x="85945" fg:w="150"/><text x="78.2252%" y="127.50"></text></g><g><title>nextelement (22 samples, 0.02%)</title><rect x="78.1112%" y="117" width="0.0200%" height="15" fill="rgb(229,209,22)" fg:x="86095" fg:w="22"/><text x="78.3612%" y="127.50"></text></g><g><title>doref (191 samples, 0.17%)</title><rect x="77.9752%" y="133" width="0.1733%" height="15" fill="rgb(234,138,34)" fg:x="85945" fg:w="191"/><text x="78.2252%" y="143.50"></text></g><g><title>breakout (30 samples, 0.03%)</title><rect x="78.1503%" y="133" width="0.0272%" height="15" fill="rgb(212,95,11)" fg:x="86138" fg:w="30"/><text x="78.4003%" y="143.50"></text></g><g><title>othernode0 (3,228 samples, 2.93%)</title><rect x="75.4911%" y="149" width="2.9287%" height="15" fill="rgb(240,179,47)" fg:x="83207" fg:w="3228"/><text x="75.7411%" y="159.50">ot..</text></g><g><title>nextelement (50 samples, 0.05%)</title><rect x="78.4197%" y="149" width="0.0454%" height="15" fill="rgb(240,163,11)" fg:x="86435" fg:w="50"/><text x="78.6697%" y="159.50"></text></g><g><title>targetcell (38 samples, 0.03%)</title><rect x="78.4651%" y="133" width="0.0345%" height="15" fill="rgb(236,37,12)" fg:x="86485" fg:w="38"/><text x="78.7151%" y="143.50"></text></g><g><title>maketargetcell (136 samples, 0.12%)</title><rect x="78.4651%" y="149" width="0.1234%" height="15" fill="rgb(232,164,16)" fg:x="86485" fg:w="136"/><text x="78.7151%" y="159.50"></text></g><g><title>permset (42 samples, 0.04%)</title><rect x="78.5885%" y="85" width="0.0381%" height="15" fill="rgb(244,205,15)" fg:x="86621" fg:w="42"/><text x="78.8385%" y="95.50"></text></g><g><title>updatecan (75 samples, 0.07%)</title><rect x="78.5885%" y="101" width="0.0680%" height="15" fill="rgb(223,117,47)" fg:x="86621" fg:w="75"/><text x="78.8385%" y="111.50"></text></g><g><title>permset (30 samples, 0.03%)</title><rect x="78.6565%" y="85" width="0.0272%" height="15" fill="rgb(244,107,35)" fg:x="86696" fg:w="30"/><text x="78.9065%" y="95.50"></text></g><g><title>testcanlab (85 samples, 0.08%)</title><rect x="78.6565%" y="101" width="0.0771%" height="15" fill="rgb(205,140,8)" fg:x="86696" fg:w="85"/><text x="78.9065%" y="111.50"></text></g><g><title>orbjoin (23 samples, 0.02%)</title><rect x="78.7336%" y="101" width="0.0209%" height="15" fill="rgb(228,84,46)" fg:x="86781" fg:w="23"/><text x="78.9836%" y="111.50"></text></g><g><title>nextelement (30 samples, 0.03%)</title><rect x="78.7545%" y="85" width="0.0272%" height="15" fill="rgb(254,188,9)" fg:x="86804" fg:w="30"/><text x="79.0045%" y="95.50"></text></g><g><title>isautom (89 samples, 0.08%)</title><rect x="78.7545%" y="101" width="0.0807%" height="15" fill="rgb(206,112,54)" fg:x="86804" fg:w="89"/><text x="79.0045%" y="111.50"></text></g><g><title>fmperm (23 samples, 0.02%)</title><rect x="78.8352%" y="101" width="0.0209%" height="15" fill="rgb(216,84,49)" fg:x="86893" fg:w="23"/><text x="79.0852%" y="111.50"></text></g><g><title>processnode (365 samples, 0.33%)</title><rect x="78.5885%" y="117" width="0.3312%" height="15" fill="rgb(214,194,35)" fg:x="86621" fg:w="365"/><text x="78.8385%" y="127.50"></text></g><g><title>permset (12 samples, 0.01%)</title><rect x="78.9196%" y="69" width="0.0109%" height="15" fill="rgb(249,28,3)" fg:x="86986" fg:w="12"/><text x="79.1696%" y="79.50"></text></g><g><title>updatecan (38 samples, 0.03%)</title><rect x="78.9196%" y="85" width="0.0345%" height="15" fill="rgb(222,56,52)" fg:x="86986" fg:w="38"/><text x="79.1696%" y="95.50"></text></g><g><title>permset (19 samples, 0.02%)</title><rect x="78.9541%" y="69" width="0.0172%" height="15" fill="rgb(245,217,50)" fg:x="87024" fg:w="19"/><text x="79.2041%" y="79.50"></text></g><g><title>testcanlab (68 samples, 0.06%)</title><rect x="78.9541%" y="85" width="0.0617%" height="15" fill="rgb(213,201,24)" fg:x="87024" fg:w="68"/><text x="79.2041%" y="95.50"></text></g><g><title>nextelement (22 samples, 0.02%)</title><rect x="79.0231%" y="69" width="0.0200%" height="15" fill="rgb(248,116,28)" fg:x="87100" fg:w="22"/><text x="79.2731%" y="79.50"></text></g><g><title>isautom (56 samples, 0.05%)</title><rect x="79.0231%" y="85" width="0.0508%" height="15" fill="rgb(219,72,43)" fg:x="87100" fg:w="56"/><text x="79.2731%" y="95.50"></text></g><g><title>processnode (214 samples, 0.19%)</title><rect x="78.9196%" y="101" width="0.1942%" height="15" fill="rgb(209,138,14)" fg:x="86986" fg:w="214"/><text x="79.1696%" y="111.50"></text></g><g><title>permset (13 samples, 0.01%)</title><rect x="79.1229%" y="53" width="0.0118%" height="15" fill="rgb(222,18,33)" fg:x="87210" fg:w="13"/><text x="79.3729%" y="63.50"></text></g><g><title>testcanlab (44 samples, 0.04%)</title><rect x="79.1229%" y="69" width="0.0399%" height="15" fill="rgb(213,199,7)" fg:x="87210" fg:w="44"/><text x="79.3729%" y="79.50"></text></g><g><title>isautom (17 samples, 0.02%)</title><rect x="79.1655%" y="69" width="0.0154%" height="15" fill="rgb(250,110,10)" fg:x="87257" fg:w="17"/><text x="79.4155%" y="79.50"></text></g><g><title>processnode (98 samples, 0.09%)</title><rect x="79.1138%" y="85" width="0.0889%" height="15" fill="rgb(248,123,6)" fg:x="87200" fg:w="98"/><text x="79.3638%" y="95.50"></text></g><g><title>testcanlab (12 samples, 0.01%)</title><rect x="79.2072%" y="53" width="0.0109%" height="15" fill="rgb(206,91,31)" fg:x="87303" fg:w="12"/><text x="79.4572%" y="63.50"></text></g><g><title>processnode (33 samples, 0.03%)</title><rect x="79.2027%" y="69" width="0.0299%" height="15" fill="rgb(211,154,13)" fg:x="87298" fg:w="33"/><text x="79.4527%" y="79.50"></text></g><g><title>othernode0 (54 samples, 0.05%)</title><rect x="79.2027%" y="85" width="0.0490%" height="15" fill="rgb(225,148,7)" fg:x="87298" fg:w="54"/><text x="79.4527%" y="95.50"></text></g><g><title>doref (18 samples, 0.02%)</title><rect x="79.2544%" y="85" width="0.0163%" height="15" fill="rgb(220,160,43)" fg:x="87355" fg:w="18"/><text x="79.5044%" y="95.50"></text></g><g><title>othernode0 (200 samples, 0.18%)</title><rect x="79.1138%" y="101" width="0.1815%" height="15" fill="rgb(213,52,39)" fg:x="87200" fg:w="200"/><text x="79.3638%" y="111.50"></text></g><g><title>refine1 (22 samples, 0.02%)</title><rect x="79.3043%" y="85" width="0.0200%" height="15" fill="rgb(243,137,7)" fg:x="87410" fg:w="22"/><text x="79.5543%" y="95.50"></text></g><g><title>doref (35 samples, 0.03%)</title><rect x="79.3043%" y="101" width="0.0318%" height="15" fill="rgb(230,79,13)" fg:x="87410" fg:w="35"/><text x="79.5543%" y="111.50"></text></g><g><title>othernode0 (522 samples, 0.47%)</title><rect x="78.9196%" y="117" width="0.4736%" height="15" fill="rgb(247,105,23)" fg:x="86986" fg:w="522"/><text x="79.1696%" y="127.50"></text></g><g><title>maketargetcell (26 samples, 0.02%)</title><rect x="79.3996%" y="117" width="0.0236%" height="15" fill="rgb(223,179,41)" fg:x="87515" fg:w="26"/><text x="79.6496%" y="127.50"></text></g><g><title>refine1 (86 samples, 0.08%)</title><rect x="79.4277%" y="101" width="0.0780%" height="15" fill="rgb(218,9,34)" fg:x="87546" fg:w="86"/><text x="79.6777%" y="111.50"></text></g><g><title>doref (101 samples, 0.09%)</title><rect x="79.4277%" y="117" width="0.0916%" height="15" fill="rgb(222,106,8)" fg:x="87546" fg:w="101"/><text x="79.6777%" y="127.50"></text></g><g><title>breakout (17 samples, 0.02%)</title><rect x="79.5193%" y="117" width="0.0154%" height="15" fill="rgb(211,220,0)" fg:x="87647" fg:w="17"/><text x="79.7693%" y="127.50"></text></g><g><title>othernode0 (1,144 samples, 1.04%)</title><rect x="78.5885%" y="133" width="1.0379%" height="15" fill="rgb(229,52,16)" fg:x="86621" fg:w="1144"/><text x="78.8385%" y="143.50"></text></g><g><title>nextelement (23 samples, 0.02%)</title><rect x="79.6264%" y="133" width="0.0209%" height="15" fill="rgb(212,155,18)" fg:x="87765" fg:w="23"/><text x="79.8764%" y="143.50"></text></g><g><title>targetcell (31 samples, 0.03%)</title><rect x="79.6473%" y="117" width="0.0281%" height="15" fill="rgb(242,21,14)" fg:x="87788" fg:w="31"/><text x="79.8973%" y="127.50"></text></g><g><title>maketargetcell (72 samples, 0.07%)</title><rect x="79.6473%" y="133" width="0.0653%" height="15" fill="rgb(222,19,48)" fg:x="87788" fg:w="72"/><text x="79.8973%" y="143.50"></text></g><g><title>permset (18 samples, 0.02%)</title><rect x="79.7126%" y="69" width="0.0163%" height="15" fill="rgb(232,45,27)" fg:x="87860" fg:w="18"/><text x="79.9626%" y="79.50"></text></g><g><title>updatecan (26 samples, 0.02%)</title><rect x="79.7126%" y="85" width="0.0236%" height="15" fill="rgb(249,103,42)" fg:x="87860" fg:w="26"/><text x="79.9626%" y="95.50"></text></g><g><title>testcanlab (31 samples, 0.03%)</title><rect x="79.7362%" y="85" width="0.0281%" height="15" fill="rgb(246,81,33)" fg:x="87886" fg:w="31"/><text x="79.9862%" y="95.50"></text></g><g><title>nextelement (14 samples, 0.01%)</title><rect x="79.7706%" y="69" width="0.0127%" height="15" fill="rgb(252,33,42)" fg:x="87924" fg:w="14"/><text x="80.0206%" y="79.50"></text></g><g><title>isautom (41 samples, 0.04%)</title><rect x="79.7706%" y="85" width="0.0372%" height="15" fill="rgb(209,212,41)" fg:x="87924" fg:w="41"/><text x="80.0206%" y="95.50"></text></g><g><title>processnode (143 samples, 0.13%)</title><rect x="79.7126%" y="101" width="0.1297%" height="15" fill="rgb(207,154,6)" fg:x="87860" fg:w="143"/><text x="79.9626%" y="111.50"></text></g><g><title>testcanlab (15 samples, 0.01%)</title><rect x="79.8514%" y="69" width="0.0136%" height="15" fill="rgb(223,64,47)" fg:x="88013" fg:w="15"/><text x="80.1014%" y="79.50"></text></g><g><title>isautom (12 samples, 0.01%)</title><rect x="79.8668%" y="69" width="0.0109%" height="15" fill="rgb(211,161,38)" fg:x="88030" fg:w="12"/><text x="80.1168%" y="79.50"></text></g><g><title>processnode (49 samples, 0.04%)</title><rect x="79.8423%" y="85" width="0.0445%" height="15" fill="rgb(219,138,40)" fg:x="88003" fg:w="49"/><text x="80.0923%" y="95.50"></text></g><g><title>processnode (14 samples, 0.01%)</title><rect x="79.8868%" y="69" width="0.0127%" height="15" fill="rgb(241,228,46)" fg:x="88052" fg:w="14"/><text x="80.1368%" y="79.50"></text></g><g><title>othernode0 (24 samples, 0.02%)</title><rect x="79.8868%" y="85" width="0.0218%" height="15" fill="rgb(223,209,38)" fg:x="88052" fg:w="24"/><text x="80.1368%" y="95.50"></text></g><g><title>doref (12 samples, 0.01%)</title><rect x="79.9104%" y="85" width="0.0109%" height="15" fill="rgb(236,164,45)" fg:x="88078" fg:w="12"/><text x="80.1604%" y="95.50"></text></g><g><title>othernode0 (99 samples, 0.09%)</title><rect x="79.8423%" y="101" width="0.0898%" height="15" fill="rgb(231,15,5)" fg:x="88003" fg:w="99"/><text x="80.0923%" y="111.50"></text></g><g><title>refine1 (19 samples, 0.02%)</title><rect x="79.9358%" y="85" width="0.0172%" height="15" fill="rgb(252,35,15)" fg:x="88106" fg:w="19"/><text x="80.1858%" y="95.50"></text></g><g><title>doref (25 samples, 0.02%)</title><rect x="79.9358%" y="101" width="0.0227%" height="15" fill="rgb(248,181,18)" fg:x="88106" fg:w="25"/><text x="80.1858%" y="111.50"></text></g><g><title>othernode0 (307 samples, 0.28%)</title><rect x="79.7126%" y="117" width="0.2785%" height="15" fill="rgb(233,39,42)" fg:x="87860" fg:w="307"/><text x="79.9626%" y="127.50"></text></g><g><title>maketargetcell (21 samples, 0.02%)</title><rect x="79.9956%" y="117" width="0.0191%" height="15" fill="rgb(238,110,33)" fg:x="88172" fg:w="21"/><text x="80.2456%" y="127.50"></text></g><g><title>processnode (38 samples, 0.03%)</title><rect x="80.0147%" y="85" width="0.0345%" height="15" fill="rgb(233,195,10)" fg:x="88193" fg:w="38"/><text x="80.2647%" y="95.50"></text></g><g><title>othernode0 (57 samples, 0.05%)</title><rect x="80.0147%" y="101" width="0.0517%" height="15" fill="rgb(254,105,3)" fg:x="88193" fg:w="57"/><text x="80.2647%" y="111.50"></text></g><g><title>firstpathnode0 (19 samples, 0.02%)</title><rect x="80.0764%" y="101" width="0.0172%" height="15" fill="rgb(221,225,9)" fg:x="88261" fg:w="19"/><text x="80.3264%" y="111.50"></text></g><g><title>firstpathnode0 (129 samples, 0.12%)</title><rect x="80.0147%" y="117" width="0.1170%" height="15" fill="rgb(224,227,45)" fg:x="88193" fg:w="129"/><text x="80.2647%" y="127.50"></text></g><g><title>refine1 (67 samples, 0.06%)</title><rect x="80.1317%" y="101" width="0.0608%" height="15" fill="rgb(229,198,43)" fg:x="88322" fg:w="67"/><text x="80.3817%" y="111.50"></text></g><g><title>doref (87 samples, 0.08%)</title><rect x="80.1317%" y="117" width="0.0789%" height="15" fill="rgb(206,209,35)" fg:x="88322" fg:w="87"/><text x="80.3817%" y="127.50"></text></g><g><title>firstpathnode0 (696 samples, 0.63%)</title><rect x="79.7126%" y="133" width="0.6315%" height="15" fill="rgb(245,195,53)" fg:x="87860" fg:w="696"/><text x="79.9626%" y="143.50"></text></g><g><title>nextelement (12 samples, 0.01%)</title><rect x="80.3440%" y="101" width="0.0109%" height="15" fill="rgb(240,92,26)" fg:x="88556" fg:w="12"/><text x="80.5940%" y="111.50"></text></g><g><title>refine1 (142 samples, 0.13%)</title><rect x="80.3440%" y="117" width="0.1288%" height="15" fill="rgb(207,40,23)" fg:x="88556" fg:w="142"/><text x="80.5940%" y="127.50"></text></g><g><title>nextelement (18 samples, 0.02%)</title><rect x="80.4729%" y="117" width="0.0163%" height="15" fill="rgb(223,111,35)" fg:x="88698" fg:w="18"/><text x="80.7229%" y="127.50"></text></g><g><title>doref (185 samples, 0.17%)</title><rect x="80.3440%" y="133" width="0.1678%" height="15" fill="rgb(229,147,28)" fg:x="88556" fg:w="185"/><text x="80.5940%" y="143.50"></text></g><g><title>breakout (34 samples, 0.03%)</title><rect x="80.5128%" y="133" width="0.0308%" height="15" fill="rgb(211,29,28)" fg:x="88742" fg:w="34"/><text x="80.7628%" y="143.50"></text></g><g><title>firstpathnode0 (2,511 samples, 2.28%)</title><rect x="78.5885%" y="149" width="2.2782%" height="15" fill="rgb(228,72,33)" fg:x="86621" fg:w="2511"/><text x="78.8385%" y="159.50">f..</text></g><g><title>nextelement (34 samples, 0.03%)</title><rect x="80.8666%" y="117" width="0.0308%" height="15" fill="rgb(205,214,31)" fg:x="89132" fg:w="34"/><text x="81.1166%" y="127.50"></text></g><g><title>refine1 (286 samples, 0.26%)</title><rect x="80.8666%" y="133" width="0.2595%" height="15" fill="rgb(224,111,15)" fg:x="89132" fg:w="286"/><text x="81.1166%" y="143.50"></text></g><g><title>nextelement (29 samples, 0.03%)</title><rect x="81.1261%" y="133" width="0.0263%" height="15" fill="rgb(253,21,26)" fg:x="89418" fg:w="29"/><text x="81.3761%" y="143.50"></text></g><g><title>doref (346 samples, 0.31%)</title><rect x="80.8666%" y="149" width="0.3139%" height="15" fill="rgb(245,139,43)" fg:x="89132" fg:w="346"/><text x="81.1166%" y="159.50"></text></g><g><title>[libc.so.6] (15 samples, 0.01%)</title><rect x="81.1914%" y="133" width="0.0136%" height="15" fill="rgb(252,170,7)" fg:x="89490" fg:w="15"/><text x="81.4414%" y="143.50"></text></g><g><title>breakout (68 samples, 0.06%)</title><rect x="81.1860%" y="149" width="0.0617%" height="15" fill="rgb(231,118,14)" fg:x="89484" fg:w="68"/><text x="81.4360%" y="159.50"></text></g><g><title>firstpathnode0 (7,016 samples, 6.37%)</title><rect x="75.4911%" y="165" width="6.3654%" height="15" fill="rgb(238,83,0)" fg:x="83207" fg:w="7016"/><text x="75.7411%" y="175.50">firstpat..</text></g><g><title>nextelement (30 samples, 0.03%)</title><rect x="81.8565%" y="133" width="0.0272%" height="15" fill="rgb(221,39,39)" fg:x="90223" fg:w="30"/><text x="82.1065%" y="143.50"></text></g><g><title>refine1 (536 samples, 0.49%)</title><rect x="81.8565%" y="149" width="0.4863%" height="15" fill="rgb(222,119,46)" fg:x="90223" fg:w="536"/><text x="82.1065%" y="159.50"></text></g><g><title>nextelement (64 samples, 0.06%)</title><rect x="82.3427%" y="149" width="0.0581%" height="15" fill="rgb(222,165,49)" fg:x="90759" fg:w="64"/><text x="82.5927%" y="159.50"></text></g><g><title>doref (675 samples, 0.61%)</title><rect x="81.8565%" y="165" width="0.6124%" height="15" fill="rgb(219,113,52)" fg:x="90223" fg:w="675"/><text x="82.1065%" y="175.50"></text></g><g><title>[libc.so.6] (37 samples, 0.03%)</title><rect x="82.4816%" y="149" width="0.0336%" height="15" fill="rgb(214,7,15)" fg:x="90912" fg:w="37"/><text x="82.7316%" y="159.50"></text></g><g><title>breakout (115 samples, 0.10%)</title><rect x="82.4743%" y="165" width="0.1043%" height="15" fill="rgb(235,32,4)" fg:x="90904" fg:w="115"/><text x="82.7243%" y="175.50"></text></g><g><title>firstpathnode0 (18,108 samples, 16.43%)</title><rect x="67.1769%" y="181" width="16.4288%" height="15" fill="rgb(238,90,54)" fg:x="74043" fg:w="18108"/><text x="67.4269%" y="191.50">firstpathnode0</text></g><g><title>nextelement (387 samples, 0.35%)</title><rect x="83.6057%" y="149" width="0.3511%" height="15" fill="rgb(213,208,19)" fg:x="92151" fg:w="387"/><text x="83.8557%" y="159.50"></text></g><g><title>[libc.so.6] (121 samples, 0.11%)</title><rect x="83.9668%" y="149" width="0.1098%" height="15" fill="rgb(233,156,4)" fg:x="92549" fg:w="121"/><text x="84.2168%" y="159.50"></text></g><g><title>refine1 (9,433 samples, 8.56%)</title><rect x="83.6057%" y="165" width="8.5583%" height="15" fill="rgb(207,194,5)" fg:x="92151" fg:w="9433"/><text x="83.8557%" y="175.50">refine1</text></g><g><title>nextelement (283 samples, 0.26%)</title><rect x="92.1639%" y="165" width="0.2568%" height="15" fill="rgb(206,111,30)" fg:x="101584" fg:w="283"/><text x="92.4139%" y="175.50"></text></g><g><title>doref (10,124 samples, 9.19%)</title><rect x="83.6057%" y="181" width="9.1852%" height="15" fill="rgb(243,70,54)" fg:x="92151" fg:w="10124"/><text x="83.8557%" y="191.50">doref</text></g><g><title>cheapautom (39 samples, 0.04%)</title><rect x="92.7908%" y="181" width="0.0354%" height="15" fill="rgb(242,28,8)" fg:x="102275" fg:w="39"/><text x="93.0408%" y="191.50"></text></g><g><title>memset@plt (66 samples, 0.06%)</title><rect x="92.8262%" y="165" width="0.0599%" height="15" fill="rgb(219,106,18)" fg:x="102314" fg:w="66"/><text x="93.0762%" y="175.50"></text></g><g><title>[libc.so.6] (143 samples, 0.13%)</title><rect x="92.8861%" y="165" width="0.1297%" height="15" fill="rgb(244,222,10)" fg:x="102380" fg:w="143"/><text x="93.1361%" y="175.50"></text></g><g><title>breakout (725 samples, 0.66%)</title><rect x="92.8262%" y="181" width="0.6578%" height="15" fill="rgb(236,179,52)" fg:x="102314" fg:w="725"/><text x="93.0762%" y="191.50"></text></g><g><title>[libc.so.6] (120 samples, 0.11%)</title><rect x="93.4840%" y="181" width="0.1089%" height="15" fill="rgb(213,23,39)" fg:x="103039" fg:w="120"/><text x="93.7340%" y="191.50"></text></g><g><title>nauty (55,942 samples, 50.75%)</title><rect x="48.9852%" y="197" width="50.7544%" height="15" fill="rgb(238,48,10)" fg:x="53992" fg:w="55942"/><text x="49.2352%" y="207.50">nauty</text></g><g><title>all (110,221 samples, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(251,196,23)" fg:x="0" fg:w="110221"/><text x="0.2500%" y="239.50"></text></g><g><title>densenauty (56,229 samples, 51.01%)</title><rect x="48.9852%" y="213" width="51.0148%" height="15" fill="rgb(250,152,24)" fg:x="53992" fg:w="56229"/><text x="49.2352%" y="223.50">densenauty</text></g></svg></svg>