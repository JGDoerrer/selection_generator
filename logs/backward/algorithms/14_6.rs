/// n = 1, i = 0
fn select_25([a]: [usize; 1], _: bool) -> usize {
    a
}
/// n = 2, i = 0
fn select_24([a, b]: [usize; 2], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_25([a], is_dual)
    } else {
        select_25([b], is_dual)
    }
}
/// n = 3, i = 0
fn select_23([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_24([a, b], is_dual)
    } else {
        select_24([b, c], is_dual)
    }
}
/// n = 4, i = 1
fn select_26([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_24([a, d], is_dual)
    } else {
        select_24([b, c], is_dual)
    }
}
/// n = 7, i = 2
fn select_22([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_23([b, c, e], is_dual)
    } else {
        select_26([a, f, d, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_21([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_22([a, b, c, e, f, g, h], is_dual)
    } else {
        select_23([b, c, d], is_dual)
    }
}
/// n = 9, i = 2
fn select_20([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_21([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_22([a, b, h, e, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_19([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_20([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_20([c, b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 4, i = 0
fn select_30([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_23([a, b, c], is_dual)
    } else {
        select_23([b, c, d], is_dual)
    }
}
/// n = 7, i = 1
fn select_29([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([c, d, e, f], is_dual)
    } else {
        select_23([a, b, g], is_dual)
    }
}
/// n = 3, i = 1
fn select_33([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_24([a, b], is_dual)
    } else {
        select_25([c], is_dual)
    }
}
/// n = 6, i = 2
fn select_32([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_26([b, c, e, d], is_dual)
    } else {
        select_33([a, b, f], is_dual)
    }
}
/// n = 4, i = 1
fn select_34([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_23([a, b, c], is_dual)
    } else {
        select_25([d], is_dual)
    }
}
/// n = 9, i = 3
fn select_31([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([f, b, a, e, h, i], is_dual)
    } else {
        select_34([g, c, d, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_28([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_29([b, c, d, e, g, h, i], is_dual)
    } else {
        select_31([a, i, b, c, f, h, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_27([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_20([b, f, d, e, g, a, h, i, j], is_dual)
    } else {
        select_28([b, a, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_18([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_19([b, c, e, a, f, g, h, j, i], is_dual)
    } else {
        select_27([a, e, d, b, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 4, i = 1
fn select_39([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_26([a, c, b, d], is_dual)
    } else {
        select_26([b, c, a, d], is_dual)
    }
}
/// n = 7, i = 2
fn select_38([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_32([a, d, c, e, f, g], is_dual)
    } else {
        select_39([a, b, d, g], is_dual)
    }
}
/// n = 6, i = 1
fn select_40([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_30([b, c, d, e], is_dual)
    } else {
        select_24([a, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_37([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_38([a, b, c, h, f, g, i], is_dual)
    } else {
        select_40([c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_42([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([c, d, e, f], is_dual)
    } else {
        select_39([a, b, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_41([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_42([e, f, c, d, g, i, h, j], is_dual)
    } else {
        select_42([e, f, a, b, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_36([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_37([a, b, g, e, f, c, h, i, j], is_dual)
    } else {
        select_41([c, d, e, f, a, b, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_43([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_37([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_37([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_35([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_36([c, d, b, a, e, f, g, h, i, j], is_dual)
    } else {
        select_43([c, d, e, f, b, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_17([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_18([c, d, e, f, b, g, h, a, i, j, k], is_dual)
    } else {
        select_35([f, c, a, b, d, e, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_48([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_22([b, c, d, e, g, f, h], is_dual)
    } else {
        select_39([a, h, b, e], is_dual)
    }
}
/// n = 9, i = 2
fn select_47([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_48([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_48([a, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_46([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_47([a, d, b, f, g, e, i, j, h], is_dual)
    } else {
        select_47([a, d, c, e, g, f, h, j, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_52([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_23([b, c, d], is_dual)
    } else {
        select_33([a, e, f], is_dual)
    }
}
/// n = 6, i = 2
fn select_51([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_52([a, c, d, b, e, f], is_dual)
    } else {
        select_52([b, c, d, a, e, f], is_dual)
    }
}
/// n = 6, i = 1
fn select_54([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_23([c, d, e], is_dual)
    } else {
        select_23([a, b, f], is_dual)
    }
}
/// n = 5, i = 1
fn select_55([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_23([b, c, d], is_dual)
    } else {
        select_24([a, e], is_dual)
    }
}
/// n = 6, i = 1
fn select_53([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_54([a, b, c, d, e, f], is_dual)
    } else {
        select_55([e, c, d, a, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_50([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_51([a, e, b, d, g, h], is_dual)
    } else {
        select_53([b, c, a, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_49([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_50([g, d, a, b, e, f, h, i], is_dual)
    } else {
        select_50([f, d, a, c, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_45([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_46([a, c, d, b, f, g, e, h, i, j], is_dual)
    } else {
        select_49([b, f, g, a, e, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_44([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_45([b, d, c, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_18([b, a, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_16([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_17([a, d, c, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_44([a, c, d, f, e, g, h, i, b, j, k, l], is_dual)
    }
}
/// n = 5, i = 2
fn select_62([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_26([a, b, c, d], is_dual)
    } else {
        select_33([d, a, e], is_dual)
    }
}
/// n = 5, i = 2
fn select_61([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_62([b, c, a, d, e], is_dual)
    } else {
        select_26([a, c, b, d], is_dual)
    }
}
/// n = 5, i = 0
fn select_63([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_30([a, b, c, d], is_dual)
    } else {
        select_30([a, b, c, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_60([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_61([a, b, h, i, j], is_dual)
    } else {
        select_63([c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_65([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([b, c, d, f], is_dual)
    } else {
        select_62([a, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_64([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_65([a, b, c, d, f, g, h, i, j], is_dual)
    } else {
        select_65([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_59([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_60([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_64([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 3, i = 1
fn select_69([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_33([a, b, c], is_dual)
    } else {
        select_33([a, c, b], is_dual)
    }
}
/// n = 5, i = 2
fn select_68([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_69([a, d, e], is_dual)
    } else {
        select_26([a, b, c, d], is_dual)
    }
}
/// n = 6, i = 2
fn select_67([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_68([b, e, d, a, f], is_dual)
    } else {
        select_52([b, a, c, d, e, f], is_dual)
    }
}
/// n = 6, i = 2
fn select_71([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_32([a, d, b, c, e, f], is_dual)
    } else {
        select_32([a, d, c, b, e, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_70([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_71([d, a, f, g, b, e], !is_dual)
    } else {
        select_52([b, a, c, d, e, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_66([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_67([a, b, c, d, e, f], is_dual)
    } else {
        select_70([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_58([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_59([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_66([a, c, h, g, i, b, j], is_dual)
    }
}
/// n = 5, i = 1
fn select_75([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_30([a, b, c, d], is_dual)
    } else {
        select_25([e], is_dual)
    }
}
/// n = 7, i = 2
fn select_74([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_51([a, b, c, d, f, g], is_dual)
    } else {
        select_75([b, c, d, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_77([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([e, a, c, f, d, g], is_dual)
    } else {
        select_32([d, b, c, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_76([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_77([a, b, c, d, e, f, g], is_dual)
    } else {
        select_75([e, a, h, i, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_73([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_74([b, f, c, d, e, g, h], is_dual)
    } else {
        select_76([f, i, j, a, b, h, g, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_72([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_73([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_73([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_57([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_58([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_72([a, g, b, c, e, f, j, k, h, l], is_dual)
    }
}
/// n = 5, i = 2
fn select_83([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_26([a, b, c, d], is_dual)
    } else {
        select_33([a, d, e], is_dual)
    }
}
/// n = 5, i = 2
fn select_82([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_83([a, c, b, d, e], is_dual)
    } else {
        select_83([b, c, a, d, e], is_dual)
    }
}
/// n = 6, i = 2
fn select_81([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_82([a, b, e, c, f], is_dual)
    } else {
        select_51([a, b, c, d, e, f], is_dual)
    }
}
/// n = 6, i = 1
fn select_85([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_55([a, b, f, d, e], is_dual)
    } else {
        select_55([a, c, e, d, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_84([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_77([b, c, d, a, e, f, g], is_dual)
    } else {
        select_85([a, c, d, b, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_80([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_81([a, f, b, c, g, e], is_dual)
    } else {
        select_84([a, c, d, b, f, e, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_89([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_26([a, b, e, f], is_dual)
    } else {
        select_26([a, c, d, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_88([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_89([d, f, g, a, e, b], !is_dual)
    } else {
        select_62([e, f, d, b, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_87([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_88([a, b, c, d, f, g, e], is_dual)
    } else {
        select_88([a, c, b, d, e, g, f], is_dual)
    }
}
/// n = 5, i = 2
fn select_91([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_39([a, b, c, e], is_dual)
    } else {
        select_39([a, c, b, d], is_dual)
    }
}
/// n = 6, i = 2
fn select_90([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_91([f, a, b, d, e], is_dual)
    } else {
        select_91([e, a, c, d, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_86([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_87([b, c, d, a, e, f, g], is_dual)
    } else {
        select_90([a, c, d, b, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_79([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_80([b, c, a, d, e, f, g], is_dual)
    } else {
        select_86([f, b, c, g, e, a, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_95([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([a, c, b, e, f, g], is_dual)
    } else {
        select_34([a, c, d, g], is_dual)
    }
}
/// n = 7, i = 1
fn select_96([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_54([a, f, c, d, e, g], is_dual)
    } else {
        select_54([b, e, c, d, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_94([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_95([a, d, b, c, f, h, i], is_dual)
    } else {
        select_96([d, e, b, c, f, g, h], is_dual)
    }
}
/// n = 6, i = 2
fn select_99([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_26([a, d, c, f], is_dual)
    } else {
        select_26([b, c, d, e], is_dual)
    }
}
/// n = 6, i = 2
fn select_98([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_99([a, b, c, e, d, f], is_dual)
    } else {
        select_99([a, b, d, e, c, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_100([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_52([a, c, d, e, f, h], is_dual)
    } else {
        select_34([b, c, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_97([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_98([e, h, a, f, g, b], !is_dual)
    } else {
        select_100([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_93([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_94([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_97([h, j, f, k, a, b, i, g], !is_dual)
    }
}
/// n = 7, i = 3
fn select_103([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_32([f, g, e, c, d, a], !is_dual)
    } else {
        select_33([e, b, d], is_dual)
    }
}
/// n = 7, i = 3
fn select_102([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_98([d, g, a, e, f, b], !is_dual)
    } else {
        select_103([e, g, d, f, a, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_101([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_94([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_102([h, j, f, b, a, i, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_92([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_93([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_101([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_78([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_79([a, j, k, h, d, b, c, i], !is_dual)
    } else {
        select_92([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_56([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_57([a, b, c, d, e, f, g, h, i, j, k, m], is_dual)
    } else {
        select_78([a, b, i, g, l, m, k, h, j, c, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_15([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_16([a, b, e, c, d, f, h, g, i, j, k, l], is_dual)
    } else {
        select_56([a, b, l, g, m, n, c, j, h, k, i, e, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_14([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_15([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_15([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_111([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_52([a, b, c, d, f, g], is_dual)
    } else {
        select_39([a, e, g, f], !is_dual)
    }
}
/// n = 7, i = 3
fn select_110([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_111([a, c, d, b, e, f, g], is_dual)
    } else {
        select_111([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_109([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_110([a, d, g, i, e, f, c], !is_dual)
    } else {
        select_70([a, b, f, d, g, h, e], is_dual)
    }
}
/// n = 7, i = 2
fn select_113([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_71([b, a, e, d, g, f], is_dual)
    } else {
        select_32([b, c, a, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_112([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_50([a, b, d, g, e, f, i, j], is_dual)
    } else {
        select_113([c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_108([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_109([f, e, j, a, h, i, g, c, b], !is_dual)
    } else {
        select_112([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_117([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_30([b, c, d, e], is_dual)
    } else {
        select_34([a, g, h, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_118([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_55([b, c, d, e, f], is_dual)
    } else {
        select_34([a, g, h, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_116([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_117([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_118([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_115([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_116([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_40([f, c, d, e, b, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_120([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_71([b, a, c, d, e, f], is_dual)
    } else {
        select_83([b, c, e, f, a], is_dual)
    }
}
/// n = 6, i = 2
fn select_122([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_32([a, b, c, e, d, f], is_dual)
    } else {
        select_26([c, d, e, b], is_dual)
    }
}
/// n = 7, i = 3
fn select_121([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_111([d, e, g, a, b, f, c], !is_dual)
    } else {
        select_122([a, c, b, d, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_119([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_120([e, b, c, d, f, g], is_dual)
    } else {
        select_121([a, b, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_114([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_119([a, c, b, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_107([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_108([b, c, d, h, f, a, g, i, j, k], is_dual)
    } else {
        select_114([b, d, c, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_106([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_107([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_107([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_129([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_26([a, c, d, g], is_dual)
    } else {
        select_26([b, c, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_128([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_32([a, g, c, f, d, i], is_dual)
    } else {
        select_129([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_130([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_62([b, f, d, a, h], is_dual)
    } else {
        select_129([b, c, a, d, e, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_127([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_128([a, c, b, d, f, e, h, g, i], is_dual)
    } else {
        select_130([a, e, c, g, f, h, d, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_126([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_76([a, f, b, d, h, e, i, g, j], is_dual)
    } else {
        select_127([a, c, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_125([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_126([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_126([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_134([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_52([a, c, d, e, f, g], is_dual)
    } else {
        select_39([a, b, h, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_135([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_52([a, b, c, f, i, j], is_dual)
    } else {
        select_54([b, c, d, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_133([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_134([a, g, d, e, f, h, i, j], is_dual)
    } else {
        select_135([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_136([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_82([a, g, f, h, i], is_dual)
    } else {
        select_96([a, d, b, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_132([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_133([a, c, d, b, e, f, h, g, i, j], is_dual)
    } else {
        select_136([a, c, d, g, f, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_131([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_132([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_132([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_124([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_125([a, b, k, l, g, j, c, h, i, d], !is_dual)
    } else {
        select_131([a, b, d, e, f, c, g, h, i, k], is_dual)
    }
}
/// n = 6, i = 2
fn select_141([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_62([e, f, a, b, c], !is_dual)
    } else {
        select_34([b, c, d, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_140([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_141([a, e, g, h, f, b], !is_dual)
    } else {
        select_40([b, a, c, d, e, f], is_dual)
    }
}
/// n = 7, i = 1
fn select_142([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_29([a, b, c, d, e, f, g], is_dual)
    } else {
        select_55([g, a, b, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_139([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_140([a, f, d, e, b, g, h, i], is_dual)
    } else {
        select_142([b, c, d, e, a, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_144([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_77([b, g, c, e, a, f, h], is_dual)
    } else {
        select_96([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_143([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_144([a, d, b, e, f, c, g, h], is_dual)
    } else {
        select_144([a, d, c, e, f, b, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_138([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_139([a, f, d, b, c, g, i, h, j], is_dual)
    } else {
        select_143([a, b, c, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_125([a, f, c, e, i, g, b, h, j, k], is_dual)
    } else {
        select_138([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_123([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_124([a, b, f, k, l, m, c, i, j, h, g, e], !is_dual)
    } else {
        select_137([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_105([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_106([a, b, g, e, d, f, h, i, j, k, l], is_dual)
    } else {
        select_123([a, b, c, d, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_104([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_105([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_105([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_13([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_14([a, b, c, d, h, f, g, e, i, j, k, l, m, n], is_dual)
    } else {
        select_104([a, b, c, d, h, f, e, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_153([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_32([f, c, g, e, d, a], !is_dual)
    } else {
        select_62([d, g, c, e, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_154([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([a, e, c, f, d, h], is_dual)
    } else {
        select_32([b, d, c, f, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_152([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_153([d, h, a, e, g, b, f], !is_dual)
    } else {
        select_154([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_151([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_152([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_152([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_156([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_153([b, a, e, c, f, d, g], is_dual)
    } else {
        select_153([b, a, e, d, f, c, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_157([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_154([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_154([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_155([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_156([h, e, b, c, a, g, f], !is_dual)
    } else {
        select_157([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_150([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_151([c, d, h, i, e, g, f, b], !is_dual)
    } else {
        select_155([h, c, d, i, e, f, g, a], !is_dual)
    }
}
/// n = 7, i = 2
fn select_160([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_141([a, b, c, d, f, g], is_dual)
    } else {
        select_141([a, b, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_161([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_95([a, c, d, e, f, g, h], is_dual)
    } else {
        select_53([b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_159([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_160([a, b, d, e, f, h, i], is_dual)
    } else {
        select_161([a, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_162([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_97([f, g, h, i, c, d, e, b], !is_dual)
    } else {
        select_153([e, a, g, c, h, f, d], is_dual)
    }
}
/// n = 12, i = 4
fn select_158([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_159([g, a, f, c, d, e, h, j, i], is_dual)
    } else {
        select_162([b, a, g, f, i, j, k, l, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_149([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_150([i, c, j, k, f, a, g, h, l], is_dual)
    } else {
        select_158([b, c, a, d, e, f, g, h, i, l, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_167([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([b, a, c, d, e, f, g], is_dual)
    } else {
        select_39([a, e, c, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_166([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_167([g, i, f, h, a, d, b, e], !is_dual)
    } else {
        select_61([a, f, c, g, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_168([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_167([b, a, c, d, e, f, h, g], is_dual)
    } else {
        select_69([a, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_165([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_166([a, b, c, e, d, f, i, g, h], is_dual)
    } else {
        select_168([b, a, c, e, f, g, i, d, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_170([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_88([e, f, g, a, d, c, b], !is_dual)
    } else {
        select_122([e, f, d, a, g, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_171([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_71([a, c, d, e, g, f], is_dual)
    } else {
        select_61([a, b, f, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_169([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_170([g, h, j, b, a, d, e], !is_dual)
    } else {
        select_171([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_164([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_165([j, l, g, a, k, b, h, c, d], !is_dual)
    } else {
        select_169([c, b, a, e, f, g, i, k, l, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_174([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_141([a, d, f, g, e, b], !is_dual)
    } else {
        select_55([b, a, c, d, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_173([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_160([a, b, d, e, g, j, h], is_dual)
    } else {
        select_174([a, h, c, i, f, g, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_176([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_71([a, c, d, f, e, h], is_dual)
    } else {
        select_71([b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_175([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_176([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_176([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_172([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_173([a, b, e, c, d, f, g, i, j, k, h], is_dual)
    } else {
        select_175([a, g, b, c, d, h, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_163([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_164([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_172([b, d, e, f, a, g, c, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_148([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_149([b, c, a, d, e, g, f, h, j, k, l, i], is_dual)
    } else {
        select_163([h, k, l, f, m, n, g, a, i, b, j, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_147([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_148([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_148([b, c, d, e, f, h, a, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_146([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_147([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_147([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_145([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_146([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_146([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_12([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_13([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_145([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 6, i = 2
fn select_186([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_32([a, b, c, e, d, f], is_dual)
    } else {
        select_83([d, c, a, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_185([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_77([a, b, c, d, e, f, h], is_dual)
    } else {
        select_186([e, h, i, a, g, f], !is_dual)
    }
}
/// n = 7, i = 3
fn select_188([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([a, c, b, d, e, f], is_dual)
    } else {
        select_52([e, d, g, a, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_187([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_77([b, c, d, e, g, f, h], is_dual)
    } else {
        select_188([a, b, c, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_184([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_185([f, b, d, a, e, g, h, i, j], is_dual)
    } else {
        select_187([a, b, c, d, e, g, f, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_183([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_184([a, j, g, k, b, h, i, e, f, c], !is_dual)
    } else {
        select_184([a, j, h, k, b, g, i, f, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_182([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_183([f, b, c, e, i, g, a, h, j, k, l], is_dual)
    } else {
        select_138([b, a, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 6, i = 1
fn select_192([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_85([a, c, d, b, e, f], is_dual)
    } else {
        select_85([b, c, d, a, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_191([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_192([a, c, b, e, d, f], is_dual)
    } else {
        select_84([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_190([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_139([a, b, e, c, d, f, h, g, i], is_dual)
    } else {
        select_191([a, b, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_189([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_183([a, f, i, k, h, j, b, c, g, d, e], !is_dual)
    } else {
        select_190([a, f, b, i, k, j, c, h, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_181([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_182([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_189([a, f, i, k, l, b, j, c, g, h, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_198([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, e, b, d, g, h], is_dual)
    } else {
        select_24([c, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_197([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, e, d, c, f, g, h], is_dual)
    } else {
        select_198([a, b, d, g, f, e, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_199([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_77([a, b, c, d, e, f, h], is_dual)
    } else {
        select_61([e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_196([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_197([b, c, a, d, e, g, f, h, i], is_dual)
    } else {
        select_199([b, f, d, e, a, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_200([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_67([a, c, d, f, g, h], is_dual)
    } else {
        select_157([a, f, b, d, e, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_195([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_196([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_200([b, d, a, e, f, c, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_203([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([e, a, b, f, g, d, h, i], is_dual)
    } else {
        select_167([d, a, c, f, g, e, h, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_205([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_62([a, b, d, e, f], is_dual)
    } else {
        select_62([a, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_204([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_38([a, b, c, f, e, g, h], is_dual)
    } else {
        select_205([c, d, g, e, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_202([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_203([b, c, d, f, g, e, a, i, h], is_dual)
    } else {
        select_204([a, b, c, d, f, g, e, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_201([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_202([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_202([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_194([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_195([a, b, c, f, d, i, g, j, h, k], is_dual)
    } else {
        select_201([a, b, c, e, g, f, h, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_208([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_140([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_53([a, b, d, e, c, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_207([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_208([a, g, b, c, d, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_212([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([g, h, i, d, a, b], !is_dual)
    } else {
        select_83([a, c, f, e, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_213([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_52([a, b, c, d, f, g], is_dual)
    } else {
        select_39([b, d, c, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_211([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_212([a, b, c, e, f, d, g, i, h], is_dual)
    } else {
        select_213([e, g, i, d, b, f, c], !is_dual)
    }
}
/// n = 6, i = 2
fn select_215([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_62([d, f, e, a, b], !is_dual)
    } else {
        select_62([e, f, d, a, c], !is_dual)
    }
}
/// n = 7, i = 2
fn select_216([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([a, c, b, f, g, e], is_dual)
    } else {
        select_32([a, d, b, e, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_214([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_215([b, d, e, f, a, h], is_dual)
    } else {
        select_216([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_210([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_211([b, a, c, e, d, f, h, g, i], is_dual)
    } else {
        select_214([e, h, d, i, g, a, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_209([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_210([f, h, j, g, a, i, b, c, d], !is_dual)
    } else {
        select_210([g, h, j, f, a, i, b, c, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_206([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_207([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_209([f, a, i, j, k, b, g, c, h, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_193([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_194([a, b, c, e, d, f, g, i, h, k, j], is_dual)
    } else {
        select_206([a, i, k, l, h, b, f, j, c, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_180([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_181([a, c, d, b, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_193([a, c, d, e, f, b, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_179([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_180([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_180([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_222([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_110([a, f, e, h, b, g, c], !is_dual)
    } else {
        select_84([a, c, d, b, f, e, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_224([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_21([b, c, d, e, f, a, g, h], is_dual)
    } else {
        select_42([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_223([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_67([a, b, g, f, c, h], is_dual)
    } else {
        select_224([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_221([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_222([a, c, d, g, f, b, h, i], is_dual)
    } else {
        select_223([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_228([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_30([c, d, e, g], is_dual)
    } else {
        select_55([a, b, h, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_227([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_42([a, g, c, d, e, f, h, i], is_dual)
    } else {
        select_228([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_230([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([c, d, e, f], is_dual)
    } else {
        select_34([a, b, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_229([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_29([b, f, c, d, e, g, h], is_dual)
    } else {
        select_230([a, g, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_226([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_227([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_229([b, a, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_225([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_222([a, c, d, h, g, b, i, j], is_dual)
    } else {
        select_226([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_220([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_221([a, b, c, d, h, g, e, i, j], is_dual)
    } else {
        select_225([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_235([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_52([b, c, d, e, f, g], is_dual)
    } else {
        select_39([a, g, h, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_236([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_62([a, b, e, h, i], is_dual)
    } else {
        select_55([b, c, d, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_234([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_235([f, a, c, d, e, g, h, i], is_dual)
    } else {
        select_236([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_238([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_30([b, c, d, e], is_dual)
    } else {
        select_33([a, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_237([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_238([a, c, d, f, e, g, h], is_dual)
    } else {
        select_52([a, b, g, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_233([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_234([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_237([b, a, d, e, f, c, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_240([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_111([a, b, g, e, h, f, i], is_dual)
    } else {
        select_117([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_241([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_111([a, b, f, d, h, e, g], is_dual)
    } else {
        select_111([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_239([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_240([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_241([a, c, g, e, f, b, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_232([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_233([f, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_239([f, i, k, l, a, g, j, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_231([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_232([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_232([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_219([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_220([a, b, d, e, f, c, h, g, i, j], is_dual)
    } else {
        select_231([a, b, d, c, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_246([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_205([f, h, i, a, b, c], !is_dual)
    } else {
        select_53([b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_247([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_111([e, g, h, a, b, f, c], !is_dual)
    } else {
        select_111([e, g, h, a, b, f, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_245([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_246([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_247([f, b, d, e, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_244([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, c, d, b, g, h], is_dual)
    } else {
        select_245([a, b, e, c, d, f, h, g, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_250([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_68([a, f, e, b, c], !is_dual)
    } else {
        select_71([a, b, c, d, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_249([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_120([a, b, c, e, f, g], is_dual)
    } else {
        select_250([a, c, d, e, f, g], is_dual)
    }
}
/// n = 5, i = 1
fn select_252([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_55([a, c, d, b, e], is_dual)
    } else {
        select_55([b, c, d, a, e], is_dual)
    }
}
/// n = 6, i = 1
fn select_251([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_75([a, c, d, e, f], is_dual)
    } else {
        select_252([a, b, c, e, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_248([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_249([a, d, b, c, h, i, g], is_dual)
    } else {
        select_251([a, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_243([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_244([a, c, d, e, g, b, i, h, j], is_dual)
    } else {
        select_248([a, d, e, c, b, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_255([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_84([f, a, b, g, e, i, h], is_dual)
    } else {
        select_144([e, c, a, d, f, h, g, i], is_dual)
    }
}
/// n = 7, i = 1
fn select_257([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_85([a, b, g, e, f, d], is_dual)
    } else {
        select_96([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_256([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_257([a, c, d, e, h, f, g], is_dual)
    } else {
        select_53([a, b, f, g, e, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_254([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_255([b, d, c, e, f, a, g, h, i], is_dual)
    } else {
        select_256([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 7, i = 1
fn select_259([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_96([a, c, d, e, b, f, g], is_dual)
    } else {
        select_96([b, c, d, e, a, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_258([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_259([a, c, e, b, f, g, h], is_dual)
    } else {
        select_259([a, b, d, c, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_253([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_254([a, c, e, d, f, b, g, h, i], is_dual)
    } else {
        select_258([a, c, e, b, f, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_242([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_243([a, b, c, e, f, d, h, i, g, j], is_dual)
    } else {
        select_253([a, b, e, f, d, c, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_218([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_219([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_242([a, b, e, c, f, g, h, d, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_266([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, e, b, d, g, f], is_dual)
    } else {
        select_34([a, c, f, e], is_dual)
    }
}
/// n = 8, i = 2
fn select_265([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_122([a, b, d, g, f, h], is_dual)
    } else {
        select_266([a, d, c, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_264([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_265([a, b, f, d, h, g, e, i], is_dual)
    } else {
        select_47([b, d, a, c, g, e, f, i, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_263([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_264([a, d, b, e, f, c, g, h, i], is_dual)
    } else {
        select_264([a, d, c, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_262([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_263([c, a, b, d, e, f, h, i, g], is_dual)
    } else {
        select_263([c, a, b, e, d, f, g, i, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_270([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_40([f, c, d, e, b, g], is_dual)
    } else {
        select_230([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_269([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_270([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_122([a, b, g, f, c, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_272([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_111([a, b, c, e, f, g, h], is_dual)
    } else {
        select_111([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_271([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_272([f, i, j, k, a, b, g, c], !is_dual)
    } else {
        select_259([b, f, c, d, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_268([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_269([a, c, d, b, g, f, i, h], is_dual)
    } else {
        select_271([a, b, e, c, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_267([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_263([a, d, e, c, b, f, g, i, h], is_dual)
    } else {
        select_268([a, b, d, e, c, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_261([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_262([e, f, a, b, d, c, g, h, i], is_dual)
    } else {
        select_267([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_260([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_261([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_261([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_217([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_218([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_260([a, b, c, e, d, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_178([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_179([a, b, c, e, f, g, h, i, d, j, k, l], is_dual)
    } else {
        select_217([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_280([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_117([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_117([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_279([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_257([a, c, d, b, e, f, g], is_dual)
    } else {
        select_280([a, f, i, j, k, h, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_278([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_279([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_279([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_282([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_257([a, d, e, b, c, f, g], is_dual)
    } else {
        select_144([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_281([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_282([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_282([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_277([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_278([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_281([a, b, i, j, k, f, c, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_285([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_110([a, f, e, i, b, h, g], !is_dual)
    } else {
        select_144([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_284([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_285([a, c, d, e, b, f, g, h, j], is_dual)
    } else {
        select_285([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_289([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_32([a, b, c, d, e, f], is_dual)
    } else {
        select_33([a, f, b], is_dual)
    }
}
/// n = 8, i = 3
fn select_288([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_100([b, a, c, d, e, f, h, g], is_dual)
    } else {
        select_289([a, g, h, e, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_287([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_67([a, b, f, e, c, g], is_dual)
    } else {
        select_288([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_292([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([a, c, b, d, e, g], is_dual)
    } else {
        select_69([b, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_291([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_292([a, b, g, f, e, h, i], is_dual)
    } else {
        select_238([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_294([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_32([a, c, d, f, e, h], is_dual)
    } else {
        select_32([b, d, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_293([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_294([a, b, h, c, f, g, i, j], is_dual)
    } else {
        select_230([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_290([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_291([g, b, d, e, a, f, h, i, j], is_dual)
    } else {
        select_293([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_286([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_287([a, c, b, h, g, i, f, j], is_dual)
    } else {
        select_290([a, c, b, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_283([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_284([a, g, i, f, l, b, k, j, c, h], !is_dual)
    } else {
        select_286([a, c, b, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_276([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_277([a, g, f, j, l, b, k, i, d, e, h], !is_dual)
    } else {
        select_283([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_276([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_276([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_300([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_77([c, d, a, e, f, b, g], is_dual)
    } else {
        select_77([c, d, b, e, f, a, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_299([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_74([e, f, a, h, i, g, b], !is_dual)
    } else {
        select_300([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_299([g, i, f, j, a, b, h, c, d], !is_dual)
    } else {
        select_143([b, c, d, e, a, g, f, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_304([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_32([d, f, g, e, a, b], !is_dual)
    } else {
        select_32([d, f, g, e, a, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_303([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_71([a, b, e, d, g, f], is_dual)
    } else {
        select_304([g, e, h, a, f, c, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_302([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_303([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_186([a, d, f, e, c, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_301([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_222([b, c, d, a, f, e, g, h], is_dual)
    } else {
        select_302([f, e, h, i, b, a, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_297([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_298([a, b, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_301([f, j, k, h, a, b, g, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_296([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_297([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_297([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_309([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_77([a, b, c, d, e, f, g], is_dual)
    } else {
        select_51([d, e, f, h, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_308([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_84([e, h, i, d, f, a, g], !is_dual)
    } else {
        select_309([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_307([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_308([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_308([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_311([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_95([a, d, b, c, e, f, g], is_dual)
    } else {
        select_83([f, d, a, e, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_313([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_69([a, e, f], is_dual)
    } else {
        select_55([a, b, c, d, e], is_dual)
    }
}
/// n = 7, i = 2
fn select_314([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_54([a, b, c, d, e, f], is_dual)
    } else {
        select_39([a, f, b, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_312([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_313([e, c, d, a, f, g], is_dual)
    } else {
        select_314([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_310([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_311([a, d, e, b, c, f, g], is_dual)
    } else {
        select_312([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_306([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_307([a, b, i, j, c, g, h, d, e], !is_dual)
    } else {
        select_310([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_316([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_51([a, b, c, f, e, g], is_dual)
    } else {
        select_51([a, b, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_315([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_139([a, b, f, d, e, g, h, i, j], is_dual)
    } else {
        select_316([a, b, c, h, f, i, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_305([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_306([a, b, i, k, g, l, f, j, h, c], !is_dual)
    } else {
        select_315([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_295([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_296([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_305([a, b, d, e, f, g, h, i, j, k, c, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_275([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_295([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_321([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_290([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_222([a, j, k, f, g, b, i, h], !is_dual)
    }
}
/// n = 7, i = 2
fn select_325([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_32([a, f, b, e, d, g], is_dual)
    } else {
        select_55([b, c, d, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_324([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_122([a, b, f, d, g, e], is_dual)
    } else {
        select_325([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_326([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_111([d, e, h, a, b, g, f], !is_dual)
    } else {
        select_325([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_323([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_324([a, b, d, c, e, f, g], is_dual)
    } else {
        select_326([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_327([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_280([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_110([a, b, c, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_322([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_323([a, f, i, k, b, j, g, c], !is_dual)
    } else {
        select_327([a, f, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_320([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_321([a, b, d, e, f, g, c, h, j, i, k], is_dual)
    } else {
        select_322([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_331([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_51([a, b, c, e, g, h], is_dual)
    } else {
        select_53([a, d, b, c, e, f], is_dual)
    }
}
/// n = 7, i = 1
fn select_332([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_29([a, b, c, d, e, f, g], is_dual)
    } else {
        select_40([f, c, d, e, a, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_330([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_331([a, b, h, c, g, f, i, j], is_dual)
    } else {
        select_332([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_329([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_330([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_330([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_328([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_298([b, c, d, e, h, g, a, i, j, k], is_dual)
    } else {
        select_329([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_319([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_320([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_328([a, b, c, e, f, d, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_333([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_321([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_323([a, f, j, k, b, g, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_318([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_319([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_333([a, c, d, e, f, g, h, i, j, b, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_340([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_22([a, b, c, d, e, f, g], is_dual)
    } else {
        select_22([a, b, c, e, d, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_339([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_153([a, b, i, f, e, j, h], is_dual)
    } else {
        select_340([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_342([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_22([a, c, d, e, g, f, i], is_dual)
    } else {
        select_39([a, h, b, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_341([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_342([f, a, c, d, e, g, h, j, i], is_dual)
    } else {
        select_342([e, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_338([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_339([c, a, d, e, f, b, g, h, j, i], is_dual)
    } else {
        select_341([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_345([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_89([b, c, d, e, f, g], is_dual)
    } else {
        select_99([a, c, d, e, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_344([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_98([d, c, a, f, e, h], is_dual)
    } else {
        select_345([c, a, b, e, d, g, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_343([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_67([a, d, c, f, g, e], is_dual)
    } else {
        select_344([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_337([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_338([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_343([b, g, c, i, f, a, j, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_348([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_29([b, c, a, d, e, f, g], is_dual)
    } else {
        select_205([g, b, c, a, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_347([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_348([a, c, f, d, e, h, g, i], is_dual)
    } else {
        select_61([a, b, i, j, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_350([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_188([b, g, c, a, f, h, i], is_dual)
    } else {
        select_230([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_349([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_70([a, j, k, b, f, c, i], !is_dual)
    } else {
        select_350([a, b, f, d, e, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_346([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_347([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_349([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_336([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_337([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_346([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_355([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_52([e, c, d, h, g, j], is_dual)
    } else {
        select_52([e, a, b, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_354([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_111([i, f, k, a, b, j, c], !is_dual)
    } else {
        select_355([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_356([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_111([a, b, c, d, f, e, g], is_dual)
    } else {
        select_52([d, f, g, a, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_354([b, c, a, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_356([b, c, h, j, a, k, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_359([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_52([a, c, d, e, f, h], is_dual)
    } else {
        select_52([b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_358([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_111([a, c, e, f, h, d, i], is_dual)
    } else {
        select_359([f, g, h, i, a, e, b, d], !is_dual)
    }
}
/// n = 7, i = 3
fn select_361([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_32([e, d, g, f, a, b], !is_dual)
    } else {
        select_62([b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_360([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_361([a, b, g, f, h, e, i], is_dual)
    } else {
        select_238([a, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_357([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_358([a, g, b, e, i, j, h, k, f], is_dual)
    } else {
        select_360([a, e, c, d, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_352([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_353([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_357([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_364([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_186([h, f, i, a, e, b], !is_dual)
    } else {
        select_340([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_365([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_188([a, b, e, f, h, d, i], is_dual)
    } else {
        select_188([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_363([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_364([a, e, c, d, f, h, g, j, i], is_dual)
    } else {
        select_365([a, b, g, e, i, j, h, k, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_368([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([h, e, j, i, a, b], !is_dual)
    } else {
        select_34([g, c, d, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_367([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_313([a, b, h, j, e, k], is_dual)
    } else {
        select_368([a, e, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_235([e, f, c, d, i, g, j, h], is_dual)
    } else {
        select_88([a, h, b, j, e, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_366([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_367([c, b, d, e, a, g, f, h, i, j, k], is_dual)
    } else {
        select_369([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_362([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_363([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_366([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_351([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_352([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_362([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_335([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_336([a, d, b, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_351([a, d, c, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_375([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([a, f, b, e, h, i], is_dual)
    } else {
        select_23([c, d, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_374([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_375([b, a, c, d, e, g, f, h, i], is_dual)
    } else {
        select_235([a, f, c, d, e, g, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_376([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_98([d, c, a, f, e, g], is_dual)
    } else {
        select_167([b, c, a, e, g, d, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_373([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_374([a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_376([i, j, k, f, g, a, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_379([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_22([a, c, d, e, h, g, j], is_dual)
    } else {
        select_22([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_378([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_235([a, g, c, d, e, h, j, k], is_dual)
    } else {
        select_379([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_381([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([d, b, c, e, f, h], is_dual)
    } else {
        select_129([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_382([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([a, c, b, d, e, f], is_dual)
    } else {
        select_83([a, b, e, f, d], is_dual)
    }
}
/// n = 9, i = 4
fn select_380([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_381([i, h, f, g, d, b, a, e], !is_dual)
    } else {
        select_382([b, d, c, f, g, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_377([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_378([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_380([j, k, g, e, i, a, f, h, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_372([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_373([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_377([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_385([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_38([a, g, h, i, e, f, b], !is_dual)
    } else {
        select_100([b, a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_386([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_71([a, d, f, g, e, b], !is_dual)
    } else {
        select_382([a, b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_384([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_385([a, b, c, d, e, g, h, i, f], is_dual)
    } else {
        select_386([a, i, g, e, f, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_383([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_66([a, i, e, f, b, g, c], !is_dual)
    } else {
        select_384([a, i, h, g, f, c, e, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_371([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_372([a, c, b, d, e, g, f, h, j, k, i], is_dual)
    } else {
        select_383([a, c, b, h, g, i, j, k, f], is_dual)
    }
}
/// n = 7, i = 1
fn select_389([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_259([a, b, c, e, f, d, g], is_dual)
    } else {
        select_259([a, b, d, e, f, c, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_392([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, h, b, f, i, j], is_dual)
    } else {
        select_30([c, d, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_42([b, f, c, d, e, g, h, i], is_dual)
    } else {
        select_392([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_393([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_230([a, g, c, d, e, f, h, j], is_dual)
    } else {
        select_230([b, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_390([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_391([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_393([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_389([a, d, e, f, b, g, h], is_dual)
    } else {
        select_390([a, b, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_395([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_227([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_227([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_394([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_389([a, c, d, e, b, g, h], is_dual)
    } else {
        select_395([a, b, f, c, d, e, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_388([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_394([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_370([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_371([a, c, d, e, f, g, h, i, b, j, k], is_dual)
    } else {
        select_387([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_334([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_335([a, b, c, d, e, f, h, i, j, k, g], is_dual)
    } else {
        select_370([a, b, d, c, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_317([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_318([a, b, d, c, f, g, h, e, i, j, k], is_dual)
    } else {
        select_334([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_273([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_274([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_317([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_177([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_178([a, b, c, d, e, g, h, f, i, j, l, k], is_dual)
    } else {
        select_273([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_12([a, b, c, d, f, e, g, h, i, l, j, k, m, n], is_dual)
    } else {
        select_177([a, b, c, d, k, i, m, n, e, l, f, j], !is_dual)
    }
}
/// n = 8, i = 2
fn select_405([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_141([a, b, c, g, f, h], is_dual)
    } else {
        select_75([b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_404([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_405([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_259([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_406([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_74([a, f, b, c, e, h, i], is_dual)
    } else {
        select_259([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_403([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_404([b, c, d, e, a, f, h, g, i], is_dual)
    } else {
        select_406([b, c, d, g, e, a, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_408([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, i], is_dual)
    } else {
        select_70([a, h, i, b, f, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_407([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_222([a, i, j, f, c, b, h, g], !is_dual)
    } else {
        select_408([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_402([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_403([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_407([a, c, b, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_402([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_402([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_411([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_191([a, b, d, e, c, f, g], is_dual)
    } else {
        select_208([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_413([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_81([a, b, g, h, c, f], !is_dual)
    } else {
        select_280([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_412([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_151([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_413([a, b, g, e, i, h, c, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_410([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_411([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_412([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_415([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_299([a, i, f, j, b, g, h, c, d], !is_dual)
    } else {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_414([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_415([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_415([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_409([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_410([a, b, c, j, i, g, d, h, e], !is_dual)
    } else {
        select_414([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_400([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_401([a, b, c, d, f, g, h, j, i, k, l], is_dual)
    } else {
        select_409([a, b, c, d, e, i, k, h, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_419([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_257([b, c, d, a, e, f, g], is_dual)
    } else {
        select_51([a, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_418([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_419([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_419([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_422([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_51([a, e, d, g, f, b], !is_dual)
    } else {
        select_186([a, c, b, e, d, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_421([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_144([a, c, b, d, f, e, g, h], is_dual)
    } else {
        select_422([a, e, i, b, f, h, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_420([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_421([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_421([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_417([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_418([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_420([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_425([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_67([a, e, h, b, g, c], !is_dual)
    } else {
        select_81([a, e, c, d, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_424([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_425([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_323([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_423([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_424([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_424([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_416([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_417([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_423([a, b, c, e, g, h, d, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_399([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_400([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_416([a, b, c, d, e, i, k, l, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_398([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_399([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_399([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_434([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([b, d, c, e, g, f], is_dual)
    } else {
        select_62([d, h, a, b, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_433([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_434([a, b, c, e, f, i, h, j], is_dual)
    } else {
        select_325([b, c, d, h, f, g, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_436([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_22([a, b, f, d, g, e, h], is_dual)
    } else {
        select_22([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_436([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_130([a, b, d, e, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_432([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_433([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_435([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_431([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_432([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_432([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_430([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_221([a, b, c, d, h, f, i, g, j], is_dual)
    } else {
        select_431([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_440([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_77([a, b, c, d, e, f, g], is_dual)
    } else {
        select_34([e, a, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_440([g, f, j, b, a, i, h, c], !is_dual)
    } else {
        select_161([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_441([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_136([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_161([e, i, g, j, k, a, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_438([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_439([a, e, i, j, k, f, b, h, g, d], !is_dual)
    } else {
        select_441([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 5, i = 2
fn select_444([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_68([a, c, b, d, e], is_dual)
    } else {
        select_68([b, c, a, d, e], is_dual)
    }
}
/// n = 7, i = 2
fn select_445([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([b, f, e, a, g], is_dual)
    } else {
        select_238([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_443([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_444([a, b, f, g, h], is_dual)
    } else {
        select_445([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_442([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_419([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_443([a, b, c, g, e, h, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_437([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_438([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_442([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_429([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_430([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_437([a, b, c, d, h, g, i, j, k, f, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_451([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_52([b, c, d, g, f, i], is_dual)
    } else {
        select_99([i, j, e, h, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_450([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_451([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_134([a, e, c, d, f, g, h, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_453([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_89([a, b, e, f, d, g], is_dual)
    } else {
        select_55([b, c, d, f, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_452([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_453([b, a, c, d, f, e, g], is_dual)
    } else {
        select_186([d, e, c, a, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_449([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_450([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_452([f, e, j, a, h, i, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_448([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_449([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_449([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_447([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_448([a, b, c, d, h, f, i, g, j, k], is_dual)
    } else {
        select_431([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_455([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_110([a, b, e, h, c, g, f], !is_dual)
    } else {
        select_316([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_454([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_307([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_455([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_446([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_447([a, b, d, c, e, g, f, h, i, j, k], is_dual)
    } else {
        select_454([a, b, d, i, g, c, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_428([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_429([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_446([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_459([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_285([a, j, g, l, c, b, k, i, h], !is_dual)
    } else {
        select_390([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_460([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_425([a, b, c, g, e, h, f, i], is_dual)
    } else {
        select_419([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_458([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_459([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_460([a, g, b, l, c, i, k, j, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_463([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_74([a, b, c, d, f, h, i], is_dual)
    } else {
        select_259([a, c, e, b, d, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_462([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_419([a, b, c, e, g, h, f, i, j], is_dual)
    } else {
        select_463([a, b, c, d, f, i, g, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_461([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_459([a, h, b, k, l, m, c, j, i, f, g, e], !is_dual)
    } else {
        select_462([a, c, b, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_457([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_458([a, b, c, k, l, m, f, j, g, i, h, e], !is_dual)
    } else {
        select_461([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_468([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_71([c, a, b, g, h, f], is_dual)
    } else {
        select_75([c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_469([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_21([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_100([h, f, i, j, a, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_467([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_468([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_469([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_466([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_285([a, b, f, d, e, h, g, i, j], is_dual)
    } else {
        select_467([a, e, h, k, l, f, j, b, c, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_465([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_403([a, h, k, l, m, e, b, f, j, i], !is_dual)
    } else {
        select_466([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_464([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_465([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_465([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_456([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_457([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    } else {
        select_464([a, b, c, e, f, d, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_427([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_428([a, b, c, k, j, n, d, m, l, h, e, i], !is_dual)
    } else {
        select_456([a, b, c, j, k, n, d, m, l, i, f, g, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_474([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_249([a, c, b, d, e, f, g], is_dual)
    } else {
        select_70([a, c, d, f, g, b, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_477([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_51([a, b, c, d, e, f], is_dual)
    } else {
        select_34([b, f, g, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_476([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_110([a, b, c, f, g, e, h], is_dual)
    } else {
        select_477([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_475([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_476([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_476([a, b, d, e, c, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_473([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_474([a, b, d, c, e, g, f, h], is_dual)
    } else {
        select_475([a, b, c, g, i, h, f, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_478([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_80([a, b, d, e, c, f, g], is_dual)
    } else {
        select_222([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_472([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_473([a, b, f, h, c, g, e, i, j], is_dual)
    } else {
        select_478([a, b, g, e, d, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_484([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_22([d, b, c, e, g, f, h], is_dual)
    } else {
        select_39([h, i, a, d], is_dual)
    }
}
/// n = 9, i = 3
fn select_485([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_22([d, b, c, e, g, f, h], is_dual)
    } else {
        select_26([a, h, d, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_483([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_484([c, a, b, d, g, f, i, e, h], is_dual)
    } else {
        select_485([c, a, b, d, g, e, i, f, h], is_dual)
    }
}
/// n = 5, i = 1
fn select_487([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_55([b, a, c, d, e], is_dual)
    } else {
        select_26([b, e, d, a], is_dual)
    }
}
/// n = 8, i = 3
fn select_486([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_98([a, e, c, d, g, h], is_dual)
    } else {
        select_487([c, b, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_482([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_483([a, b, c, e, f, d, h, g, i], is_dual)
    } else {
        select_486([d, c, g, a, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_489([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([a, b, d, h, e, i, g], is_dual)
    } else {
        select_186([d, b, c, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_489([b, a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_156([b, g, d, e, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_481([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_482([a, b, d, c, f, g, e, h, i], is_dual)
    } else {
        select_488([a, c, d, e, b, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_491([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_51([a, g, i, j, h, f], !is_dual)
    } else {
        select_96([a, d, b, c, e, f, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_490([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_491([a, c, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_364([e, l, h, k, j, a, f, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_480([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_481([b, f, a, d, e, h, g, i, j, l], is_dual)
    } else {
        select_490([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_495([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_77([b, c, d, e, g, f, h], is_dual)
    } else {
        select_382([a, b, c, e, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_495([a, c, e, d, f, g, h, i], is_dual)
    } else {
        select_120([a, b, f, i, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_497([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_85([c, d, e, g, f, h], is_dual)
    } else {
        select_154([a, b, f, e, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_499([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_32([d, b, c, e, f, g], is_dual)
    } else {
        select_83([a, b, d, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_498([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_292([a, b, g, e, d, i, j], is_dual)
    } else {
        select_499([b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_497([b, a, c, d, f, g, e, h, i, k, j], is_dual)
    } else {
        select_498([e, b, d, a, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_493([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_494([b, a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_496([a, b, c, d, g, f, h, e, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_501([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_82([a, b, f, g, h], is_dual)
    } else {
        select_53([a, b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_500([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_501([e, b, c, d, f, g, h, i], is_dual)
    } else {
        select_324([e, i, j, a, h, f, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_492([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_493([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_500([a, b, c, h, e, g, i, j, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_479([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_480([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_492([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_471([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_472([a, g, f, l, b, c, j, k, i, h], !is_dual)
    } else {
        select_479([a, c, b, d, e, g, f, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_470([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_471([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_471([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_426([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_427([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_470([a, b, c, k, j, n, d, m, h, e, l, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_397([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_398([a, b, c, e, d, f, g, h, j, i, k, l], is_dual)
    } else {
        select_426([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_509([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_280([a, b, c, d, f, h, i, j], is_dual)
    } else {
        select_259([a, c, e, b, d, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_510([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_192([b, c, a, e, d, f], is_dual)
    } else {
        select_300([b, c, d, e, a, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_509([a, g, i, f, k, j, b, h, c, d], !is_dual)
    } else {
        select_510([a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_512([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_229([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_229([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_511([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_512([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_512([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_507([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_508([a, b, c, d, i, g, h, j, k, l, m], is_dual)
    } else {
        select_511([a, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_506([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_507([f, e, a, b, c, d, g, h, j, i, l, k, m], is_dual)
    } else {
        select_507([f, e, c, d, a, b, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 6, i = 1
fn select_516([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_53([a, b, d, e, c, f], is_dual)
    } else {
        select_53([a, c, d, e, b, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_515([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_259([c, d, e, a, b, f, g], is_dual)
    } else {
        select_516([a, b, f, c, d, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_514([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_515([b, c, d, e, g, a, h, i], is_dual)
    } else {
        select_43([b, c, d, e, a, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_519([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_29([c, d, a, e, f, g, h], is_dual)
    } else {
        select_53([a, b, e, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_520([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_216([a, g, b, c, f, i, h], is_dual)
    } else {
        select_230([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_518([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_519([b, a, e, f, d, c, g, h, i], is_dual)
    } else {
        select_520([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_521([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_140([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_84([a, h, f, j, b, i, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_517([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_518([a, c, d, g, e, f, i, h, j], is_dual)
    } else {
        select_521([a, b, h, e, f, g, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_513([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_514([f, a, b, c, d, g, j, h, i], is_dual)
    } else {
        select_517([f, e, a, b, c, d, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_505([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_506([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_513([a, b, c, d, g, f, e, i, j, h, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_527([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([a, e, c, d, g, f, i], is_dual)
    } else {
        select_186([d, f, b, h, e, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_529([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_22([a, b, c, d, e, f, g], is_dual)
    } else {
        select_52([d, b, c, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_528([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_529([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_236([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_526([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_527([h, a, b, i, e, f, g, k, l], is_dual)
    } else {
        select_528([e, f, c, d, g, j, h, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_379([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_289([a, h, b, f, e, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_532([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_484([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_484([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_530([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_531([a, e, c, d, g, f, h, i, j, k], is_dual)
    } else {
        select_532([a, b, c, d, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_525([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_526([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_530([a, b, d, e, c, g, f, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 1
fn select_536([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_30([d, e, f, g], is_dual)
    } else {
        select_30([a, b, c, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_536([b, c, g, d, e, f, h, i], is_dual)
    } else {
        select_230([a, h, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_227([b, h, d, e, f, g, a, i, j], is_dual)
    } else {
        select_535([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_533([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_389([a, c, d, e, g, h, j], is_dual)
    } else {
        select_534([a, b, f, c, d, e, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_524([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_525([a, c, f, d, e, g, h, i, b, j, k, l], is_dual)
    } else {
        select_533([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_394([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_337([a, c, f, d, e, g, h, i, b, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_524([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_537([a, b, c, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_541([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, h], is_dual)
    } else {
        select_51([a, b, c, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_542([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_312([a, f, c, d, b, g, h], is_dual)
    } else {
        select_348([a, c, d, b, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_540([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_541([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_542([a, b, c, h, d, g, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_539([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_540([a, c, d, b, e, g, f, h, i], is_dual)
    } else {
        select_448([a, g, f, k, l, b, j, c, i, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_545([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_144([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_422([f, e, i, a, b, h, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_547([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_294([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_153([e, h, a, g, f, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_546([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_116([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_547([a, b, c, h, g, i, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_544([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_545([g, i, f, l, b, a, k, j, h], !is_dual)
    } else {
        select_546([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_551([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_129([a, d, b, g, e, f, h], is_dual)
    } else {
        select_129([a, d, c, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_550([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_551([a, b, g, c, f, h, e, i], is_dual)
    } else {
        select_96([b, c, d, e, h, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_549([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_452([a, b, g, h, f, i, e, j], is_dual)
    } else {
        select_550([b, c, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_553([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_304([g, i, j, a, f, b, c], !is_dual)
    } else {
        select_96([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_552([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_136([a, c, f, d, e, g, h, i, j], is_dual)
    } else {
        select_553([e, k, h, l, m, f, a, j, b, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_548([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_549([g, f, l, m, a, i, k, b, j, h], !is_dual)
    } else {
        select_552([g, i, l, m, a, f, k, b, j, h, c, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_543([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_544([a, f, k, l, m, g, b, j, c, i, h, e], !is_dual)
    } else {
        select_548([f, g, k, l, m, a, b, j, c, i, h, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_538([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_539([a, b, i, l, m, g, c, k, j, h, e, f], !is_dual)
    } else {
        select_543([a, g, i, l, m, b, c, k, j, h, d, e, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_522([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_523([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_538([a, b, c, h, d, e, i, j, k, l, m, g, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_504([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_505([a, e, f, g, d, b, c, h, i, j, l, k, m], is_dual)
    } else {
        select_522([b, c, d, f, g, e, h, i, a, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_560([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_71([e, a, g, h, b, f], !is_dual)
    } else {
        select_238([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_559([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_81([a, e, c, d, f, g], is_dual)
    } else {
        select_560([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_562([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_39([b, c, e, g], is_dual)
    } else {
        select_34([a, d, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_561([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_167([c, b, d, e, a, f, h, g], is_dual)
    } else {
        select_562([c, a, b, d, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_558([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_559([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_561([a, e, h, i, b, g, f, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_565([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_51([b, e, c, d, f, g], is_dual)
    } else {
        select_487([g, e, h, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_564([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_565([f, a, i, j, b, h, c, g], !is_dual)
    } else {
        select_270([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_566([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_270([a, c, d, e, f, b, g, h], is_dual)
    } else {
        select_270([b, c, d, e, f, a, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_563([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_564([a, b, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_566([a, g, c, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_558([a, b, d, h, g, c, i, j, k], is_dual)
    } else {
        select_563([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_557([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_328([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_571([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_453([a, b, c, d, f, e, g], is_dual)
    } else {
        select_100([d, g, h, i, a, f, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_570([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_571([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_571([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_569([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_476([a, b, e, d, g, f, i, h], is_dual)
    } else {
        select_570([a, b, f, c, h, e, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_574([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_238([e, h, i, j, a, f, b], !is_dual)
    } else {
        select_53([e, b, c, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_573([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_574([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_574([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_572([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_143([a, b, c, e, g, f, h, i], is_dual)
    } else {
        select_573([a, f, d, b, c, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_568([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_569([a, f, e, c, g, i, h, b, j, k], is_dual)
    } else {
        select_572([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_576([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_109([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_109([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_578([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_140([a, g, j, k, f, i, b, c], !is_dual)
    } else {
        select_350([a, h, f, j, k, g, i, e, d], !is_dual)
    }
}
/// n = 7, i = 3
fn select_581([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_32([a, b, c, e, d, g], is_dual)
    } else {
        select_32([a, f, g, e, d, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_580([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_581([a, b, e, d, g, h, i], is_dual)
    } else {
        select_186([a, d, c, f, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_579([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_580([a, b, d, g, e, h, i, f, j], is_dual)
    } else {
        select_386([a, g, j, f, i, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_577([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_578([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_579([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_575([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_576([a, e, d, g, b, f, h, i, j], is_dual)
    } else {
        select_577([a, b, c, d, f, h, e, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_568([a, c, d, b, e, f, h, i, g, j, k], is_dual)
    } else {
        select_575([a, c, g, e, b, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_555([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_556([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_567([a, c, d, e, f, g, h, i, b, j, k, l], is_dual)
    }
}
/// n = 8, i = 1
fn select_586([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_96([a, b, c, h, e, f, g], is_dual)
    } else {
        select_96([a, b, d, g, e, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_585([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_280([a, f, j, k, l, i, g, h], !is_dual)
    } else {
        select_586([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_584([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_432([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_585([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_583([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_584([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_584([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_589([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_257([a, c, d, b, e, f, g], is_dual)
    } else {
        select_252([a, f, b, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_588([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_589([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_589([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_592([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_536([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_40([g, d, e, f, a, h], is_dual)
    }
}
/// n = 9, i = 1
fn select_591([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_592([a, b, h, d, e, f, g, i], is_dual)
    } else {
        select_592([a, c, g, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 1
fn select_594([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_29([a, h, d, e, f, g, i], is_dual)
    } else {
        select_536([b, c, g, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_595([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_230([g, a, c, d, e, f, h, i], is_dual)
    } else {
        select_230([f, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_593([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_594([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_595([b, h, d, e, f, g, a, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_591([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_593([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_587([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_588([a, b, d, i, e, c, h, j], is_dual)
    } else {
        select_590([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_582([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_583([a, b, h, m, n, c, k, l, d, j, e, i], !is_dual)
    } else {
        select_587([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_554([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_555([a, b, h, c, m, n, d, k, l, e, j, i], !is_dual)
    } else {
        select_582([a, b, d, e, c, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_503([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_504([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_554([a, b, c, d, e, f, g, h, j, k, i, m, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_603([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_581([a, b, c, e, h, g, i], is_dual)
    } else {
        select_186([a, c, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_602([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_580([a, b, d, g, f, e, h, i, j], is_dual)
    } else {
        select_603([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_601([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_602([a, c, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_476([a, e, f, d, b, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_606([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_77([b, c, d, a, e, f, h], is_dual)
    } else {
        select_77([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_605([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_110([a, d, c, e, h, f, g], is_dual)
    } else {
        select_606([d, g, i, h, a, e, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_604([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_226([b, d, c, a, e, f, g, h, i], is_dual)
    } else {
        select_605([a, j, k, b, g, i, c, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_600([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_601([a, b, k, l, c, g, j, i, d, h], !is_dual)
    } else {
        select_604([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_610([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_314([f, a, c, d, e, h, g], is_dual)
    } else {
        select_314([e, b, c, d, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_612([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_55([a, c, d, e, h], is_dual)
    } else {
        select_129([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_611([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_103([b, a, f, g, h, e, i], is_dual)
    } else {
        select_612([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_609([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_610([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_611([c, b, d, e, f, a, h, g, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_614([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_21([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_98([g, b, a, h, e, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_613([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_74([a, g, c, d, e, h, i], is_dual)
    } else {
        select_614([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_608([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_609([b, a, f, d, e, g, h, j, k], is_dual)
    } else {
        select_613([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_616([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_610([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_581([e, c, g, f, a, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_618([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_294([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_103([g, h, a, f, e, b, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_617([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_618([d, a, h, i, e, g, b, f], !is_dual)
    } else {
        select_452([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_615([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_616([a, c, d, b, e, g, f, h, i], is_dual)
    } else {
        select_617([e, h, j, a, b, i, g, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_607([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_608([b, a, e, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_615([a, i, k, l, b, j, g, h, f, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_599([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_600([a, f, b, g, d, e, h, i, j, l, k, n], is_dual)
    } else {
        select_607([a, f, h, m, n, l, j, k, b, g, c, i], !is_dual)
    }
}
/// n = 9, i = 4
fn select_624([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_52([g, h, i, a, d, b], !is_dual)
    } else {
        select_99([b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_623([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_68([h, d, a, b, f], !is_dual)
    } else {
        select_624([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_626([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([a, c, b, f, g, h], is_dual)
    } else {
        select_39([b, e, d, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_625([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_61([a, f, c, h, e], is_dual)
    } else {
        select_626([g, h, i, f, a, d, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_622([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_623([g, h, j, f, i, a, e, b, d], !is_dual)
    } else {
        select_625([h, j, g, i, e, a, f, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_628([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_111([a, c, e, d, h, f, i], is_dual)
    } else {
        select_235([d, g, h, i, a, e, b, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_629([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_71([a, c, e, d, g, f], is_dual)
    } else {
        select_213([g, h, e, a, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_627([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_628([h, i, j, a, e, g, b, f, c], !is_dual)
    } else {
        select_629([a, b, e, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_621([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_622([h, j, f, k, g, i, d, a, e, c], !is_dual)
    } else {
        select_627([h, j, g, k, f, i, d, e, a, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_632([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_61([f, b, g, a, h], is_dual)
    } else {
        select_314([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_631([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_628([g, h, j, a, e, i, c, b, f], !is_dual)
    } else {
        select_632([a, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_634([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_313([a, c, e, d, f, h], is_dual)
    } else {
        select_213([a, b, f, d, g, e, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_633([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_291([c, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_634([g, j, k, a, f, i, c, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_630([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_631([a, c, d, g, f, b, h, i, j, k], is_dual)
    } else {
        select_633([a, c, d, b, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_620([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_621([f, k, l, h, j, a, b, c, i, d, g], !is_dual)
    } else {
        select_630([b, c, a, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_638([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([h, e, a, f, g, b, c], !is_dual)
    } else {
        select_153([h, f, a, e, g, b, d], !is_dual)
    }
}
/// n = 7, i = 2
fn select_640([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_32([a, b, c, f, e, g], is_dual)
    } else {
        select_32([a, b, d, f, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_639([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_111([e, f, h, a, b, g, d], !is_dual)
    } else {
        select_640([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_637([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_638([a, b, c, f, i, h, e, g], is_dual)
    } else {
        select_639([a, b, e, d, g, i, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_642([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_381([b, a, c, d, e, g, f, h], is_dual)
    } else {
        select_26([b, f, d, a], is_dual)
    }
}
/// n = 8, i = 3
fn select_644([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([a, e, c, f, d, h], is_dual)
    } else {
        select_89([b, c, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_643([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_128([a, b, c, e, d, f, g, i, h], is_dual)
    } else {
        select_644([a, b, f, e, d, h, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_642([b, c, d, e, g, i, h, j], is_dual)
    } else {
        select_643([a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_636([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_637([a, b, g, c, h, f, e, i, j], is_dual)
    } else {
        select_641([a, b, c, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_647([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_213([e, h, i, a, g, f, b], !is_dual)
    } else {
        select_612([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_648([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_186([d, b, c, e, f, g], is_dual)
    } else {
        select_325([d, h, i, a, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_646([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_647([a, d, b, c, e, g, f, h, i], is_dual)
    } else {
        select_648([a, f, d, e, b, g, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_650([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_95([b, a, c, d, e, g, f], is_dual)
    } else {
        select_382([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_649([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_650([a, b, d, f, e, g, h, i], is_dual)
    } else {
        select_571([e, h, j, a, f, i, b, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_645([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_646([a, f, b, d, e, h, g, j, i, k], is_dual)
    } else {
        select_649([a, b, c, g, e, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_635([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_636([a, d, b, e, f, c, g, i, h, j], is_dual)
    } else {
        select_645([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_619([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_620([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_635([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_598([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_599([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    } else {
        select_619([a, f, b, h, l, n, m, j, k, g, i, c], !is_dual)
    }
}
/// n = 9, i = 2
fn select_656([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_53([f, a, d, e, h, g], is_dual)
    } else {
        select_53([a, g, b, c, i, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_655([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_560([f, g, d, e, a, h, i, j], is_dual)
    } else {
        select_656([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_657([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_81([a, h, i, f, e, b], !is_dual)
    } else {
        select_477([a, f, c, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_654([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_655([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_657([a, f, d, e, b, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_660([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_111([a, b, e, f, h, d, g], is_dual)
    } else {
        select_188([a, d, c, g, f, e, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_659([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_660([a, c, b, e, f, d, g, h], is_dual)
    } else {
        select_121([a, h, g, d, f, e, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_661([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_74([a, f, c, d, e, g, h], is_dual)
    } else {
        select_386([a, g, b, h, f, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_658([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_659([a, c, g, e, b, f, h, i], is_dual)
    } else {
        select_661([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_653([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_654([a, b, f, d, e, g, i, h, j, k], is_dual)
    } else {
        select_658([a, b, h, c, j, k, f, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_664([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, e, c, d, f, g, i], is_dual)
    } else {
        select_188([a, b, g, e, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_663([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, e, b, c, f, g, h], is_dual)
    } else {
        select_664([a, d, b, c, e, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_667([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_96([a, g, d, e, f, i, h], is_dual)
    } else {
        select_53([f, h, b, c, j, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_668([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_355([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_640([i, c, d, e, f, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_666([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_667([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_668([c, d, b, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_665([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_191([a, i, c, d, b, k, g], is_dual)
    } else {
        select_666([a, b, e, f, c, d, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_662([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_663([b, c, d, h, i, j, a, g, k], is_dual)
    } else {
        select_665([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_652([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_653([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_662([a, c, b, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_673([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_453([a, b, c, e, g, f, h], is_dual)
    } else {
        select_55([b, c, d, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_672([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_673([f, a, d, e, h, j, g, k], is_dual)
    } else {
        select_364([a, g, b, c, i, k, f, h, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_675([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_205([g, e, h, a, b, f], !is_dual)
    } else {
        select_75([a, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_674([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_565([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_675([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_671([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_672([a, b, c, d, e, f, g, h, j, k, i, m], is_dual)
    } else {
        select_674([j, i, b, c, a, f, h, m, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_677([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_100([a, f, c, d, e, g, h, i], is_dual)
    } else {
        select_103([h, i, e, f, a, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_676([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_76([f, h, k, e, d, i, g, b, c], !is_dual)
    } else {
        select_677([f, k, d, j, e, i, h, a, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_670([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_671([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_676([f, d, e, h, i, a, g, j, k, l, m], is_dual)
    }
}
/// n = 6, i = 1
fn select_680([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_192([a, b, c, e, d, f], is_dual)
    } else {
        select_192([a, b, d, e, c, f], is_dual)
    }
}
/// n = 10, i = 2
fn select_681([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_74([a, h, d, e, f, i, j], is_dual)
    } else {
        select_51([a, j, b, c, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_679([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_680([b, c, d, h, a, k], is_dual)
    } else {
        select_681([a, e, f, b, c, d, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_683([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_489([c, d, a, e, f, b, g, h, i], is_dual)
    } else {
        select_489([c, d, b, e, f, a, g, h, i], is_dual)
    }
}
/// n = 4, i = 1
fn select_685([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_39([a, b, c, d], is_dual)
    } else {
        select_39([a, b, d, c], is_dual)
    }
}
/// n = 5, i = 1
fn select_684([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_685([a, b, c, e], is_dual)
    } else {
        select_39([b, c, d, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_682([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_683([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_684([a, b, e, g, c], is_dual)
    }
}
/// n = 11, i = 3
fn select_678([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_679([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_682([b, c, d, g, h, i, a, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_669([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_670([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_678([a, b, c, d, e, f, h, j, k, g, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_651([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_652([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_669([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_597([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_598([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_651([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_691([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_67([i, f, j, a, g, b], !is_dual)
    } else {
        select_224([f, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_690([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_691([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_691([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_689([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_281([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_690([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_692([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_139([a, b, f, d, e, g, h, i, k], is_dual)
    } else {
        select_151([a, b, c, h, f, i, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_688([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_689([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_692([a, b, d, e, f, g, h, i, c, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_580([a, i, j, g, h, b, c, d, f], !is_dual)
    } else {
        select_350([a, b, d, c, e, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_695([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_425([a, c, d, b, h, g, f, i], is_dual)
    } else {
        select_696([a, c, b, e, d, f, h, g, j, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_700([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_62([a, d, g, f, c], is_dual)
    } else {
        select_62([b, c, g, e, d], is_dual)
    }
}
/// n = 9, i = 4
fn select_699([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([c, b, e, f, d, h], is_dual)
    } else {
        select_700([a, d, c, g, e, i, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_703([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_26([b, c, d, e], is_dual)
    } else {
        select_33([a, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_702([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_22([b, c, d, e, f, g, h], is_dual)
    } else {
        select_703([a, b, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_701([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_68([b, h, f, a, j], is_dual)
    } else {
        select_702([b, c, a, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_698([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_699([b, d, f, e, a, g, i, h, j], is_dual)
    } else {
        select_701([a, b, d, c, e, h, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_697([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_109([a, e, d, g, b, f, i, j, h], is_dual)
    } else {
        select_698([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_694([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_695([a, b, g, j, k, i, h, e, f, c], !is_dual)
    } else {
        select_697([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_705([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_139([a, b, e, d, f, g, h, i, j], is_dual)
    } else {
        select_573([a, b, c, d, g, f, i, h, k, l], is_dual)
    }
}
/// n = 8, i = 1
fn select_708([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_29([a, g, c, d, e, f, h], is_dual)
    } else {
        select_29([b, f, c, d, e, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_707([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_595([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_708([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_710([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_453([a, c, d, b, e, f, g], is_dual)
    } else {
        select_381([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_709([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_710([a, e, h, i, g, f, b, c], !is_dual)
    } else {
        select_50([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_706([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_707([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_709([a, c, h, d, b, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_704([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_705([a, b, m, h, n, k, l, g, j, d, c, i], !is_dual)
    } else {
        select_706([a, b, c, g, e, f, h, i, k, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_693([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_694([a, b, d, i, g, j, h, c, k, l, m], is_dual)
    } else {
        select_704([a, b, c, d, e, f, g, h, i, j, m, k, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_687([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_688([a, b, h, n, c, m, l, j, k, g, i], !is_dual)
    } else {
        select_693([a, b, c, d, e, f, g, h, i, j, l, n, k, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_717([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_22([a, b, c, d, g, e, f], is_dual)
    } else {
        select_22([a, b, c, d, g, f, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_716([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([a, c, e, f, g, d, h, i], is_dual)
    } else {
        select_717([c, b, d, f, e, h, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_719([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_69([a, f, g], is_dual)
    } else {
        select_99([a, b, c, d, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_718([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_167([a, c, b, e, f, d, g, h], is_dual)
    } else {
        select_719([d, c, a, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_715([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_716([a, c, b, f, d, e, g, h, i], is_dual)
    } else {
        select_718([d, b, a, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_721([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_294([g, h, i, j, d, e, a, b], !is_dual)
    } else {
        select_186([g, b, c, e, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_720([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_444([f, g, e, a, h], !is_dual)
    } else {
        select_721([b, c, a, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_714([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_715([c, d, b, a, e, f, g, i, h, j], is_dual)
    } else {
        select_720([c, d, a, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_724([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([b, c, d, e, f, g, i], is_dual)
    } else {
        select_382([a, c, g, f, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_725([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_294([a, b, f, d, e, g, h, i], is_dual)
    } else {
        select_314([b, d, c, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_723([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_724([c, d, b, e, f, a, g, i, h], is_dual)
    } else {
        select_725([c, d, a, e, f, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_722([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_723([b, a, d, c, g, f, i, j, k], is_dual)
    } else {
        select_542([a, c, b, f, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_713([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_714([b, c, d, g, h, f, a, j, i, k], is_dual)
    } else {
        select_722([b, c, a, d, e, f, g, i, h, k, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_729([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_38([a, b, d, c, e, f, g], is_dual)
    } else {
        select_99([b, d, f, e, a, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_728([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_67([a, b, c, f, g, e], is_dual)
    } else {
        select_729([a, b, d, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_730([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_385([a, h, i, j, f, g, c, d, e], !is_dual)
    } else {
        select_250([a, i, j, f, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_727([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_728([a, d, f, e, c, g, h], is_dual)
    } else {
        select_730([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_733([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_624([a, b, c, g, e, i, h, f, j], is_dual)
    } else {
        select_71([a, b, f, d, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_734([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([d, b, c, f, h, g], is_dual)
    } else {
        select_141([a, d, e, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_732([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_733([b, d, c, e, f, a, g, h, i, j], is_dual)
    } else {
        select_734([d, a, c, b, e, g, f, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_736([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_294([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_382([c, e, d, a, f, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_737([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_68([f, e, a, c, d], !is_dual)
    } else {
        select_213([f, g, d, a, b, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_735([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_736([b, c, a, d, e, f, h, g], is_dual)
    } else {
        select_737([b, f, c, a, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_731([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_732([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_735([a, c, d, b, h, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_726([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_727([a, b, c, d, h, f, g, j, i, k], is_dual)
    } else {
        select_731([a, c, b, e, g, f, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_712([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_713([a, b, c, e, d, h, g, i, j, f, k], is_dual)
    } else {
        select_726([a, b, c, e, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_711([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_712([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_712([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_686([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_687([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    } else {
        select_711([a, b, c, l, n, h, m, g, k, j, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_596([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_597([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_686([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_502([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_503([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_596([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_396([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_397([a, b, c, e, d, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_502([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_11([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_396([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_10([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_748([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_280([a, f, b, c, e, h, i, j], is_dual)
    } else {
        select_259([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_747([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_748([h, d, e, a, b, f, g, i, j, k], is_dual)
    } else {
        select_748([g, d, e, a, c, f, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_751([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_77([a, b, d, e, g, f, h], is_dual)
    } else {
        select_55([d, b, c, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_750([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_751([c, d, e, a, f, b, g, h], is_dual)
    } else {
        select_751([c, d, e, b, f, a, g, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_752([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_592([e, a, b, c, d, f, g, h], is_dual)
    } else {
        select_53([e, h, a, b, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_749([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_750([b, c, g, d, e, a, h, i], is_dual)
    } else {
        select_752([a, f, d, e, b, c, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_746([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_747([a, d, e, b, c, f, g, h, i, j, k], is_dual)
    } else {
        select_749([g, j, k, l, m, f, a, h, i], !is_dual)
    }
}
/// n = 8, i = 2
fn select_755([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_316([a, e, b, d, g, f, h], is_dual)
    } else {
        select_84([a, b, c, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_757([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_453([b, g, d, e, f, i, h], is_dual)
    } else {
        select_95([a, b, c, h, e, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_758([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_95([a, d, c, h, f, g, j], is_dual)
    } else {
        select_129([b, d, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_757([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_758([b, e, d, a, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_754([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_755([a, d, f, e, b, g, i, h], is_dual)
    } else {
        select_756([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_761([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_98([b, a, d, h, e, g], is_dual)
    } else {
        select_186([g, b, c, d, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_763([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, b, d, f, e, h], is_dual)
    } else {
        select_22([c, a, b, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_764([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_22([b, c, d, e, f, g, h], is_dual)
    } else {
        select_34([a, c, d, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_762([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_763([g, b, a, f, e, h, i, j], is_dual)
    } else {
        select_764([e, a, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_761([d, f, b, a, g, e, h, i], is_dual)
    } else {
        select_762([d, b, a, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_765([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_316([a, e, b, g, f, i, h], is_dual)
    } else {
        select_144([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_759([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_760([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_765([b, e, a, d, c, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_753([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_754([b, c, a, d, e, f, h, i, g, j], is_dual)
    } else {
        select_759([a, b, c, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_745([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_746([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    } else {
        select_753([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_744([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_745([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_745([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_772([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_54([b, c, d, e, g, f], is_dual)
    } else {
        select_34([a, b, c, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_771([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_29([b, c, d, e, i, g, h], is_dual)
    } else {
        select_772([f, a, h, b, c, g, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_773([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_314([a, c, b, h, g, f, i], is_dual)
    } else {
        select_230([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_770([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_771([c, a, d, e, f, b, g, i, h, j], is_dual)
    } else {
        select_773([b, g, c, e, f, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_775([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_626([a, b, h, c, f, g, i, j], is_dual)
    } else {
        select_230([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_776([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_772([b, d, g, e, f, i, h, j], is_dual)
    } else {
        select_772([a, c, h, e, f, i, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_774([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_775([g, b, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_776([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_769([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_770([a, c, e, b, f, g, d, h, i, j], is_dual)
    } else {
        select_774([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 1
fn select_778([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_332([a, b, d, e, f, c, g], is_dual)
    } else {
        select_332([a, c, d, e, f, b, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_777([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_249([a, b, c, d, h, g, i], is_dual)
    } else {
        select_778([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_768([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_769([a, b, f, c, g, d, e, i, h, j, k], is_dual)
    } else {
        select_777([a, f, d, e, b, c, i, j, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_782([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_38([a, b, c, f, e, h, g], is_dual)
    } else {
        select_252([a, b, d, g, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_781([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_20([c, d, a, b, e, f, h, g, i], is_dual)
    } else {
        select_782([a, b, c, f, e, i, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_780([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_299([a, b, e, f, h, i, j, k, l], is_dual)
    } else {
        select_781([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_785([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_29([b, h, c, d, e, g, i], is_dual)
    } else {
        select_228([a, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_784([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_785([c, a, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_785([c, b, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_787([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_230([h, b, c, d, e, f, i, k], is_dual)
    } else {
        select_392([f, a, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_786([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_785([c, a, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_787([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_784([c, d, e, a, b, f, g, h, i, j], is_dual)
    } else {
        select_786([a, b, e, c, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_779([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_780([b, c, d, e, i, g, j, a, h, k, l, m], is_dual)
    } else {
        select_783([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_767([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_768([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_779([a, c, d, f, e, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_792([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_313([a, b, g, e, f, h], is_dual)
    } else {
        select_238([a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_791([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_792([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_234([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_790([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_791([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_566([a, f, h, b, j, k, i, g], !is_dual)
    }
}
/// n = 9, i = 2
fn select_794([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_74([e, f, c, d, g, h, i], is_dual)
    } else {
        select_74([e, f, a, b, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_793([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_541([a, b, g, e, f, c, h, i], is_dual)
    } else {
        select_794([c, d, e, f, a, b, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_790([a, b, h, k, l, c, j, d, i, e, g], !is_dual)
    } else {
        select_793([a, b, e, f, c, d, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_789([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_789([a, b, c, d, f, e, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_766([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_767([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_788([a, b, c, e, f, i, h, d, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_743([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_744([a, b, l, m, h, n, c, j, d, k, e, i, f], !is_dual)
    } else {
        select_766([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_742([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_743([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_743([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_803([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([g, h, f, d, a, b], !is_dual)
    } else {
        select_39([a, f, c, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_802([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_100([g, j, d, k, f, h, a, e], !is_dual)
    } else {
        select_803([d, b, c, f, e, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_804([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_294([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_626([a, c, f, d, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_801([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_802([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_804([d, h, j, k, f, g, i, a, e, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_800([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_801([e, a, c, h, f, i, d, g, j, k, m], is_dual)
    } else {
        select_801([d, b, c, g, f, i, e, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_806([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_250([a, c, d, e, f, i], is_dual)
    } else {
        select_288([a, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_808([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_453([d, b, c, g, f, e, h], is_dual)
    } else {
        select_167([a, c, e, f, h, d, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_807([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_808([a, f, b, d, i, e, g, j, h], is_dual)
    } else {
        select_808([a, e, c, d, h, f, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_805([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_806([i, b, a, j, e, h, d, g, k], is_dual)
    } else {
        select_807([b, a, c, e, d, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_799([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_800([a, c, b, e, d, f, i, g, j, k, l, m, h], is_dual)
    } else {
        select_805([a, b, c, e, f, d, i, j, g, h, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_812([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_71([a, b, c, f, e, g], is_dual)
    } else {
        select_252([b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_811([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_192([b, c, d, e, g, f], is_dual)
    } else {
        select_812([a, b, c, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_815([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_52([e, c, d, g, f, i], is_dual)
    } else {
        select_34([h, a, b, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_814([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_117([g, f, j, k, e, i, c, d], !is_dual)
    } else {
        select_815([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_816([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_100([a, e, c, d, g, f, i, h], is_dual)
    } else {
        select_213([f, a, b, h, e, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_813([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_814([b, f, c, d, e, h, g, i, j, k, l], is_dual)
    } else {
        select_816([a, e, c, d, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_810([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_811([g, k, l, m, h, a, e, j], !is_dual)
    } else {
        select_813([b, d, a, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_820([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_99([f, h, d, g, a, b], !is_dual)
    } else {
        select_39([b, f, c, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_819([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_820([a, b, d, f, e, g, i, j], is_dual)
    } else {
        select_82([a, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_822([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_34([a, b, h, k], is_dual)
    } else {
        select_129([c, d, g, e, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_821([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_822([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_289([b, h, d, f, e, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_818([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_819([a, b, d, f, h, g, i, e, k, l], is_dual)
    } else {
        select_821([a, c, d, b, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_824([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_499([a, e, c, d, f, g, h, j], is_dual)
    } else {
        select_32([b, g, c, f, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_826([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_52([h, e, i, f, c, a], !is_dual)
    } else {
        select_52([g, f, i, e, d, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_825([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_111([h, g, k, e, f, d, b], !is_dual)
    } else {
        select_826([a, d, c, g, e, i, h, j, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_823([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_824([k, h, e, i, f, j, g, c, d, a], !is_dual)
    } else {
        select_825([a, b, c, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_817([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_818([a, b, d, c, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_823([j, l, h, k, a, g, i, e, f, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_809([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_810([a, d, b, c, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_817([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_798([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_799([c, d, b, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_809([a, b, c, d, f, g, i, j, e, h, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_831([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_38([a, b, c, d, e, g, f], is_dual)
    } else {
        select_213([g, e, h, a, b, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_830([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_618([e, a, i, h, g, f, c, b], !is_dual)
    } else {
        select_831([a, b, c, d, e, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_829([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_559([a, c, b, e, h, i, f, g], is_dual)
    } else {
        select_830([a, c, f, d, g, h, e, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_834([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_51([a, g, f, h, d, b], !is_dual)
    } else {
        select_51([a, f, g, h, e, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_833([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_834([a, b, c, g, e, h, i, f], is_dual)
    } else {
        select_250([a, b, f, d, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_602([a, f, c, d, h, g, e, i, j, k], is_dual)
    } else {
        select_833([a, b, d, e, g, i, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_828([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_829([a, b, c, g, i, f, h, j, e, k], is_dual)
    } else {
        select_832([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_836([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_413([a, b, h, i, j, f, c, g], !is_dual)
    } else {
        select_573([a, b, k, h, j, i, g, d, e, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_837([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_570([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_110([a, b, c, f, g, h, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_835([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_836([a, b, k, i, j, h, f, d, g, c, e], !is_dual)
    } else {
        select_837([a, b, f, e, c, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_827([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_828([a, d, c, b, e, h, f, j, i, g, k], is_dual)
    } else {
        select_835([a, e, j, i, l, f, k, h, b, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_797([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_798([a, c, d, e, b, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_827([a, d, b, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_796([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_797([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_797([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_842([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_570([a, b, e, d, g, f, h, i, j], is_dual)
    } else {
        select_413([a, b, h, i, j, g, c, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_841([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_842([a, b, j, l, g, k, i, c, d, h], !is_dual)
    } else {
        select_706([a, b, d, c, e, f, g, h, k, i, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_846([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_51([a, f, h, i, g, b], !is_dual)
    } else {
        select_53([b, a, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_845([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_846([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_846([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_844([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_845([a, g, i, f, j, b, h, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_843([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_329([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_844([a, c, d, e, h, g, b, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_840([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_841([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_843([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_852([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, b, d, g, f, i], is_dual)
    } else {
        select_26([c, d, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_851([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_852([a, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_314([a, d, c, h, g, e, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_850([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_757([c, a, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_851([c, e, b, d, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_849([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_850([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_755([b, a, f, e, c, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_848([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_849([a, c, d, b, e, g, h, i, f, j], is_dual)
    } else {
        select_849([b, c, d, a, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_847([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_848([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_848([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_839([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_840([a, b, c, f, d, e, g, h, j, i, k, l], is_dual)
    } else {
        select_847([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_857([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_565([d, g, h, i, a, f, b, e], !is_dual)
    } else {
        select_247([d, h, g, i, a, e, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_856([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([a, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_857([f, j, k, a, g, i, b, c, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_859([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_812([a, c, d, e, h, g, i], is_dual)
    } else {
        select_171([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_858([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_859([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_859([b, a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_855([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_856([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_858([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_854([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_855([a, b, e, c, d, f, h, g, j, i, k], is_dual)
    } else {
        select_848([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_853([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_854([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_854([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_838([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_839([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_853([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_795([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_796([a, b, c, j, m, l, h, k, e, d, i, f, g], !is_dual)
    } else {
        select_838([a, b, c, j, d, l, m, h, e, k, i, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_741([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_742([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_795([a, b, c, d, f, i, g, j, k, l, e, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_866([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, b, c, d, f, g, h], is_dual)
    } else {
        select_327([a, b, e, c, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_868([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_140([e, g, c, d, f, h, i, j], is_dual)
    } else {
        select_592([e, c, d, a, b, f, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_867([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_191([a, b, c, d, h, i, g], is_dual)
    } else {
        select_868([c, d, e, f, a, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_866([a, b, d, e, g, c, i, h, j], is_dual)
    } else {
        select_867([a, b, d, e, c, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_864([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_253([a, b, e, f, d, c, g, i, h], is_dual)
    } else {
        select_865([a, b, c, e, f, d, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_863([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_864([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_864([a, b, c, e, f, g, h, d, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_873([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_468([a, b, c, d, g, h, f, i], is_dual)
    } else {
        select_468([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_874([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_22([a, c, d, b, e, f, g], is_dual)
    } else {
        select_22([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_872([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_873([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_874([b, c, f, g, h, i, a], is_dual)
    }
}
/// n = 8, i = 3
fn select_876([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_74([a, b, c, d, e, g, h], is_dual)
    } else {
        select_516([a, c, d, b, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_878([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_294([a, b, f, c, e, g, h, i], is_dual)
    } else {
        select_640([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_877([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_878([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_197([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_875([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_876([a, b, c, d, f, i, h, j], is_dual)
    } else {
        select_877([a, b, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_871([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_872([a, c, d, b, f, h, g, j, i], is_dual)
    } else {
        select_875([a, b, c, d, g, e, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_881([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_293([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_775([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_880([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_881([a, b, c, e, f, g, i, h, j, k], is_dual)
    } else {
        select_876([a, b, c, d, e, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_879([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_514([a, e, f, c, d, b, h, j, i], is_dual)
    } else {
        select_880([a, b, e, f, g, c, d, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_870([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_871([a, b, e, f, g, d, h, i, c, j, k], is_dual)
    } else {
        select_879([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_886([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_98([b, c, d, f, e, g], is_dual)
    } else {
        select_61([g, a, b, d, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_885([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_886([a, c, d, e, f, h, g], is_dual)
    } else {
        select_250([g, a, b, c, e, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_884([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_515([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_885([c, d, e, b, g, f, a, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_887([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_534([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_534([a, b, d, e, f, g, h, c, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_883([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_884([a, c, d, e, i, h, b, j], is_dual)
    } else {
        select_887([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_892([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_89([a, c, e, h, d, g], is_dual)
    } else {
        select_89([b, c, d, h, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_891([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_381([c, d, a, e, b, h, f, g], is_dual)
    } else {
        select_892([b, c, d, a, e, f, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_890([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_891([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_99([a, d, f, e, b, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_893([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_87([a, b, c, d, e, f, g], is_dual)
    } else {
        select_39([e, f, a, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_889([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_890([a, b, d, c, e, g, h, f], is_dual)
    } else {
        select_893([g, e, h, a, f, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_896([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_63([c, d, e, f, g], is_dual)
    } else {
        select_62([i, j, a, b, h], !is_dual)
    }
}
/// n = 9, i = 2
fn select_897([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_63([c, d, e, f, g], is_dual)
    } else {
        select_34([a, b, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_895([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_896([a, h, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_897([g, b, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 7, i = 1
fn select_899([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_63([b, c, d, e, f], is_dual)
    } else {
        select_24([a, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_898([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_227([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_899([b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_894([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_895([c, b, d, e, f, g, h, a, i, k, j], is_dual)
    } else {
        select_898([c, a, d, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_888([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_889([b, c, d, i, h, a, j, k], is_dual)
    } else {
        select_894([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_882([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_883([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_888([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_869([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_870([a, c, d, b, f, g, h, e, i, j, k], is_dual)
    } else {
        select_882([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_862([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_863([a, b, i, d, e, f, g, c, j, k], is_dual)
    } else {
        select_869([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_905([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_259([c, f, e, a, b, g, h], is_dual)
    } else {
        select_259([a, b, d, c, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_904([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_905([c, d, a, e, b, h, g, i, f], is_dual)
    } else {
        select_905([c, d, b, e, a, h, f, i, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_903([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_904([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_904([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_902([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_903([a, b, d, e, f, i, h, c, j], is_dual)
    } else {
        select_883([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_910([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_188([g, h, i, b, a, f, d], !is_dual)
    } else {
        select_130([a, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_434([b, c, d, e, f, h, g, j], is_dual)
    } else {
        select_188([g, h, i, a, c, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_909([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_910([h, g, i, k, e, j, d, f, b, c], !is_dual)
    } else {
        select_911([g, h, i, k, d, j, e, f, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_292([f, a, b, g, e, i, j], is_dual)
    } else {
        select_212([h, j, i, g, f, a, e, d, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_914([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_382([a, b, e, f, h, d], is_dual)
    } else {
        select_382([a, c, d, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_912([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_913([b, d, a, c, f, e, g, i, h, j], is_dual)
    } else {
        select_914([b, d, e, f, a, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_908([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_909([j, k, i, e, f, h, a, b, c, g, d], !is_dual)
    } else {
        select_912([a, i, j, k, e, f, h, b, c, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_917([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_292([f, g, h, e, a, b, d], !is_dual)
    } else {
        select_88([b, c, d, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_916([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_642([h, i, g, f, e, d, a, c], !is_dual)
    } else {
        select_917([d, g, h, i, f, e, a, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_915([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_895([b, c, a, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_916([b, i, c, a, h, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_907([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_908([a, j, k, m, g, b, l, h, c, d, i], !is_dual)
    } else {
        select_915([a, c, d, b, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_922([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([h, i, j, e, a, b], !is_dual)
    } else {
        select_52([a, c, d, g, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_921([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_235([e, b, c, d, f, g, h, j], is_dual)
    } else {
        select_922([a, b, c, d, f, g, e, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_920([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_921([b, g, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_775([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_923([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_293([g, b, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_776([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_919([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_920([b, g, d, e, f, a, h, i, j, k, l], is_dual)
    } else {
        select_923([b, a, d, c, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_924([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_287([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_287([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_918([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_919([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_924([a, b, h, c, i, j, g, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_906([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_907([a, c, e, d, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_918([a, c, e, b, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_901([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_902([a, c, d, e, f, g, b, i, h, j], is_dual)
    } else {
        select_906([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_900([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_901([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_901([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_861([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_862([a, b, c, f, g, d, e, h, i, k, j], is_dual)
    } else {
        select_900([a, b, c, d, e, h, f, g, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_932([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_38([a, b, d, c, f, g, h], is_dual)
    } else {
        select_874([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_933([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_111([f, g, h, a, c, e, d], !is_dual)
    } else {
        select_213([f, g, h, a, b, e, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_931([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_932([a, c, e, b, d, f, h, g], is_dual)
    } else {
        select_933([a, c, b, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_935([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_95([c, d, e, g, f, i, h], is_dual)
    } else {
        select_71([c, a, b, h, j, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_936([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_61([a, b, d, i, f], is_dual)
    } else {
        select_130([a, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_934([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_935([a, b, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_936([a, b, e, c, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_930([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_931([a, c, b, h, d, k, f, i, j], is_dual)
    } else {
        select_934([a, b, c, f, e, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_940([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_32([b, d, c, e, f, h], is_dual)
    } else {
        select_33([a, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_939([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_499([a, c, d, f, e, g, h, j], is_dual)
    } else {
        select_940([a, b, d, g, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_942([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_22([b, c, d, e, g, f, h], is_dual)
    } else {
        select_52([h, i, j, a, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_941([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_942([a, d, b, c, e, g, h, f, i, j], is_dual)
    } else {
        select_266([b, d, c, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_938([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_939([g, h, j, k, i, a, b, f, e, d], !is_dual)
    } else {
        select_941([a, c, b, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_944([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_215([g, h, i, a, b, f], !is_dual)
    } else {
        select_235([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_943([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_932([a, b, e, c, d, f, g, h], is_dual)
    } else {
        select_944([a, b, c, d, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_937([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_938([i, j, k, m, g, l, a, b, f, h, c], !is_dual)
    } else {
        select_943([a, b, e, g, d, k, i, h, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_929([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_930([b, c, d, a, e, f, g, h, j, i, k], is_dual)
    } else {
        select_937([a, b, e, c, d, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_948([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_111([g, h, i, a, b, f, d], !is_dual)
    } else {
        select_188([h, g, i, a, b, e, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_947([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_265([a, c, d, b, g, e, h, f], is_dual)
    } else {
        select_948([a, b, d, c, g, f, h, e, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_951([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, b, c, d, e, g], is_dual)
    } else {
        select_62([f, g, a, d, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_950([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, c, d, e, f, g, h], is_dual)
    } else {
        select_951([a, g, d, f, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_949([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_950([b, a, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_736([a, b, c, f, e, h, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_946([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_947([e, c, a, d, f, h, g, i, k], is_dual)
    } else {
        select_949([a, c, b, g, f, i, h, e, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_954([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_820([a, b, d, f, e, h, g, i], is_dual)
    } else {
        select_342([a, c, b, d, f, g, h, i, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_955([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_71([e, a, d, c, g, f], is_dual)
    } else {
        select_100([g, h, d, i, e, f, b, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_953([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_954([b, c, a, d, f, e, h, g, i], is_dual)
    } else {
        select_955([c, e, d, g, a, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_952([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_953([e, i, j, k, f, a, g, h, b, c], !is_dual)
    } else {
        select_953([e, i, j, k, g, a, f, h, b, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_945([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_946([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_952([a, b, c, g, e, f, i, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_928([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_929([b, c, d, a, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_945([b, c, g, e, f, a, h, j, i, l, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_960([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_53([b, f, d, e, g, h], is_dual)
    } else {
        select_325([a, b, c, h, i, f, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_961([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_68([a, b, g, d, h], is_dual)
    } else {
        select_83([a, c, f, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_959([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_960([b, c, e, a, d, f, i, h, g, j], is_dual)
    } else {
        select_961([b, g, e, a, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_958([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_959([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_266([c, e, g, f, d, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_963([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_84([b, c, e, a, g, f, h], is_dual)
    } else {
        select_606([a, b, d, c, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_965([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_198([a, c, g, f, b, h, i, j], is_dual)
    } else {
        select_392([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_964([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_20([c, e, b, d, f, g, i, h, j], is_dual)
    } else {
        select_965([a, b, c, d, g, f, j, i, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_962([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_963([a, b, c, f, g, i, k, j, l], is_dual)
    } else {
        select_964([a, b, d, c, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_957([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_958([b, c, d, f, e, h, i, g, j, k], is_dual)
    } else {
        select_962([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_970([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_22([b, c, d, f, g, h, i], is_dual)
    } else {
        select_52([a, c, d, e, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_969([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_970([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_83([a, i, e, b, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_972([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_52([a, d, f, e, i, j], is_dual)
    } else {
        select_39([b, c, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_971([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_122([a, d, e, f, i, k], is_dual)
    } else {
        select_972([a, b, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_968([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_969([b, d, c, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_971([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_974([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_235([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_122([a, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_975([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([b, a, c, e, f, g, h, d], is_dual)
    } else {
        select_719([h, f, g, e, b, a, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_973([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_974([a, b, d, e, f, g, i, k], is_dual)
    } else {
        select_975([c, d, a, f, e, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_967([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_968([b, d, a, c, e, g, f, i, h, l, j], is_dual)
    } else {
        select_973([f, j, l, k, i, a, c, h, g, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([b, c, f, d, h, g], is_dual)
    } else {
        select_940([a, b, c, e, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_979([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_141([b, c, e, h, g, j], is_dual)
    } else {
        select_100([a, c, d, g, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_977([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_978([a, c, b, e, g, f, h, i, j, k], is_dual)
    } else {
        select_979([a, b, c, d, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_980([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_70([f, a, b, g, h, i, e], is_dual)
    } else {
        select_300([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_976([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_977([b, c, d, e, a, f, h, g, j, i, k], is_dual)
    } else {
        select_980([b, d, g, e, f, a, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_966([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_967([a, b, c, e, d, f, g, i, j, h, k, l], is_dual)
    } else {
        select_976([b, a, e, d, c, f, g, h, j, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_956([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_957([a, c, d, e, b, f, i, g, j, h, k, l], is_dual)
    } else {
        select_966([a, b, c, h, e, f, i, j, g, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_927([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_928([a, b, c, d, e, g, h, i, j, k, f, l, m], is_dual)
    } else {
        select_956([b, a, c, d, e, g, f, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_926([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_927([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_927([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_987([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_453([b, d, c, f, e, g, h], is_dual)
    } else {
        select_188([a, d, b, h, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_986([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_987([a, b, d, e, g, h, f, i, j], is_dual)
    } else {
        select_647([a, d, c, f, h, g, e, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_988([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_76([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_326([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_985([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_986([a, c, d, b, f, g, e, h, j, i], is_dual)
    } else {
        select_988([h, e, l, a, b, k, f, i, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_990([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_70([a, e, j, b, i, f, g], !is_dual)
    } else {
        select_113([a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_993([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_39([a, g, i, h], !is_dual)
    } else {
        select_129([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_992([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_167([a, e, b, g, i, f, h, d], is_dual)
    } else {
        select_993([h, j, i, f, g, a, d, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_994([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_154([a, b, c, f, e, g, i, j], is_dual)
    } else {
        select_186([a, e, d, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_991([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_992([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_994([i, h, d, k, f, g, j, a, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_989([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_990([g, d, i, k, a, j, h, e, f, c], !is_dual)
    } else {
        select_991([a, b, c, d, f, e, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_984([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_985([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_989([a, j, l, e, f, k, b, i, h, g, d], !is_dual)
    }
}
/// n = 8, i = 2
fn select_999([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_22([a, c, d, e, g, f, h], is_dual)
    } else {
        select_26([a, b, e, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_998([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_453([f, d, b, a, e, h, g], is_dual)
    } else {
        select_999([b, d, a, c, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_997([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_834([a, b, c, g, f, e, h, i], is_dual)
    } else {
        select_998([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_996([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_139([a, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_997([a, b, c, h, e, g, f, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1000([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_74([a, e, b, h, i, g, f], !is_dual)
    } else {
        select_84([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_995([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_996([a, c, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1000([a, e, f, l, b, k, j, g, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_983([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_984([a, b, e, d, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_995([a, b, e, c, f, g, h, d, j, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1003([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_425([a, f, c, e, b, g, h, i], is_dual)
    } else {
        select_463([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1004([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_80([a, c, d, g, f, b, h], is_dual)
    } else {
        select_223([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1002([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1003([a, b, c, e, d, f, g, i, j], is_dual)
    } else {
        select_1004([a, c, d, b, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1008([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_42([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_562([a, b, c, h, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1007([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_192([d, e, f, g, h, j], is_dual)
    } else {
        select_1008([a, b, c, d, e, g, h, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1010([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_55([c, d, f, e, h], is_dual)
    } else {
        select_39([a, b, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1009([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1010([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_562([a, b, c, h, e, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1006([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1007([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1009([b, d, e, c, g, h, i, a, k, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1013([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_98([a, c, e, f, d, h], is_dual)
    } else {
        select_382([a, d, b, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1014([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_21([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_51([a, f, c, d, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1012([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1013([b, h, c, f, e, i, g, j], is_dual)
    } else {
        select_1014([a, c, d, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1016([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_98([b, c, e, g, f, h], is_dual)
    } else {
        select_153([a, b, h, e, d, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1015([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_914([a, b, f, e, g, i, h, d], is_dual)
    } else {
        select_1016([b, a, c, e, d, f, h, i, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_1011([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1012([a, c, d, b, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_1015([c, e, d, f, b, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1005([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1006([c, b, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1011([b, c, d, e, g, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1001([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1002([a, b, c, d, i, j, h, g, l, m], is_dual)
    } else {
        select_1005([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_982([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_983([a, b, c, f, h, i, g, d, j, k, l, m], is_dual)
    } else {
        select_1001([a, b, c, f, e, d, g, j, h, i, k, l, m], is_dual)
    }
}
/// n = 6, i = 2
fn select_1022([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_141([a, b, c, d, e, f], is_dual)
    } else {
        select_26([a, f, e, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1021([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_495([a, c, e, d, f, g, h, i], is_dual)
    } else {
        select_1022([a, f, b, i, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1024([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_154([g, h, j, d, e, i, a, b], !is_dual)
    } else {
        select_186([g, b, c, e, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1025([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_77([a, f, b, e, i, g, j], is_dual)
    } else {
        select_325([e, c, d, h, f, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1023([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1024([b, f, d, e, a, g, i, h, j, k], is_dual)
    } else {
        select_1025([b, c, d, a, e, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1020([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1021([a, b, d, c, f, g, e, h, i, k], is_dual)
    } else {
        select_1023([a, c, d, b, e, g, f, h, i, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1029([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_83([a, b, h, i, j], is_dual)
    } else {
        select_129([b, d, c, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_68([b, g, f, a, j], is_dual)
    } else {
        select_1029([b, c, a, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1030([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_98([a, c, d, e, f, h], is_dual)
    } else {
        select_99([a, b, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1027([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1028([e, a, d, c, f, g, i, j, h, k], is_dual)
    } else {
        select_1030([a, d, b, h, g, i, e, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1032([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_130([d, b, c, e, f, g, i, j], is_dual)
    } else {
        select_644([a, c, e, d, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1031([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_1032([a, c, b, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_703([a, b, d, h, i, j, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_1026([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1027([a, c, b, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_1031([f, c, b, a, e, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1019([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1020([a, d, e, b, f, g, c, h, i, j, l, k], is_dual)
    } else {
        select_1026([a, d, c, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1035([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_710([g, i, j, f, e, a, b, h], !is_dual)
    } else {
        select_50([a, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1036([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_50([a, c, f, e, i, h, g, j], is_dual)
    } else {
        select_50([a, b, g, d, j, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1035([b, f, c, e, a, h, i, g, j, k], is_dual)
    } else {
        select_1036([b, a, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1039([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_65([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_153([g, b, h, e, a, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1038([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1039([b, d, a, e, f, g, h, i, l], is_dual)
    } else {
        select_445([a, c, b, e, g, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1041([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_451([i, j, g, k, h, f, a, e, d, b], !is_dual)
    } else {
        select_188([a, f, c, g, j, d, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1043([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_703([a, b, h, d, i, f, g], is_dual)
    } else {
        select_39([a, g, c, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1042([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_167([d, b, a, e, f, h, j, i], is_dual)
    } else {
        select_1043([a, b, c, e, d, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1040([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1041([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_1042([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1037([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1038([b, c, a, d, e, f, h, g, i, j, l, k], is_dual)
    } else {
        select_1040([c, b, d, f, g, i, a, j, l, k, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_1033([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1034([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1037([a, b, c, e, h, g, f, i, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1018([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1019([a, b, c, e, g, i, h, j, f, l, m, k], is_dual)
    } else {
        select_1033([a, b, c, d, e, f, h, g, j, k, i, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1048([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_375([b, d, a, c, e, f, g, i, h], is_dual)
    } else {
        select_188([g, f, j, a, b, h, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1049([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_294([a, b, e, c, h, g, f, i], is_dual)
    } else {
        select_154([a, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1047([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1048([a, b, f, d, g, e, i, j, h, k], is_dual)
    } else {
        select_1049([b, c, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1051([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_111([a, e, f, d, h, i, j], is_dual)
    } else {
        select_436([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1052([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_453([d, b, c, g, f, e, h], is_dual)
    } else {
        select_940([g, h, j, d, i, a, f, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1050([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1051([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_1052([a, b, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1046([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1047([a, c, d, b, e, g, f, i, j, h, k], is_dual)
    } else {
        select_1050([i, j, l, e, f, k, a, c, b, h, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1055([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_51([a, f, c, d, g, i], is_dual)
    } else {
        select_999([k, j, f, i, h, e, a, b], !is_dual)
    }
}
/// n = 8, i = 2
fn select_1056([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_453([b, c, d, f, e, g, h], is_dual)
    } else {
        select_382([a, c, b, h, f, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_1054([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1055([i, h, k, l, e, a, j, g, f, c, d], !is_dual)
    } else {
        select_1056([b, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1057([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_192([b, c, d, e, f, g], is_dual)
    } else {
        select_117([a, b, c, f, e, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1053([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1054([a, b, d, c, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_1057([h, k, l, i, e, f, a, j, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1045([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1046([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1053([a, d, b, c, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_1059([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_111([d, b, c, e, f, h, i], is_dual)
    } else {
        select_83([f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1058([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1059([i, g, j, d, a, e, b, h, f], !is_dual)
    } else {
        select_325([a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_1044([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1045([a, c, b, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_1058([a, d, f, e, g, h, i, b, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1017([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_1018([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1044([b, c, h, d, f, j, g, a, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_981([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_982([a, c, d, b, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_1017([a, c, d, e, f, g, i, h, j, b, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_925([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_926([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_981([a, b, c, e, g, f, d, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_860([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_861([a, b, c, e, f, d, g, h, j, i, k, l, m], is_dual)
    } else {
        select_925([a, b, c, e, f, h, g, j, i, d, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_740([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_741([a, b, c, d, e, f, g, h, j, k, l, m, i, n], is_dual)
    } else {
        select_860([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_739([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_740([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_740([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_1070([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_292([f, d, g, e, a, b, c], !is_dual)
    } else {
        select_292([f, e, g, d, a, b, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1069([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1070([f, g, e, a, b, c, d], !is_dual)
    } else {
        select_289([f, g, a, e, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1068([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1069([a, b, c, g, i, f, j], is_dual)
    } else {
        select_876([b, a, d, e, f, h, g, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_1073([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_38([a, b, c, d, e, g, f], is_dual)
    } else {
        select_289([a, b, c, f, g, e], is_dual)
    }
}
/// n = 8, i = 2
fn select_1072([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_932([b, c, e, a, d, f, g, h], is_dual)
    } else {
        select_1073([b, c, f, e, a, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1071([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_890([b, a, h, e, g, f, j, k], is_dual)
    } else {
        select_1072([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1067([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1068([a, b, g, c, d, h, i, f, j, k], is_dual)
    } else {
        select_1071([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_249([c, a, b, d, h, i, j], is_dual)
    } else {
        select_881([a, b, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1074([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1075([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_514([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1066([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1067([b, c, e, f, d, g, h, a, i, j, k], is_dual)
    } else {
        select_1074([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1065([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_847([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1066([a, b, c, f, d, e, g, h, j, k, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1081([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_29([a, b, c, d, e, f, g], is_dual)
    } else {
        select_51([a, g, i, j, h, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1082([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_252([a, f, h, i, g], !is_dual)
    } else {
        select_40([a, b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1080([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1081([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1082([f, c, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1079([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_282([a, f, i, g, k, b, j, h], !is_dual)
    } else {
        select_1080([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1084([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, j], is_dual)
    } else {
        select_199([h, i, j, a, b, f, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1083([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1084([a, b, c, d, g, f, i, j, k, h], is_dual)
    } else {
        select_282([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_1078([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1079([e, a, f, c, d, g, j, h, i, l, m], is_dual)
    } else {
        select_1083([e, i, k, g, m, j, l, a, f, b, h], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1088([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_61([e, a, b, f, g], is_dual)
    } else {
        select_215([b, a, c, d, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1087([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_120([d, f, i, e, a, g], !is_dual)
    } else {
        select_1088([b, e, c, f, d, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1090([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_345([i, h, j, e, f, a, g, b], !is_dual)
    } else {
        select_100([b, e, c, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1089([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_291([a, c, d, e, b, f, g, h, j], is_dual)
    } else {
        select_1090([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1086([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1087([j, k, g, a, f, h, i, c, b], !is_dual)
    } else {
        select_1089([f, b, a, d, e, g, h, j, i, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_1093([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_68([b, c, e, d, f], is_dual)
    } else {
        select_26([f, g, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_700([a, c, d, f, g, i, h], is_dual)
    } else {
        select_581([g, b, c, e, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1092([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1093([f, a, e, h, i, j, d], is_dual)
    } else {
        select_1094([a, c, b, d, f, e, g, i, j, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1095([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_213([b, a, e, g, h, d, f], is_dual)
    } else {
        select_382([b, d, c, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1091([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1092([a, c, b, d, f, e, g, i, j, h], is_dual)
    } else {
        select_1095([a, b, f, d, h, g, i, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_1085([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1086([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1091([k, f, l, j, i, g, b, a, c, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1077([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1078([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_1085([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1098([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_545([a, b, e, c, f, g, d, h, i], is_dual)
    } else {
        select_545([a, b, e, d, f, g, c, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1099([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_151([a, i, g, k, f, j, b, c], !is_dual)
    } else {
        select_413([a, g, b, d, e, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1097([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_1098([g, i, a, k, l, f, b, j, h], !is_dual)
    } else {
        select_1099([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 5, i = 2
fn select_1103([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_34([a, b, c, d], is_dual)
    } else {
        select_34([a, b, c, e], is_dual)
    }
}
/// n = 7, i = 3
fn select_1102([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_250([a, e, f, g, b, c], !is_dual)
    } else {
        select_1103([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1101([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1102([a, i, f, j, b, g, c], !is_dual)
    } else {
        select_834([a, b, d, f, e, h, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1105([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1059([k, g, j, h, a, f, b, i, c], !is_dual)
    } else {
        select_161([a, c, f, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1107([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_38([c, d, a, e, f, i, h], is_dual)
    } else {
        select_91([a, b, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1106([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_166([h, j, i, f, a, b, d, g, c], !is_dual)
    } else {
        select_1107([b, d, a, c, e, f, g, j, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_1104([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1105([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1106([a, g, k, j, l, f, i, b, h, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1100([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1101([a, k, l, g, f, j, i, c, b, h], !is_dual)
    } else {
        select_1104([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_1096([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1097([a, i, j, l, m, f, b, k, c, h, e, g], !is_dual)
    } else {
        select_1100([a, j, i, l, m, f, b, k, c, g, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1076([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1077([a, i, f, l, m, b, j, k, c, g, d, h, e], !is_dual)
    } else {
        select_1096([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_1064([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_1065([a, g, i, b, l, m, c, j, d, k, h], !is_dual)
    } else {
        select_1076([a, g, i, m, l, c, j, k, d, b, h, e, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1063([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1064([a, b, c, d, e, f, g, h, i, l, j, k, m], is_dual)
    } else {
        select_1064([a, b, c, d, e, f, g, h, i, l, k, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_1062([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1063([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_1063([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 6, i = 2
fn select_1114([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_81([a, b, c, d, f, e], is_dual)
    } else {
        select_81([a, b, d, c, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_1113([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_80([a, c, b, d, e, f, g], is_dual)
    } else {
        select_1114([a, f, c, g, e, b], is_dual)
    }
}
/// n = 7, i = 2
fn select_1115([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_81([a, b, c, f, g, e], is_dual)
    } else {
        select_316([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_1112([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1113([a, b, d, e, f, c, g], is_dual)
    } else {
        select_1115([a, b, d, c, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1118([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_495([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_32([g, i, e, a, b, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1117([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1118([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1118([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1116([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1117([a, b, c, e, d, f, h, g, i], is_dual)
    } else {
        select_411([a, b, c, d, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1111([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1112([a, b, h, d, f, g, c], is_dual)
    } else {
        select_1116([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1123([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_77([b, c, d, a, e, f, h], is_dual)
    } else {
        select_77([a, d, c, b, f, e, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_1124([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_700([a, b, c, e, d, g, f], is_dual)
    } else {
        select_700([a, b, d, e, c, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1122([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1123([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1124([h, e, b, f, g, c, a], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1121([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1122([g, a, b, c, e, h, f, i], is_dual)
    } else {
        select_1122([f, a, b, d, e, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1127([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_803([a, c, b, e, f, g, d, h], is_dual)
    } else {
        select_266([b, c, a, e, d, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1126([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1127([c, a, d, e, f, b, g, h], is_dual)
    } else {
        select_1127([c, b, d, e, f, a, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1129([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_21([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_21([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1128([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1129([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_60([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1125([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1126([a, i, j, k, b, g, c, h], !is_dual)
    } else {
        select_1128([c, b, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1120([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1121([i, k, g, l, b, a, c, j, h], !is_dual)
    } else {
        select_1125([c, b, a, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1119([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1120([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_1120([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1110([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1111([a, b, i, c, l, d, j, k, h], !is_dual)
    } else {
        select_1119([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1136([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_52([a, c, d, e, h, j], is_dual)
    } else {
        select_52([b, c, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1135([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_238([a, c, d, e, f, i, k], is_dual)
    } else {
        select_1136([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1137([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_213([f, h, d, a, b, g, e], !is_dual)
    } else {
        select_122([a, d, c, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1135([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1137([i, f, k, a, j, h, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1134([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1134([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1138([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_151([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_1115([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1132([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1133([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1138([a, b, d, h, i, g, c, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1141([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_94([a, e, f, b, d, c, g, h, i], is_dual)
    } else {
        select_94([a, e, f, c, d, b, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1143([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_68([a, f, d, g, h], is_dual)
    } else {
        select_340([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1144([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_71([d, g, h, i, a, f], !is_dual)
    } else {
        select_23([b, c, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_1142([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1143([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1144([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1140([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1141([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_1142([b, a, c, d, h, i, j, k, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1139([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1140([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_1140([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_1131([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1132([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1139([a, b, i, g, k, l, m, h, j, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1130([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_1131([a, b, j, k, l, m, c, h, d, i, e, f, g], !is_dual)
    } else {
        select_1132([a, b, j, c, l, m, k, h, d, i, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1109([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_1110([a, b, c, d, e, f, g, i, j, k, l, h], is_dual)
    } else {
        select_1130([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1150([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_81([a, b, g, i, h, f], !is_dual)
    } else {
        select_501([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1149([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1150([a, b, i, j, f, h, c, g, e], !is_dual)
    } else {
        select_509([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_588([a, b, i, k, j, h, f, c], !is_dual)
    } else {
        select_1149([a, b, i, j, k, f, h, g, d, e], !is_dual)
    }
}
/// n = 8, i = 1
fn select_1154([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_29([a, b, c, d, e, g, h], is_dual)
    } else {
        select_29([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_1153([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1154([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_899([g, c, d, e, f, a, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1156([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_117([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_117([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1157([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1103([a, b, h, i, j], is_dual)
    } else {
        select_63([c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1155([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1156([g, c, d, e, f, a, h, i, j], is_dual)
    } else {
        select_1157([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1152([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1153([a, b, d, e, f, g, c, h], is_dual)
    } else {
        select_1155([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1158([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_139([a, b, c, d, e, f, g, i, j], is_dual)
    } else {
        select_327([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1151([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1152([a, b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1158([a, b, k, l, m, h, j, c, d, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1147([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1148([a, b, j, l, m, h, k, c, d, e, i], !is_dual)
    } else {
        select_1151([a, b, d, e, c, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_1162([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_259([a, d, e, b, c, f, g], is_dual)
    } else {
        select_516([a, b, c, d, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1165([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_32([a, c, d, e, f, h], is_dual)
    } else {
        select_32([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1164([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_141([a, h, d, e, j, g], is_dual)
    } else {
        select_1165([a, g, c, b, f, i, j, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1166([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_453([b, d, c, e, f, g, h], is_dual)
    } else {
        select_215([a, b, d, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1163([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1164([b, d, e, a, c, g, f, h, i, j], is_dual)
    } else {
        select_1166([b, f, d, e, a, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1161([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1162([a, b, f, c, e, g, h, i], is_dual)
    } else {
        select_1163([a, c, e, b, d, g, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1160([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1161([b, a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_844([g, i, k, l, f, h, a, j, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1159([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1160([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1160([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1146([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1147([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1159([a, b, d, e, i, f, c, h, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1170([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_750([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_74([f, g, a, i, j, h, b], !is_dual)
    }
}
/// n = 9, i = 2
fn select_1171([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_258([a, b, d, c, e, g, h, f, i], is_dual)
    } else {
        select_258([a, c, d, b, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1169([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1170([a, b, c, d, h, g, i, j, k, l], is_dual)
    } else {
        select_1171([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1168([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1169([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1169([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_1177([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_54([b, c, d, e, g, h], is_dual)
    } else {
        select_55([a, d, e, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1176([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_235([a, g, d, e, f, h, i, j], is_dual)
    } else {
        select_1177([a, d, e, b, c, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1176([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1176([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1174([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_868([d, g, e, f, a, b, h, i, j, k], is_dual)
    } else {
        select_1175([a, b, c, h, e, f, g, i, j, k], is_dual)
    }
}
/// n = 6, i = 2
fn select_1180([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_313([a, c, d, b, e, f], is_dual)
    } else {
        select_313([b, c, d, a, e, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1179([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, h], is_dual)
    } else {
        select_1180([a, b, c, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1178([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_541([a, b, c, e, f, d, g, h], is_dual)
    } else {
        select_1179([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1173([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1174([a, b, d, f, c, e, g, h, i, j, k], is_dual)
    } else {
        select_1178([a, b, g, c, e, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1183([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_878([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_153([e, i, a, g, h, b, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1185([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_77([b, c, d, g, e, f, h], is_dual)
    } else {
        select_88([g, h, i, a, e, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1184([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_495([b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1185([a, c, d, e, h, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1183([f, b, e, d, a, g, h, i, j], is_dual)
    } else {
        select_1184([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1182([a, c, h, d, e, b, g, i, j, k], is_dual)
    } else {
        select_770([a, c, d, e, b, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1172([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1173([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1181([a, b, d, f, c, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1167([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1168([a, b, d, h, e, g, c, i, j, k, l, m], is_dual)
    } else {
        select_1172([a, b, d, c, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1145([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1146([a, b, c, e, g, f, h, d, i, j, k, l, m], is_dual)
    } else {
        select_1167([a, b, c, e, g, d, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_1108([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_1109([a, b, c, e, f, g, i, j, k, d, l, m, n], is_dual)
    } else {
        select_1145([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_1061([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_1062([a, b, c, d, f, g, i, j, e, k, l, m, n], is_dual)
    } else {
        select_1108([a, b, c, d, f, e, g, h, i, m, j, k, l, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_1194([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_224([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_224([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_1195([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_444([a, b, f, c, g], is_dual)
    } else {
        select_74([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1193([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1194([a, b, c, e, f, g, h, i], is_dual)
    } else {
        select_1195([a, b, c, d, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1196([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_545([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_545([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1192([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1193([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1196([a, b, d, h, e, c, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1191([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_417([a, b, c, d, e, h, i, g, j], is_dual)
    } else {
        select_1192([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1199([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_74([a, b, c, d, e, g, h], is_dual)
    } else {
        select_74([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1198([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_278([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1199([a, b, f, i, j, k, c, h], !is_dual)
    }
}
/// n = 9, i = 2
fn select_1200([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_588([a, b, d, e, f, h, g, i], is_dual)
    } else {
        select_1004([a, b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1197([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1198([a, b, g, d, f, c, h, i, j, k, l], is_dual)
    } else {
        select_1200([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1190([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1191([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1197([a, b, c, d, f, e, g, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1189([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_1146([a, b, c, d, e, f, g, h, i, l, j, k, m], is_dual)
    } else {
        select_1190([a, b, c, k, m, n, l, d, h, j, e, i], !is_dual)
    }
}
/// n = 11, i = 3
fn select_1204([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1174([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1174([a, b, d, e, f, g, c, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1208([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_215([b, c, d, f, e, g], is_dual)
    } else {
        select_88([f, g, h, a, e, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1207([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1208([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_356([e, b, d, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1206([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1207([a, h, i, e, b, g, c, f], !is_dual)
    } else {
        select_709([a, h, i, g, b, e, f, c, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1212([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([c, d, e, f], is_dual)
    } else {
        select_62([h, i, a, b, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1211([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_230([f, b, c, d, e, g, h, i], is_dual)
    } else {
        select_1212([a, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1210([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_229([b, a, d, e, f, g, c, h, i], is_dual)
    } else {
        select_1211([b, c, d, e, f, g, a, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1209([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1210([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_512([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1205([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1206([a, b, i, k, c, j, d, e, h], !is_dual)
    } else {
        select_1209([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1203([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1204([a, b, d, e, g, c, f, h, i, k, j], is_dual)
    } else {
        select_1205([a, b, c, d, f, e, h, j, i, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_1216([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_20([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_259([a, h, c, d, e, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1215([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_36([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1216([c, b, d, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_778([b, c, d, e, f, g, h], is_dual)
    } else {
        select_210([g, i, k, a, b, j, c, d, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1214([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1215([c, a, e, f, b, d, g, h, i, j], is_dual)
    } else {
        select_1217([a, b, c, d, e, h, g, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1213([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1214([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_1214([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1202([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1203([a, b, c, e, d, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_1213([a, b, c, e, f, g, d, h, j, i, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_1224([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_52([a, c, d, e, g, h], is_dual)
    } else {
        select_55([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1223([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_640([b, e, c, d, f, g, i], is_dual)
    } else {
        select_1224([a, f, c, d, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1225([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_100([j, h, e, k, i, d, f, b], !is_dual)
    } else {
        select_215([a, c, e, h, g, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_1222([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1223([j, i, h, k, f, g, a, e, d, c], !is_dual)
    } else {
        select_1225([b, c, a, e, g, d, i, h, f, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1227([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_453([b, a, c, d, e, f, g], is_dual)
    } else {
        select_188([a, b, e, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1226([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_102([a, b, g, i, j, d, f], is_dual)
    } else {
        select_1227([a, d, c, f, e, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1221([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1222([a, b, c, e, f, d, g, i, j, h, k], is_dual)
    } else {
        select_1226([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1231([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_62([b, c, f, e, h], is_dual)
    } else {
        select_83([a, b, d, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1230([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_453([d, b, c, g, f, e, h], is_dual)
    } else {
        select_1231([g, i, j, d, h, a, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1229([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1052([c, a, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_1230([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1232([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_736([a, b, c, d, f, i, h, j], is_dual)
    } else {
        select_84([a, c, d, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1228([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1229([b, a, c, d, f, h, i, g, j, k], is_dual)
    } else {
        select_1232([b, c, d, e, a, f, g, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1220([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1221([j, i, l, f, a, k, g, b, d, c, h], !is_dual)
    } else {
        select_1228([c, d, b, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_1236([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_382([b, g, c, a, f, h], is_dual)
    } else {
        select_230([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_1238([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_89([a, b, c, d, e, f], is_dual)
    } else {
        select_62([a, c, d, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1237([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_141([b, f, d, e, h, g], is_dual)
    } else {
        select_1238([f, h, i, a, g, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1235([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1236([a, c, f, d, e, g, h, i], is_dual)
    } else {
        select_1237([b, a, g, d, e, f, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1234([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_1235([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_55([k, a, l, h, j], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1241([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_205([g, f, h, a, b, c], !is_dual)
    } else {
        select_188([f, g, h, a, b, e, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1240([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_710([c, b, e, a, f, h, i, g], is_dual)
    } else {
        select_1241([a, c, d, b, g, h, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1239([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_963([b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_1240([a, b, c, g, e, f, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1233([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1234([a, c, d, e, h, f, i, g, j, l, k, m], is_dual)
    } else {
        select_1239([a, b, c, d, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1219([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1220([a, g, b, c, d, j, h, i, f, k, l, m], is_dual)
    } else {
        select_1233([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1218([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1219([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1219([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1201([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1202([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_1218([a, b, d, e, g, f, h, i, j, c, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_1188([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1189([a, b, c, d, e, f, g, i, j, k, l, m, h, n], is_dual)
    } else {
        select_1201([a, b, c, d, e, f, g, i, h, j, m, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1187([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1188([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1188([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_1250([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_304([d, i, j, g, f, b, c], !is_dual)
    } else {
        select_702([g, k, i, j, h, d, e, a, f, c], !is_dual)
    }
}
/// n = 8, i = 2
fn select_1251([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([a, e, c, d, f, h, g], is_dual)
    } else {
        select_122([a, g, b, h, e, f], is_dual)
    }
}
/// n = 13, i = 5
fn select_1249([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1250([j, l, m, h, g, k, a, f, c, i, d], !is_dual)
    } else {
        select_1251([b, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1253([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_453([a, g, b, d, f, e, h], is_dual)
    } else {
        select_53([d, b, c, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_1254([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_85([c, d, e, g, f, a], is_dual)
    } else {
        select_551([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1252([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1253([b, a, d, e, h, g, f, i], is_dual)
    } else {
        select_1254([a, b, c, f, e, i, h, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_1248([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1249([a, c, b, e, d, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_1252([c, f, d, e, b, g, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1257([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_453([e, c, d, a, f, g, h], is_dual)
    } else {
        select_31([d, c, a, b, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1256([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1257([a, c, f, d, e, g, i, h, k], is_dual)
    } else {
        select_113([b, a, c, h, e, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1255([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_222([f, k, l, e, h, a, j, b], !is_dual)
    } else {
        select_1256([b, a, c, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1247([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1248([b, c, d, a, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_1255([b, c, g, e, f, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1246([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1247([a, b, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_1247([b, a, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1245([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1246([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1246([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1244([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1245([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_1245([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1265([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_52([d, b, c, e, f, g], is_dual)
    } else {
        select_55([d, h, i, a, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1266([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_22([a, b, c, d, e, f, g], is_dual)
    } else {
        select_39([a, g, i, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1264([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_1265([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1266([f, i, j, e, a, h, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1267([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([b, c, d, f], is_dual)
    } else {
        select_52([e, i, j, a, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1263([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1264([a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1267([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1269([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1265([a, b, h, e, g, f, i, j, k], is_dual)
    } else {
        select_1267([a, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1271([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_22([b, c, d, e, g, f, h], is_dual)
    } else {
        select_52([h, j, k, a, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1270([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_640([g, b, c, d, f, h, j], is_dual)
    } else {
        select_1271([g, j, k, l, e, i, a, f, h, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1268([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1269([a, b, d, e, f, c, g, h, i, k, l], is_dual)
    } else {
        select_1270([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1262([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1263([a, d, b, c, e, f, g, i, h, k, l], is_dual)
    } else {
        select_1268([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1273([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_140([a, f, d, e, b, g, i, j], is_dual)
    } else {
        select_405([c, a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1272([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1273([a, b, c, d, e, h, i, g, j, k], is_dual)
    } else {
        select_404([c, d, e, f, a, b, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1261([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1262([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_1272([a, b, e, c, d, f, g, h, i, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_1276([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_932([a, b, c, d, g, f, h, i], is_dual)
    } else {
        select_932([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_495([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_831([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1275([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1276([b, c, e, a, f, d, g, h, i], is_dual)
    } else {
        select_1277([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1279([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_385([a, h, i, j, b, g, c, f, e], !is_dual)
    } else {
        select_1236([a, c, e, b, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1278([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_310([a, h, i, f, j, b, c], !is_dual)
    } else {
        select_1279([a, f, h, k, i, j, g, c, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1275([a, c, e, d, f, b, g, i, h, j], is_dual)
    } else {
        select_1278([a, g, j, k, l, b, i, c, e, h, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1261([a, b, d, f, e, g, c, h, i, j, k, l], is_dual)
    } else {
        select_1274([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_1260([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_836([a, b, c, k, l, j, i, d, h, f, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1285([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_188([g, f, i, a, b, h, c], !is_dual)
    } else {
        select_772([b, d, e, a, c, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1284([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_650([f, b, d, e, a, h, g, i], is_dual)
    } else {
        select_1285([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1283([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1284([a, b, d, e, g, f, i, h, j], is_dual)
    } else {
        select_570([a, f, i, k, g, j, b, c, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1289([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([a, b, c, d, e, f, g], is_dual)
    } else {
        select_34([e, b, c, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1288([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_167([a, b, d, f, g, e, h, i], is_dual)
    } else {
        select_1289([b, c, e, f, g, d, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1290([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, c, d, e, f, g, h], is_dual)
    } else {
        select_32([a, g, d, f, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1287([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1288([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_1290([b, a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1291([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_736([e, h, a, i, f, g, c, b], !is_dual)
    } else {
        select_629([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1286([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1287([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_1291([a, e, i, k, b, g, h, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1282([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1283([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1286([a, f, k, l, b, i, j, g, c, h, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1281([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1282([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_1282([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1295([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_650([a, b, d, e, f, h, g, i], is_dual)
    } else {
        select_97([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1294([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1295([e, i, a, j, k, b, f, h, g], !is_dual)
    } else {
        select_239([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1294([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_1294([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1298([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_565([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_565([a, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1299([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1157([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_899([g, c, d, e, f, b, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_1297([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1298([g, a, k, l, b, i, j, c, h], !is_dual)
    } else {
        select_1299([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1296([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1297([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_1297([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1292([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1293([a, b, c, l, m, j, k, h, d, e, i], !is_dual)
    } else {
        select_1296([a, b, c, d, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1280([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1281([a, b, c, e, i, f, d, h, j, k, l, m], is_dual)
    } else {
        select_1292([a, b, c, e, f, d, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1258([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_1259([a, b, c, d, m, l, n, k, j, h, e, i], !is_dual)
    } else {
        select_1280([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1243([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1244([a, b, c, d, e, f, g, i, h, j, l, k, m], is_dual)
    } else {
        select_1258([a, b, c, d, e, g, f, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_1306([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_140([d, h, g, i, a, e, c, f], !is_dual)
    } else {
        select_422([a, b, e, d, g, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1308([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_68([g, f, a, b, c], !is_dual)
    } else {
        select_153([g, h, a, f, e, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1309([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_167([h, i, j, g, a, e, b, c], !is_dual)
    } else {
        select_154([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1307([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1308([a, b, c, f, g, h, e, j], is_dual)
    } else {
        select_1309([b, a, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1305([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1306([g, e, j, a, h, i, b, f, c], !is_dual)
    } else {
        select_1307([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1305([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1305([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_139([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_327([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1311([a, b, c, d, e, g, i, j, h], is_dual)
    } else {
        select_793([a, b, e, f, c, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1303([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1304([a, b, d, e, g, i, c, h, j, k], is_dual)
    } else {
        select_1310([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 1
fn select_1315([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_594([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_594([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1316([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_348([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_53([a, f, d, e, b, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_1314([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1315([e, f, a, b, c, d, g, h, i], is_dual)
    } else {
        select_1316([f, e, i, a, b, g, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1313([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1311([a, b, c, d, e, i, j, k, h], is_dual)
    } else {
        select_1314([c, d, f, g, e, a, b, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1312([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1304([a, b, d, e, i, j, c, h, k, l], is_dual)
    } else {
        select_1313([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1302([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1303([a, b, c, d, e, h, f, i, j, k, l], is_dual)
    } else {
        select_1312([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1301([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1302([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_1302([a, b, c, d, e, g, f, h, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1323([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_53([b, a, d, e, g, i], is_dual)
    } else {
        select_266([a, c, b, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1324([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_212([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_103([b, c, f, e, d, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1322([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1323([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_1324([b, g, d, a, f, j, h, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1326([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_75([a, e, f, h, j], is_dual)
    } else {
        select_252([b, c, d, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1325([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1073([c, d, g, f, a, i, h], is_dual)
    } else {
        select_1326([b, c, d, f, a, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1321([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1322([a, b, d, c, f, h, i, g, j, k, l], is_dual)
    } else {
        select_1325([a, d, c, g, f, e, i, h, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1328([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_167([f, i, h, g, a, d, b, e], !is_dual)
    } else {
        select_188([f, g, h, a, d, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1329([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_68([h, e, b, a, f], !is_dual)
    } else {
        select_212([b, c, a, d, e, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1327([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1328([d, b, c, e, f, h, g, j, i], is_dual)
    } else {
        select_1329([b, a, f, g, e, i, h, d, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1320([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_1321([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1327([b, d, c, g, i, h, j, k, a, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1333([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_100([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_99([e, h, f, g, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1334([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_624([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_52([a, h, i, f, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1332([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1333([b, c, e, g, f, i, h, k], is_dual)
    } else {
        select_1334([f, k, l, g, j, a, b, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1331([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_109([f, g, l, a, i, j, h, c, d], !is_dual)
    } else {
        select_1332([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1337([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_292([f, g, h, a, b, c, e], !is_dual)
    } else {
        select_874([b, c, a, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_1336([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1333([b, c, d, f, e, h, g, i], is_dual)
    } else {
        select_1337([e, f, i, k, j, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1338([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_157([a, e, c, d, g, f, j, h], is_dual)
    } else {
        select_955([i, j, g, a, e, h, b, c, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1335([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1336([a, b, c, d, f, e, h, g, i, j, k], is_dual)
    } else {
        select_1338([f, e, i, k, g, j, a, h, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1330([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1331([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1335([g, b, c, e, a, f, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1319([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1320([a, c, e, d, f, b, g, i, h, j, k, l], is_dual)
    } else {
        select_1330([a, c, e, h, f, g, b, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_1343([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_640([b, c, d, e, h, g, i], is_dual)
    } else {
        select_122([a, b, c, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_30([c, d, e, g], is_dual)
    } else {
        select_52([a, b, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1344([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_499([a, c, g, f, b, h, i, j], is_dual)
    } else {
        select_1345([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1342([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1343([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1344([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1347([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_141([a, b, c, i, g, k], is_dual)
    } else {
        select_772([b, d, g, e, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1346([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1347([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_520([c, g, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1341([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1342([b, c, a, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1346([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1348([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_512([b, a, c, d, e, f, g, i, j], is_dual)
    } else {
        select_389([a, d, e, f, c, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1340([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1341([a, c, b, f, d, e, h, i, j, g, k], is_dual)
    } else {
        select_1348([a, c, f, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1351([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_519([b, d, a, c, e, g, f, i, h], is_dual)
    } else {
        select_1254([b, f, e, d, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1350([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1351([a, b, g, e, d, i, h, f, j], is_dual)
    } else {
        select_258([a, b, f, e, c, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1349([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_904([b, c, a, d, h, f, g, i, k], is_dual)
    } else {
        select_1350([a, d, e, b, c, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1339([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1340([b, c, e, a, d, f, g, i, h, k, j], is_dual)
    } else {
        select_1349([b, c, e, f, d, g, i, h, a, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1318([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1319([a, b, d, e, c, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_1339([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1317([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1318([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_1318([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1300([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1301([a, b, c, f, h, d, g, e, i, j, k, l], is_dual)
    } else {
        select_1317([a, b, c, f, e, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_1242([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1243([a, b, c, d, f, h, g, i, j, e, k, l, m, n], is_dual)
    } else {
        select_1300([a, b, c, d, f, e, h, g, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_1186([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1187([a, b, c, d, e, h, g, i, f, j, l, m, k, n], is_dual)
    } else {
        select_1242([a, b, c, d, e, h, f, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1060([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_1061([a, b, c, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_1186([a, b, c, d, e, g, f, h, i, j, m, k, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_738([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_739([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_1060([a, b, c, d, e, f, g, i, h, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_9([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    } else {
        select_738([a, b, c, d, e, f, h, g, i, j, m, k, l, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_1364([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_100([f, g, h, i, a, e, d, c], !is_dual)
    } else {
        select_717([c, a, b, e, d, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1363([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1364([f, k, i, j, g, b, a, d, h], !is_dual)
    } else {
        select_97([b, c, e, g, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1365([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_97([a, b, d, h, f, j, g, i], is_dual)
    } else {
        select_97([a, c, e, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1362([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1363([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_1365([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1367([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([a, c, e, b, h, f, g], is_dual)
    } else {
        select_84([a, b, d, c, h, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1366([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1367([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_222([a, f, c, e, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1361([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1362([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1366([a, b, e, g, f, d, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1370([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_571([e, f, i, a, g, h, b, c, d], !is_dual)
    } else {
        select_571([e, g, i, a, f, h, c, b, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1369([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1370([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1370([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1372([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_110([a, b, c, f, h, e, g], is_dual)
    } else {
        select_110([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1371([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1372([a, b, d, g, f, c, i, h], is_dual)
    } else {
        select_327([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1369([a, f, c, e, d, g, i, h, j], is_dual)
    } else {
        select_1371([a, g, j, k, i, f, e, h, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1360([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1361([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1368([a, i, k, l, g, b, c, j, d, e, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1376([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_81([b, e, c, a, g, f], is_dual)
    } else {
        select_606([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1375([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_226([c, d, b, a, e, f, g, h, i], is_dual)
    } else {
        select_1376([b, c, d, h, a, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1377([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_233([a, c, d, e, f, b, g, h, j], is_dual)
    } else {
        select_233([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1374([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1375([a, c, d, f, b, e, g, h, j, i], is_dual)
    } else {
        select_1377([a, b, c, e, d, g, i, k, h, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1381([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_453([a, e, c, g, f, d, i], is_dual)
    } else {
        select_453([b, d, c, g, f, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1380([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1381([c, e, b, d, g, f, i, j, h], is_dual)
    } else {
        select_1016([c, f, a, d, h, e, j, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1379([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1380([c, d, a, b, e, f, g, h, i, j], is_dual)
    } else {
        select_1380([d, c, b, a, f, e, h, g, j, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1384([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_21([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_717([a, b, h, f, e, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1385([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_21([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1289([a, b, h, f, g, e, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1384([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1385([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1382([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([b, g, c, d, a, i, h], is_dual)
    } else {
        select_1383([b, a, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1378([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1379([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_1382([c, b, a, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1373([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1374([a, b, c, e, d, f, h, g, j, i, k, l], is_dual)
    } else {
        select_1378([a, e, c, f, b, h, g, d, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1359([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1360([a, b, d, c, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_1373([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1311([a, b, c, e, d, g, i, k, h], is_dual)
    } else {
        select_1375([a, b, d, f, c, e, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1388([a, b, d, e, c, f, h, g, j, i, k], is_dual)
    } else {
        select_1378([a, e, b, f, d, h, g, c, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1386([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1387([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_1387([a, c, d, b, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_1359([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_1386([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1393([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_425([a, g, i, j, b, c, h, f], !is_dual)
    } else {
        select_509([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1395([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_97([a, b, d, e, f, h, g, i], is_dual)
    } else {
        select_1241([i, f, j, h, e, a, g, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1397([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_292([b, e, c, a, f, g, h], is_dual)
    } else {
        select_626([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1396([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_974([f, h, i, e, b, a, g, c], !is_dual)
    } else {
        select_1397([c, b, d, a, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1394([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1395([a, c, b, d, e, g, h, f, i, j], is_dual)
    } else {
        select_1396([e, g, i, j, f, a, h, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1392([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1393([b, a, c, f, e, g, i, h, l, j], is_dual)
    } else {
        select_1394([j, k, l, i, b, a, c, f, d, h], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1401([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_626([f, h, i, d, a, g, b, e], !is_dual)
    } else {
        select_188([f, g, i, d, a, e, c], !is_dual)
    }
}
/// n = 6, i = 2
fn select_1402([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_68([e, b, a, d, f], is_dual)
    } else {
        select_382([a, b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1400([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1401([i, j, h, d, g, a, e, b, f], !is_dual)
    } else {
        select_1402([a, c, g, d, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_1404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_820([b, a, g, e, i, f, j, k], is_dual)
    } else {
        select_53([a, f, c, d, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1404([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1404([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1399([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1400([b, c, f, a, e, h, g, i, j, k], is_dual)
    } else {
        select_1403([b, c, a, d, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1406([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1401([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1401([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_1407([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_67([a, e, d, b, f, g], is_dual)
    } else {
        select_729([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1406([j, k, i, a, g, d, b, c, h], !is_dual)
    } else {
        select_1407([a, d, g, e, i, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1398([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1399([b, d, c, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_1405([b, a, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1391([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1392([a, b, d, c, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_1398([c, b, a, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1390([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1391([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1391([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_1411([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_602([a, c, b, d, e, g, f, h, i, k], is_dual)
    } else {
        select_709([e, i, j, h, a, b, g, f, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1413([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_192([b, c, a, e, d, f], is_dual)
    } else {
        select_606([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1412([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1413([f, a, b, c, d, h, i, g], is_dual)
    } else {
        select_245([a, d, e, b, c, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1411([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1412([e, a, j, i, k, b, h, f, c, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1417([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_95([a, b, c, d, e, g, f], is_dual)
    } else {
        select_313([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 7, i = 2
fn select_1418([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_68([g, e, b, a, f], !is_dual)
    } else {
        select_95([b, a, c, d, e, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1416([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1417([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_1418([a, b, d, e, c, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1419([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1364([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_97([a, g, h, i, d, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1415([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1416([a, b, c, e, f, g, h, i], is_dual)
    } else {
        select_1419([a, h, j, b, f, i, c, d, g], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1423([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([c, d, g, f, a, e], !is_dual)
    } else {
        select_34([c, b, d, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1422([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1423([f, d, a, h, e, i, j], is_dual)
    } else {
        select_702([a, d, b, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1421([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1059([e, b, c, f, a, g, h, i, j], is_dual)
    } else {
        select_1422([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1420([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_579([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_1421([a, b, d, c, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1414([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1415([a, g, i, j, k, b, h, e, f, d], !is_dual)
    } else {
        select_1420([a, b, d, c, f, h, e, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1409([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1410([a, b, c, e, f, d, g, h, i, k, j], is_dual)
    } else {
        select_1414([a, b, d, e, c, g, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1427([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_886([b, c, d, f, e, h, g], is_dual)
    } else {
        select_70([g, f, i, a, h, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_886([d, i, h, g, e, a, b], !is_dual)
    } else {
        select_102([d, g, h, a, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1426([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1427([a, b, c, d, f, e, h, g, i], is_dual)
    } else {
        select_1428([e, b, d, a, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1431([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_213([a, b, e, f, d, h, i], is_dual)
    } else {
        select_382([b, c, d, f, g, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_1432([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_68([b, c, f, e, g], is_dual)
    } else {
        select_130([f, g, i, d, h, e, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1430([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1431([e, h, i, d, g, b, a, f, c], !is_dual)
    } else {
        select_1432([d, h, i, e, g, a, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1429([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1430([h, f, j, a, e, i, g, b, d], !is_dual)
    } else {
        select_210([e, h, j, f, a, i, g, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1425([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1426([b, a, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_1429([a, i, j, k, b, e, h, f, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1433([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_576([a, e, d, g, b, f, h, i, j], is_dual)
    } else {
        select_1420([a, b, d, c, f, h, e, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1424([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1425([a, e, h, k, f, i, j, g, b, c, d], !is_dual)
    } else {
        select_1433([a, e, i, k, h, j, f, g, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1409([a, f, g, i, k, b, j, h, c, d, e], !is_dual)
    } else {
        select_1424([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1389([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1390([a, b, d, c, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_1408([a, b, k, l, g, d, c, j, e, i, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1357([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_1358([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_1389([a, b, d, e, f, g, h, i, j, c, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1356([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1357([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_1357([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1441([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1288([a, c, b, e, d, f, h, g, i, j], is_dual)
    } else {
        select_718([a, e, c, g, f, h, d, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1440([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1441([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_1307([b, a, c, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1442([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1372([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_222([a, h, e, i, f, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1440([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_1442([a, b, g, c, h, f, i, j, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1438([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1439([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_1439([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1437([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1438([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_1438([a, b, c, e, f, d, g, h, j, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_1448([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_51([a, e, c, d, f, g], is_dual)
    } else {
        select_186([a, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1447([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_501([a, b, c, d, e, f, g, i], is_dual)
    } else {
        select_1448([a, b, c, d, e, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1446([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1447([a, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_413([a, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1450([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_291([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_632([e, i, f, j, a, b, h, g], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1452([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_98([g, d, a, e, f, b], !is_dual)
    } else {
        select_153([g, f, a, d, e, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1451([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_291([b, a, c, d, f, e, g, i, h], is_dual)
    } else {
        select_1452([a, b, g, f, h, i, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1449([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1450([c, b, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_1451([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1445([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1446([a, c, b, d, e, f, g, j, i, h], is_dual)
    } else {
        select_1449([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1456([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_294([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_213([e, b, d, a, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1455([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_250([a, b, c, e, g, h], is_dual)
    } else {
        select_1456([a, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1454([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1455([a, b, c, e, f, g, h, i, j], is_dual)
    } else {
        select_510([a, b, c, d, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1459([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_238([f, c, d, e, a, g, i], is_dual)
    } else {
        select_1212([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1458([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_270([a, c, d, e, f, b, g, i], is_dual)
    } else {
        select_1459([c, b, d, e, f, a, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1457([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_389([a, d, e, f, b, c, g], is_dual)
    } else {
        select_1458([a, b, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1454([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1457([a, b, h, c, d, e, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1444([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1445([a, h, c, d, e, g, i, b, k, j], is_dual)
    } else {
        select_1453([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1462([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_282([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_413([a, b, c, d, g, h, i, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_1464([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_67([a, b, g, e, f, c], !is_dual)
    } else {
        select_70([a, e, g, b, f, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1463([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_139([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_1464([a, b, i, f, c, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1461([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1462([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1463([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1466([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_421([a, b, e, c, f, g, d, h, i], is_dual)
    } else {
        select_421([a, b, e, d, f, g, c, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1468([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_74([a, f, e, h, i, g, b], !is_dual)
    } else {
        select_311([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1467([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1468([a, j, f, i, g, b, h, c, d], !is_dual)
    } else {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1465([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1466([a, b, d, e, f, c, g, h, j], is_dual)
    } else {
        select_1467([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1460([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1461([a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1465([a, b, g, d, e, f, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1444([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1460([a, b, c, e, f, g, d, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1436([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1437([a, b, c, e, h, f, i, d, j, k], is_dual)
    } else {
        select_1443([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1475([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_581([a, b, e, g, h, i, j], is_dual)
    } else {
        select_325([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1476([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_130([a, c, b, f, e, h, i, g], is_dual)
    } else {
        select_130([a, d, b, f, e, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1474([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1475([a, f, c, d, g, h, e, j, i, k], is_dual)
    } else {
        select_1476([a, d, b, e, g, f, j, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1478([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_453([b, c, d, f, e, g, h], is_dual)
    } else {
        select_361([a, b, c, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1479([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_375([a, c, b, d, e, f, g, i, h], is_dual)
    } else {
        select_122([a, b, d, g, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_1477([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1478([b, e, c, d, g, h, f, i, j], is_dual)
    } else {
        select_1479([b, a, d, f, g, e, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1473([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1474([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_1477([a, b, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1472([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1473([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1473([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1483([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_499([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_499([g, i, h, d, e, a, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1484([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_61([d, f, c, g, e], is_dual)
    } else {
        select_88([a, e, b, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1482([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1483([a, c, b, d, f, g, e, i, h], is_dual)
    } else {
        select_1484([d, h, i, e, f, a, g, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1486([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_803([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_88([b, a, c, h, e, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1485([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_265([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_1486([c, a, d, b, f, g, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1481([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1482([h, e, j, f, a, g, i, c, b], !is_dual)
    } else {
        select_1485([b, a, c, d, g, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1480([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1481([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1481([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1471([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1472([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1480([a, b, d, c, h, i, g, f, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1490([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_391([b, a, c, d, e, g, f, h, j, i], is_dual)
    } else {
        select_1452([a, b, h, g, i, j, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_1489([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1490([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1490([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1491([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_151([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1464([a, b, c, f, g, h, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_1488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1489([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1491([a, b, c, h, g, d, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1487([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_220([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_1488([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1470([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1471([a, b, d, e, f, g, h, i, c, j, k], is_dual)
    } else {
        select_1487([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1497([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_95([g, d, b, c, f, h, j], is_dual)
    } else {
        select_198([h, a, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1496([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1497([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_37([a, b, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1498([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_81([a, f, b, g, h, e], is_dual)
    } else {
        select_144([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1495([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1496([a, c, b, d, e, g, h, f, i, j], is_dual)
    } else {
        select_1498([a, c, f, e, g, b, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1501([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_361([h, f, i, g, a, e, b], !is_dual)
    } else {
        select_141([a, f, c, d, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1500([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_468([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1501([c, b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1499([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_80([a, c, d, f, g, b, h], is_dual)
    } else {
        select_1500([a, c, d, b, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1495([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_1499([a, b, d, c, h, i, g, f, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1502([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_331([a, f, b, d, g, e, h, i], is_dual)
    } else {
        select_331([a, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1493([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1494([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1502([a, c, h, d, f, i, g, j, b], is_dual)
    }
}
/// n = 10, i = 3
fn select_1492([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1493([a, b, d, e, f, g, h, i, c, j], is_dual)
    } else {
        select_242([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1469([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1470([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1492([a, b, c, f, d, g, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1435([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1436([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_1469([a, b, c, d, f, g, e, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1506([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_320([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_557([a, b, c, e, d, f, g, h, i, k, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1511([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_213([b, a, g, f, i, e, h], is_dual)
    } else {
        select_314([b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1510([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_291([b, a, d, f, h, e, g, j, i], is_dual)
    } else {
        select_1511([a, b, c, g, e, h, f, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1513([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_213([a, f, b, d, g, e, h], is_dual)
    } else {
        select_213([a, e, c, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1514([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_77([a, b, d, f, e, g, i], is_dual)
    } else {
        select_122([e, a, c, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1512([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1513([b, d, f, g, e, a, i, h], is_dual)
    } else {
        select_1514([b, d, c, a, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1509([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1510([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1512([a, b, c, g, i, f, h, e, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1508([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1509([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_636([a, d, c, e, f, b, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1518([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_95([a, c, b, h, f, g, i], is_dual)
    } else {
        select_40([c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1517([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1518([b, d, a, e, f, c, g, h, i], is_dual)
    } else {
        select_773([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1516([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_249([a, b, c, d, h, i, j], is_dual)
    } else {
        select_1517([b, a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1515([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1516([b, a, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_514([c, b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1507([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1508([b, c, d, e, f, g, h, i, a, j], is_dual)
    } else {
        select_1515([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1505([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1506([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_1507([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1524([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([g, i, a, h, e, b, c], !is_dual)
    } else {
        select_122([a, b, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1523([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_911([b, a, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1524([a, b, c, d, e, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1522([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1523([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_1306([f, e, j, a, i, h, b, c, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1527([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_100([g, d, h, i, e, f, a, b], !is_dual)
    } else {
        select_129([a, b, c, e, d, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1528([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_88([d, f, h, e, g, a, c], !is_dual)
    } else {
        select_188([d, c, b, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1526([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1527([g, i, j, a, f, h, e, c, d], !is_dual)
    } else {
        select_1528([i, f, j, a, g, h, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1525([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1523([a, b, c, d, f, e, g, h, i, k], is_dual)
    } else {
        select_1526([f, k, e, j, h, b, a, i, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1521([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1522([b, c, d, a, e, f, g, i, h, j], is_dual)
    } else {
        select_1525([b, a, d, c, e, f, h, g, j, k, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1533([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_39([c, d, e, g], is_dual)
    } else {
        select_39([a, b, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([a, f, d, e, h, j], is_dual)
    } else {
        select_39([b, c, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1533([b, e, c, d, f, g, h, i], is_dual)
    } else {
        select_1534([a, c, d, b, f, g, e, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1536([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_69([a, g, h], is_dual)
    } else {
        select_129([a, c, b, d, e, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_213([a, b, g, d, j, e, i], is_dual)
    } else {
        select_1536([a, e, c, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1532([b, d, a, c, e, g, f, i, h, j], is_dual)
    } else {
        select_1535([b, d, c, e, g, f, a, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1530([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1531([a, c, b, d, f, h, i, g, j, k], is_dual)
    } else {
        select_723([b, f, a, d, e, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1538([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_499([a, d, b, g, e, i, f, h], is_dual)
    } else {
        select_382([a, f, c, h, g, d], is_dual)
    }
}
/// n = 10, i = 3
fn select_1537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_120([i, a, b, d, g, h], is_dual)
    } else {
        select_1538([a, c, d, h, e, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1530([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_1537([c, d, a, e, f, b, h, i, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1520([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1521([b, c, d, h, f, a, g, i, j, k, l], is_dual)
    } else {
        select_1529([c, b, d, a, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_282([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_299([a, i, f, j, b, c, h, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1542([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_282([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_845([a, b, i, f, j, c, h, d, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1540([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1541([a, h, e, i, k, b, j, f, g, c], !is_dual)
    } else {
        select_1542([a, e, h, i, k, b, j, g, f, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1546([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_98([b, a, d, f, g, h], is_dual)
    } else {
        select_487([a, c, d, f, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_1545([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_618([g, h, f, i, a, e, d, c], !is_dual)
    } else {
        select_1546([b, c, a, e, h, f, d, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_1548([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_238([a, b, c, d, e, f, g], is_dual)
    } else {
        select_83([a, f, e, b, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1547([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_565([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_1548([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1544([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1545([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_1547([a, h, g, i, d, f, e, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1550([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_144([a, c, d, e, b, f, g, i], is_dual)
    } else {
        select_144([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1549([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_413([a, b, c, d, g, h, i, f], is_dual)
    } else {
        select_1550([a, b, d, c, e, f, g, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1543([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1544([a, j, f, b, i, h, d, c, g], !is_dual)
    } else {
        select_1549([a, c, b, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1539([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1540([a, b, c, d, e, f, g, h, k, i, j], is_dual)
    } else {
        select_1543([a, h, e, j, k, b, f, c, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1519([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1520([a, b, c, d, e, g, f, h, j, i, k, l], is_dual)
    } else {
        select_1539([a, g, f, l, b, i, k, c, j, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1504([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1505([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1519([a, c, d, e, f, g, h, i, b, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1503([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1504([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1504([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1434([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1435([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1503([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1355([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1356([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1434([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1561([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_89([b, c, d, f, g, h], is_dual)
    } else {
        select_26([a, d, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1560([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_213([e, i, j, a, f, g, d], !is_dual)
    } else {
        select_1561([a, c, d, b, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1563([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_99([a, b, d, e, h, i], is_dual)
    } else {
        select_99([a, c, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1562([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1563([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_213([d, i, j, a, g, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1559([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1560([a, f, b, c, e, i, g, j, k, h], is_dual)
    } else {
        select_1562([a, b, d, e, g, f, h, j, k, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1564([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1290([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1308([a, b, c, f, g, h, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1558([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1559([a, c, d, b, f, g, h, i, e, j, k], is_dual)
    } else {
        select_1564([a, b, e, d, f, h, i, g, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1565([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_425([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_443([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1558([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1565([e, a, b, h, f, i, j, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1568([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, h], is_dual)
    } else {
        select_1070([f, h, i, a, b, c, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1567([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_269([c, d, e, a, b, f, g, h], is_dual)
    } else {
        select_1568([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1571([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([c, b, f, e, h, g], is_dual)
    } else {
        select_1165([a, c, d, b, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1570([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1571([b, c, d, e, a, g, f, h, i], is_dual)
    } else {
        select_113([b, d, f, e, a, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1570([a, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_213([c, b, i, f, k, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1566([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1567([a, f, d, b, e, h, g, i, k], is_dual)
    } else {
        select_1569([b, a, d, c, e, h, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1557([b, d, c, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_1566([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1576([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_361([g, e, h, a, b, f, c], !is_dual)
    } else {
        select_71([b, c, e, d, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1575([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1576([a, c, b, d, e, g, h, f], is_dual)
    } else {
        select_1576([a, d, b, c, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1574([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1575([a, c, b, f, e, h, i, g], is_dual)
    } else {
        select_120([e, c, g, d, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1578([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_87([a, b, g, e, h, i, f], is_dual)
    } else {
        select_1022([e, f, c, d, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1580([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_38([b, c, a, d, e, g, f], is_dual)
    } else {
        select_33([a, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1581([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_167([a, c, b, d, e, f, g, i], is_dual)
    } else {
        select_167([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1579([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1580([b, c, e, d, f, i, g, h], is_dual)
    } else {
        select_1581([a, b, c, g, h, f, i, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1577([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1578([a, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_1579([a, c, b, g, e, h, f, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1574([b, d, c, g, e, h, i, j, f], is_dual)
    } else {
        select_1577([b, a, d, c, e, g, f, i, j, h, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1586([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, b, c, e, g, h], is_dual)
    } else {
        select_26([c, d, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1585([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1586([a, c, b, g, f, h, i, j], is_dual)
    } else {
        select_230([a, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1584([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1093([b, a, g, i, h, j, f], is_dual)
    } else {
        select_1585([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1583([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1584([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_53([f, g, d, e, c, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1588([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_821([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_821([c, b, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1589([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_699([k, j, i, h, a, b, f, d, c], !is_dual)
    } else {
        select_157([a, b, d, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1587([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1588([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1589([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1582([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1583([c, e, d, a, b, f, i, h, g, j], is_dual)
    } else {
        select_1587([a, b, c, e, d, f, g, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1572([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1573([b, c, d, e, f, h, g, a, i, j, k], is_dual)
    } else {
        select_1582([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1555([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1556([a, d, e, c, f, g, h, b, i, k, j], is_dual)
    } else {
        select_1572([a, d, e, b, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1596([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_52([a, b, c, e, h, i], is_dual)
    } else {
        select_55([d, b, c, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1595([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1596([a, c, d, g, f, b, h, i, j], is_dual)
    } else {
        select_135([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1594([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_376([a, b, c, g, h, i, j, f], is_dual)
    } else {
        select_1595([b, c, d, e, a, g, f, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1597([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_324([a, b, c, d, f, e, g], is_dual)
    } else {
        select_152([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1593([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1594([a, c, d, b, e, f, g, h, j, i], is_dual)
    } else {
        select_1597([a, c, h, f, i, g, b, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1599([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_808([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_808([c, b, d, e, a, f, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1601([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_98([h, f, a, g, d, b], !is_dual)
    } else {
        select_82([a, f, c, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1600([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_81([a, g, c, d, f, h], is_dual)
    } else {
        select_1601([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1598([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1599([a, b, c, d, f, g, h, e, i], is_dual)
    } else {
        select_1600([b, c, d, a, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1592([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1593([a, c, d, b, e, f, h, g, i, j], is_dual)
    } else {
        select_1598([a, c, g, d, f, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1605([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_141([a, b, d, f, i, g], is_dual)
    } else {
        select_304([h, f, j, a, e, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1604([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1605([a, c, e, d, f, h, g, i, k, j], is_dual)
    } else {
        select_102([i, j, h, a, b, f, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1606([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1381([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1016([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1603([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1604([a, b, d, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_1606([a, b, f, e, c, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1608([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_886([b, c, d, e, f, g, h], is_dual)
    } else {
        select_452([a, c, d, g, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1610([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_188([h, i, g, a, b, e, c], !is_dual)
    } else {
        select_188([g, i, h, a, b, f, d], !is_dual)
    }
}
/// n = 7, i = 2
fn select_1611([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_95([a, d, b, c, e, f, g], is_dual)
    } else {
        select_26([d, f, e, b], is_dual)
    }
}
/// n = 10, i = 3
fn select_1609([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1610([a, c, b, d, g, f, i, j, h], is_dual)
    } else {
        select_1611([c, b, e, a, h, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1607([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1608([a, d, f, e, b, g, h, i, j], is_dual)
    } else {
        select_1609([a, c, d, e, b, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1602([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1603([b, a, d, e, c, h, g, i, f, k, j], is_dual)
    } else {
        select_1607([c, d, e, b, a, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1592([c, d, e, b, a, h, f, g, i, j], is_dual)
    } else {
        select_1602([b, a, c, e, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1617([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_39([a, g, c, i], is_dual)
    } else {
        select_129([a, b, d, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1616([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_551([e, b, c, d, g, f, h, i], is_dual)
    } else {
        select_1617([a, d, f, c, g, e, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1615([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1616([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1616([c, b, d, e, f, a, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1614([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1229([c, a, d, b, g, h, i, f, k, j], is_dual)
    } else {
        select_1615([b, c, d, e, a, g, f, i, h, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_1619([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_81([c, d, e, g, f, b], !is_dual)
    } else {
        select_252([e, g, c, d, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1621([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_61([e, a, f, i, d], is_dual)
    } else {
        select_1238([b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1622([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([b, f, e, a, g], is_dual)
    } else {
        select_100([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1620([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1621([h, i, j, e, a, g, b, f, c], !is_dual)
    } else {
        select_1622([a, c, e, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1618([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1619([i, f, e, g, a, h, b], !is_dual)
    } else {
        select_1620([b, c, a, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1613([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1614([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_1618([a, d, e, h, g, f, c, k, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1612([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1613([c, d, a, e, b, h, g, i, f, j, k], is_dual)
    } else {
        select_1613([d, c, b, e, a, i, f, h, g, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1590([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1591([c, e, a, d, f, g, i, b, h, k, j], is_dual)
    } else {
        select_1612([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1554([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1555([a, c, b, f, d, e, h, i, j, k, g], is_dual)
    } else {
        select_1590([a, c, d, f, b, e, h, i, g, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1553([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1554([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1554([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1630([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_100([a, e, c, d, f, g, i, h], is_dual)
    } else {
        select_803([e, i, j, f, h, a, g, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1629([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_535([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_1630([b, i, c, d, a, g, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_1632([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_29([a, b, c, d, f, g, h], is_dual)
    } else {
        select_640([e, h, a, b, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1631([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1632([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1630([b, g, d, e, a, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1628([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1629([a, b, e, f, c, d, g, i, h, j, k, l], is_dual)
    } else {
        select_1631([a, b, h, e, f, g, c, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1634([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_74([a, h, f, i, j, e, b], !is_dual)
    } else {
        select_280([a, f, h, i, j, g, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1633([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1634([a, d, b, c, g, h, i, f, j, k], is_dual)
    } else {
        select_1351([a, b, d, c, e, g, f, h, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_1627([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1628([a, b, c, f, d, e, g, h, i, l, j, n], is_dual)
    } else {
        select_1633([a, k, g, n, m, b, l, i, j, c, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_1626([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1627([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1627([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_1638([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_67([a, b, c, h, e, g], is_dual)
    } else {
        select_81([a, g, b, d, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1637([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1634([a, d, b, c, f, g, h, e, i, j], is_dual)
    } else {
        select_1638([a, b, d, c, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1639([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1631([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1631([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1636([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1637([a, j, g, l, b, k, h, i, c, d], !is_dual)
    } else {
        select_1639([a, b, c, d, e, f, g, h, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1635([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1636([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_1636([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1625([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1626([a, b, c, f, d, e, g, h, i, k, l, j, n, m], is_dual)
    } else {
        select_1635([a, b, c, d, e, f, h, j, k, l, i, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_1645([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_379([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1289([a, c, d, h, e, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1647([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_22([e, c, d, f, i, h, k], is_dual)
    } else {
        select_22([e, a, b, f, j, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1646([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1647([a, b, d, e, c, f, g, h, j, k, i], is_dual)
    } else {
        select_266([a, c, b, f, i, k, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1644([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1645([f, e, c, d, a, g, h, j, i, k, l], is_dual)
    } else {
        select_1646([b, a, e, c, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1649([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, c, d, e, f, h, g], is_dual)
    } else {
        select_71([a, b, c, g, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1650([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_154([b, c, d, f, h, g, i, j], is_dual)
    } else {
        select_434([a, c, d, e, g, i, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1648([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1649([a, c, d, e, f, h, j, i, l], is_dual)
    } else {
        select_1650([a, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1643([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1644([a, d, b, c, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_1648([a, d, b, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1652([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_574([f, l, i, k, a, j, g, c, d, h], !is_dual)
    } else {
        select_846([a, b, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1654([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_68([a, e, f, g, h], is_dual)
    } else {
        select_453([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1653([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1580([d, g, h, i, a, e, f, c], !is_dual)
    } else {
        select_1654([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_1651([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1652([a, d, b, c, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_1653([f, g, l, a, i, k, b, c, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1642([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1643([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1651([a, c, d, b, h, f, i, j, g, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1641([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1642([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1642([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_1655([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1643([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1643([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1640([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1641([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_1655([a, b, e, f, c, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1624([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1625([a, b, c, f, g, e, d, i, j, h, l, m, k, n], is_dual)
    } else {
        select_1640([a, b, c, d, f, g, e, h, j, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1661([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_270([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_710([f, a, i, j, h, b, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1660([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, f, d, c, e, h, g, i], is_dual)
    } else {
        select_1661([a, b, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1659([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1660([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_1660([a, b, c, e, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1658([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1659([a, b, e, c, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1659([a, b, e, d, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1666([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_75([a, h, i, j, g], !is_dual)
    } else {
        select_63([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1665([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1666([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1666([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1664([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_191([a, b, h, i, j, c, g], !is_dual)
    } else {
        select_1665([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1663([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_58([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_1664([a, g, b, c, e, f, j, k, l, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1669([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_491([a, d, e, b, f, c, g, h, i, j], is_dual)
    } else {
        select_491([a, d, e, c, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1668([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1669([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1669([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1671([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_565([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1402([h, f, i, a, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1670([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1671([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1039([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1667([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1668([a, b, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_1670([a, j, k, h, l, b, g, c, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_1662([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1663([a, h, b, c, e, f, g, i, j, k, l, m], is_dual)
    } else {
        select_1667([a, g, j, l, m, n, h, i, k, b, c, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_1657([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_1658([a, k, l, m, n, g, h, b, i, j, c], !is_dual)
    } else {
        select_1662([a, c, b, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1656([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1657([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1657([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1623([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1624([a, b, c, d, e, f, g, i, h, j, l, k, m, n], is_dual)
    } else {
        select_1656([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1552([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_1553([a, b, c, l, m, n, h, i, d, j, k], !is_dual)
    } else {
        select_1623([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1551([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1552([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1552([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1354([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1355([a, b, c, d, e, l, m, n, i, k, f, j], !is_dual)
    } else {
        select_1551([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_1681([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_886([a, b, c, d, f, e, g], is_dual)
    } else {
        select_70([d, e, c, a, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1680([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_578([a, b, c, d, f, h, e, g, i, j, k], is_dual)
    } else {
        select_1681([a, e, d, g, b, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1683([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_157([b, e, a, d, g, f, i, h], is_dual)
    } else {
        select_1123([a, b, f, c, h, e, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1682([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_155([e, b, f, d, a, g, h, i], is_dual)
    } else {
        select_1683([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1679([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1680([a, h, i, k, f, j, b, c, g, d, e], !is_dual)
    } else {
        select_1682([a, h, f, k, b, i, j, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1678([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1679([a, c, d, e, h, g, i, b, j, k, l], is_dual)
    } else {
        select_328([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1677([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1678([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1678([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1687([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_512([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_1142([g, a, j, k, b, i, c, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1686([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1687([f, a, b, c, d, e, g, i, h, j, k], is_dual)
    } else {
        select_1687([f, a, d, e, b, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1685([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1686([e, a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1686([g, a, b, c, d, f, e, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1692([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_499([b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_186([a, c, d, g, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1693([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_98([f, h, a, b, g, c], !is_dual)
    } else {
        select_122([a, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1691([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1692([b, a, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1693([a, e, b, d, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1694([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_229([a, h, d, e, f, g, b, i, j], is_dual)
    } else {
        select_535([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1690([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1691([b, c, i, d, a, g, h, j, k, l], is_dual)
    } else {
        select_1694([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_1689([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1690([a, b, c, d, e, f, g, h, i, m, j, n], is_dual)
    } else {
        select_572([a, k, l, n, g, b, m, c, j, h, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_1688([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1689([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1689([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1684([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_1685([a, l, m, n, b, c, d, j, k, h, i], !is_dual)
    } else {
        select_1688([b, c, d, a, e, f, g, h, i, k, m, n, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1676([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1677([a, b, c, d, k, m, n, l, h, e, j, i], !is_dual)
    } else {
        select_1684([a, b, c, d, e, f, g, h, i, l, j, n, k, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_1700([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1154([b, g, c, d, e, f, h, i], is_dual)
    } else {
        select_1157([a, h, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1701([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_199([f, i, j, a, b, h, c, g], !is_dual)
    } else {
        select_251([b, c, d, e, f, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_1699([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1700([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1701([g, a, j, l, m, b, k, h, i, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1703([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_257([b, c, d, a, e, f, g], is_dual)
    } else {
        select_280([a, b, i, j, k, h, f, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1702([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_421([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1703([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1698([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1699([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1702([a, b, i, d, g, c, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1697([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1698([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_1698([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_1705([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_884([a, c, d, e, h, g, b, i], is_dual)
    } else {
        select_777([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1708([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1082([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1082([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1707([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1708([a, g, f, i, j, b, h, c, d], !is_dual)
    } else {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1706([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1707([a, c, d, e, h, g, b, i, j, k], is_dual)
    } else {
        select_777([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1704([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1705([a, b, c, e, f, g, d, h, i], is_dual)
    } else {
        select_1706([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_1696([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_1697([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1704([a, b, c, j, d, l, n, m, k, h, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_1695([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1677([a, b, c, d, k, l, n, m, h, e, j, i], !is_dual)
    } else {
        select_1696([a, b, c, d, e, f, g, h, i, l, j, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1675([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1676([a, b, c, d, e, f, g, h, j, i, k, m, l, n], is_dual)
    } else {
        select_1695([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 2
fn select_1716([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_38([b, c, d, a, e, f, g], is_dual)
    } else {
        select_38([b, c, e, a, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1715([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_87([f, i, j, a, b, c, g], !is_dual)
    } else {
        select_1716([f, b, c, d, e, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1718([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_38([a, b, d, c, e, f, h], is_dual)
    } else {
        select_38([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1720([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_62([b, c, f, g, e], is_dual)
    } else {
        select_39([h, i, d, a], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1719([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_68([a, b, i, j, k], is_dual)
    } else {
        select_1720([a, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1717([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1718([e, b, c, d, f, g, h, i], is_dual)
    } else {
        select_1719([a, d, b, c, f, g, h, i, e, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1714([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1715([e, h, i, j, k, a, g, f, b, c], !is_dual)
    } else {
        select_1717([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1713([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1714([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1714([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1722([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1069([a, b, g, h, f, c, d], !is_dual)
    } else {
        select_249([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1724([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1333([b, a, c, d, e, g, f, h], is_dual)
    } else {
        select_1716([i, a, h, e, g, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1725([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_932([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_1289([b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1723([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1724([a, f, d, e, b, g, h, i, j], is_dual)
    } else {
        select_1725([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1721([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1722([a, b, c, d, f, g, i, h], is_dual)
    } else {
        select_1723([a, b, e, c, d, f, h, i, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_1712([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1713([a, b, d, e, c, g, h, f, i, j, k], is_dual)
    } else {
        select_1721([a, b, j, k, i, g, f, h, c, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1730([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_65([b, a, c, d, e, f, g, h, j], is_dual)
    } else {
        select_51([a, f, c, d, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1731([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_820([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_700([g, i, e, h, a, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1729([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1730([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1731([h, i, f, k, a, j, g, e, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1732([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1418([a, b, c, f, e, h, i], is_dual)
    } else {
        select_1254([c, a, b, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1728([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1729([e, i, j, k, f, a, h, b, d, g, c], !is_dual)
    } else {
        select_1732([b, d, c, a, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1734([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1095([a, b, d, f, h, e, g, i], is_dual)
    } else {
        select_1511([a, b, d, c, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1736([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_292([i, h, f, e, a, g, b], !is_dual)
    } else {
        select_95([e, a, c, d, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1735([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1417([e, f, c, d, a, g, h, j], is_dual)
    } else {
        select_1736([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1733([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1734([i, e, k, j, a, h, g, f, b], !is_dual)
    } else {
        select_1735([a, b, c, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1727([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1728([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_1733([f, e, j, k, a, h, g, i, b, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1726([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1727([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1727([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1711([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1712([a, b, h, j, k, c, g, i, d, e, f], !is_dual)
    } else {
        select_1726([a, b, j, g, k, c, h, d, i, e, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1741([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_203([d, b, f, e, a, g, i, h, j], is_dual)
    } else {
        select_1025([b, a, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1743([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_453([a, f, b, e, g, i, j], is_dual)
    } else {
        select_436([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1744([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([e, a, b, f, h, d, i, g], is_dual)
    } else {
        select_167([d, a, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1742([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1743([b, a, d, c, e, g, f, h, j, i], is_dual)
    } else {
        select_1744([d, b, f, e, a, g, j, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1740([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1741([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1742([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1747([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_499([b, d, c, e, f, g, h, j], is_dual)
    } else {
        select_186([a, c, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1748([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_154([a, b, d, h, f, g, j, i], is_dual)
    } else {
        select_130([a, c, d, e, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1746([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1747([a, b, c, g, f, e, i, j, k, h], is_dual)
    } else {
        select_1748([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1750([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_77([b, f, d, e, a, g, i], is_dual)
    } else {
        select_551([c, a, d, b, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1751([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_289([a, g, d, f, e, h], is_dual)
    } else {
        select_612([a, d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1749([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1750([a, c, b, g, f, e, i, j, k], is_dual)
    } else {
        select_1751([b, a, f, d, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1745([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1746([b, a, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_1749([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1739([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1740([d, c, a, e, b, h, f, i, g, j], is_dual)
    } else {
        select_1745([a, d, b, e, c, h, g, i, f, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1755([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_216([a, d, b, c, e, f, g], is_dual)
    } else {
        select_186([a, e, c, b, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1754([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1755([a, b, f, c, e, h, i, j], is_dual)
    } else {
        select_1751([c, a, b, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1757([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_292([e, h, i, g, a, b, d], !is_dual)
    } else {
        select_82([e, f, c, d, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1757([g, h, j, i, a, b, e, c, f], !is_dual)
    } else {
        select_52([c, d, g, e, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1753([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1754([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_1756([b, c, a, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1758([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1599([c, d, a, e, b, f, g, h, i], is_dual)
    } else {
        select_1599([c, d, b, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1752([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1753([a, c, d, b, e, g, h, f, j, i], is_dual)
    } else {
        select_1758([c, d, a, e, b, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1738([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1739([b, a, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1752([a, b, d, h, c, i, g, j, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1738([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1738([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1710([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_1711([a, b, c, d, e, h, i, j, k, g, l], is_dual)
    } else {
        select_1737([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1709([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1710([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1710([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1674([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1675([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_1709([a, b, c, d, l, n, m, h, i, e, k, j], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1766([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_324([b, d, a, e, f, c, g], is_dual)
    } else {
        select_1127([b, d, c, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1527([g, i, j, a, f, h, b, d, e], !is_dual)
    } else {
        select_1528([f, i, j, g, a, b, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1765([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1766([g, i, j, f, b, a, c, h], !is_dual)
    } else {
        select_1767([b, c, e, a, d, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1770([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_235([f, h, g, i, a, d, b, e], !is_dual)
    } else {
        select_188([a, d, c, g, f, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1769([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1095([b, a, c, d, f, e, g, h], is_dual)
    } else {
        select_1770([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1772([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_68([g, f, b, c, d], !is_dual)
    } else {
        select_700([g, h, e, f, a, d, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1774([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([g, i, h, d, f, a], !is_dual)
    } else {
        select_34([e, b, c, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1773([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_382([h, d, i, f, g, a], !is_dual)
    } else {
        select_1774([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1771([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1772([f, i, g, h, d, a, b, e], !is_dual)
    } else {
        select_1773([b, a, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1768([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1769([g, e, i, a, f, h, b, d, c], !is_dual)
    } else {
        select_1771([g, f, i, e, h, a, b, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1765([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1768([a, g, i, j, f, b, c, h, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1777([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_120([a, b, c, g, i, e], is_dual)
    } else {
        select_710([a, b, e, d, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1779([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_95([a, e, c, g, h, f, j], is_dual)
    } else {
        select_216([b, e, d, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1781([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_62([b, c, f, g, e], is_dual)
    } else {
        select_34([h, d, i, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1780([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_626([e, b, c, d, f, g, h, j], is_dual)
    } else {
        select_1781([h, i, j, e, g, f, a, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1778([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1779([b, c, e, d, a, h, g, f, i, j], is_dual)
    } else {
        select_1780([c, b, f, e, g, a, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1776([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1777([a, b, c, d, h, f, i, j, g, k], is_dual)
    } else {
        select_1778([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1784([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_803([h, i, g, d, e, a, f, b], !is_dual)
    } else {
        select_803([g, i, h, d, f, a, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1783([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_324([h, i, d, e, f, g, a], !is_dual)
    } else {
        select_1784([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1786([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_381([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_103([a, b, d, f, g, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1785([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1786([g, j, i, f, e, h, a, b, d], !is_dual)
    } else {
        select_1528([f, j, i, g, e, a, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1782([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1783([b, c, f, h, e, a, i, j, g], is_dual)
    } else {
        select_1785([b, c, d, a, e, h, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1775([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1776([a, c, d, e, b, g, h, f, j, i, k], is_dual)
    } else {
        select_1782([a, c, f, e, b, g, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1763([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_1764([a, b, c, d, g, h, j, k, f, l], is_dual)
    } else {
        select_1775([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1762([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1763([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_1763([b, a, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1761([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1762([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1762([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1760([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1761([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1761([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1759([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1760([a, b, c, d, e, f, g, i, j, l, h, k], is_dual)
    } else {
        select_1760([a, b, c, d, e, g, f, h, j, k, i, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1673([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1674([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_1759([a, b, c, d, m, h, n, k, l, e, i, j], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1794([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_222([a, e, h, i, f, b, g, c], !is_dual)
    } else {
        select_222([a, f, h, i, e, b, g, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1797([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_235([a, b, c, e, f, h, i, g], is_dual)
    } else {
        select_325([a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1798([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_77([b, d, c, g, f, e, j], is_dual)
    } else {
        select_153([a, e, g, h, d, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1796([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1797([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_1798([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1800([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_453([e, c, d, a, f, g, h], is_dual)
    } else {
        select_1029([b, a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1799([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1772([g, i, a, j, e, h, b, f], !is_dual)
    } else {
        select_1800([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1795([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1796([a, b, d, e, c, f, g, h, j, i], is_dual)
    } else {
        select_1799([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1793([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1794([a, j, i, k, b, c, f, d, h], !is_dual)
    } else {
        select_1795([a, b, c, f, e, g, i, h, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1803([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_356([a, b, f, d, g, h, e], is_dual)
    } else {
        select_571([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1804([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1772([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_1308([a, c, d, b, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1802([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1803([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_1804([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1801([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_321([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1802([a, f, g, k, b, i, j, c, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_1792([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_1793([j, e, l, h, n, f, m, g, a, b, k], !is_dual)
    } else {
        select_1801([e, b, f, c, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1791([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1792([a, c, d, e, f, b, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_1792([b, c, d, e, g, a, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1790([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1791([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1791([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_1811([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_216([b, c, d, e, f, h, g], is_dual)
    } else {
        select_188([a, c, g, f, e, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1812([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_820([g, i, h, d, e, a, f, b], !is_dual)
    } else {
        select_993([a, c, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1810([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1811([b, c, d, a, e, g, f, h, i, j], is_dual)
    } else {
        select_1812([b, f, d, e, a, i, h, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1813([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_84([b, c, d, a, f, e, g], is_dual)
    } else {
        select_422([f, e, h, a, b, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1809([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1810([a, b, c, g, e, f, i, k, h, j], is_dual)
    } else {
        select_1813([b, a, d, h, e, j, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1815([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_878([c, b, d, a, f, e, g, h, j], is_dual)
    } else {
        select_102([g, i, e, b, a, h, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1814([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1815([a, b, c, g, e, f, j, h, i, k], is_dual)
    } else {
        select_1813([a, b, d, h, e, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1808([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1809([a, b, d, c, f, h, g, i, e, j, k], is_dual)
    } else {
        select_1814([b, c, d, a, f, h, e, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1808([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1808([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1806([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1807([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_1807([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1818([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_323([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_323([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1817([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_417([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1818([a, b, c, d, g, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1824([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([e, i, j, h, a, b], !is_dual)
    } else {
        select_55([b, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1823([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_68([b, h, e, a, i], is_dual)
    } else {
        select_1824([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1822([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1823([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1823([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1825([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_736([a, b, c, e, f, h, g, i], is_dual)
    } else {
        select_250([a, c, d, e, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_1821([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1822([b, f, c, d, e, g, h, i, k, j], is_dual)
    } else {
        select_1825([e, k, l, m, f, i, a, j, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1827([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_280([a, e, g, h, i, f, c, d], !is_dual)
    } else {
        select_516([a, g, h, e, i, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1828([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_229([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_185([b, h, c, f, a, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_1826([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1827([g, a, c, i, f, j, k, l, h], is_dual)
    } else {
        select_1828([f, b, c, d, e, g, h, i, m, j, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1820([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1821([h, b, d, e, g, a, f, i, j, k, l, m, n], is_dual)
    } else {
        select_1826([a, b, c, d, e, f, g, h, i, k, m, n, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1819([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1820([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1820([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1816([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1817([a, b, g, k, l, m, h, c, j], !is_dual)
    } else {
        select_1819([a, b, d, c, e, f, g, h, i, m, j, n, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1805([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1806([a, b, k, l, g, n, c, m, h, d, j], !is_dual)
    } else {
        select_1816([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1789([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1790([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_1805([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_1834([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1550([a, e, i, h, k, f, j, c, g], !is_dual)
    } else {
        select_845([a, e, b, d, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1835([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_299([a, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_299([a, b, d, h, f, j, g, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1834([a, d, f, e, h, b, i, g, j, k, l], is_dual)
    } else {
        select_1835([a, c, d, b, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1838([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_565([d, h, g, i, a, e, b, f], !is_dual)
    } else {
        select_565([d, g, h, i, a, f, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1837([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1838([e, b, c, a, f, h, g, i, j], is_dual)
    } else {
        select_953([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1836([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1549([a, i, e, h, k, b, j, f, c, g], !is_dual)
    } else {
        select_1837([a, c, d, b, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1832([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1833([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_1836([a, f, c, d, b, g, i, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1842([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_444([a, b, g, h, i], is_dual)
    } else {
        select_224([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1843([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_324([a, c, d, b, f, e, g], is_dual)
    } else {
        select_1127([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1841([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1842([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1843([a, h, i, j, f, b, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1840([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1121([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_1841([g, f, e, j, k, a, i, b, c, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1839([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1840([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1840([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1831([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1832([a, b, e, c, d, f, g, h, j, k, i, l], is_dual)
    } else {
        select_1839([a, b, c, d, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1846([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1462([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1541([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1845([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1540([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1846([a, b, e, i, k, f, j, h, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1848([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1462([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_1542([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1847([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1848([a, b, c, i, h, k, j, f, d, g], !is_dual)
    } else {
        select_1848([a, b, c, h, i, k, j, g, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1844([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1845([a, b, d, f, e, h, g, j, l, i, k], is_dual)
    } else {
        select_1847([a, b, e, c, g, f, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1830([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1831([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_1844([a, b, e, d, f, h, g, i, c, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1855([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_82([a, g, f, i, j], is_dual)
    } else {
        select_436([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1854([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1855([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_1290([b, a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1853([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_109([a, e, j, b, h, i, f, c, g], !is_dual)
    } else {
        select_1854([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1852([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_298([e, h, f, j, k, a, b, i, c, g], !is_dual)
    } else {
        select_1853([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1859([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, e, c, d, g, f, i], is_dual)
    } else {
        select_153([j, i, d, e, h, a, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1860([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_499([a, h, b, e, f, g, i, j], is_dual)
    } else {
        select_40([b, c, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1859([b, g, c, a, e, f, h, i, j, k], is_dual)
    } else {
        select_1860([b, c, a, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1857([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1599([a, b, c, g, f, i, h, j, e], is_dual)
    } else {
        select_1858([a, c, b, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1863([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_38([a, f, b, d, e, h, g], is_dual)
    } else {
        select_129([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1862([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1863([a, e, d, c, h, g, f, i], is_dual)
    } else {
        select_911([a, b, f, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1861([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1599([b, g, c, a, f, i, h, e, j], is_dual)
    } else {
        select_1862([a, c, d, b, f, g, e, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1856([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1857([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_1861([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1851([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_1852([b, a, g, c, h, j, f, i, k, l, e], is_dual)
    } else {
        select_1856([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1850([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1851([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1851([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1868([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1772([c, b, a, e, f, h, i, g], is_dual)
    } else {
        select_725([c, a, d, b, f, e, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1870([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_626([b, c, d, a, f, e, g, h], is_dual)
    } else {
        select_382([b, e, d, a, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1869([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_974([f, h, e, i, a, b, g, c], !is_dual)
    } else {
        select_1870([b, a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1867([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1868([b, c, a, d, f, e, g, i, h], is_dual)
    } else {
        select_1869([i, g, e, j, a, f, h, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1866([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1867([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1867([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1872([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_310([a, c, d, b, f, h, i], is_dual)
    } else {
        select_877([a, b, c, d, e, f, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1874([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_97([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_97([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1875([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_580([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_331([a, f, i, g, h, d, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1873([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1874([a, g, j, h, i, b, f, d], !is_dual)
    } else {
        select_1875([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1871([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1872([a, c, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1873([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1865([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1866([a, b, j, f, k, i, c, h, d, g], !is_dual)
    } else {
        select_1871([a, b, d, c, e, f, g, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1879([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_70([a, f, i, b, h, c, g], !is_dual)
    } else {
        select_251([a, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1878([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_425([a, b, c, g, f, d, h, i], is_dual)
    } else {
        select_1879([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1877([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1878([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1879([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1883([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_85([b, c, d, g, e, f], is_dual)
    } else {
        select_304([g, h, i, a, f, b, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1882([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1185([a, d, c, e, b, f, g, h, i], is_dual)
    } else {
        select_1883([a, d, b, e, c, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1881([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_115([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_1882([f, a, h, j, k, i, b, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1880([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1878([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1881([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1876([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1877([a, g, b, j, k, c, h, i, f], !is_dual)
    } else {
        select_1880([a, g, h, j, k, c, b, i, f, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1864([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1865([a, b, h, i, k, c, j, f, g, d, e], !is_dual)
    } else {
        select_1876([a, b, c, d, e, g, h, i, j, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1849([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_1850([a, b, c, e, d, g, f, h, j, i, k, l], is_dual)
    } else {
        select_1864([a, b, c, d, g, j, k, h, l, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1829([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_1830([a, b, d, c, f, g, e, h, j, k, i, l], is_dual)
    } else {
        select_1849([a, b, d, e, f, c, h, i, g, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1788([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_1789([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_1829([a, b, g, k, m, n, c, h, i, d, l, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_1787([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1788([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1788([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1672([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1673([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1787([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1353([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_1354([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_1672([a, b, c, d, e, f, g, h, j, k, l, m, n, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_1352([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1353([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_1353([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_8([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_1352([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_1895([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_389([a, d, e, f, b, c, g], is_dual)
    } else {
        select_566([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_1898([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_153([b, c, a, d, e, f, g], is_dual)
    } else {
        select_99([a, c, b, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1897([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_81([a, g, b, d, f, h], is_dual)
    } else {
        select_1898([a, b, c, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1896([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1897([a, b, e, c, f, d, g, h, i], is_dual)
    } else {
        select_1897([a, b, e, d, f, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1894([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1895([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1896([a, d, e, f, c, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1902([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_75([b, c, d, e, h], is_dual)
    } else {
        select_117([a, c, d, e, f, g, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1903([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_61([h, a, b, e, f], is_dual)
    } else {
        select_340([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1901([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1902([e, h, i, j, k, a, g, f, c, d], !is_dual)
    } else {
        select_1903([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1900([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1901([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1901([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1899([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1900([a, b, i, k, l, h, j, c, d, e, g], !is_dual)
    } else {
        select_413([a, b, c, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1893([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1894([a, b, j, c, k, l, h, i, g], !is_dual)
    } else {
        select_1899([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1817([a, b, c, j, k, l, h, d, i], !is_dual)
    } else {
        select_1893([a, b, c, d, e, f, g, h, i, l, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1907([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_80([c, a, b, e, d, f, g], is_dual)
    } else {
        select_1122([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_1908([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_444([a, b, e, f, g], is_dual)
    } else {
        select_67([a, b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1906([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1907([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_1908([a, g, b, c, h, d, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1910([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_947([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_83([b, f, h, i, a], is_dual)
    }
}
/// n = 9, i = 3
fn select_1909([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1910([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1910([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1905([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1906([a, b, d, c, g, h, i, f], is_dual)
    } else {
        select_1909([a, b, d, c, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1912([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1522([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1522([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_1914([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_81([a, e, g, d, b, f], !is_dual)
    } else {
        select_422([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_1915([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_82([a, d, c, e, f], is_dual)
    } else {
        select_487([a, d, g, b, f], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1913([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_1914([a, c, d, e, b, f, g], is_dual)
    } else {
        select_1915([a, c, b, e, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1912([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_1913([a, b, d, h, i, c, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1904([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1905([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_1911([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1891([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1892([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1904([a, b, c, j, k, l, h, d, e, i], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1922([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_292([d, f, g, e, a, b, c], !is_dual)
    } else {
        select_99([b, c, d, e, a, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1921([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_303([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1922([e, g, h, a, b, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1920([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_728([e, a, h, i, f, g, b], !is_dual)
    } else {
        select_1921([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1919([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1920([a, c, g, d, b, f, h, i, j], is_dual)
    } else {
        select_1179([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1924([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_580([a, i, j, g, h, b, f, e, d], !is_dual)
    } else {
        select_386([a, g, j, b, h, c, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1923([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1924([a, b, c, e, d, f, g, h, i, k], is_dual)
    } else {
        select_1924([a, b, i, k, j, h, g, f, c, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1918([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1919([a, b, c, f, e, h, g, j, i, l], is_dual)
    } else {
        select_1923([a, b, c, g, d, f, i, j, k, h, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1926([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1098([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_1098([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1925([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_417([a, b, g, i, j, k, h, f, d], !is_dual)
    } else {
        select_1926([a, b, j, g, i, k, h, e, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1917([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1918([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1925([a, b, g, d, i, f, c, h, j, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1932([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_499([h, j, i, a, f, g, e, b], !is_dual)
    } else {
        select_764([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1931([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1649([a, b, c, d, e, f, h, g, j], is_dual)
    } else {
        select_1932([a, d, b, c, f, h, g, e, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1930([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1931([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1931([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1929([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1930([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_51([a, b, d, h, i, c], is_dual)
    }
}
/// n = 10, i = 4
fn select_1935([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_491([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_491([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1934([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_191([a, b, i, j, g, c, h], !is_dual)
    } else {
        select_1935([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1933([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_478([a, b, i, j, g, c, d, h], !is_dual)
    } else {
        select_1934([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1928([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1929([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_1933([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1938([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_151([a, b, c, f, e, h, i, g], is_dual)
    } else {
        select_316([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1940([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_110([a, b, c, f, e, g, h], is_dual)
    } else {
        select_51([a, b, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1939([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_570([a, b, k, i, j, g, c, d, h], !is_dual)
    } else {
        select_1940([a, b, g, e, i, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1937([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1938([a, b, f, e, c, g, i, h, j], is_dual)
    } else {
        select_1939([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1942([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_139([a, b, e, c, d, f, g, h, j], is_dual)
    } else {
        select_413([a, b, c, d, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1943([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_728([a, b, c, d, e, f, g], is_dual)
    } else {
        select_1416([a, b, g, h, i, e, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1941([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1942([a, b, c, f, e, g, i, h, j, k], is_dual)
    } else {
        select_1943([a, b, i, l, f, j, c, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1936([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1937([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_1941([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1927([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1928([a, b, g, c, d, h, i, j, f, k, l], is_dual)
    } else {
        select_1936([a, b, c, e, d, g, f, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_1916([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1917([a, b, c, d, e, f, g, h, i, k, l, m, j], is_dual)
    } else {
        select_1927([a, b, k, m, h, c, j, l, i, f, d, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1890([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1891([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_1916([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1951([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_111([a, c, g, e, f, h, j], is_dual)
    } else {
        select_100([a, b, d, f, e, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1950([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1951([b, d, c, e, f, a, g, i, h, j], is_dual)
    } else {
        select_725([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1953([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_167([h, i, j, e, a, f, b, g], !is_dual)
    } else {
        select_1596([b, c, d, a, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1952([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_992([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1953([i, h, d, k, g, f, j, a, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1949([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1950([b, a, f, c, e, g, i, h, k, l], is_dual)
    } else {
        select_1952([g, j, l, a, k, h, i, b, c, f, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1956([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_215([a, b, e, d, g, h], is_dual)
    } else {
        select_186([d, a, c, f, e, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1955([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1956([g, c, d, f, e, j, h, i], is_dual)
    } else {
        select_87([a, b, i, f, h, k, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_1957([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1951([h, j, g, k, d, f, i, e, a, c], !is_dual)
    } else {
        select_1780([h, j, f, k, d, g, i, a, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1954([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1955([a, b, c, d, f, g, e, i, j, h, k], is_dual)
    } else {
        select_1957([e, c, d, a, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_1948([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1949([a, h, k, l, m, i, e, f, j, b, g, d], !is_dual)
    } else {
        select_1954([a, b, c, d, f, g, e, h, i, j, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_1959([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_86([a, b, h, i, c, d, g], !is_dual)
    } else {
        select_1458([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1958([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1311([a, b, c, e, d, f, g, h, j], is_dual)
    } else {
        select_1959([a, c, b, d, e, f, h, i, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_1947([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1948([a, c, b, d, e, f, g, i, k, h, j, m, l], is_dual)
    } else {
        select_1958([a, k, j, e, l, i, b, f, c, h], !is_dual)
    }
}
/// n = 8, i = 2
fn select_1964([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_238([f, c, d, e, a, g, h], is_dual)
    } else {
        select_230([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1963([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_580([a, j, k, f, i, b, g, h, c], !is_dual)
    } else {
        select_1964([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1962([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1413([a, c, g, d, f, i, h, k], is_dual)
    } else {
        select_1963([a, b, e, c, d, f, g, h, j, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_1965([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_299([a, b, c, g, e, i, h, k, l], is_dual)
    } else {
        select_1828([a, j, m, i, l, e, k, g, f, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1961([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1962([a, j, i, l, m, e, k, h, b, g, f, d], !is_dual)
    } else {
        select_1965([a, c, b, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_1968([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_84([a, b, c, f, h, i, g], is_dual)
    } else {
        select_144([a, d, b, e, h, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1967([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1968([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_1940([a, b, f, c, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1971([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_292([a, b, f, e, d, g, h], is_dual)
    } else {
        select_52([b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1970([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_878([b, a, c, d, e, g, f, i, h], is_dual)
    } else {
        select_1971([f, b, d, a, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1969([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_222([a, i, j, e, f, b, h, g], !is_dual)
    } else {
        select_1970([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1966([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1967([a, b, d, e, c, g, h, f, i, j, k], is_dual)
    } else {
        select_1969([a, b, f, e, h, c, g, j, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_1960([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1961([a, k, l, n, f, h, m, i, b, c, j, d, g], !is_dual)
    } else {
        select_1966([a, b, f, d, e, h, g, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_1946([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1947([a, f, l, n, h, i, m, j, b, c, k, d, g], !is_dual)
    } else {
        select_1960([a, c, b, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_1975([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_559([a, h, e, i, f, b, g, c], !is_dual)
    } else {
        select_735([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1979([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([b, f, d, e, h, i], is_dual)
    } else {
        select_34([a, c, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1978([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1979([a, b, c, e, g, f, j, i, h, k], is_dual)
    } else {
        select_122([b, h, d, i, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_993([f, g, j, d, i, a, b, h, e], !is_dual)
    } else {
        select_325([d, b, c, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1977([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1978([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_1980([e, b, d, a, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1981([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_81([a, j, k, h, e, b], !is_dual)
    } else {
        select_76([a, c, d, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1976([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1977([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1981([a, c, b, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1974([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1975([g, k, i, j, a, b, e, h, c], !is_dual)
    } else {
        select_1976([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1984([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_167([b, a, c, d, f, g, h, e], is_dual)
    } else {
        select_1536([h, i, f, g, d, b, a, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1985([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_153([a, e, d, h, g, i, j], is_dual)
    } else {
        select_325([d, b, c, f, g, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1983([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1984([a, b, e, d, h, f, i, j, g], is_dual)
    } else {
        select_1985([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1982([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1983([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_735([h, j, g, f, d, a, i, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1973([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1974([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_1982([b, e, d, g, f, j, a, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1988([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, c, d, e, f, g, i], is_dual)
    } else {
        select_834([a, i, j, f, h, b, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1987([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_139([a, b, e, d, f, g, h, i, k], is_dual)
    } else {
        select_1988([a, c, b, d, g, f, i, j, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1990([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_450([k, h, j, l, a, i, f, e, g, c], !is_dual)
    } else {
        select_846([a, b, d, f, h, j, g, i, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_1991([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_878([j, h, k, f, i, d, e, g, b], !is_dual)
    } else {
        select_50([e, a, d, c, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1989([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1990([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_1991([b, e, d, f, g, a, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_1986([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1987([a, g, j, k, m, i, l, b, h, f, e, d], !is_dual)
    } else {
        select_1989([a, c, d, b, f, g, h, e, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_1972([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1973([a, c, b, d, e, g, h, i, j, f, k], is_dual)
    } else {
        select_1986([a, b, c, d, f, g, i, j, e, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_1945([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1946([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_1972([a, g, c, e, b, j, h, f, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1944([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1945([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1945([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1889([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_1890([a, b, c, i, g, n, l, m, j, d, e, k, h], !is_dual)
    } else {
        select_1944([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_1998([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_151([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_151([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1999([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1162([a, b, g, c, e, h, f, i], is_dual)
    } else {
        select_1351([a, c, b, e, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1997([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1998([a, f, c, h, g, i, b, j, k], is_dual)
    } else {
        select_1999([a, c, b, d, e, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_2002([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_48([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_48([b, a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_2001([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2002([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_2002([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_2000([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2001([a, b, c, d, h, f, g, i], is_dual)
    } else {
        select_2001([a, b, c, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1996([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1997([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2000([a, b, d, c, f, g, e, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2007([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_803([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_803([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2006([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1611([c, d, g, e, f, i, h], is_dual)
    } else {
        select_2007([j, g, l, a, b, k, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2009([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_75([b, c, d, f, g], is_dual)
    } else {
        select_803([h, f, j, e, i, a, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2008([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_192([c, g, b, d, h, f], is_dual)
    } else {
        select_2009([a, b, c, f, e, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2005([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2006([a, b, c, d, e, g, f, i, h, j, k, l], is_dual)
    } else {
        select_2008([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2011([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_385([a, h, j, k, f, i, b, c, d], !is_dual)
    } else {
        select_84([a, b, d, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2010([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1413([a, b, f, j, l, k, i, d], !is_dual)
    } else {
        select_2011([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2004([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2005([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2010([a, b, d, c, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2003([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2004([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2004([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1995([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1996([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_2003([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2016([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_240([a, f, c, d, e, g, h, j, i], is_dual)
    } else {
        select_571([a, h, b, e, i, f, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2015([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2016([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2016([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2014([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_790([a, b, f, d, e, g, h, j, k, i, l], is_dual)
    } else {
        select_2015([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2019([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1666([a, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_117([f, i, j, k, a, g, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2018([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2019([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2019([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2017([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_281([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_2018([a, b, f, c, d, e, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2013([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_2014([a, b, f, d, e, g, h, i, c, j, k, l], is_dual)
    } else {
        select_2017([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2012([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1685([a, e, f, g, b, c, d, h, i, j, k], is_dual)
    } else {
        select_2013([b, c, d, f, g, e, h, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1994([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1995([a, b, c, d, e, f, g, h, j, l, i, k], is_dual)
    } else {
        select_2012([a, b, c, d, g, e, f, h, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2023([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_569([a, f, c, e, i, g, b, h, j, k], is_dual)
    } else {
        select_138([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2026([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_324([a, b, g, e, f, c, h], is_dual)
    } else {
        select_2002([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2025([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1523([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_2026([a, b, c, e, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_580([a, b, d, f, e, g, i, h, j], is_dual)
    } else {
        select_581([a, b, c, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2027([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2028([a, c, b, d, f, e, g, h, i, j], is_dual)
    } else {
        select_1681([a, e, d, g, b, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2024([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2025([a, g, b, i, k, e, j, h, c, f], !is_dual)
    } else {
        select_2027([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2022([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2023([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_2024([a, b, g, e, c, h, f, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2030([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_540([a, b, d, c, e, g, f, h, j], is_dual)
    } else {
        select_2000([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2034([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_453([a, c, b, d, e, f, g], is_dual)
    } else {
        select_34([d, b, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2033([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2034([c, a, d, e, b, g, f, h], is_dual)
    } else {
        select_1528([b, c, d, a, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2032([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_947([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_2033([a, b, c, g, f, h, i, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2031([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2032([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2032([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2029([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2030([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_2031([a, b, j, f, l, c, k, g, i, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2021([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2022([a, b, c, d, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_2029([a, b, c, e, d, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2040([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_51([e, f, b, c, g, h], is_dual)
    } else {
        select_325([i, f, j, h, d, e, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2041([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_111([c, b, d, f, h, e, g], is_dual)
    } else {
        select_154([f, i, h, c, g, d, a, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2039([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2040([b, a, c, d, e, g, f, h, j, i], is_dual)
    } else {
        select_2041([b, f, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2043([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_581([g, b, c, e, f, h, j], is_dual)
    } else {
        select_434([g, h, k, d, i, f, a, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2042([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2043([h, k, l, e, i, j, a, b, g, f, d], !is_dual)
    } else {
        select_1049([b, c, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2038([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2039([e, a, c, d, h, f, g, j, i, k], is_dual)
    } else {
        select_2042([g, h, k, m, d, j, l, a, i, e, f, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2046([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_153([c, b, g, e, f, h, j], is_dual)
    } else {
        select_130([h, g, k, d, i, f, a, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2045([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2046([h, k, l, e, i, j, a, b, g, f, d], !is_dual)
    } else {
        select_1049([b, c, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2047([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2041([a, b, e, d, f, i, j, h, k], is_dual)
    } else {
        select_452([e, b, c, h, f, g, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2044([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2045([i, d, k, m, e, j, l, a, h, f, g, b], !is_dual)
    } else {
        select_2047([a, b, c, e, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2037([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2038([f, l, m, e, j, k, a, b, i, g, c, h, d], !is_dual)
    } else {
        select_2044([e, l, m, a, f, j, k, i, b, g, c, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2036([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2037([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2037([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_2049([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1723([a, b, f, c, d, h, i, g, j, k], is_dual)
    } else {
        select_475([a, b, g, i, e, f, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2053([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_82([a, d, f, g, i], is_dual)
    } else {
        select_325([b, a, c, d, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2054([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_381([a, f, b, d, e, g, h, i], is_dual)
    } else {
        select_55([b, c, g, e, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2052([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2053([g, e, k, a, d, i, h, b, f], !is_dual)
    } else {
        select_2054([b, a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2055([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_452([a, b, g, f, h, i, e, j], is_dual)
    } else {
        select_550([b, c, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2051([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2052([b, g, d, a, f, h, e, i, j, k, l], is_dual)
    } else {
        select_2055([b, a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2050([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2051([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2051([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2048([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2049([a, b, f, l, m, k, c, i, j, g, h], !is_dual)
    } else {
        select_2050([a, b, c, d, e, f, g, h, i, k, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2035([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2036([a, b, c, d, e, f, h, g, i, k, j, l, m], is_dual)
    } else {
        select_2048([a, b, c, e, d, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2020([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2021([a, b, c, l, m, f, j, k, g, h, i, e], !is_dual)
    } else {
        select_2035([a, b, f, l, m, c, j, k, g, h, i, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_1993([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1994([a, b, c, g, f, l, m, k, j, h, i, d], !is_dual)
    } else {
        select_2020([a, b, c, e, d, g, f, h, i, j, k, m, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2063([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_313([a, c, g, f, e, i], is_dual)
    } else {
        select_1224([a, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2062([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_914([b, d, e, f, a, h, i, g], is_dual)
    } else {
        select_2063([b, a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2064([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1770([g, i, j, e, h, a, f, b, c], !is_dual)
    } else {
        select_1770([g, i, j, f, h, a, e, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2061([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2062([b, d, e, a, f, c, g, h, i], is_dual)
    } else {
        select_2064([b, d, c, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2066([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_642([b, e, d, a, f, h, g, i], is_dual)
    } else {
        select_1056([b, a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2068([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_38([b, c, e, h, f, g, i], is_dual)
    } else {
        select_95([a, e, d, g, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2067([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2068([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_1773([j, g, k, h, a, b, i, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2065([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2066([b, d, f, e, c, g, h, i, j], is_dual)
    } else {
        select_2067([a, b, d, c, e, g, h, f, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2060([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2061([a, b, c, d, g, i, h, f, j, k], is_dual)
    } else {
        select_2065([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2070([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1183([b, a, d, c, e, g, f, h, i], is_dual)
    } else {
        select_646([e, a, j, k, b, h, i, f, g, d], !is_dual)
    }
}
/// n = 9, i = 2
fn select_2073([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_77([b, d, c, e, h, g, i], is_dual)
    } else {
        select_453([b, d, a, e, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2072([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2073([c, a, b, d, e, g, f, h, i], is_dual)
    } else {
        select_834([e, b, c, i, g, f, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2071([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1631([f, e, m, k, l, a, j, i, g, h, c], !is_dual)
    } else {
        select_2072([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2069([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2070([f, a, c, d, e, g, h, j, k, i, m], is_dual)
    } else {
        select_2071([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2059([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_2060([a, g, f, b, d, e, h, j, i, k, l], is_dual)
    } else {
        select_2069([a, h, c, b, e, i, g, k, j, f, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2078([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_77([c, e, d, g, a, f, i], is_dual)
    } else {
        select_551([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2077([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2078([b, d, c, a, f, e, g, h, i], is_dual)
    } else {
        select_452([a, d, b, g, f, h, e, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_2079([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_67([a, b, f, e, c, g], is_dual)
    } else {
        select_445([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2076([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_2077([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_2079([g, a, b, e, f, c, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2081([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_580([d, j, k, e, i, a, f, g, c], !is_dual)
    } else {
        select_2034([b, c, e, d, f, g, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2082([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_110([a, d, g, h, e, f, c], !is_dual)
    } else {
        select_188([d, i, e, a, b, g, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2080([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2081([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2082([d, e, k, a, h, i, g, f, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2076([g, a, j, k, b, e, i, h, c, f], !is_dual)
    } else {
        select_2080([g, k, j, b, e, h, i, a, f, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2074([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2023([a, c, d, b, e, f, h, i, g, j, k], is_dual)
    } else {
        select_2075([a, c, g, e, b, h, f, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_2058([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2059([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_2074([i, e, f, m, n, a, l, k, b, g, j, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2057([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2058([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2058([b, c, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_2089([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_111([a, b, c, d, e, f, g], is_dual)
    } else {
        select_111([a, b, c, d, e, g, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_2088([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2089([a, c, d, b, e, f, g], is_dual)
    } else {
        select_2089([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2087([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1827([a, h, i, j, b, g, c, d, f], !is_dual)
    } else {
        select_2088([a, b, e, g, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2092([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_38([d, e, a, g, f, h, i], is_dual)
    } else {
        select_38([b, c, a, h, f, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2091([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2092([e, a, b, c, d, f, g, h, i, j], is_dual)
    } else {
        select_1180([a, b, f, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1536([a, h, b, e, f, g, i, j], is_dual)
    } else {
        select_40([b, c, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2093([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_684([b, c, g, f, i], is_dual)
    } else {
        select_2094([a, d, b, c, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2090([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2091([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2093([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2086([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2087([a, b, c, d, g, h, i, f, j, k], is_dual)
    } else {
        select_2090([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2085([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2086([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2086([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2084([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1685([a, e, f, g, b, c, d, h, i, j, k], is_dual)
    } else {
        select_2085([b, c, d, f, g, e, h, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2097([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_225([a, b, d, e, f, g, c, h, i, k], is_dual)
    } else {
        select_225([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2099([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_541([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_1407([a, b, g, d, c, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2098([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_284([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2099([a, c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2096([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2097([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2098([a, b, c, d, e, h, f, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2104([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_141([a, f, c, d, i, g], is_dual)
    } else {
        select_188([h, i, f, a, g, e, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2103([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_614([a, b, d, e, f, h, g, i], is_dual)
    } else {
        select_2104([a, b, c, g, f, h, e, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2105([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_67([a, b, d, h, f, g], is_dual)
    } else {
        select_386([g, i, h, a, e, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2102([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2103([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2105([a, b, g, c, i, f, h, e, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2107([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_436([b, a, c, e, d, f, g, h], is_dual)
    } else {
        select_266([a, b, f, e, h, g, d], is_dual)
    }
}
/// n = 9, i = 2
fn select_2106([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_264([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2107([b, c, g, e, f, i, h, a], is_dual)
    }
}
/// n = 10, i = 3
fn select_2101([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2102([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_2106([b, a, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2109([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_74([b, f, c, d, e, g, h], is_dual)
    } else {
        select_565([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2110([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1156([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1611([f, h, j, i, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2108([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2109([a, c, d, e, f, b, g, h, j], is_dual)
    } else {
        select_2110([c, b, d, e, f, a, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2100([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2101([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2108([a, h, i, b, k, l, j, c, f, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2095([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_2096([a, b, h, i, c, k, m, l, j, f, g], !is_dual)
    } else {
        select_2100([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2083([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2084([a, b, c, i, m, h, l, k, f, d, j], !is_dual)
    } else {
        select_2095([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2056([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_2057([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_2083([a, b, f, g, e, j, h, c, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1992([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_1993([a, b, c, d, h, f, j, g, k, l, m, i, n], is_dual)
    } else {
        select_2056([a, b, c, d, e, f, g, h, j, i, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1888([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1889([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_1992([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2117([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1818([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_1195([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2116([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_417([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2117([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2119([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_226([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_226([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2118([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_478([a, b, d, e, h, c, i, j], is_dual)
    } else {
        select_2119([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2115([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2116([a, b, c, d, f, h, e, i, j], is_dual)
    } else {
        select_2118([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2123([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1634([a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_1874([a, i, j, h, k, b, f, c], !is_dual)
    }
}
/// n = 9, i = 2
fn select_2124([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_81([a, i, b, c, f, h], is_dual)
    } else {
        select_614([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2122([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2123([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_2124([a, c, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2127([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_592([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1964([a, g, d, e, f, b, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2126([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_389([a, c, d, e, b, g, h], is_dual)
    } else {
        select_2127([a, b, f, c, d, e, g, i, j], is_dual)
    }
}
/// n = 8, i = 1
fn select_2129([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_592([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_332([a, g, d, e, f, b, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_2128([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2129([a, e, f, b, c, d, g, h], is_dual)
    } else {
        select_389([a, b, c, d, e, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2125([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2126([a, b, d, e, f, c, h, g, i, j], is_dual)
    } else {
        select_2128([a, d, e, f, c, b, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2121([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2122([a, c, d, e, f, g, h, i, b, j, k], is_dual)
    } else {
        select_2125([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2120([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_864([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_2121([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2114([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2115([a, b, c, e, f, d, g, h, j, i], is_dual)
    } else {
        select_2120([a, b, c, d, g, e, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2114([a, b, c, d, f, g, e, i, j, h, l], is_dual)
    } else {
        select_2114([a, b, c, e, f, g, d, h, j, i, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_2137([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_95([a, b, d, e, c, f, g], is_dual)
    } else {
        select_95([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_2136([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_2137([a, b, c, e, f, g, h], is_dual)
    } else {
        select_516([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2135([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2136([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_117([g, a, i, j, b, h, c, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2138([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_811([b, c, d, f, a, e, g, h], is_dual)
    } else {
        select_406([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2135([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2138([a, g, b, i, j, k, c, h, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2141([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1622([b, a, d, e, c, f, h, g], is_dual)
    } else {
        select_629([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2140([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_2141([a, b, c, d, f, h, g, i], is_dual)
    } else {
        select_876([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2144([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_198([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_83([f, c, a, e, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2143([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_444([a, f, d, b, g], !is_dual)
    } else {
        select_2144([a, c, b, e, d, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2142([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1406([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_2143([b, a, d, c, e, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2139([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2140([a, c, d, b, e, f, h, g, i], is_dual)
    } else {
        select_2142([a, c, d, e, g, h, b, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2133([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2134([a, b, i, l, j, k, d, h, e, f, g], !is_dual)
    } else {
        select_2139([a, b, j, k, l, i, g, d, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2132([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2133([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_866([a, b, e, f, g, h, c, i, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_2148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_1080([a, k, f, i, j, g, b, h, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2148([a, g, i, j, k, b, f, h, d, e, c], !is_dual)
    } else {
        select_1466([a, b, i, j, k, g, f, h, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2152([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_453([d, b, c, f, e, g, h], is_dual)
    } else {
        select_99([a, e, d, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2153([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_38([a, b, e, d, h, g, j], is_dual)
    } else {
        select_26([c, e, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2151([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2152([b, e, d, g, f, a, i, h, j], is_dual)
    } else {
        select_2153([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2150([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_728([a, c, h, e, b, g, j], is_dual)
    } else {
        select_2151([a, c, e, d, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2155([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1956([a, b, e, d, h, g, i, j], is_dual)
    } else {
        select_326([d, a, c, f, g, e, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1797([b, c, a, d, e, g, f, h, i], is_dual)
    } else {
        select_1397([i, g, j, f, a, b, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2154([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2155([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_2156([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2149([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2150([a, c, b, e, d, g, f, h, i, j], is_dual)
    } else {
        select_2154([a, c, f, e, b, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2146([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2147([a, b, d, c, g, f, i, k, l, m, h], is_dual)
    } else {
        select_2149([a, b, c, e, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2160([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_491([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1548([e, i, g, j, a, b, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2161([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_67([f, e, h, a, b, g], !is_dual)
    } else {
        select_97([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2159([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2160([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2161([e, i, g, j, a, b, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2158([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2159([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2159([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2157([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2147([a, b, l, j, k, h, c, i, e, f, g], !is_dual)
    } else {
        select_2158([a, b, j, k, l, h, c, g, d, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2145([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2146([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2157([a, b, j, h, l, m, i, f, k, c, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2131([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2132([a, b, j, i, l, m, g, f, k, c, h, d], !is_dual)
    } else {
        select_2145([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2167([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_580([a, h, j, e, i, b, f, g, c], !is_dual)
    } else {
        select_312([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2166([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1963([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_2167([a, b, d, h, f, g, c, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2165([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_576([a, f, k, b, i, j, c, g, h], !is_dual)
    } else {
        select_2166([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2164([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2165([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2165([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2170([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1183([b, a, d, c, e, g, f, h, i], is_dual)
    } else {
        select_988([b, f, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2171([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1496([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_222([a, j, k, f, h, b, i, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2170([a, b, g, e, f, c, h, i, j, k], is_dual)
    } else {
        select_2171([a, b, c, d, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2168([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2169([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2169([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2163([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_2164([a, b, c, e, d, g, f, h, i, j, k], is_dual)
    } else {
        select_2168([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2162([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2115([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_2163([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2130([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2131([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2162([a, b, f, i, l, m, j, g, c, k, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2112([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_2113([a, b, f, c, i, l, m, j, g, k, h, d], !is_dual)
    } else {
        select_2130([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_2180([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_38([a, b, d, g, e, h, j], is_dual)
    } else {
        select_381([d, h, c, e, f, i, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2179([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_642([c, h, d, i, f, g, e, k], is_dual)
    } else {
        select_2180([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2178([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_980([b, c, f, d, e, g, h, i, j], is_dual)
    } else {
        select_2179([g, j, k, m, e, l, h, f, a, b, i], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2183([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_499([g, i, h, d, e, a, f, b], !is_dual)
    } else {
        select_1536([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2184([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_68([b, c, e, f, g], is_dual)
    } else {
        select_153([h, g, e, d, f, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2182([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_2183([a, b, c, e, d, g, h, f, i], is_dual)
    } else {
        select_2184([h, d, i, e, f, g, a, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2186([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_85([c, d, g, e, f, h], is_dual)
    } else {
        select_39([a, b, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2188([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_22([c, a, b, d, f, e, g], is_dual)
    } else {
        select_39([a, b, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2187([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_82([a, g, d, e, j], is_dual)
    } else {
        select_2188([b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2185([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2186([b, c, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2187([a, b, c, f, h, g, i, e, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2181([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2182([k, g, l, a, e, b, j, c, h], !is_dual)
    } else {
        select_2185([c, a, b, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2177([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2178([a, c, d, b, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_2181([h, j, k, m, e, l, f, i, a, b, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2191([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_77([b, d, c, e, g, f, h], is_dual)
    } else {
        select_205([j, d, i, e, a, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2190([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_761([b, d, c, g, e, f, h, i], is_dual)
    } else {
        select_2191([i, l, m, d, h, k, a, j, f, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2193([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_68([h, d, g, a, f], !is_dual)
    } else {
        select_1289([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_2194([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_820([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_719([b, e, d, g, f, a, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2192([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2193([g, k, l, d, a, i, e, b], !is_dual)
    } else {
        select_2194([g, b, c, e, f, j, h, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_2189([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2190([j, n, l, g, m, k, a, h, b, i, f, e, d], !is_dual)
    } else {
        select_2192([j, l, n, g, k, m, a, h, e, b, c, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2176([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_2177([j, l, g, n, e, h, m, a, k, c, b, i, f], !is_dual)
    } else {
        select_2189([a, c, b, d, e, f, h, g, i, j, m, n, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_2199([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_68([g, a, d, e, f], is_dual)
    } else {
        select_216([d, a, b, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2198([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_580([a, h, j, e, i, b, g, f, c], !is_dual)
    } else {
        select_2199([c, d, e, a, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2200([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_565([e, i, h, j, a, f, b, g], !is_dual)
    } else {
        select_846([a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_2197([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2198([i, l, m, j, k, f, h, b, e, d], !is_dual)
    } else {
        select_2200([j, n, i, k, f, m, g, b, a, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2196([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2197([a, b, c, d, e, h, g, i, k, l, f, j, m, n], is_dual)
    } else {
        select_2197([a, c, b, d, e, h, f, i, j, l, g, k, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_2204([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_294([e, h, g, i, d, f, b, c], !is_dual)
    } else {
        select_235([e, g, h, i, d, f, a, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2205([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_153([a, b, f, d, g, h, e], is_dual)
    } else {
        select_88([h, f, g, d, e, c, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2203([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2204([a, c, d, f, i, e, j, g, h], is_dual)
    } else {
        select_2205([e, c, b, f, h, d, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2206([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_358([d, b, c, f, e, g, i, h, j], is_dual)
    } else {
        select_562([i, h, j, g, d, e, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2203([c, b, d, a, e, f, g, j, i, h], is_dual)
    } else {
        select_2206([c, d, a, e, f, b, j, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2208([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_580([d, b, c, h, f, i, g, l, j], is_dual)
    } else {
        select_153([a, b, d, j, e, k, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2210([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_98([j, g, a, h, e, b], !is_dual)
    } else {
        select_188([a, c, d, g, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2209([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2210([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_700([c, e, f, h, i, a, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_2207([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2208([b, a, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_2209([d, l, h, m, j, k, a, g, e, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2201([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2202([d, k, m, i, l, e, h, a, g, b], !is_dual)
    } else {
        select_2207([b, a, c, d, e, f, h, i, j, l, g, m, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_2195([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2196([a, b, c, d, f, e, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_2201([e, c, d, g, a, f, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2175([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_2176([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    } else {
        select_2195([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2216([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_820([a, b, d, e, g, i, h, j], is_dual)
    } else {
        select_128([a, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2215([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2216([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1524([a, b, f, d, h, g, e, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2214([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2215([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_545([a, b, f, d, e, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2213([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2214([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2214([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2219([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_565([a, b, d, e, h, g, j, i], is_dual)
    } else {
        select_975([k, j, h, a, i, b, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2218([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_859([a, c, d, e, b, g, f, i, h, j], is_dual)
    } else {
        select_2219([a, b, c, d, e, g, h, i, f, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_849([a, c, d, e, b, g, f, h, j, i], is_dual)
    } else {
        select_2218([a, b, e, c, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2212([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2213([b, c, a, d, e, f, g, h, j, k], is_dual)
    } else {
        select_2217([a, d, b, c, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2224([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_436([a, b, f, d, e, i, g, h], is_dual)
    } else {
        select_436([a, c, e, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2223([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2224([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_309([a, e, f, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2222([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_463([i, h, k, l, g, d, e, j, a], !is_dual)
    } else {
        select_2223([b, a, c, e, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2226([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_580([d, f, a, i, e, j, h, g, k], is_dual)
    } else {
        select_606([g, h, b, c, d, f, i, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_2228([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_215([f, d, g, e, a, b], !is_dual)
    } else {
        select_215([f, e, g, d, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2227([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_580([d, a, c, g, e, i, h, f, j], is_dual)
    } else {
        select_2228([d, g, j, f, h, a, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2225([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2226([b, d, c, g, e, f, h, j, i, k, l], is_dual)
    } else {
        select_2227([a, i, b, k, e, h, d, j, g, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2221([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_2222([a, b, f, d, e, j, g, h, k, l, m, i], is_dual)
    } else {
        select_2225([a, b, c, d, e, f, g, h, j, i, k, n, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2232([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_581([f, b, c, d, h, g, j], is_dual)
    } else {
        select_33([i, a, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_2233([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_98([c, b, e, f, d, g], is_dual)
    } else {
        select_153([d, a, g, c, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2231([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2232([c, a, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2233([a, c, g, e, d, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2230([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2231([d, b, c, g, f, i, e, h, j, k], is_dual)
    } else {
        select_2227([a, e, c, h, f, i, d, j, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2229([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2222([a, c, b, d, e, f, g, i, h, k, l, j], is_dual)
    } else {
        select_2230([a, b, c, d, f, e, g, h, i, j, m, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_2220([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_2221([b, a, c, e, d, f, i, g, h, j, k, m, n, l], is_dual)
    } else {
        select_2229([a, f, b, d, e, j, g, k, i, l, m, n, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_2211([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_2212([l, h, i, g, n, d, m, j, e, k, a, b], !is_dual)
    } else {
        select_2220([b, a, c, e, d, f, h, i, g, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2174([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2175([a, b, c, d, e, g, h, j, f, k, i, l, m, n], is_dual)
    } else {
        select_2211([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2239([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_834([e, h, j, f, i, a, b, g], !is_dual)
    } else {
        select_312([b, c, d, f, e, h, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_2238([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2028([e, j, h, k, i, f, a, c, b, g], !is_dual)
    } else {
        select_2239([a, c, d, b, e, f, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2241([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_110([a, e, c, g, f, i, j], is_dual)
    } else {
        select_50([a, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2240([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_109([e, h, j, a, f, i, b, g, c], !is_dual)
    } else {
        select_2241([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2237([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2238([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_2240([a, c, b, d, f, e, h, g, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2244([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1964([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_606([a, f, i, j, b, h, g, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2243([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2244([a, b, c, d, g, f, i, j, h, m], is_dual)
    } else {
        select_573([a, f, e, b, d, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2242([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2243([a, b, d, c, e, f, g, h, i, l, j, k, m], is_dual)
    } else {
        select_837([a, f, h, e, c, g, j, k, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_2236([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2237([a, h, b, c, j, e, i, f, m, k, n], is_dual)
    } else {
        select_2242([e, l, j, i, n, a, m, k, h, b, f, g, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2248([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1654([b, e, c, d, g, f, h, i], is_dual)
    } else {
        select_331([d, a, f, c, g, e, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2250([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_71([e, a, b, g, i, f], is_dual)
    } else {
        select_215([c, d, f, e, h, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_2249([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2250([i, j, g, k, h, e, d, a, b], !is_dual)
    } else {
        select_1915([g, a, c, e, f, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2247([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2248([c, a, d, e, f, b, g, i, j, h, k], is_dual)
    } else {
        select_2249([c, b, d, a, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2252([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1059([h, i, j, a, e, g, b, f, d], !is_dual)
    } else {
        select_941([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2253([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_812([e, h, i, f, a, b, g], !is_dual)
    } else {
        select_846([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2251([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2252([b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2253([b, a, c, d, i, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2246([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2247([f, b, c, e, a, h, g, i, j, k, l], is_dual)
    } else {
        select_2251([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2245([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2237([e, f, a, c, i, d, h, g, l, j, m], is_dual)
    } else {
        select_2246([d, i, k, h, m, e, l, j, f, a, g, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2235([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2236([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2245([b, g, c, e, h, i, f, a, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2256([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1462([a, f, b, g, d, e, h, i, j], is_dual)
    } else {
        select_442([a, b, c, h, e, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2257([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1542([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1542([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2255([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2256([a, b, d, c, e, f, h, g, i, j], is_dual)
    } else {
        select_2257([a, f, b, c, h, e, g, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2261([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_751([b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_110([e, h, g, j, i, f, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2262([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_237([b, a, d, e, f, c, g, h], is_dual)
    } else {
        select_1630([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2261([d, b, a, c, e, f, h, g, i, j], is_dual)
    } else {
        select_2262([e, g, j, k, l, a, h, f, i, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2264([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_834([e, a, c, h, f, d, g, i], is_dual)
    } else {
        select_761([c, b, a, e, f, d, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2263([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2264([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_2262([e, d, i, j, k, a, h, g, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2260([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_2263([f, b, d, a, e, i, g, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2267([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_291([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_634([b, c, g, e, f, a, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2269([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_292([d, g, h, e, a, f, b], !is_dual)
    } else {
        select_129([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2268([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2269([c, d, b, e, f, a, h, g], is_dual)
    } else {
        select_1513([c, a, d, e, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2266([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2267([b, c, a, d, f, e, g, i, h], is_dual)
    } else {
        select_2268([b, a, c, g, f, h, i, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_2272([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_292([e, h, i, f, a, g, b], !is_dual)
    } else {
        select_612([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2271([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2272([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_1513([b, c, g, e, f, a, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2270([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2271([a, b, g, c, e, i, f, h, j], is_dual)
    } else {
        select_2267([f, b, a, d, e, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2265([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2266([f, g, b, d, a, e, h, i, j], is_dual)
    } else {
        select_2270([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2258([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2259([a, b, g, c, e, i, f, j, k, h, l, m], is_dual)
    } else {
        select_2265([a, b, f, d, e, j, h, g, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2254([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2255([a, b, c, g, e, i, f, j, h, k, l], is_dual)
    } else {
        select_2258([a, b, d, c, e, g, f, i, h, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2234([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2235([a, b, c, d, e, g, h, j, k, l, f, i, m, n], is_dual)
    } else {
        select_2254([a, c, b, d, e, f, h, i, j, k, l, g, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2173([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2174([a, c, d, e, b, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_2234([a, d, b, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2172([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2173([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2173([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2111([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < m) || (is_dual && d > m) {
        select_2112([a, b, c, e, h, j, g, k, i, l, m, d, n], is_dual)
    } else {
        select_2172([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1887([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1888([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_2111([a, b, c, d, f, g, e, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2283([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_292([a, b, g, f, e, h, j], is_dual)
    } else {
        select_100([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2282([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_804([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2283([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2284([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_120([a, b, c, f, h, e], is_dual)
    } else {
        select_120([b, a, d, e, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2281([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2282([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2284([b, c, d, a, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2280([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2281([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_2281([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2288([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([a, b, c, d, e, f, g], is_dual)
    } else {
        select_238([f, e, h, i, a, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2287([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2288([a, h, i, j, b, f, g, d, e], !is_dual)
    } else {
        select_405([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2286([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, c, d, b, g, h], is_dual)
    } else {
        select_2287([a, b, e, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2289([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1827([a, i, j, k, b, g, d, e, h], !is_dual)
    } else {
        select_1874([a, b, c, f, g, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2285([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2286([a, b, e, f, g, c, i, h, j, k], is_dual)
    } else {
        select_2289([a, b, d, e, f, c, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2279([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2280([a, b, c, d, e, g, i, j, l, h], is_dual)
    } else {
        select_2285([b, a, e, f, c, d, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2294([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_216([b, c, d, e, h, g, f], is_dual)
    } else {
        select_359([e, h, j, k, a, i, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_313([a, b, h, e, f, j], is_dual)
    } else {
        select_1824([a, f, c, d, e, g, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2293([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2294([i, h, k, l, e, j, a, f, g, c, d], !is_dual)
    } else {
        select_2295([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2297([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_581([i, a, b, e, f, h, j], is_dual)
    } else {
        select_340([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2296([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_638([i, h, e, k, a, f, j, g], !is_dual)
    } else {
        select_2297([b, a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2292([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2293([b, c, d, e, a, f, g, i, h, j, k, l], is_dual)
    } else {
        select_2296([a, c, d, e, b, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2291([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_394([c, b, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2292([b, c, f, d, e, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2290([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2291([e, d, h, j, k, m, l, i, a, g, f, c], !is_dual)
    } else {
        select_2280([d, e, j, k, h, l, a, f, b, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2278([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2279([d, e, k, l, m, h, f, j, a, i, g, b], !is_dual)
    } else {
        select_2290([b, a, c, e, d, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2277([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2278([a, c, d, e, g, b, h, f, i, j, k, l, m], is_dual)
    } else {
        select_2278([b, c, d, f, g, a, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2276([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2277([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2277([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2275([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2276([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2276([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_226([a, c, b, d, e, f, g, i, j], is_dual)
    } else {
        select_389([b, d, e, f, a, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2303([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2304([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2304([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2307([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_227([c, a, d, e, f, g, b, h, i], is_dual)
    } else {
        select_1211([c, b, d, e, f, g, a, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2306([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2307([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_389([a, d, e, f, b, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2305([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2306([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_2306([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2303([a, d, b, e, f, g, c, h, i, j], is_dual)
    } else {
        select_2305([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2308([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2303([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_2303([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_2302([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    } else {
        select_2308([a, d, b, c, f, g, h, e, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2313([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_67([a, h, e, f, g, b], !is_dual)
    } else {
        select_288([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2312([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2313([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_288([a, b, d, e, c, f, h, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_2315([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_67([b, a, c, d, e, f], is_dual)
    } else {
        select_102([d, e, g, a, b, f, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_2314([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2315([a, c, d, b, e, f, g], is_dual)
    } else {
        select_2315([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2311([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_2312([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_2314([a, b, c, f, g, d, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2318([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_84([a, c, d, b, f, e, g], is_dual)
    } else {
        select_422([a, e, h, b, f, g, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2317([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2318([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_2318([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2316([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1818([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_2317([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2310([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_2311([a, e, f, g, i, h, c, d], !is_dual)
    } else {
        select_2316([a, f, g, e, i, h, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2322([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_280([a, b, d, e, f, g, h, j], is_dual)
    } else {
        select_2007([h, i, j, a, b, f, c, g], !is_dual)
    }
}
/// n = 7, i = 3
fn select_2324([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_68([b, c, d, e, f], is_dual)
    } else {
        select_186([d, f, g, a, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2323([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2324([a, b, f, d, g, h, e], is_dual)
    } else {
        select_452([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2321([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2322([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2323([i, j, k, a, b, g, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2326([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_891([d, e, i, h, g, a, f, b], !is_dual)
    } else {
        select_120([d, b, e, c, g, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_2327([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_378([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_378([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2325([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2326([j, k, g, a, b, i, f, h, c], !is_dual)
    } else {
        select_2327([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2320([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2321([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2325([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2319([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2320([a, d, e, b, f, g, c, h, i, k, j], is_dual)
    } else {
        select_2320([a, d, e, c, f, g, b, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2309([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2310([a, j, b, k, c, d, e, i, h], !is_dual)
    } else {
        select_2319([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2301([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2309([a, b, d, e, f, g, h, i, c, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2299([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2300([f, g, h, e, a, b, c, d, j, l, i], is_dual)
    } else {
        select_2300([f, g, h, e, c, d, a, b, i, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2333([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_299([a, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1550([a, g, i, f, k, e, j, c, h], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2335([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_618([g, f, c, i, h, d, e, a], !is_dual)
    } else {
        select_50([f, g, h, i, c, d, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2334([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_683([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_2335([c, b, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2332([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2333([a, d, c, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2334([a, d, b, e, f, c, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2331([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2332([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2332([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2338([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1827([a, b, c, d, g, h, f, i, j], is_dual)
    } else {
        select_463([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2337([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1495([a, c, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2338([a, i, k, f, l, b, g, j, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2336([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2337([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2337([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2330([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2331([a, b, c, k, l, j, h, g, d, i, e], !is_dual)
    } else {
        select_2336([a, b, c, e, f, d, h, g, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2344([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_562([b, a, e, d, g, f, i, h], is_dual)
    } else {
        select_1617([b, a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2343([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_293([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_2344([b, c, g, d, a, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2342([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2343([a, d, c, b, e, g, h, f, j, i], is_dual)
    } else {
        select_1498([a, d, f, e, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2348([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_62([i, j, a, b, g], !is_dual)
    } else {
        select_55([d, c, f, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2347([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2348([a, b, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_2348([a, b, e, d, c, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2347([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1581([b, c, d, g, a, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2346([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_559([a, f, d, e, b, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2341([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2342([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_2345([a, b, d, c, h, g, i, j, f, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2352([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_111([a, c, d, e, f, g, h], is_dual)
    } else {
        select_188([a, d, b, f, e, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2351([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2352([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_111([e, c, d, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2350([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_476([a, e, j, h, i, f, b, g], !is_dual)
    } else {
        select_2351([a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2355([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_68([g, e, b, c, f], !is_dual)
    } else {
        select_940([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2354([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_166([a, b, c, f, e, g, h, d, i], is_dual)
    } else {
        select_2355([b, c, a, f, d, g, h, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2356([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_699([b, a, e, d, g, h, c, i, f], is_dual)
    } else {
        select_2233([b, a, e, c, g, h, f, d, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2353([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2354([h, g, i, e, f, d, a, b, c], !is_dual)
    } else {
        select_2356([c, b, e, f, d, h, a, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2349([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2350([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2353([a, c, g, f, b, h, i, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2340([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2341([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2349([a, b, d, h, f, g, i, c, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2339([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2340([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2340([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2329([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2330([a, b, c, e, d, f, g, h, j, k, l, i], is_dual)
    } else {
        select_2339([a, b, c, d, f, e, h, g, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2363([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_98([b, c, d, f, e, g], is_dual)
    } else {
        select_186([g, f, h, a, d, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2362([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2363([a, e, b, h, d, i, f, g], is_dual)
    } else {
        select_452([a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2364([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_81([a, f, c, b, i, j], is_dual)
    } else {
        select_614([b, d, a, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2361([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2362([c, b, d, e, f, a, g, h, i], is_dual)
    } else {
        select_2364([b, c, a, d, f, h, e, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_81([a, f, d, b, h, j], is_dual)
    } else {
        select_1236([b, c, e, a, d, f, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2367([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2363([a, b, d, f, e, h, i, g], is_dual)
    } else {
        select_214([a, b, e, c, g, i, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2365([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2366([b, c, d, a, e, g, f, i, h, j], is_dual)
    } else {
        select_2367([c, d, e, b, f, g, a, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2360([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2361([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2365([h, g, a, j, k, e, b, c, i, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2369([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2109([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_155([f, a, h, j, b, i, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1680([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_2369([a, h, j, g, k, e, f, b, i, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2359([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2360([a, i, k, l, f, j, b, c, h, e, g], !is_dual)
    } else {
        select_2368([a, l, i, k, f, j, c, b, g, d, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_565([a, b, d, e, f, i, j, g], is_dual)
    } else {
        select_364([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2372([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_953([a, j, h, k, i, e, f, g, b, d], !is_dual)
    } else {
        select_2373([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2375([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_660([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_660([a, b, c, e, f, g, d, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2374([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2375([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_1122([a, d, h, i, e, f, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2371([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2372([a, j, k, g, e, i, h, b, f, d, c], !is_dual)
    } else {
        select_2374([a, h, k, b, e, g, i, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2379([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_453([b, d, c, g, h, f, j], is_dual)
    } else {
        select_22([a, c, f, e, g, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2378([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2379([a, c, b, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_975([a, b, f, h, e, g, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2381([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([b, c, d, f, h, g], is_dual)
    } else {
        select_103([f, j, e, i, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2383([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_52([j, e, k, g, d, a], !is_dual)
    } else {
        select_62([b, c, h, i, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_2382([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2383([l, i, j, k, h, g, f, c, d, b, e], !is_dual)
    } else {
        select_91([a, c, d, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2380([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2381([b, d, a, e, f, g, i, h, k, l], is_dual)
    } else {
        select_2382([a, b, c, e, d, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2377([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2378([b, d, c, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_2380([a, b, c, d, e, f, h, i, g, k, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2384([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_222([a, b, d, c, e, f, h, g], is_dual)
    } else {
        select_222([a, c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2376([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2377([a, c, d, b, e, f, h, i, g, k, j, l], is_dual)
    } else {
        select_2384([a, d, g, e, i, b, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2370([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2371([a, c, f, d, b, g, i, j, h, l, k], is_dual)
    } else {
        select_2376([a, c, d, e, b, g, h, f, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2359([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_2370([a, b, c, d, e, h, g, i, j, k, f, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2357([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2358([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2358([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2328([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2329([a, b, c, e, g, f, h, d, i, j, k, l], is_dual)
    } else {
        select_2357([a, b, c, e, g, d, h, f, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2298([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2299([a, e, g, h, f, b, c, d, i, j, k, l], is_dual)
    } else {
        select_2328([b, c, d, f, g, h, e, i, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2274([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2275([a, b, c, d, e, f, g, i, h, j, l, m, k], is_dual)
    } else {
        select_2298([a, b, c, d, g, k, l, m, e, j, h, i], !is_dual)
    }
}
/// n = 7, i = 2
fn select_2394([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_68([g, f, c, a, b], !is_dual)
    } else {
        select_122([b, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2393([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2092([c, a, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2394([d, e, c, g, i, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_2396([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_38([a, b, d, h, f, g, j], is_dual)
    } else {
        select_129([c, d, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2395([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2394([b, c, a, g, i, h, e], is_dual)
    } else {
        select_2396([b, c, d, a, f, e, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2392([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2393([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2395([c, d, e, b, g, f, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_849([c, a, b, e, d, g, f, i, j, h], is_dual)
    } else {
        select_2392([c, e, d, a, b, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2390([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2391([c, d, a, e, b, h, g, i, j, f], is_dual)
    } else {
        select_2391([c, d, b, e, a, h, f, i, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2400([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_293([b, c, a, d, e, f, g, h, j, i], is_dual)
    } else {
        select_234([b, g, d, e, f, a, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2399([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_269([c, d, e, a, f, g, i, h], is_dual)
    } else {
        select_2400([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2398([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2399([a, d, e, b, c, f, g, i, j, h, k], is_dual)
    } else {
        select_849([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_118([a, g, d, e, f, h, j, k], is_dual)
    } else {
        select_772([b, c, f, d, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2404([a, d, e, b, c, f, h, g, i, j, k], is_dual)
    } else {
        select_812([d, b, c, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2405([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, c, d, e, f, g, h], is_dual)
    } else {
        select_88([e, i, j, a, f, g, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2402([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2403([a, d, e, c, b, f, h, g, i, j, k], is_dual)
    } else {
        select_2405([a, d, e, g, f, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_849([b, c, d, a, e, f, g, h, j, i], is_dual)
    } else {
        select_2402([a, b, e, c, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2398([a, c, d, b, e, g, h, i, j, f, k], is_dual)
    } else {
        select_2401([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2389([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2390([a, b, d, e, f, c, g, h, j, i], is_dual)
    } else {
        select_2397([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2411([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_803([e, b, c, d, f, g, i, h], is_dual)
    } else {
        select_304([g, e, j, d, h, a, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2410([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1381([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_2411([c, b, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2413([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_198([b, a, c, d, f, e, g, h], is_dual)
    } else {
        select_213([d, g, i, a, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2414([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_154([a, b, d, f, g, e, i, j], is_dual)
    } else {
        select_186([a, e, c, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2412([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2413([b, e, d, g, a, f, i, j, h], is_dual)
    } else {
        select_2414([b, a, c, d, f, g, e, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2409([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2410([a, b, e, d, g, f, i, j, h, k], is_dual)
    } else {
        select_2412([a, b, f, c, h, e, j, i, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2409([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_1382([c, b, a, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1378([a, c, d, b, e, f, h, i, g, j], is_dual)
    } else {
        select_2408([a, b, d, c, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2407([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_2407([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2389([a, b, e, c, d, f, g, h, j, i, k], is_dual)
    } else {
        select_2406([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2388([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2388([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2419([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1462([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_1462([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2421([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, h], is_dual)
    } else {
        select_110([a, b, c, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2420([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2421([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_541([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2418([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2419([a, b, c, d, e, f, h, i, j], is_dual)
    } else {
        select_2420([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2425([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_81([a, b, c, h, g, f], !is_dual)
    } else {
        select_74([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2424([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2425([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_74([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_2426([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1914([a, b, d, c, e, f, g], is_dual)
    } else {
        select_1914([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2423([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2424([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2426([a, b, c, g, d, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2422([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2419([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2423([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2417([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2418([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2422([a, b, c, d, f, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2431([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1779([b, c, e, d, a, g, h, f, i, j], is_dual)
    } else {
        select_725([c, b, f, e, h, a, g, j, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_2432([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_84([e, b, d, a, f, g, h], is_dual)
    } else {
        select_84([f, a, c, b, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2430([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2431([a, c, d, e, b, g, f, h, i, j], is_dual)
    } else {
        select_2432([a, d, f, e, b, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2429([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2430([a, c, b, d, e, g, h, i, f, j], is_dual)
    } else {
        select_2430([b, c, a, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2428([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2429([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2429([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2427([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2428([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_2428([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2416([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2417([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2427([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2300([a, b, c, f, d, e, g, h, j, k, i], is_dual)
    } else {
        select_2416([a, b, c, f, g, h, d, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2386([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2387([a, b, c, e, f, g, h, i, j, d, k], is_dual)
    } else {
        select_2415([a, b, c, e, f, g, d, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2441([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_213([g, i, e, d, b, h, f], !is_dual)
    } else {
        select_993([g, h, k, d, j, a, e, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2440([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1532([g, k, d, j, e, i, h, b, a, f], !is_dual)
    } else {
        select_2441([b, a, c, e, d, f, g, i, k, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2439([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1531([i, l, g, m, e, d, k, h, b, a], !is_dual)
    } else {
        select_2440([d, b, c, g, e, f, j, h, k, i, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_2444([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_153([b, c, d, f, e, g, h], is_dual)
    } else {
        select_186([d, f, i, a, h, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_489([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2444([a, b, f, d, e, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2445([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1452([h, f, g, a, b, c, e], !is_dual)
    } else {
        select_974([a, c, d, b, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2442([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2443([b, a, c, d, e, f, h, j, k, g, i], is_dual)
    } else {
        select_2445([d, i, e, k, j, a, g, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2438([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2439([b, a, c, e, d, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_2442([e, a, c, g, h, f, i, d, j, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2437([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2438([c, b, d, f, e, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_2177([h, j, l, m, f, e, k, a, i, b, c, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2448([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_570([a, b, i, j, f, h, c, d, g], !is_dual)
    } else {
        select_208([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2447([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_842([a, b, i, k, f, j, h, c, d, g], !is_dual)
    } else {
        select_2448([a, b, d, c, e, f, g, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2452([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_153([a, c, g, f, e, i, h], is_dual)
    } else {
        select_153([c, b, h, d, f, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2451([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_914([a, c, e, f, g, h, i, d], is_dual)
    } else {
        select_2452([c, b, a, e, f, d, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2454([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_153([c, b, g, e, f, h, j], is_dual)
    } else {
        select_154([g, i, k, d, e, j, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1431([e, a, c, g, f, h, d, j, k], is_dual)
    } else {
        select_2454([b, a, c, e, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2450([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2451([e, j, k, g, h, i, a, c, b, f], !is_dual)
    } else {
        select_2453([g, j, k, e, h, i, a, c, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2456([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_724([b, a, d, c, e, f, g, i, j], is_dual)
    } else {
        select_250([a, c, e, f, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2458([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, c, d, e, f, g, h], is_dual)
    } else {
        select_382([a, d, g, f, e, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2457([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2458([i, g, j, k, d, h, e, b, a], !is_dual)
    } else {
        select_70([g, b, c, d, f, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2456([g, d, j, k, h, i, e, a, b, f], !is_dual)
    } else {
        select_2457([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2449([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2450([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_2455([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2446([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2447([a, e, c, g, d, f, h, i, j, l, m], is_dual)
    } else {
        select_2449([a, b, c, h, e, f, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2436([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2437([a, i, k, m, f, g, l, b, j, c, h, d, e], !is_dual)
    } else {
        select_2446([a, f, k, m, b, g, i, l, j, c, d, h, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2462([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_570([a, e, h, k, f, j, c, d, g], !is_dual)
    } else {
        select_1291([a, b, c, f, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2461([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2462([a, k, g, l, b, i, j, h, c, f, d], !is_dual)
    } else {
        select_576([a, k, i, b, j, h, c, g, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2464([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1619([b, f, d, e, g, h, a], is_dual)
    } else {
        select_2323([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2463([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2462([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2464([a, c, f, e, g, h, b, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2460([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2461([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_2463([a, h, k, l, b, i, j, c, f, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2469([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([i, g, a, e, h, b, d], !is_dual)
    } else {
        select_581([a, c, d, f, g, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2470([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_167([h, i, d, f, a, g, e, b], !is_dual)
    } else {
        select_153([g, i, d, f, e, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2468([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2469([a, b, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_2470([e, i, j, a, h, g, f, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2472([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_340([e, c, d, a, f, g, h], is_dual)
    } else {
        select_342([b, a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2474([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_22([a, b, c, d, e, f, g], is_dual)
    } else {
        select_33([a, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2473([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_820([a, b, c, e, g, f, h, i], is_dual)
    } else {
        select_2474([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2471([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2472([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_2473([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2467([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2468([a, c, f, d, h, g, e, j, i, k], is_dual)
    } else {
        select_2471([a, c, b, e, g, j, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2476([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1208([a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_628([a, b, c, g, e, h, j, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2478([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_235([e, a, c, d, f, h, j, g], is_dual)
    } else {
        select_529([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2477([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_618([h, g, i, k, a, e, f, c], !is_dual)
    } else {
        select_2478([b, c, a, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2475([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2476([b, c, d, e, g, h, i, f, k, j], is_dual)
    } else {
        select_2477([h, i, l, k, j, e, b, a, g, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2466([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2467([a, c, d, b, e, h, g, i, f, j, l], is_dual)
    } else {
        select_2475([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2480([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1531([a, d, c, b, f, g, e, j, i, h], is_dual)
    } else {
        select_2268([a, b, d, g, f, h, j, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_2483([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_153([b, c, d, f, e, g, h], is_dual)
    } else {
        select_215([h, f, i, a, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2482([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2483([g, j, i, a, h, e, b, c, f], !is_dual)
    } else {
        select_2473([b, c, a, d, e, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2481([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1599([a, b, d, c, g, e, h, i, f], is_dual)
    } else {
        select_2482([a, d, c, b, g, f, h, e, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2479([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2480([g, a, c, d, e, f, h, i, j, k], is_dual)
    } else {
        select_2481([e, b, d, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2465([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2466([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2479([a, b, d, e, c, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2459([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2460([a, b, c, d, e, g, h, i, k, j, f, l], is_dual)
    } else {
        select_2465([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2435([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2436([a, f, j, k, m, b, g, l, c, i, d, h, e], !is_dual)
    } else {
        select_2459([a, f, j, m, g, b, k, l, c, d, i, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2486([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_417([a, b, c, d, e, h, f, i, j], is_dual)
    } else {
        select_2118([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2489([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2362([i, l, k, j, g, b, c, a, d], !is_dual)
    } else {
        select_2322([b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2492([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_212([b, a, c, d, e, g, h, i, f], is_dual)
    } else {
        select_382([h, d, i, f, b, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2491([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_120([f, a, g, c, h, d], is_dual)
    } else {
        select_2492([a, d, b, h, e, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2495([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_22([b, c, d, f, h, g, i], is_dual)
    } else {
        select_703([a, b, e, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2494([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_235([a, g, c, d, e, h, i, k], is_dual)
    } else {
        select_2495([b, a, c, d, f, e, h, g, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2493([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2494([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2494([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2490([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2491([j, l, g, i, k, a, b, f, c, h], !is_dual)
    } else {
        select_2493([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2488([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2489([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2490([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2487([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2488([a, d, e, b, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_2488([a, d, e, c, f, g, b, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2485([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2486([a, d, e, c, f, g, b, h, i, j], is_dual)
    } else {
        select_2487([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2500([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_618([a, b, c, h, g, f, i, j], is_dual)
    } else {
        select_1964([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2499([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([a, g, c, d, f, i, h], is_dual)
    } else {
        select_2500([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2502([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1290([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_874([b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_2503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_272([a, d, e, h, f, g, j, k], is_dual)
    } else {
        select_1580([a, b, c, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2501([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2502([a, c, d, g, f, b, h, i, j], is_dual)
    } else {
        select_2503([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2498([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2499([c, b, e, f, a, g, d, h, i, j], is_dual)
    } else {
        select_2501([b, c, e, f, d, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2497([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2498([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_2498([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2497([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_2497([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2484([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2485([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_2496([a, c, b, f, g, d, e, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_2434([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_2435([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2484([a, f, g, j, k, b, m, c, i, l, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2433([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2434([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2434([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2385([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2386([a, b, c, d, l, m, k, g, e, j, i], !is_dual)
    } else {
        select_2433([a, b, c, d, e, f, g, h, j, l, m, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2273([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2274([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_2385([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_1886([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < e) || (is_dual && m > e) {
        select_1887([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2273([a, b, c, d, f, i, h, j, k, l, m, e, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1885([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1886([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_1886([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2514([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_265([b, c, e, d, h, g, f, i], is_dual)
    } else {
        select_2216([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2515([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1290([a, c, d, b, e, f, h, g, i], is_dual)
    } else {
        select_2394([c, d, b, e, g, h, f], is_dual)
    }
}
/// n = 11, i = 3
fn select_2513([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2514([a, b, d, e, f, i, g, h, j, k], is_dual)
    } else {
        select_2515([a, d, b, c, f, j, h, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2517([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1008([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1008([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2516([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_36([c, d, e, f, a, b, g, i, h, j], is_dual)
    } else {
        select_2517([a, b, c, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2512([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2513([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_2516([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2511([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2512([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2512([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2510([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2511([a, b, c, f, g, d, e, i, j, h, k], is_dual)
    } else {
        select_2511([a, b, c, f, g, e, d, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2521([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_534([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_285([a, c, i, d, g, b, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2520([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2521([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_2521([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2519([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2520([f, g, a, b, c, d, e, h, j, i, k], is_dual)
    } else {
        select_2520([f, g, a, d, e, b, c, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2525([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_234([b, g, d, e, f, a, h, i, j], is_dual)
    } else {
        select_1632([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2524([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_449([a, b, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_2525([f, b, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2524([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_2524([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2522([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_220([a, b, c, d, e, h, g, i, j, k], is_dual)
    } else {
        select_2523([a, b, c, f, d, e, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2518([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2519([d, a, e, f, g, b, c, h, i, j, k], is_dual)
    } else {
        select_2522([b, c, d, f, g, e, h, i, a, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2509([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2510([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_2518([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2530([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_184([a, i, c, d, b, g, h, j, k, l], is_dual)
    } else {
        select_593([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2529([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1174([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_2530([a, b, d, e, f, g, c, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2531([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1193([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_1193([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2528([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2529([a, b, c, d, g, e, f, h, i, j, k, l], is_dual)
    } else {
        select_2531([a, b, d, e, f, c, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, d, e, c, g, h], is_dual)
    } else {
        select_1661([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2536([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_685([b, c, d, g], is_dual)
    } else {
        select_562([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2538([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, b, f, h, e, i], is_dual)
    } else {
        select_55([e, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1265([a, c, d, e, g, f, i, h, j], is_dual)
    } else {
        select_2538([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2536([b, a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_2537([b, e, c, d, f, g, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2533([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2534([a, g, b, c, d, h, f, i, j, k], is_dual)
    } else {
        select_2535([a, f, c, d, e, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2542([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_238([a, c, d, f, e, g, i], is_dual)
    } else {
        select_304([a, b, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2542([g, b, d, e, a, f, h, j, i], is_dual)
    } else {
        select_1518([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2540([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([a, g, b, c, f, i, h], is_dual)
    } else {
        select_2541([a, d, e, b, c, f, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_2543([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_444([a, g, f, b, c], !is_dual)
    } else {
        select_67([a, b, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2539([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2540([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_2543([a, c, d, h, b, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2532([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2533([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2539([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2527([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2528([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_2532([a, b, d, e, f, h, i, c, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2547([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1496([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_34([a, b, k, j], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2548([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1000([a, f, h, l, b, k, i, d, g], !is_dual)
    } else {
        select_2525([a, c, e, b, d, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2546([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_2547([a, c, b, e, f, d, g, h, j, i, k], is_dual)
    } else {
        select_2548([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_2550([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_282([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_1935([a, b, f, j, k, i, c, h, d, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2549([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2550([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_1196([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2545([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2546([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    } else {
        select_2549([a, b, g, d, f, c, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2544([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2545([a, b, c, d, h, e, j, g, i, k, l, m], is_dual)
    } else {
        select_2545([a, b, c, d, g, f, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2526([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2527([a, b, c, e, d, f, g, i, j, h, k, l], is_dual)
    } else {
        select_2544([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2508([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2509([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_2526([a, b, c, d, f, g, h, i, j, e, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_2557([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_886([a, c, b, d, e, f, g], is_dual)
    } else {
        select_303([a, g, h, i, d, e, f, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2558([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_74([a, b, d, e, g, h, j], is_dual)
    } else {
        select_580([a, k, j, i, g, b, f, h, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2557([a, k, g, f, j, i, b, c, h], !is_dual)
    } else {
        select_2558([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2555([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2025([a, g, b, j, l, f, k, i, c, h], !is_dual)
    } else {
        select_2556([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2561([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1156([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_1156([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2560([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_191([a, b, c, h, j, i, g], !is_dual)
    } else {
        select_2561([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2559([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_307([a, b, c, h, f, i, g, j, k], is_dual)
    } else {
        select_2560([a, b, f, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2554([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2555([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2559([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2553([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2554([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_2554([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2567([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_71([a, e, f, h, g, b], !is_dual)
    } else {
        select_216([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2566([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2567([a, h, b, c, f, i, g, j], is_dual)
    } else {
        select_1964([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2565([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_139([a, f, g, d, e, b, h, i, j], is_dual)
    } else {
        select_2566([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_564([a, f, b, d, e, g, h, j, k, l], is_dual)
    } else {
        select_1468([a, c, b, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2564([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2565([a, d, b, e, f, g, c, h, i, j], is_dual)
    } else {
        select_2568([a, d, c, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2570([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1468([a, f, i, j, b, g, h, c, d], !is_dual)
    } else {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2570([a, b, d, e, h, g, c, i, j, k], is_dual)
    } else {
        select_1687([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2563([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2564([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2569([a, g, i, b, k, m, c, l, j, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2562([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2563([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_2563([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2552([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2553([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2562([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_2576([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_120([a, e, g, h, b, c], !is_dual)
    } else {
        select_110([a, e, g, h, c, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2575([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_249([a, i, j, k, e, b, h], !is_dual)
    } else {
        select_2576([a, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2578([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_385([a, g, i, j, f, h, b, d, e], !is_dual)
    } else {
        select_250([a, b, c, e, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2577([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1413([a, e, f, c, d, g, h, k], is_dual)
    } else {
        select_2578([a, i, j, k, e, f, b, h, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2574([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2575([a, g, i, k, f, j, b, h, c, d, e], !is_dual)
    } else {
        select_2577([a, f, i, k, b, g, j, h, d, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2574([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2574([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2581([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_707([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_299([a, c, d, h, g, b, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2582([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_564([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_564([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2580([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2581([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_2582([a, b, g, c, d, f, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2579([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2580([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1200([a, b, d, e, g, c, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2572([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2573([a, b, c, h, e, f, d, i, j, k, l], is_dual)
    } else {
        select_2579([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2586([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_191([a, b, c, g, i, h, f], !is_dual)
    } else {
        select_280([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2585([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1462([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2586([a, b, c, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2584([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2585([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_2585([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 1
fn select_2590([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1154([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_592([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 6, i = 1
fn select_2592([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_75([a, b, c, d, f], is_dual)
    } else {
        select_75([a, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_2591([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2592([a, c, d, e, f, h], is_dual)
    } else {
        select_1964([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_2589([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2590([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2591([a, h, d, e, f, g, b, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_2596([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_52([a, b, c, d, e, f], is_dual)
    } else {
        select_52([a, b, c, d, e, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_2595([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2596([a, b, i, g, j, k, l], is_dual)
    } else {
        select_63([c, d, e, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2597([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_51([a, b, j, k, i, h], !is_dual)
    } else {
        select_63([c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_2594([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2595([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2597([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2593([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2594([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_2594([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2588([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2589([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_2593([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2587([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1848([a, b, c, d, k, m, l, j, e, i], !is_dual)
    } else {
        select_2588([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2583([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2584([a, b, c, d, e, i, f, j, k, l, m], is_dual)
    } else {
        select_2587([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2571([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2572([a, b, c, d, f, g, i, e, j, k, l, m], is_dual)
    } else {
        select_2583([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2551([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_2552([a, b, c, d, f, g, i, j, e, k, l, m, n], is_dual)
    } else {
        select_2571([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2507([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2508([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_2551([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_2603([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_534([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_1498([a, c, i, d, g, b, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2602([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2521([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2603([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2601([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1192([a, b, c, d, f, i, h, e, j, k], is_dual)
    } else {
        select_2602([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2606([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_290([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_285([a, j, f, l, g, b, k, i, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2605([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2606([a, b, d, e, f, g, c, h, j, i, k, l], is_dual)
    } else {
        select_322([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2604([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2605([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_2605([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2600([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2601([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_2604([a, b, c, d, e, f, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2599([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2600([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_2600([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2598([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2508([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_2599([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2506([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2507([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_2598([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2614([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_541([a, c, b, e, f, d, g, h], is_dual)
    } else {
        select_2244([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2613([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2614([a, b, c, d, e, g, i, j, h, k], is_dual)
    } else {
        select_793([a, b, e, f, c, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2612([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2613([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_2613([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2618([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_250([a, c, e, d, f, g], is_dual)
    } else {
        select_331([a, f, e, i, h, b, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2619([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_385([a, b, c, d, f, i, j, h, k], is_dual)
    } else {
        select_311([a, c, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2617([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2618([a, f, j, k, h, b, i, g, e], !is_dual)
    } else {
        select_2619([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2616([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2617([a, c, d, e, f, b, g, h, i, j, l], is_dual)
    } else {
        select_2617([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2615([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1494([a, c, d, b, e, g, f, h, i, j], is_dual)
    } else {
        select_2616([a, g, i, f, l, m, k, b, j, c, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2611([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2612([a, i, g, l, f, m, b, k, c, j, d], !is_dual)
    } else {
        select_2615([a, c, d, b, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2610([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2611([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2611([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2625([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2542([c, b, d, e, f, a, g, i, h], is_dual)
    } else {
        select_792([c, a, d, e, f, b, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2624([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2625([d, i, j, g, k, a, e, b, h], !is_dual)
    } else {
        select_1000([a, d, e, c, g, f, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2627([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_84([a, e, c, d, g, f, h], is_dual)
    } else {
        select_50([g, i, j, e, a, b, h, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2626([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2627([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1122([e, i, j, g, b, a, c, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2623([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2624([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_2626([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2622([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_1002([a, e, i, b, k, f, j, c, h, g], !is_dual)
    } else {
        select_2623([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_2630([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1498([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_1498([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2631([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_1000([a, g, f, j, b, i, h, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2629([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2630([a, i, j, k, g, b, e, c], !is_dual)
    } else {
        select_2631([a, g, i, j, k, e, b, h, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2634([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_382([h, i, d, a, g, b], !is_dual)
    } else {
        select_188([f, i, g, a, d, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2633([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2634([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2634([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2635([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_393([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_393([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2632([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2633([a, i, k, g, j, b, c, d, h], !is_dual)
    } else {
        select_2635([c, d, b, a, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2628([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2629([a, b, i, l, g, k, c, j, d, e, h], !is_dual)
    } else {
        select_2632([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2621([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2622([a, b, g, l, c, i, k, j, d, e, h], !is_dual)
    } else {
        select_2628([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2640([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_81([a, g, c, d, f, h], is_dual)
    } else {
        select_561([a, g, i, j, e, h, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2639([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2640([a, f, i, k, g, j, b, h, c, d], !is_dual)
    } else {
        select_2640([a, g, i, k, f, j, b, h, c, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2642([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_385([a, b, c, g, f, i, j, h, k], is_dual)
    } else {
        select_75([a, d, e, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2643([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_385([a, b, c, f, e, h, i, g, j], is_dual)
    } else {
        select_34([a, d, g, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_2641([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2642([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2643([a, b, d, g, f, c, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2638([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2639([a, f, j, k, l, b, g, i, c, h, e], !is_dual)
    } else {
        select_2641([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2644([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_558([a, b, c, d, f, g, i, j, k], is_dual)
    } else {
        select_1541([a, b, g, c, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2637([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2638([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_2644([a, b, d, e, f, c, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2636([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1191([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2637([a, b, c, d, f, e, g, h, j, k, l, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_2620([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_2621([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2636([a, b, i, c, l, m, g, k, d, j, e, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2609([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2610([a, b, c, h, k, m, d, l, e, j, i, f, g], !is_dual)
    } else {
        select_2620([a, b, c, d, k, m, h, l, e, j, i, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2651([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_174([a, i, j, b, h, f, g], !is_dual)
    } else {
        select_144([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2652([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_331([a, b, c, d, f, h, i, j], is_dual)
    } else {
        select_144([a, c, d, e, h, f, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2650([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2651([a, b, d, g, h, f, j, i, k, l], is_dual)
    } else {
        select_2652([a, b, c, e, f, g, i, h, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2654([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_834([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_331([a, h, g, j, i, b, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2655([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1070([b, c, e, a, g, f, h], is_dual)
    } else {
        select_874([b, c, a, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_2653([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2654([a, b, c, d, f, g, e, h, i, k], is_dual)
    } else {
        select_2655([a, c, e, d, g, f, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2649([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2650([a, c, b, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_2653([a, h, k, m, b, i, l, c, f, j, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2660([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([f, c, d, e, h, i], is_dual)
    } else {
        select_62([i, j, a, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2659([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_382([b, g, c, a, f, i], is_dual)
    } else {
        select_2660([b, c, a, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2661([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_26([a, f, c, h], is_dual)
    } else {
        select_26([b, e, d, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2659([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2661([b, d, f, e, h, g, a, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2657([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_765([a, c, e, d, h, f, g, i, j], is_dual)
    } else {
        select_2658([a, b, j, c, f, e, i, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2663([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_451([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2474([a, c, d, f, e, g, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2664([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_32([d, h, i, g, a, f], !is_dual)
    } else {
        select_52([d, b, c, e, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2662([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2663([g, h, j, k, d, e, i, f, a, c], !is_dual)
    } else {
        select_2664([e, j, k, g, d, i, f, b, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2656([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_2657([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2662([b, f, g, e, i, j, h, k, l, a, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2648([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2649([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_2656([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_2667([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_109([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_2194([a, b, d, c, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2666([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1462([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_2667([a, b, d, g, f, h, c, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2670([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_127([a, b, c, d, f, g, e, h, j], is_dual)
    } else {
        select_127([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2669([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2670([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_2670([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2668([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2669([a, b, f, e, c, h, g, i, j, k], is_dual)
    } else {
        select_315([a, b, e, c, d, g, i, f, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2666([a, b, i, c, e, f, h, j, k, l], is_dual)
    } else {
        select_2668([a, b, f, d, e, g, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2647([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2648([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2665([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2676([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([e, b, c, d, f, g, h], is_dual)
    } else {
        select_1224([e, h, i, j, a, g, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2677([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2596([a, c, d, e, g, h, i], is_dual)
    } else {
        select_53([e, b, c, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2675([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2676([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_2677([a, c, d, e, b, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2674([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2675([a, b, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_348([a, i, j, b, k, g, h, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2673([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2674([a, b, c, g, d, f, i, j, h, k, l], is_dual)
    } else {
        select_2448([a, b, c, f, e, h, g, j, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2672([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_243([a, b, e, c, d, f, h, g, i, j], is_dual)
    } else {
        select_2673([a, b, e, d, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2678([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_569([a, b, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_190([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2671([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2672([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2678([a, b, c, e, h, g, i, d, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2646([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2647([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2671([a, b, c, d, e, h, g, j, k, i, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_2683([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_591([a, e, f, b, c, d, g, h, i], is_dual)
    } else {
        select_389([a, b, c, d, g, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2682([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2126([a, b, c, d, e, h, i, g, j, k], is_dual)
    } else {
        select_2683([a, c, d, e, b, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2681([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2682([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2682([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2686([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, b, c, e, f, g, h, i], is_dual)
    } else {
        select_573([a, b, d, c, g, f, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2685([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_569([a, b, d, g, f, i, h, c, j, k], is_dual)
    } else {
        select_2686([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2684([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2685([a, b, c, d, f, i, g, j, h, k, l], is_dual)
    } else {
        select_2685([a, b, c, e, f, i, g, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2680([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2681([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_2684([a, b, d, e, f, g, h, j, i, c, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2687([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_847([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_847([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2679([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2680([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2687([a, b, c, d, e, f, h, j, k, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2645([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2646([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    } else {
        select_2679([a, b, c, e, d, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_2608([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_2609([a, b, c, d, k, h, n, e, m, l, f, j, i], !is_dual)
    } else {
        select_2645([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2607([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2608([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_2608([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2505([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2506([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_2607([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_2697([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_250([a, k, l, m, b, j], !is_dual)
    } else {
        select_332([c, f, d, e, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2700([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_22([a, b, c, d, e, f, g], is_dual)
    } else {
        select_69([a, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2699([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_96([b, e, c, d, h, g, i], is_dual)
    } else {
        select_2700([a, b, g, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2698([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2699([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_96([e, h, c, d, g, b, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2696([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2697([b, a, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_2698([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_2701([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_509([g, e, i, f, k, j, a, h, b, c], !is_dual)
    } else {
        select_510([e, b, c, f, d, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_2695([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2696([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2701([g, k, l, m, a, i, b, j, c, h, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2703([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_765([b, d, a, e, c, f, g, h, i], is_dual)
    } else {
        select_2103([b, d, c, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_2704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_264([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_264([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2702([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2703([a, b, c, e, d, h, g, i, f, j], is_dual)
    } else {
        select_2704([b, c, d, e, a, h, f, i, g], is_dual)
    }
}
/// n = 14, i = 6
fn select_2694([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2695([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2702([g, k, l, i, n, a, b, m, c, j], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2708([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_257([c, d, e, b, f, g, h], is_dual)
    } else {
        select_34([a, j, k, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2709([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1666([f, h, i, j, k, e, g, b, c, d], !is_dual)
    } else {
        select_516([h, i, j, e, k, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2707([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2708([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_2709([a, b, c, g, f, h, i, e, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2710([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1827([g, a, b, h, e, i, j, k, f], is_dual)
    } else {
        select_143([e, b, f, c, d, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2706([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2707([b, c, d, e, g, a, h, f, i, j, k, l], is_dual)
    } else {
        select_2710([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2705([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2706([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2702([f, j, k, g, m, a, b, l, c, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2693([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2694([b, a, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2705([b, h, c, d, f, g, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_2713([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1999([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1999([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2714([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_588([a, b, d, h, e, c, g, i], is_dual)
    } else {
        select_793([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2712([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2713([a, b, c, e, f, g, d, h, i], is_dual)
    } else {
        select_2714([a, b, c, e, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2719([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_51([a, f, i, j, h, g], !is_dual)
    } else {
        select_96([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2718([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2719([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2719([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2717([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_881([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_2718([a, b, g, e, f, c, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2716([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2717([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_2717([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2720([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1634([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_444([a, h, e, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2715([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2716([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2720([a, b, k, l, i, c, j, d, e, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2711([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2712([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_2715([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_2692([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < b) || (is_dual && m > b) {
        select_2693([a, c, b, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2711([a, h, g, k, l, b, n, c, m, j, d, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2725([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2307([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_1122([a, b, d, h, g, c, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_2726([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_80([a, c, d, h, g, b, i], is_dual)
    } else {
        select_226([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2724([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2725([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2726([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_2727([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_278([a, e, c, f, d, h, g, i, j, k, m], is_dual)
    } else {
        select_2725([e, j, k, l, h, m, a, f, b, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2723([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2724([a, c, d, e, f, h, g, j, i, k], is_dual)
    } else {
        select_2727([g, j, l, n, a, h, m, b, k, c, d, e, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2722([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2723([a, b, c, d, e, f, i, h, j, g, k, l, m, n], is_dual)
    } else {
        select_2723([b, a, c, d, e, f, i, g, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2721([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2722([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2722([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2691([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_2692([a, b, d, e, f, g, h, i, j, k, c, l, m, n], is_dual)
    } else {
        select_2721([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_2732([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_448([a, f, e, c, d, g, h, i, j, k], is_dual)
    } else {
        select_1371([a, i, k, l, g, f, e, j, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2731([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_2732([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    } else {
        select_1361([a, i, g, k, m, e, f, l, b, j, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2730([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2731([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2731([a, c, d, e, g, b, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2729([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2730([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2730([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_2728([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2729([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_2729([a, b, c, d, e, f, g, h, i, k, m, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_2690([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_2691([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2728([a, b, c, d, f, j, h, k, l, e, m, i, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2689([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2690([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_2690([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2688([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2689([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_2689([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2504([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2505([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2688([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1884([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_1885([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    } else {
        select_2504([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_7([a, b, c, d, e, f, g, h, i, j, m, k, l, n], is_dual)
    } else {
        select_1884([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2747([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1979([b, a, d, c, e, g, f, h, j, i], is_dual)
    } else {
        select_213([f, b, d, a, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2746([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_935([a, b, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_2747([a, b, e, c, f, i, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2745([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2746([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_210([b, h, e, g, a, f, i, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2749([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1773([i, f, j, g, a, b, h, c, d], !is_dual)
    } else {
        select_734([a, b, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2750([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_891([b, d, c, e, a, g, h, f], is_dual)
    } else {
        select_214([b, d, a, e, c, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2748([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2749([i, h, j, e, k, a, f, g, b, c], !is_dual)
    } else {
        select_2750([f, a, e, c, d, i, h, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_2744([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2745([e, i, j, k, m, l, a, f, h, b, c, g], !is_dual)
    } else {
        select_2748([a, b, d, f, e, h, g, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2755([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_32([d, b, c, e, f, h], is_dual)
    } else {
        select_26([h, i, a, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2754([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_313([a, b, g, d, e, i], is_dual)
    } else {
        select_2755([a, e, c, d, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2753([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2458([b, a, c, d, e, g, f, i, h], is_dual)
    } else {
        select_2754([b, d, c, e, g, f, a, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2756([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_68([g, e, d, b, f], !is_dual)
    } else {
        select_2755([a, c, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2752([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2753([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2756([i, a, j, e, h, g, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2759([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_820([a, b, d, e, f, h, g, j], is_dual)
    } else {
        select_1824([a, c, b, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_499([h, i, j, d, g, a, e, b], !is_dual)
    } else {
        select_188([d, j, i, g, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2758([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2759([i, j, k, g, d, e, h, a, f, b], !is_dual)
    } else {
        select_2760([a, b, c, d, e, f, g, i, k, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2762([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_235([a, b, c, f, g, e, h, i], is_dual)
    } else {
        select_235([a, b, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2761([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_102([g, j, e, a, b, h, f], !is_dual)
    } else {
        select_2762([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2757([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2758([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_2761([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2751([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2752([a, j, k, e, f, i, h, c, b, g], !is_dual)
    } else {
        select_2757([a, b, c, d, f, e, g, i, j, k, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_2743([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2744([a, c, b, d, e, f, h, g, j, k, i, l, m], is_dual)
    } else {
        select_2751([e, f, j, m, a, i, l, b, h, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2765([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1599([b, c, d, a, f, e, h, g, i], is_dual)
    } else {
        select_1229([c, a, d, b, f, g, h, e, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2769([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_62([g, h, a, f, b], !is_dual)
    } else {
        select_34([e, c, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2768([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2769([b, c, a, d, f, e, h, g], is_dual)
    } else {
        select_382([b, e, c, a, f, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_2767([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2768([a, c, i, d, f, k, l, h], is_dual)
    } else {
        select_710([f, b, h, e, g, j, m, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2771([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1534([a, b, c, d, f, h, g, i, j, k], is_dual)
    } else {
        select_1979([c, a, e, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2772([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_453([b, a, c, d, e, f, g], is_dual)
    } else {
        select_382([a, b, e, d, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2770([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2771([d, b, c, e, a, f, h, g, i, j, k], is_dual)
    } else {
        select_2772([d, g, e, a, f, i, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2766([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2767([b, a, c, d, e, f, g, i, h, l, k, j, m], is_dual)
    } else {
        select_2770([a, b, c, f, e, g, i, j, l, h, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2764([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2765([a, b, c, d, j, f, h, k, m, i], is_dual)
    } else {
        select_2766([a, b, c, d, e, f, g, j, i, k, m, l, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2776([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1979([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_130([a, c, d, f, e, h, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2775([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2776([a, b, f, c, e, h, i, j, k, l], is_dual)
    } else {
        select_2776([b, a, e, d, f, g, j, i, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2777([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_642([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_2053([g, h, j, a, e, i, f, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2774([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2775([a, b, d, c, f, e, h, i, g, j, k, l], is_dual)
    } else {
        select_2777([i, k, h, l, a, j, g, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2779([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1486([a, c, d, b, g, e, h, f, i], is_dual)
    } else {
        select_948([a, b, d, c, g, f, h, e, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2781([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_292([g, h, f, d, a, e, b], !is_dual)
    } else {
        select_32([d, c, a, f, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_2780([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_358([a, b, c, h, g, e, i, f, j], is_dual)
    } else {
        select_2781([a, b, d, f, h, e, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_2778([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2779([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2780([h, j, e, k, f, a, g, i, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2773([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2774([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2778([h, i, g, l, a, k, j, b, e, f, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2763([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2764([b, c, a, d, e, f, g, i, h, j, l, k, m], is_dual)
    } else {
        select_2773([b, f, c, e, h, g, a, j, k, i, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2742([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2743([i, j, m, n, b, a, k, l, c, g, f, h, e], !is_dual)
    } else {
        select_2763([b, c, a, d, e, g, h, f, j, k, i, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2787([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_562([a, c, d, f, e, g, h, j], is_dual)
    } else {
        select_562([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2786([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1532([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_2787([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2789([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_91([a, c, d, h, i], is_dual)
    } else {
        select_1781([j, h, i, g, f, c, d, b, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2788([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2789([b, d, a, c, e, g, f, i, j, h], is_dual)
    } else {
        select_167([d, b, e, f, a, g, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2785([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2786([f, i, g, j, k, d, h, e, b, c], !is_dual)
    } else {
        select_2788([g, j, k, f, i, h, e, b, d, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2791([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2394([a, c, d, e, g, h, f], is_dual)
    } else {
        select_1309([a, b, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2792([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_67([e, f, h, a, b, g], !is_dual)
    } else {
        select_50([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2790([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2791([b, c, d, a, f, e, g, h, i, j], is_dual)
    } else {
        select_2792([b, a, f, d, g, h, i, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_2784([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2785([a, b, c, f, e, g, h, i, d, j, k], is_dual)
    } else {
        select_2790([h, j, g, k, f, e, d, i, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2795([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_736([d, i, h, e, g, f, b, a], !is_dual)
    } else {
        select_1922([e, a, c, d, g, i, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_2794([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2795([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_66([d, c, f, e, g, a, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2797([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_74([a, b, c, e, f, i, j], is_dual)
    } else {
        select_224([c, d, a, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2798([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_61([f, a, h, j, d], is_dual)
    } else {
        select_1289([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2796([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2797([d, h, f, j, k, i, g, a, e, b], !is_dual)
    } else {
        select_2798([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2793([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2794([a, b, e, d, h, i, j, f, g], is_dual)
    } else {
        select_2796([b, a, c, d, f, g, i, j, e, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2784([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_2793([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2801([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_425([a, b, c, f, e, h, i, j], is_dual)
    } else {
        select_755([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2800([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2534([a, b, d, c, e, f, h, g, i, j], is_dual)
    } else {
        select_2801([a, b, d, e, f, g, h, c, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2804([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1143([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_1308([d, g, h, i, e, a, b, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2806([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_292([f, h, i, a, b, c, g], !is_dual)
    } else {
        select_42([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2805([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_468([b, c, d, a, e, g, f, h], is_dual)
    } else {
        select_2806([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2803([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2804([h, g, j, a, b, i, c, d, f], !is_dual)
    } else {
        select_2805([a, c, d, e, b, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2808([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_192([i, j, g, k, a, b], !is_dual)
    } else {
        select_846([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2809([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_192([a, b, d, e, g, f], is_dual)
    } else {
        select_340([c, a, b, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2808([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2809([i, j, f, k, a, g, b, h, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2802([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2803([f, g, j, k, i, a, b, c, h, d], !is_dual)
    } else {
        select_2807([f, g, i, j, k, b, c, h, a, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2799([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2800([a, b, d, e, c, f, g, h, i, k], is_dual)
    } else {
        select_2802([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2782([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2783([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_2799([f, h, g, j, k, b, a, c, i, d, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2741([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2742([a, b, c, e, d, f, g, h, k, j, l, i, n, m], is_dual)
    } else {
        select_2782([b, k, m, j, l, a, c, f, h, d, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2740([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2741([a, b, d, c, e, h, i, f, j, k, m, g, n, l], is_dual)
    } else {
        select_2741([b, a, c, d, e, h, i, g, j, l, m, f, n, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_2739([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2740([a, c, b, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_2740([b, c, a, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2738([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2739([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2739([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2737([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2738([e, f, b, c, d, a, i, k, h, g, l, j, m, n], is_dual)
    } else {
        select_2738([e, f, b, d, c, a, i, j, h, g, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2736([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2737([g, a, e, f, b, c, k, j, d, h, i, l, m, n], is_dual)
    } else {
        select_2737([g, d, e, f, b, c, k, j, a, h, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2735([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2736([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_2736([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2734([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2735([a, b, c, d, e, f, g, h, i, j, k, m, n, l], is_dual)
    } else {
        select_2735([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2733([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2734([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2734([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_6([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_2733([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_30([c, d, e, i], is_dual)
    } else {
        select_129([a, b, h, f, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2825([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2826([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_42([a, h, c, d, e, f, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2824([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2825([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2825([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2827([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_716([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_716([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2823([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2824([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2827([a, b, i, d, c, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2830([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_228([b, f, c, d, e, g, h, i, j], is_dual)
    } else {
        select_230([a, h, c, d, e, f, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2831([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_453([b, e, c, d, f, h, g], is_dual)
    } else {
        select_382([a, b, g, d, e, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2829([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2830([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2831([b, i, c, a, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2828([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2829([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2829([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2822([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2823([d, e, a, f, b, c, g, j, h, i, k], is_dual)
    } else {
        select_2828([a, b, c, f, d, e, g, j, i, h, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2836([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_703([a, b, d, f, g, h, i], is_dual)
    } else {
        select_39([b, e, c, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2835([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2836([a, f, b, d, h, e, g, i, j], is_dual)
    } else {
        select_2836([a, e, c, d, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2837([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_453([b, e, d, f, g, i, j], is_dual)
    } else {
        select_128([a, b, c, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2834([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2835([b, d, f, e, g, a, j, i, h, k], is_dual)
    } else {
        select_2837([b, d, c, a, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2834([a, b, g, c, e, i, f, j, h, k, l], is_dual)
    } else {
        select_1742([a, c, e, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2840([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_803([h, b, a, e, f, i, g, j], is_dual)
    } else {
        select_612([b, f, c, d, e, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2839([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_203([b, c, f, e, a, g, h, i, j], is_dual)
    } else {
        select_2840([b, c, a, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2843([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_39([g, h, c, e], is_dual)
    } else {
        select_129([a, e, b, d, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2842([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_167([a, c, g, f, h, d, i, k], is_dual)
    } else {
        select_2843([b, d, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2845([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_39([a, b, h, k], is_dual)
    } else {
        select_129([c, d, g, e, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2844([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1533([a, g, b, c, e, h, j, k], is_dual)
    } else {
        select_2845([b, c, a, d, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2841([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2842([c, b, d, f, e, g, a, h, i, k, j], is_dual)
    } else {
        select_2844([c, a, b, d, f, g, h, e, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2838([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2839([a, d, f, c, h, e, g, j, i, k], is_dual)
    } else {
        select_2841([e, b, a, d, f, i, g, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2832([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2833([b, d, a, e, f, c, g, h, j, i, k, l], is_dual)
    } else {
        select_2838([b, d, c, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2821([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2822([b, a, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2832([b, d, e, c, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2849([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_240([a, g, d, e, f, b, h, j, i], is_dual)
    } else {
        select_1176([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2848([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2849([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2849([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2847([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2848([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_1959([a, g, b, c, d, f, i, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2846([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1906([a, g, b, d, i, e, j, h], is_dual)
    } else {
        select_2847([a, b, d, c, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2820([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2821([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2846([a, b, c, d, e, h, j, i, k, g, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2855([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_820([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_820([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2856([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_382([i, e, j, h, b, a], !is_dual)
    } else {
        select_922([b, a, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2854([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2855([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_2856([b, a, c, d, f, g, h, i, e, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2858([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_122([b, a, c, g, h, f], is_dual)
    } else {
        select_772([b, d, e, a, c, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_2857([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2858([c, d, h, e, f, g, i, j], is_dual)
    } else {
        select_1326([d, a, b, g, e, f, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2853([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2854([i, b, c, d, a, g, h, j, k, l], is_dual)
    } else {
        select_2857([c, d, b, a, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2852([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1907([a, g, b, c, i, j, l, h], is_dual)
    } else {
        select_2853([a, d, b, c, e, f, g, h, i, l, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2851([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2852([a, d, e, b, f, g, c, h, i, j, l, k], is_dual)
    } else {
        select_2852([a, d, e, c, f, g, b, h, i, k, l, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2863([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_292([f, g, h, e, a, b, c], !is_dual)
    } else {
        select_39([a, b, d, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2862([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2863([a, b, f, c, g, h, e, i], is_dual)
    } else {
        select_1337([e, a, b, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2861([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_515([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_2862([c, d, e, b, f, g, a, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2860([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2861([a, c, d, e, i, b, h, j, k], is_dual)
    } else {
        select_887([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_391([c, a, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_391([c, b, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2864([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2865([c, d, b, e, f, g, a, h, i, j], is_dual)
    } else {
        select_2635([c, d, a, e, f, g, b, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2859([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2860([a, b, e, f, g, c, d, h, i, k, j], is_dual)
    } else {
        select_2864([a, b, c, d, f, g, h, j, l, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2850([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2851([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_2859([a, c, d, e, b, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2819([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2820([a, b, c, e, f, g, h, i, j, d, k, l], is_dual)
    } else {
        select_2850([a, b, c, e, f, d, g, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2870([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2343([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_1291([a, f, j, k, b, h, i, c, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2872([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1008([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1308([a, b, c, h, i, g, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2871([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2016([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_2872([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2869([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2870([a, b, d, c, e, f, g, h, i, k, j], is_dual)
    } else {
        select_2871([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2875([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_520([a, c, e, b, d, f, g, h, i], is_dual)
    } else {
        select_1166([a, c, g, e, f, b, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2874([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1608([a, b, d, c, g, h, i, f, j], is_dual)
    } else {
        select_2875([b, c, d, a, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2876([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1803([e, f, j, a, h, i, g, b, c], !is_dual)
    } else {
        select_649([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2873([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2874([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2876([b, h, c, d, f, a, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2868([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2869([a, b, c, h, d, f, g, j, k, l, i], is_dual)
    } else {
        select_2873([a, b, d, e, g, f, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2867([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2868([a, b, c, d, e, f, i, h, j, g, l, k], is_dual)
    } else {
        select_2868([a, b, c, e, d, f, i, g, j, h, l, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2880([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_191([a, f, h, i, e, b, g], !is_dual)
    } else {
        select_1468([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2881([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_191([a, b, d, e, c, f, g], is_dual)
    } else {
        select_413([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_2879([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2880([g, a, c, d, e, k, h, i, j], is_dual)
    } else {
        select_2881([i, j, e, g, k, a, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2884([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_81([b, g, c, d, f, h], is_dual)
    } else {
        select_376([h, g, j, e, i, a, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2886([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_820([a, b, d, e, g, h, j, k], is_dual)
    } else {
        select_940([a, b, c, e, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2885([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2886([b, c, a, d, f, e, g, i, k, h, j], is_dual)
    } else {
        select_737([a, h, b, j, f, e, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2883([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2884([a, b, d, e, f, h, i, k, j, l], is_dual)
    } else {
        select_2885([a, c, d, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2889([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_951([b, c, e, a, f, h, g], is_dual)
    } else {
        select_314([b, c, a, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2888([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2889([a, b, f, c, e, h, g, i], is_dual)
    } else {
        select_252([b, e, d, g, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_2890([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_834([a, c, d, f, i, k, l, h], is_dual)
    } else {
        select_948([a, b, d, e, h, g, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2887([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2888([a, c, h, e, b, g, i, k, j], is_dual)
    } else {
        select_2890([a, c, d, b, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2882([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2883([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2887([a, b, d, c, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2878([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2879([b, c, d, h, f, g, i, j, a, k, l], is_dual)
    } else {
        select_2882([b, a, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2895([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_167([a, d, c, e, h, f, g, i], is_dual)
    } else {
        select_39([b, g, d, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_2894([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2895([a, b, f, d, g, e, h, i, j], is_dual)
    } else {
        select_1254([b, e, c, d, h, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2898([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([a, c, d, e, f, g, i], is_dual)
    } else {
        select_99([a, b, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2897([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_167([a, b, g, f, i, e, j, k], is_dual)
    } else {
        select_2898([b, e, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2896([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2897([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_874([b, g, c, d, f, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2893([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2894([b, c, e, d, f, h, g, i, k, j], is_dual)
    } else {
        select_2896([b, a, c, g, f, e, i, j, k, l, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2902([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([b, c, d, f], is_dual)
    } else {
        select_83([a, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2901([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2902([a, c, d, f, e, g, h, j, k], is_dual)
    } else {
        select_2836([a, b, h, e, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2900([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2901([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2901([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2904([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_292([b, a, c, f, i, j, h], is_dual)
    } else {
        select_53([b, c, d, e, h, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_2903([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2904([a, b, g, d, e, f, i, h, j, k], is_dual)
    } else {
        select_142([c, h, d, e, b, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2899([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2900([a, b, c, d, g, f, h, j, l, i, k], is_dual)
    } else {
        select_2903([c, d, e, a, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2893([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_2899([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2908([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_141([a, e, c, d, h, f], is_dual)
    } else {
        select_382([g, h, e, a, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2907([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1236([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_2908([b, f, d, e, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2906([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2795([j, k, g, a, h, i, f, b, c], !is_dual)
    } else {
        select_2907([a, b, f, d, e, g, h, k, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2910([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1095([c, b, a, f, d, h, g, e], is_dual)
    } else {
        select_1770([a, c, b, f, e, g, h, d, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2912([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_292([a, b, f, e, d, h, i], is_dual)
    } else {
        select_213([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2911([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2912([b, a, c, e, d, f, h, i, g], is_dual)
    } else {
        select_1431([h, i, d, e, g, a, b, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2909([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2910([g, e, i, a, f, h, b, c, d], !is_dual)
    } else {
        select_2911([g, f, i, a, e, h, c, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2905([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2906([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2909([a, j, g, k, b, i, h, f, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2891([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2892([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2905([a, b, c, d, h, g, i, j, k, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2877([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2878([a, b, d, c, e, f, i, h, j, g, k, l], is_dual)
    } else {
        select_2891([a, b, d, e, c, f, i, g, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2866([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2867([a, b, f, d, e, g, c, h, i, j, k, l], is_dual)
    } else {
        select_2877([a, b, e, f, c, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2818([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2819([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2866([a, c, d, e, g, f, h, i, j, b, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2920([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_98([b, c, e, g, f, h], is_dual)
    } else {
        select_130([h, g, j, d, i, e, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2919([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2920([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_1431([a, b, f, d, g, i, h, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2921([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2183([i, j, g, d, e, h, a, b, f], !is_dual)
    } else {
        select_452([d, b, c, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2918([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2919([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_2921([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2923([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_312([a, b, d, g, e, j, h], is_dual)
    } else {
        select_185([i, k, j, e, a, g, f, h, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2922([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2923([a, b, d, c, f, g, j, i, k, l, h], is_dual)
    } else {
        select_1485([b, a, c, e, f, j, h, l, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2917([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2918([f, a, h, e, b, g, k, j, i, l], is_dual)
    } else {
        select_2922([a, c, b, e, d, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2927([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([f, b, d, e, h, g], is_dual)
    } else {
        select_88([a, g, c, e, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2928([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_38([a, e, d, c, g, f, i], is_dual)
    } else {
        select_345([a, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2926([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2927([a, c, f, d, g, e, h, i, k], is_dual)
    } else {
        select_2928([b, c, e, d, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2930([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_453([b, c, d, h, f, g, i], is_dual)
    } else {
        select_644([a, c, b, e, i, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2929([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2930([a, c, d, b, e, f, g, h, i, k], is_dual)
    } else {
        select_324([b, e, d, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2925([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2926([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2929([b, c, d, e, a, f, h, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2931([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_501([a, b, d, e, h, g, i, j], is_dual)
    } else {
        select_422([a, h, j, b, i, f, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2924([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2925([a, b, c, g, e, f, h, j, i, l, k], is_dual)
    } else {
        select_2931([b, a, d, e, f, g, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2916([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_2917([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_2924([a, c, b, f, e, d, g, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2936([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_212([h, j, i, g, f, b, a, e, c], !is_dual)
    } else {
        select_313([b, d, f, g, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2935([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1381([b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_2936([a, b, c, e, i, g, h, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2934([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2935([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_1015([c, e, d, g, a, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2938([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1797([a, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_625([j, k, i, g, e, a, b, c, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2939([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1797([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1452([i, f, g, a, b, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2937([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2938([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2939([a, e, c, d, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2933([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2934([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2937([c, b, d, e, a, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2941([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_310([a, b, e, f, g, i, h], is_dual)
    } else {
        select_210([j, k, i, a, b, g, c, d, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2943([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_878([b, c, e, a, f, d, g, h, i], is_dual)
    } else {
        select_2344([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2942([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_80([a, d, e, f, g, b, h], is_dual)
    } else {
        select_2943([a, d, c, e, b, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2941([b, a, d, e, c, f, h, i, k, j, g], is_dual)
    } else {
        select_2942([b, c, d, a, f, h, g, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2933([a, b, e, f, d, g, h, i, c, j, k], is_dual)
    } else {
        select_2940([a, b, d, e, f, c, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2915([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2916([a, c, b, e, f, d, g, i, j, h, l, k], is_dual)
    } else {
        select_2932([b, c, a, e, d, h, i, k, g, l, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2948([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1956([c, f, d, g, e, j, h, i], is_dual)
    } else {
        select_710([h, k, f, m, l, a, b, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2947([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1983([e, c, d, a, f, g, h, i, j, k], is_dual)
    } else {
        select_2948([b, a, c, d, f, e, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2951([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_167([i, h, j, e, a, g, b, f], !is_dual)
    } else {
        select_1617([b, a, d, c, e, g, h, i, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2950([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2951([f, j, g, k, d, h, i, a, b, e], !is_dual)
    } else {
        select_1985([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_2952([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1956([l, h, n, a, m, b, f, i], !is_dual)
    } else {
        select_1257([c, d, h, e, f, g, j, k, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_2949([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2950([h, l, n, i, m, a, b, f, j, c, d], !is_dual)
    } else {
        select_2952([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2946([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2947([k, l, j, n, h, m, b, a, g, f, c, i, d], !is_dual)
    } else {
        select_2949([a, b, d, e, c, g, f, h, j, i, l, k, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_2955([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_70([d, h, g, a, e, b, f], !is_dual)
    } else {
        select_1402([a, c, e, d, g, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2957([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_167([b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_940([h, g, k, d, j, a, f, e, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2956([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1581([b, c, a, h, i, j, m, e, l], is_dual)
    } else {
        select_2957([k, m, i, g, j, h, a, c, e, f, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2954([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2955([a, b, e, g, h, i, j, f], is_dual)
    } else {
        select_2956([j, k, i, m, g, l, e, h, b, f, c, d, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2960([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_361([i, f, j, g, d, e, b], !is_dual)
    } else {
        select_88([f, a, c, h, d, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2962([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_703([a, b, d, e, j, k, l], is_dual)
    } else {
        select_2661([b, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_2961([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2962([b, a, c, e, d, f, h, g, i, j, k, m], is_dual)
    } else {
        select_2836([i, j, l, d, a, h, g, f, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2959([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2960([k, m, g, i, l, e, d, a, b, h], !is_dual)
    } else {
        select_2961([a, b, c, e, d, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2964([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([d, j, a, b, h], !is_dual)
    } else {
        select_2188([b, d, c, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2966([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_22([a, c, d, e, g, h, j], is_dual)
    } else {
        select_55([b, c, d, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2965([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2966([c, b, a, d, f, e, g, h, i, j], is_dual)
    } else {
        select_62([b, i, e, a, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2963([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2964([a, b, d, g, f, h, e, i, j, k], is_dual)
    } else {
        select_2965([a, b, d, c, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_2958([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2959([a, b, c, e, h, f, g, j, i, k, l, m, n], is_dual)
    } else {
        select_2963([a, e, d, c, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_2953([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2954([b, a, c, g, e, i, h, f, k, j, l, m, n], is_dual)
    } else {
        select_2958([b, c, a, d, e, f, h, i, j, g, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2945([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2946([b, a, c, d, e, g, h, f, i, j, l, k, m, n], is_dual)
    } else {
        select_2953([c, d, b, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_2970([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1257([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_270([g, h, a, j, k, e, i, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2969([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2970([d, b, f, c, e, g, i, j, h, k, l], is_dual)
    } else {
        select_1550([e, d, k, j, m, f, l, a, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2973([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([a, b, d, g, f, h, e], is_dual)
    } else {
        select_153([a, c, d, g, e, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_2972([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2107([d, b, c, g, e, f, h, i], is_dual)
    } else {
        select_2973([a, e, f, d, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2974([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_70([a, g, j, b, h, c, d], !is_dual)
    } else {
        select_1123([a, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2971([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2972([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_2974([i, g, k, l, h, d, e, j, a, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2968([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2969([b, c, d, e, f, a, g, j, h, i, k, l, m], is_dual)
    } else {
        select_2971([a, c, d, f, b, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_77([b, c, d, e, h, g, j], is_dual)
    } else {
        select_381([b, c, a, e, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2977([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_642([a, g, c, i, f, h, e, j], is_dual)
    } else {
        select_2978([c, a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2980([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_314([f, a, c, d, e, g, h], is_dual)
    } else {
        select_314([e, b, c, d, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_2979([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_751([c, d, e, a, f, b, g, h], is_dual)
    } else {
        select_2980([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_2976([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2977([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2979([e, k, m, f, l, i, a, j], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2982([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_47([a, c, b, d, f, e, g, i, h], is_dual)
    } else {
        select_948([a, b, c, g, f, h, i, e, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2981([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_264([a, b, e, d, c, g, f, h, i], is_dual)
    } else {
        select_2982([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_2975([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2976([j, l, i, n, a, f, m, b, g, k, c, h, d], !is_dual)
    } else {
        select_2981([a, f, c, e, d, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_2967([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2968([j, l, k, n, a, f, m, b, h, g, c, i, d], !is_dual)
    } else {
        select_2975([a, b, d, e, c, f, h, g, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2944([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2945([c, a, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2967([c, b, d, e, f, a, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2914([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2915([d, b, c, a, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_2944([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2913([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2914([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2914([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2817([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2818([a, b, e, d, f, c, g, i, j, h, l, k], is_dual)
    } else {
        select_2913([a, b, d, c, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2991([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_292([i, j, e, f, a, g, b], !is_dual)
    } else {
        select_381([c, d, a, f, e, j, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2990([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2991([b, a, c, d, f, e, g, i, j, h], is_dual)
    } else {
        select_914([b, d, e, g, a, h, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2989([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2990([a, c, b, d, e, g, h, f, i, j], is_dual)
    } else {
        select_2911([e, j, i, f, h, g, a, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2993([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_110([d, e, h, j, g, f, c], !is_dual)
    } else {
        select_199([a, b, f, d, e, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2992([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_109([e, a, c, d, h, f, i, g, j], is_dual)
    } else {
        select_2993([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2988([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2989([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2992([c, d, b, e, f, g, a, h, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2997([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_68([b, g, e, a, i], is_dual)
    } else {
        select_1596([b, a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2996([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2997([a, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1611([a, c, d, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2999([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_61([d, b, f, g, e], is_dual)
    } else {
        select_304([a, c, e, d, h, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2998([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_50([a, c, e, d, g, f, j, k], is_dual)
    } else {
        select_2999([a, b, c, f, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2995([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2996([c, a, b, d, e, f, g, h, i, k], is_dual)
    } else {
        select_2998([f, k, j, l, i, a, b, h, c, g, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3001([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_81([a, b, d, e, g, f], is_dual)
    } else {
        select_157([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3003([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1231([a, c, b, e, d, g, f, i, h], is_dual)
    } else {
        select_562([g, d, h, i, e, f, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3002([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_444([a, h, g, c, d], !is_dual)
    } else {
        select_3003([h, i, j, a, f, g, b, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3000([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3001([b, c, d, a, h, f, i, g], is_dual)
    } else {
        select_3002([a, d, b, c, e, h, g, i, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2994([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2995([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3000([f, a, j, k, l, b, i, h, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_2987([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2988([a, b, c, f, e, i, h, g, k, j, l], is_dual)
    } else {
        select_2994([e, j, i, k, m, a, l, f, h, b, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3005([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1426([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2374([a, g, j, b, e, h, i, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3009([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_62([c, d, g, h, f], is_dual)
    } else {
        select_62([a, b, i, j, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_3008([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1718([e, a, b, d, g, f, i, j], is_dual)
    } else {
        select_3009([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3011([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([b, a, f, d, h, g], is_dual)
    } else {
        select_198([b, a, c, g, e, i, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_3010([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_886([c, e, d, a, f, h, g], is_dual)
    } else {
        select_3011([b, c, d, a, f, g, e, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3007([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3008([a, b, f, c, g, h, i, j, e, k], is_dual)
    } else {
        select_3010([e, b, c, d, h, f, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3006([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2384([g, b, i, c, e, a, h, k], is_dual)
    } else {
        select_3007([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3004([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_3005([e, a, f, d, b, g, j, h, i, k], is_dual)
    } else {
        select_3006([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_2986([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2987([a, b, d, c, e, f, h, g, i, k, j, l, m], is_dual)
    } else {
        select_3004([a, b, d, c, e, h, f, i, j, k, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3016([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_647([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_647([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3015([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3016([a, f, k, e, j, i, h, b, g], !is_dual)
    } else {
        select_184([a, c, b, d, f, e, g, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3014([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3015([a, b, f, d, e, h, g, k, i, l, j], is_dual)
    } else {
        select_413([a, e, j, h, k, f, c, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3017([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1462([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_588([a, d, b, e, c, g, f, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_3013([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3014([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3017([a, j, e, h, m, b, k, f, i, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3022([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_820([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_820([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3021([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1143([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_3022([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3020([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3021([a, b, e, d, i, g, f, h], is_dual)
    } else {
        select_1089([d, h, g, j, k, e, i, a, f, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3024([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2107([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1402([a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3025([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_110([a, e, g, h, c, f, d], !is_dual)
    } else {
        select_331([a, e, h, i, g, b, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3023([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3024([a, b, f, d, e, h, g, j, i], is_dual)
    } else {
        select_3025([g, a, i, c, d, f, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3019([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3020([a, b, f, d, i, e, j, g, k, h, l], is_dual)
    } else {
        select_3023([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2754([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_1452([d, j, e, g, h, b, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3027([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2919([c, a, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3028([c, b, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3030([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_102([a, b, h, d, i, e, g], is_dual)
    } else {
        select_185([a, e, c, d, g, f, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3031([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_625([a, b, c, e, f, g, h, d, i], is_dual)
    } else {
        select_1013([h, i, g, e, a, f, d, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3029([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3030([b, a, d, e, g, f, h, j, k, i], is_dual)
    } else {
        select_3031([a, c, b, e, j, i, k, l, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_3026([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3027([e, j, l, i, k, g, a, c, b, h], !is_dual)
    } else {
        select_3029([b, c, a, d, e, f, g, i, k, h, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3018([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3019([c, b, d, e, f, g, a, h, i, j, k, m], is_dual)
    } else {
        select_3026([b, a, c, d, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3012([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3013([f, j, l, n, a, k, m, b, i, c, h, g, e], !is_dual)
    } else {
        select_3018([f, l, j, n, a, k, m, b, i, c, g, d, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_2985([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2986([b, c, h, d, f, i, j, g, a, l, k, m, n], is_dual)
    } else {
        select_3012([b, a, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3036([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_646([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_646([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3035([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_588([a, g, c, e, b, f, h, i], is_dual)
    } else {
        select_3036([a, f, b, d, c, g, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3038([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_287([a, e, d, c, f, b, g, h], is_dual)
    } else {
        select_80([a, e, d, b, f, c, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3037([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3038([a, g, i, j, f, b, c, h], !is_dual)
    } else {
        select_844([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3035([a, b, d, e, c, f, g, i, h, j, k], is_dual)
    } else {
        select_3037([a, b, c, d, g, i, f, j, k, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3042([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_623([a, b, c, e, f, g, d, h, i], is_dual)
    } else {
        select_718([b, a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3044([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1536([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_562([d, g, h, i, f, e, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3043([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1772([d, g, h, i, a, f, e, c], !is_dual)
    } else {
        select_3044([a, c, b, d, f, e, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3041([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3042([i, g, j, f, e, h, d, a, c], !is_dual)
    } else {
        select_3043([e, b, a, g, f, h, i, d, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3047([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_98([a, e, d, g, h, i], is_dual)
    } else {
        select_85([b, c, d, g, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_3048([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_294([f, h, i, c, d, g, a, e], !is_dual)
    } else {
        select_188([f, g, i, c, d, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3046([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3047([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_3048([a, c, g, e, h, f, d, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3050([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([a, g, b, d, i, f], is_dual)
    } else {
        select_32([a, f, c, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3051([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_89([a, c, g, f, d, i], is_dual)
    } else {
        select_129([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3049([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3050([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_3051([b, c, a, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3045([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3046([c, a, b, d, e, h, g, i, f, j], is_dual)
    } else {
        select_3049([a, c, b, e, d, h, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3040([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3041([c, b, d, e, f, a, h, i, g, j], is_dual)
    } else {
        select_3045([c, d, a, f, b, h, g, e, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_3055([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_153([h, f, e, g, d, a, b], !is_dual)
    } else {
        select_153([h, g, d, f, e, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3054([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3055([b, d, e, g, a, f, h, j], is_dual)
    } else {
        select_2991([b, d, c, a, f, g, e, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3057([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1534([c, a, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_719([j, f, g, i, c, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3059([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, h, b, e, j, k], is_dual)
    } else {
        select_55([c, d, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3058([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3050([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3059([a, d, c, b, f, e, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3056([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3057([a, f, c, d, g, e, i, h, j, k], is_dual)
    } else {
        select_3058([c, b, a, d, e, g, h, i, f, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3053([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3054([a, c, b, g, f, j, i, h, k, e], is_dual)
    } else {
        select_3056([b, a, c, d, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3062([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_381([a, c, e, f, h, i, k, g], is_dual)
    } else {
        select_803([g, b, d, f, e, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3061([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1744([d, c, e, g, a, f, h, j, i], is_dual)
    } else {
        select_3062([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3064([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_434([a, b, d, g, f, i, j, h], is_dual)
    } else {
        select_3059([a, c, d, b, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3065([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1534([c, a, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2188([a, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3063([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3064([b, c, a, d, f, g, e, h, j, i, k], is_dual)
    } else {
        select_3065([a, e, c, d, g, f, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3060([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3061([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_3063([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3052([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3053([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_3060([c, a, d, e, f, b, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3039([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3040([b, c, d, g, f, i, h, a, j, k], is_dual)
    } else {
        select_3052([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3033([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3034([a, b, c, g, e, f, h, j, k, i, l], is_dual)
    } else {
        select_3039([a, b, c, d, h, f, i, k, l, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3068([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1070([i, j, f, a, b, c, g], !is_dual)
    } else {
        select_186([c, f, d, h, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3070([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_82([a, f, c, e, i], is_dual)
    } else {
        select_719([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3069([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_81([a, f, g, c, e, h], is_dual)
    } else {
        select_3070([a, b, e, d, h, f, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3067([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3068([a, b, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_3069([c, b, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3072([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_67([g, b, c, e, f, h], is_dual)
    } else {
        select_2194([h, g, j, d, i, a, e, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3071([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2514([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3072([b, c, g, e, f, i, h, a, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3066([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_3067([a, b, c, g, f, i, h, j, e, k], is_dual)
    } else {
        select_3071([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3032([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3033([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_3066([a, h, c, b, f, j, i, l, d, g, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_2984([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2985([a, b, c, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_3032([a, c, d, b, e, g, f, i, k, j, h, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3080([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([a, b, d, g, e, h], is_dual)
    } else {
        select_39([e, f, c, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_3079([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1596([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_3080([e, i, j, h, a, g, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3078([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3079([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_136([a, c, d, e, b, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3077([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_616([a, b, d, f, e, h, g, i, j], is_dual)
    } else {
        select_3078([e, a, c, g, d, h, f, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3076([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2238([a, b, h, c, f, i, g, e, j, k, l], is_dual)
    } else {
        select_3077([a, c, b, d, f, e, g, h, i, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3082([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_953([f, a, b, c, g, e, h, i, j, k], is_dual)
    } else {
        select_953([e, a, b, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3083([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1413([a, d, h, i, g, e, c, f], !is_dual)
    } else {
        select_413([a, d, g, h, i, f, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3081([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3082([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3083([f, b, i, j, a, g, e, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3075([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3076([a, b, f, d, e, h, i, g, j, k, m, l], is_dual)
    } else {
        select_3081([a, c, g, b, j, e, f, h, k, l, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_3088([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_98([b, f, d, e, a, g], is_dual)
    } else {
        select_340([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_3087([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3088([a, c, b, f, h, g, e], is_dual)
    } else {
        select_1254([b, c, d, a, f, e, h, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_3090([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_68([f, d, b, a, e], !is_dual)
    } else {
        select_32([b, c, a, d, f, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_3091([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_167([h, j, f, i, a, g, b, c], !is_dual)
    } else {
        select_100([b, a, d, e, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3089([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3090([c, d, h, g, i, f], is_dual)
    } else {
        select_3091([a, c, b, e, f, g, j, k, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3086([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3087([c, d, h, e, g, j, i, f], is_dual)
    } else {
        select_3089([a, b, c, d, f, i, g, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3093([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_100([a, f, c, g, e, j, h, k], is_dual)
    } else {
        select_215([b, d, h, f, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3092([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3093([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_68([b, j, e, a, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3085([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3086([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_3092([a, f, d, e, b, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3095([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1827([f, k, i, l, a, h, b, c, j], !is_dual)
    } else {
        select_1502([a, d, h, e, f, i, g, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3094([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1907([f, a, b, c, j, k, l, h], is_dual)
    } else {
        select_3095([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3084([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3085([b, c, d, a, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3094([a, b, c, d, e, f, g, i, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_3074([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3075([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    } else {
        select_3084([b, a, d, c, e, f, h, j, g, i, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_81([a, d, e, c, f, g], is_dual)
    } else {
        select_50([d, h, i, e, a, b, g, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3102([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_820([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_820([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3101([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3102([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_3102([a, b, c, e, f, g, d, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3099([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3100([a, b, c, e, f, g, h, i, d], is_dual)
    } else {
        select_3101([b, a, c, e, f, d, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3098([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3099([a, b, c, e, f, g, d, h, i], is_dual)
    } else {
        select_3099([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3104([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_444([a, d, g, h, i], is_dual)
    } else {
        select_975([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3103([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3001([h, i, g, d, e, a, b, f], !is_dual)
    } else {
        select_3104([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3097([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3098([e, f, h, i, b, a, c, g, d], !is_dual)
    } else {
        select_3103([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3108([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_120([f, a, e, h, g, b], !is_dual)
    } else {
        select_1418([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3107([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3108([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_51([a, f, b, i, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3106([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_558([a, b, c, g, e, h, f, i, j], is_dual)
    } else {
        select_3107([a, b, d, f, e, i, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3112([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([g, j, a, h, e, b, c], !is_dual)
    } else {
        select_153([h, i, b, g, f, a, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3111([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3112([a, b, g, c, h, f, e, i, j, k], is_dual)
    } else {
        select_1748([b, a, c, d, f, e, g, i, h, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3114([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_764([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_644([i, f, j, g, e, h, a, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3115([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_453([a, b, c, d, f, e, g], is_dual)
    } else {
        select_103([e, c, a, f, d, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3113([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3114([i, j, g, k, d, a, e, h, b, f], !is_dual)
    } else {
        select_3115([a, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3110([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3111([b, a, c, d, e, f, g, i, h, k, j], is_dual)
    } else {
        select_3113([b, f, d, e, h, g, a, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_3119([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_703([a, b, c, d, f, e, g], is_dual)
    } else {
        select_703([a, b, c, e, f, d, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3118([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_77([b, d, c, e, f, g, j], is_dual)
    } else {
        select_3119([e, a, h, d, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3117([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1797([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_3118([b, d, c, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3120([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_61([a, b, f, h, e], is_dual)
    } else {
        select_581([a, c, e, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3116([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3117([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_3120([a, f, d, g, b, h, e, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3109([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3110([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3116([a, b, g, c, e, i, f, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3105([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3106([a, b, c, f, e, g, h, j, k, i], is_dual)
    } else {
        select_3109([a, b, d, c, e, f, g, h, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3096([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3097([a, e, k, j, b, i, f, c, h], !is_dual)
    } else {
        select_3105([a, b, c, d, e, g, f, i, j, k, h, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3073([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3074([a, c, b, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_3096([a, c, d, h, k, g, i, l, b, j, f, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2983([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_2984([a, c, e, d, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3073([a, c, e, b, f, g, d, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2816([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2817([a, b, d, c, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_2983([a, b, d, e, f, g, h, i, j, k, l, c, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3129([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2759([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_820([a, b, f, e, c, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3130([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1581([a, e, c, f, g, d, h, j, i], is_dual)
    } else {
        select_1013([d, b, c, f, e, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3128([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3129([b, a, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_3130([b, d, c, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3132([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([a, c, d, e, h, g, i], is_dual)
    } else {
        select_561([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3133([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_110([a, g, h, j, c, f, d], !is_dual)
    } else {
        select_561([a, i, g, j, h, e, c, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3131([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3132([a, b, d, e, c, g, f, i, h, j], is_dual)
    } else {
        select_3133([a, b, c, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3127([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3128([a, d, c, h, f, b, g, j, i, k], is_dual)
    } else {
        select_3131([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3126([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2031([a, e, c, f, d, h, g, j, i, k], is_dual)
    } else {
        select_3127([a, e, h, l, m, j, f, k, b, c, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3125([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3126([a, f, k, m, b, g, l, c, j, h, i, d, e], !is_dual)
    } else {
        select_3126([a, g, k, m, c, f, l, b, j, h, i, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3139([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_238([b, c, d, e, f, g, h], is_dual)
    } else {
        select_1289([h, i, j, e, a, f, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3138([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_76([d, g, c, f, i, e, h, j, l], is_dual)
    } else {
        select_3139([f, k, i, l, d, j, g, a, b, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3141([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_235([e, h, i, j, a, f, b, g], !is_dual)
    } else {
        select_117([a, c, d, f, e, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3140([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3141([f, k, i, l, a, j, g, b, c, h], !is_dual)
    } else {
        select_76([a, g, d, f, i, e, h, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3137([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3138([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_3140([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3143([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_246([a, b, e, c, d, f, h, g, i], is_dual)
    } else {
        select_812([a, c, d, b, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3144([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1208([a, b, c, e, g, f, i, h], is_dual)
    } else {
        select_571([a, b, d, f, h, e, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3142([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3143([b, d, a, c, e, g, h, f, i], is_dual)
    } else {
        select_3144([b, d, e, c, f, g, a, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_3136([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3137([a, b, c, d, e, f, g, h, i, k, m, j], is_dual)
    } else {
        select_3142([a, e, m, l, g, k, b, j, c, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3146([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_425([a, b, c, d, g, h, f, i], is_dual)
    } else {
        select_463([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_109([a, b, f, d, e, h, i, j, k], is_dual)
    } else {
        select_455([a, d, e, c, g, f, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3145([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3146([a, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3147([a, i, l, b, f, k, c, j, g, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3135([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3136([a, b, c, d, e, g, f, i, h, j, k, l, m], is_dual)
    } else {
        select_3145([a, h, e, l, m, b, j, k, f, i, g, d], !is_dual)
    }
}
/// n = 8, i = 2
fn select_3152([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([a, c, b, f, e, g, h], is_dual)
    } else {
        select_55([c, d, g, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_3151([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_97([g, i, e, j, a, b, h, f], !is_dual)
    } else {
        select_3152([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3154([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_141([c, h, d, i, a, g], !is_dual)
    } else {
        select_186([c, d, b, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3153([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_483([a, b, c, e, f, d, h, g, i], is_dual)
    } else {
        select_3154([d, c, g, a, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3150([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3151([d, f, b, c, h, g, e, i, j, k], is_dual)
    } else {
        select_3153([e, a, c, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3155([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_255([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1115([a, f, b, g, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3149([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3150([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_3155([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3158([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1797([a, f, c, d, g, h, e, i, j], is_dual)
    } else {
        select_936([a, e, d, b, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_130([a, f, b, h, e, i, j, k], is_dual)
    } else {
        select_325([a, c, d, g, f, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3161([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([a, b, c, f, i, g], is_dual)
    } else {
        select_304([h, f, j, a, e, g, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3159([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3160([a, b, d, c, f, g, h, i, e, j, k], is_dual)
    } else {
        select_3161([a, b, e, d, g, i, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3157([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3158([b, a, c, d, g, e, h, f, i, j], is_dual)
    } else {
        select_3159([a, b, c, d, g, f, h, e, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3164([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_98([d, c, a, f, e, g], is_dual)
    } else {
        select_1289([c, a, b, e, g, d, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3163([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_67([g, a, c, e, f, h], is_dual)
    } else {
        select_3164([e, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3162([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_549([a, b, c, d, e, f, h, g, i, k], is_dual)
    } else {
        select_3163([a, g, d, b, e, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3156([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3157([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_3162([c, a, d, e, f, b, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_3148([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3149([a, c, b, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_3156([a, f, e, l, m, b, j, k, g, c, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3134([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3135([a, f, j, m, b, g, l, c, k, h, i, d, e], !is_dual)
    } else {
        select_3148([a, f, g, m, b, c, j, l, k, h, i, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3124([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3125([a, f, g, k, m, b, c, j, l, i, d, h, e], !is_dual)
    } else {
        select_3134([a, f, g, j, m, b, c, k, l, d, i, h, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([b, c, d, e, f, g, i], is_dual)
    } else {
        select_88([e, h, j, a, f, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3170([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3171([a, d, b, e, f, c, g, h, j, i], is_dual)
    } else {
        select_3171([a, d, c, e, f, b, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3173([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2348([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_26([d, g, e, c], is_dual)
    }
}
/// n = 10, i = 4
fn select_3174([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_91([h, a, b, i, j], is_dual)
    } else {
        select_342([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3172([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3173([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_3174([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3170([e, h, i, j, k, a, g, c, d, f], !is_dual)
    } else {
        select_3172([c, d, b, a, e, g, f, j, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3176([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_736([f, h, i, d, e, g, a, b], !is_dual)
    } else {
        select_1088([h, f, g, e, d, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3178([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_314([b, d, c, e, g, f, h], is_dual)
    } else {
        select_1774([h, i, j, e, a, g, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3177([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3171([a, d, c, e, f, b, g, i, h, j], is_dual)
    } else {
        select_3178([a, d, b, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3176([f, i, j, a, g, c, h, b, d], !is_dual)
    } else {
        select_3177([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3168([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3169([f, l, i, k, a, j, g, c, d, b, h], !is_dual)
    } else {
        select_3175([a, c, d, e, g, f, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_519([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1422([a, c, d, b, h, g, f, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3182([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_452([a, c, b, g, f, h, e, i], is_dual)
    } else {
        select_1254([b, c, d, a, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3180([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3181([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3182([a, c, g, e, f, b, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3184([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_67([g, d, i, a, e, b], !is_dual)
    } else {
        select_737([d, b, c, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3186([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_53([a, c, d, e, f, g], is_dual)
    } else {
        select_340([b, a, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3185([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3186([a, b, d, c, e, g, f, h, i], is_dual)
    } else {
        select_1770([e, i, j, h, g, f, a, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3183([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3184([e, i, j, a, f, h, b, g, c], !is_dual)
    } else {
        select_3185([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3179([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3180([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3183([a, c, e, h, f, g, b, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3167([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3168([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_3179([a, b, d, e, c, f, g, i, h, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3191([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_198([h, i, j, f, e, a, g, b], !is_dual)
    } else {
        select_100([a, e, c, d, f, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3192([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([a, b, h, e, i], is_dual)
    } else {
        select_529([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3190([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3191([c, b, d, e, a, f, g, i, j, h], is_dual)
    } else {
        select_3192([c, a, d, e, b, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3189([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1729([e, i, j, k, g, a, h, b, c, f, d], !is_dual)
    } else {
        select_3190([e, a, i, j, k, g, h, b, c, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3193([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_233([g, a, b, c, d, f, i, j, h], is_dual)
    } else {
        select_143([f, c, d, e, b, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3188([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3189([g, b, c, d, f, i, a, h, j, k, l], is_dual)
    } else {
        select_3193([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3195([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1766([f, h, j, i, a, b, c, g], !is_dual)
    } else {
        select_2110([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3196([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_233([a, b, c, d, h, f, g, i, j], is_dual)
    } else {
        select_233([a, b, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3194([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3195([a, b, c, d, h, f, i, j, g, k], is_dual)
    } else {
        select_3196([a, c, d, b, e, f, g, h, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3187([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3188([b, c, e, d, a, g, f, i, h, j, k, l], is_dual)
    } else {
        select_3194([g, f, j, k, m, b, a, l, i, c, e, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3166([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3167([a, b, c, d, e, f, h, g, i, k, j, m], is_dual)
    } else {
        select_3187([f, h, g, m, l, a, b, k, j, c, d, i, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3202([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2769([a, d, b, f, h, e, i, g], is_dual)
    } else {
        select_216([a, e, c, d, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3201([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3202([b, c, d, f, e, g, i, h, k], is_dual)
    } else {
        select_50([a, g, c, h, e, f, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3200([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_997([e, d, c, b, h, g, f, i, j], is_dual)
    } else {
        select_3201([h, k, l, m, e, d, j, i, a, g, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3205([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_61([a, h, c, i, j], is_dual)
    } else {
        select_266([b, a, d, f, e, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3204([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1254([b, e, c, d, h, g, f, i], is_dual)
    } else {
        select_3205([a, b, f, d, g, e, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_34([a, i, j, b], !is_dual)
    } else {
        select_129([b, d, c, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3207([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_453([e, c, d, b, f, g, h], is_dual)
    } else {
        select_3208([a, b, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3206([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_3207([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_84([b, c, d, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3203([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3204([a, b, e, c, f, g, i, j, h, k, l], is_dual)
    } else {
        select_3206([a, g, c, d, b, f, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3199([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3200([j, m, n, f, a, k, l, b, i, h, d, g, e], !is_dual)
    } else {
        select_3203([b, d, c, a, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3198([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3199([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_3199([b, a, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_3209([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_501([f, a, c, d, e, g, h, i], is_dual)
    } else {
        select_2002([e, f, j, k, a, b, i, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3197([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_3198([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3209([a, b, h, i, f, g, k, c, j, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3165([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3166([b, c, h, j, d, f, g, a, i, k, l, m, n], is_dual)
    } else {
        select_3197([b, c, a, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3123([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3124([a, f, g, l, n, b, c, m, h, i, d, k, j], !is_dual)
    } else {
        select_3165([a, b, c, d, e, f, g, i, h, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3122([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3123([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3123([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3121([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3122([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3122([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2815([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2816([a, b, c, e, f, d, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_3121([a, b, c, e, f, g, h, i, j, k, d, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2814([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2815([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_2815([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3221([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_111([a, c, e, d, g, f, i], is_dual)
    } else {
        select_118([d, h, g, i, a, e, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3220([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_638([a, b, d, e, i, h, f, g], is_dual)
    } else {
        select_3221([g, j, h, a, i, e, b, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3219([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_641([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_3220([a, b, c, g, f, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3218([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1509([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_3219([a, d, c, e, f, b, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3217([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_1214([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3218([a, b, d, e, h, g, j, i, c, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3225([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2216([a, b, d, c, e, h, g, f, i, j], is_dual)
    } else {
        select_2216([a, c, d, b, e, h, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3224([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3225([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3225([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_3229([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_54([c, d, e, f, h, i], is_dual)
    } else {
        select_54([a, b, e, f, g, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_3228([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3229([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1177([g, c, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3230([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_51([a, h, i, j, e, b], !is_dual)
    } else {
        select_117([g, h, i, j, a, f, c, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3227([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3228([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3230([a, b, c, d, i, h, g, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3231([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_140([e, b, c, d, f, g, h, i], is_dual)
    } else {
        select_812([e, h, i, j, a, f, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3226([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3227([a, c, e, f, b, d, g, i, h, j, k, l], is_dual)
    } else {
        select_3231([a, h, e, f, g, b, i, k, l, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_3223([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3224([c, d, a, e, b, g, j, h, i, m], is_dual)
    } else {
        select_3226([a, b, e, f, c, d, g, j, i, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3235([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_451([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_820([a, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_820([i, j, g, h, f, a, e, c], !is_dual)
    } else {
        select_186([g, k, j, a, d, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3234([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3235([b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3236([j, l, k, i, h, e, a, f, b, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3233([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2354([b, d, h, e, a, g, j, k, i], is_dual)
    } else {
        select_3234([b, c, a, d, e, f, g, i, h, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3238([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3171([a, c, b, d, e, f, g, i, j, h], is_dual)
    } else {
        select_356([a, b, g, e, h, i, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_3240([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_154([a, b, c, f, h, i, j, k], is_dual)
    } else {
        select_53([c, f, d, e, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_3239([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3240([b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_3236([k, m, l, i, j, f, a, g, b, c, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3237([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3238([b, h, d, e, f, a, i, k, l, j], is_dual)
    } else {
        select_3239([b, c, a, d, e, f, g, i, h, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3232([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3233([a, b, c, d, i, g, j, h, f, k, l, m], is_dual)
    } else {
        select_3237([b, a, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3222([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3223([b, c, a, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_3232([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3216([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3217([b, c, a, e, f, d, g, h, j, i, k, l], is_dual)
    } else {
        select_3222([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3244([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_986([a, b, d, e, f, c, g, h, j, i], is_dual)
    } else {
        select_1742([a, c, d, e, b, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3243([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3244([a, b, c, g, d, j, f, h, k, i], is_dual)
    } else {
        select_3244([a, b, c, f, e, i, g, h, k, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_3246([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_885([b, c, i, d, a, g, h, j], is_dual)
    } else {
        select_784([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3245([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2823([a, b, c, f, d, e, g, i, j, h, k], is_dual)
    } else {
        select_3246([c, d, e, f, a, b, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3242([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3243([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_3245([b, c, d, a, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3250([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1718([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_345([d, b, c, e, f, g, h, a], is_dual)
    }
}
/// n = 9, i = 4
fn select_3249([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1069([a, g, e, i, d, c, f], !is_dual)
    } else {
        select_3250([a, b, d, c, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3253([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_77([a, b, c, d, e, f, g], is_dual)
    } else {
        select_25([h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3252([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_444([d, f, e, b, g], !is_dual)
    } else {
        select_3253([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3255([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_292([e, g, i, d, a, f, b], !is_dual)
    } else {
        select_381([b, c, a, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3254([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1513([h, d, i, e, g, f, a, b], !is_dual)
    } else {
        select_3255([b, c, a, e, f, d, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3251([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3252([c, a, d, f, b, e, g, h], is_dual)
    } else {
        select_3254([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3248([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3249([a, d, b, c, e, g, h, f, i], is_dual)
    } else {
        select_3251([a, b, d, c, f, g, h, e, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_3259([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_68([g, d, e, a, c], !is_dual)
    } else {
        select_103([b, a, e, d, g, f, c], is_dual)
    }
}
/// n = 9, i = 3
fn select_3258([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_724([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_3259([i, e, a, g, h, b, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3257([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3258([a, d, c, e, f, b, h, g, i], is_dual)
    } else {
        select_3182([a, d, b, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3261([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_724([c, d, a, e, f, b, g, i, h], is_dual)
    } else {
        select_1780([c, d, b, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3260([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3261([a, c, b, d, f, g, i, h, j, k], is_dual)
    } else {
        select_3261([a, b, c, d, e, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3256([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3257([g, c, a, d, f, b, h, i, j], is_dual)
    } else {
        select_3260([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3247([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3248([g, j, k, h, b, c, a, d, i], !is_dual)
    } else {
        select_3256([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3241([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_3242([c, b, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_3247([b, a, c, d, e, h, j, i, k, g, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3215([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3216([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3241([b, c, d, f, a, e, g, h, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_3268([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_29([b, c, d, e, f, g, h], is_dual)
    } else {
        select_314([a, h, b, c, f, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3267([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3268([a, c, g, d, e, f, h, i, k], is_dual)
    } else {
        select_775([a, b, h, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3270([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1596([a, c, h, b, f, g, j, i, k], is_dual)
    } else {
        select_238([a, d, e, i, f, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3269([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3270([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1008([a, b, h, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3266([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3267([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_3269([c, a, d, e, f, g, b, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_3271([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1416([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_66([a, h, g, d, b, c, f], !is_dual)
    }
}
/// n = 11, i = 3
fn select_3265([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3266([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_3271([a, c, h, b, i, j, k, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3274([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_144([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_309([e, i, j, a, b, f, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3273([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3274([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_421([b, a, d, c, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3277([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_21([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_186([a, k, j, i, f, b], !is_dual)
    }
}
/// n = 11, i = 3
fn select_3278([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1345([a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_122([a, b, c, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3276([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3277([a, b, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_3278([a, b, c, d, e, f, g, i, h, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1490([a, h, d, e, f, g, b, i, j, k], is_dual)
    } else {
        select_3276([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3272([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3273([a, b, d, i, g, h, c, j, k, l], is_dual)
    } else {
        select_3275([a, b, d, c, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3264([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_3265([c, a, d, b, f, g, h, e, i, j, k], is_dual)
    } else {
        select_3272([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3282([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_133([a, c, h, d, e, f, g, i, k, l], is_dual)
    } else {
        select_775([a, b, g, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3283([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_293([a, b, g, d, e, f, h, i, k, j], is_dual)
    } else {
        select_133([a, c, h, d, e, f, g, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3281([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3282([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_3283([a, c, d, e, f, b, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3284([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1416([a, d, g, e, i, h, b, f], !is_dual)
    } else {
        select_1681([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3280([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3281([a, b, c, d, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_3284([a, k, l, b, h, g, c, j, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3279([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_3280([a, d, b, c, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_3272([b, a, d, e, f, g, h, c, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3263([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3264([d, a, e, f, g, b, c, h, i, k, j, l], is_dual)
    } else {
        select_3279([a, d, e, b, c, f, g, h, j, l, i, m, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3262([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3263([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_3263([a, b, c, d, f, e, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3214([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3215([b, d, e, f, c, g, i, h, a, j, k, l, m], is_dual)
    } else {
        select_3262([b, a, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3213([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3214([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    } else {
        select_3214([a, c, b, d, e, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3212([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3213([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_3213([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3211([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3212([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_3212([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3285([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2816([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_2816([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3210([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_3211([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_3285([a, b, c, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2813([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_2814([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    } else {
        select_3210([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3295([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1878([a, c, d, e, b, g, f, h, i], is_dual)
    } else {
        select_1841([a, b, c, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3294([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_539([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3295([a, f, g, k, l, b, c, j, d, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3297([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1098([b, c, d, e, h, g, a, i, j], is_dual)
    } else {
        select_777([c, b, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3298([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1375([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_844([a, i, k, l, g, c, b, j, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3296([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3297([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_3298([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3293([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3294([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    } else {
        select_3296([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3304([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_382([g, h, f, a, b, c], !is_dual)
    } else {
        select_188([f, h, g, a, b, e, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3303([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_67([a, e, d, b, f, g], is_dual)
    } else {
        select_3304([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3305([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_618([a, c, f, d, b, g, h, i], is_dual)
    } else {
        select_405([c, a, d, b, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3302([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3303([b, c, f, e, a, g, h, i], is_dual)
    } else {
        select_3305([b, c, a, d, e, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3301([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1668([a, g, c, d, e, f, h, i, j, k], is_dual)
    } else {
        select_3302([a, j, k, l, h, g, f, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3308([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1418([b, c, e, g, f, i, h], is_dual)
    } else {
        select_469([f, i, k, l, g, a, j, b, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3307([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3308([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3087([c, d, g, e, f, b, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_98([b, c, e, h, f, g], is_dual)
    } else {
        select_153([i, h, g, d, e, a, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_886([b, c, d, i, f, g, h], is_dual)
    } else {
        select_3311([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3312([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_468([b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_1008([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3309([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3310([b, d, e, c, f, g, h, a, i, j], is_dual)
    } else {
        select_3312([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3306([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_3307([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_3309([c, b, a, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_3300([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_3301([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_3306([a, h, j, k, m, f, g, l, b, i, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3315([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_143([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1665([a, f, g, i, j, k, h, b, c, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3314([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1375([a, h, j, l, g, m, k, f, b, i], !is_dual)
    } else {
        select_3315([a, c, d, e, f, h, g, i, j, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_3316([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_1907([a, b, c, f, e, g, h, i], is_dual)
    } else {
        select_1113([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_3313([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_3314([a, b, c, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_3316([a, h, j, m, f, l, k, b, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3299([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3300([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_3313([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3292([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3293([a, b, g, j, k, m, h, c, l, i, d, e], !is_dual)
    } else {
        select_3299([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3322([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3304([a, h, b, e, g, f, i, j], is_dual)
    } else {
        select_161([f, a, e, c, d, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3321([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3322([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1498([a, c, g, e, f, b, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_3320([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3321([j, k, l, m, h, a, f, e, b, i], !is_dual)
    } else {
        select_1149([a, f, c, e, d, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3325([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_81([h, i, d, k, j, a], !is_dual)
    } else {
        select_484([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3328([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_32([i, k, j, d, h, a], !is_dual)
    } else {
        select_52([e, b, c, g, f, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3327([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3328([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_382([j, d, k, h, i, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3329([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_484([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_91([h, a, i, d, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3326([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3327([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3329([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3324([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3325([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_3326([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3331([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_491([a, c, g, d, e, h, f, j, k, l], is_dual)
    } else {
        select_725([a, b, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3330([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3331([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_3331([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3323([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3324([f, k, l, i, g, j, a, b, c, h, d], !is_dual)
    } else {
        select_3330([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3319([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_3320([a, b, c, d, f, e, g, h, i, j, k, m, l], is_dual)
    } else {
        select_3323([h, j, k, m, e, a, f, l, b, i, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3318([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3319([c, a, d, e, f, b, h, g, i, j, k, l, m], is_dual)
    } else {
        select_3319([c, b, d, e, g, a, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3317([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3318([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3318([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3291([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3292([a, b, d, e, f, g, h, i, j, c, k, l, m], is_dual)
    } else {
        select_3317([a, b, h, i, k, m, d, l, j, c, e, f, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3336([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_790([a, e, f, c, d, g, h, l, i, j, k], is_dual)
    } else {
        select_1375([a, e, j, m, g, l, k, f, b, i], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3340([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_128([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_128([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3339([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1750([a, c, b, g, f, e, i, j, h], is_dual)
    } else {
        select_3340([a, f, b, d, e, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3341([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_886([a, c, d, g, f, h, i], is_dual)
    } else {
        select_1381([b, c, d, e, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3338([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3339([a, d, g, b, e, h, f, k, j, i], is_dual)
    } else {
        select_3341([a, d, f, c, e, g, j, i, k, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_3343([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_192([a, e, d, f, g, b], is_dual)
    } else {
        select_1254([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3345([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_453([e, c, d, a, f, g, i], is_dual)
    } else {
        select_1561([d, a, b, c, f, e, h, i, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3344([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3345([a, b, h, c, f, g, j, k, i], is_dual)
    } else {
        select_251([a, f, d, e, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3342([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3343([b, c, e, a, f, j, i, h], is_dual)
    } else {
        select_3344([a, e, d, b, c, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3337([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3338([b, d, c, e, g, h, f, a, i, j, k], is_dual)
    } else {
        select_3342([b, a, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3335([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3336([a, j, m, n, b, f, c, l, k, i, h, g, d], !is_dual)
    } else {
        select_3337([a, b, d, c, e, h, i, f, j, g, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3334([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3335([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_3335([a, c, b, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3333([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3334([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3334([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3332([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2729([a, b, c, g, m, n, d, l, i, h, e, k, j], !is_dual)
    } else {
        select_3333([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3290([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_3291([a, b, c, g, m, n, h, d, e, l, i, k, j], !is_dual)
    } else {
        select_3332([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3289([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3290([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3290([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3288([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3289([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_3289([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_3356([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3229([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_55([i, d, e, a, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3355([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3356([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_1289([h, b, c, j, a, g, i, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_3357([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_74([a, f, d, e, g, h, i], is_dual)
    } else {
        select_312([a, b, c, h, f, i, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3354([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3355([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3357([a, g, d, e, f, b, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3359([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, i], is_dual)
    } else {
        select_174([a, h, i, b, f, c, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3358([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, b, c, e, f, g, h, i], is_dual)
    } else {
        select_3359([a, b, d, c, g, f, i, j, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3354([a, b, d, e, c, f, g, h, j, i, k], is_dual)
    } else {
        select_3358([a, b, c, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3363([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_235([b, e, c, d, f, g, h, i], is_dual)
    } else {
        select_942([a, b, c, d, f, g, e, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3362([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3363([e, h, j, k, f, g, i, a, b, c, d], !is_dual)
    } else {
        select_3363([f, h, j, k, e, g, i, b, a, c, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3365([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_803([a, b, d, f, e, h, g, i], is_dual)
    } else {
        select_803([a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3364([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_519([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3365([a, c, d, b, h, g, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3361([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3362([b, g, c, d, f, a, h, i, j, k, l], is_dual)
    } else {
        select_3364([b, a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3366([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_222([a, b, g, c, e, h, f, i], is_dual)
    } else {
        select_222([a, b, f, d, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3360([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3361([a, c, b, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_3366([a, c, e, g, f, h, b, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_3352([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3353([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3360([a, c, h, d, e, b, g, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3371([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_100([a, g, d, e, f, h, i, j], is_dual)
    } else {
        select_100([a, h, b, c, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3370([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_792([b, g, d, e, f, a, h, i], is_dual)
    } else {
        select_3371([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3369([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3370([a, c, d, b, e, h, f, g, i, j], is_dual)
    } else {
        select_1498([a, c, g, d, h, b, f, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_3368([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2710([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_3369([j, k, e, l, m, f, g, a, b, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3367([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3368([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3368([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3351([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3352([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3367([a, b, j, l, n, c, g, m, k, d, h, i, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3376([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_81([a, b, d, e, f, h], is_dual)
    } else {
        select_71([c, b, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_3378([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_141([a, c, d, e, g, f], is_dual)
    } else {
        select_51([a, b, d, e, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3377([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_84([f, a, g, c, h, e, i], is_dual)
    } else {
        select_3378([j, k, f, g, l, d, i, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3375([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_3376([j, k, f, l, m, d, i, b], !is_dual)
    } else {
        select_3377([a, b, c, d, e, f, g, h, i, j, k, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_3380([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2768([j, k, g, l, e, a, b, i], !is_dual)
    } else {
        select_84([e, c, g, d, h, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3382([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_122([i, j, k, a, b, h], !is_dual)
    } else {
        select_1271([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_68([b, h, i, a, j], is_dual)
    } else {
        select_368([b, a, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3381([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3382([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_3383([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3379([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_3380([b, a, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_3381([b, a, c, f, g, i, h, j, k, l, e], is_dual)
    }
}
/// n = 13, i = 6
fn select_3374([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3375([c, b, d, f, g, h, a, e, i, j, k, l, m], is_dual)
    } else {
        select_3379([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3373([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3374([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3374([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_3387([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_259([c, d, a, e, f, g, i], is_dual)
    } else {
        select_259([e, f, b, c, d, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3388([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_886([b, c, d, e, f, h, g], is_dual)
    } else {
        select_386([g, h, i, a, e, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3386([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3387([e, f, b, c, a, d, h, i, g], is_dual)
    } else {
        select_3388([b, c, e, d, h, g, a, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3389([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_515([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_3388([b, d, e, c, g, f, a, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3385([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3386([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_3389([a, b, g, d, e, c, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3390([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1126([b, f, g, c, a, e, h, i], is_dual)
    } else {
        select_755([b, a, d, c, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3384([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3385([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3390([a, c, d, f, h, g, i, b, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_3372([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3373([a, b, j, l, n, g, m, c, k, d, h, e, i], !is_dual)
    } else {
        select_3384([a, b, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3350([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3351([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_3372([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3349([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_3292([a, b, d, i, j, e, g, h, k, c, l, m, n], is_dual)
    } else {
        select_3350([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3348([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3349([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3349([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 6
fn select_3391([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2728([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    } else {
        select_2728([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3347([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_3348([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3391([a, b, c, d, e, i, j, k, l, f, m, h, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3346([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3347([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_3347([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3287([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3288([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3346([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_3401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1968([b, a, f, e, d, g, h, i, j], is_dual)
    } else {
        select_755([a, b, g, c, j, f, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3400([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3401([a, b, e, c, d, h, g, i, j, f, k], is_dual)
    } else {
        select_1382([a, b, c, f, e, h, j, g, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3399([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3400([a, c, d, e, b, f, i, g, j, h, k], is_dual)
    } else {
        select_3336([f, j, m, n, a, g, b, l, k, c, i, h, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3398([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3399([a, b, c, d, e, h, g, i, j, f, k, l, m, n], is_dual)
    } else {
        select_3399([b, a, c, d, e, h, f, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3397([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3398([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3398([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3396([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3397([a, b, c, e, d, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_2729([a, b, h, g, m, n, c, l, j, i, d, k, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3395([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_3291([a, b, i, g, m, n, h, c, d, l, j, k, e], !is_dual)
    } else {
        select_3396([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3394([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3395([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3395([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3393([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3394([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_3394([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_3406([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2486([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_2604([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3411([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1518([a, c, e, b, d, f, g, h, i], is_dual)
    } else {
        select_846([g, j, h, k, a, b, i, d, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2160([f, b, d, e, a, g, h, i, j, k], is_dual)
    } else {
        select_3411([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3409([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1375([a, h, j, f, l, m, b, k, c, i], !is_dual)
    } else {
        select_3410([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3408([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3409([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3409([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3407([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_2486([a, b, c, j, l, m, h, d, k, i], !is_dual)
    } else {
        select_3408([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3405([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_3406([a, b, c, d, j, l, m, g, k, i, h, f], !is_dual)
    } else {
        select_3407([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3418([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1345([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_40([g, c, d, e, b, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3419([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_167([f, i, h, g, e, d, a, b], !is_dual)
    } else {
        select_88([d, b, c, f, e, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3417([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3418([b, c, a, d, e, f, g, h, i, k], is_dual)
    } else {
        select_3419([b, c, h, f, a, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3416([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_282([a, h, d, c, e, i, g, j], is_dual)
    } else {
        select_3417([a, b, c, d, g, f, h, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3422([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_51([a, e, c, d, f, g], is_dual)
    } else {
        select_53([a, e, h, i, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3422([a, e, c, d, f, g, h, i, k], is_dual)
    } else {
        select_53([i, j, e, k, a, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3420([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3421([h, i, l, m, e, a, k, j, b, f, c], !is_dual)
    } else {
        select_755([b, c, e, d, g, f, i, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_3415([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3416([c, b, d, a, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_3420([b, c, d, g, f, i, h, a, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_3426([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_51([a, b, d, i, k, l], is_dual)
    } else {
        select_53([c, f, e, h, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3425([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3426([a, b, d, c, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1254([d, h, e, f, c, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3424([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3425([a, b, c, e, d, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1693([a, b, c, i, d, h, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3422([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_3422([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_3430([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_40([g, c, d, e, a, h], is_dual)
    } else {
        select_228([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_3429([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_886([b, h, c, a, f, i, g], is_dual)
    } else {
        select_3430([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_3427([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3428([a, f, g, c, d, h, i, j, k], is_dual)
    } else {
        select_3429([j, k, m, f, g, l, a, e, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3423([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3424([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3427([a, j, m, n, h, b, c, l, k, d, e, i, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3414([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3415([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_3423([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_3433([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_564([a, f, e, c, d, g, h, i, j, k], is_dual)
    } else {
        select_696([a, g, j, l, k, e, f, i, b, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_270([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_974([a, b, c, h, g, f, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3436([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1364([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1452([g, f, d, a, h, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3434([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3435([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3436([b, c, h, f, i, g, a, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3432([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3433([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3434([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3438([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_549([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_549([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3440([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_136([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_136([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3442([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_238([d, g, h, i, a, e, b], !is_dual)
    } else {
        select_487([d, b, c, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_3441([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3442([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_3442([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3439([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3440([a, b, e, h, f, g, j, i, k], is_dual)
    } else {
        select_3441([a, b, j, l, h, k, c, d, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3437([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_3438([a, b, g, e, f, c, h, i, j, k], is_dual)
    } else {
        select_3439([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3431([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3432([a, b, j, m, n, c, g, l, k, d, i, e], !is_dual)
    } else {
        select_3437([a, b, d, e, c, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3413([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3414([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_3431([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3412([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3413([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3413([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3404([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_3405([a, b, c, d, f, i, h, j, k, e, l, m, n], is_dual)
    } else {
        select_3412([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3447([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2421([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_2421([a, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3446([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_284([a, b, g, k, l, c, j, i, h, d], !is_dual)
    } else {
        select_3447([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3449([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2215([a, b, d, c, e, h, g, i, f, j], is_dual)
    } else {
        select_2215([a, c, d, b, e, h, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3448([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3449([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3449([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_3445([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_3446([a, b, i, f, l, m, c, k, j, g, h, d], !is_dual)
    } else {
        select_3448([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_3444([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3445([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3445([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_3454([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_614([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_186([a, g, b, h, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_425([i, e, g, k, a, j, f, b], !is_dual)
    } else {
        select_3454([e, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3456([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1290([a, b, c, d, f, g, j, i, k], is_dual)
    } else {
        select_782([b, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3457([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1308([a, b, c, d, f, i, h, j], is_dual)
    } else {
        select_812([a, b, c, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3456([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3457([a, b, c, g, e, i, h, f, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3452([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3453([b, d, c, h, f, g, i, j, a, k, l], is_dual)
    } else {
        select_3455([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3451([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3452([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_3452([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3450([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3451([a, b, c, f, e, g, h, i, d, j, k, l], is_dual)
    } else {
        select_2511([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3443([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_3444([a, b, c, d, f, i, h, j, e, k, l, m, n], is_dual)
    } else {
        select_3450([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3403([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3404([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_3443([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_3463([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_330([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1827([a, b, c, h, f, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3462([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3463([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_1375([a, g, j, f, l, m, b, k, c, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3461([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3462([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3462([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3460([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2601([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_3461([a, b, c, h, m, n, d, l, k, e, j, f, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3464([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3461([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2486([a, b, c, j, l, m, g, d, k, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3459([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3460([a, b, c, e, d, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3464([a, b, c, e, f, i, h, j, k, d, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3458([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3459([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_3459([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3402([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3403([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3458([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3392([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3393([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_3402([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3286([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3287([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_3392([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_2812([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_2813([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3286([a, b, c, d, e, f, g, h, i, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_2811([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2812([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_2812([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_3478([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_453([d, b, c, g, f, e, h], is_dual)
    } else {
        select_1289([c, a, e, f, h, d, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3477([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_255([b, a, c, d, e, g, h, f, i], is_dual)
    } else {
        select_3478([f, c, d, a, g, h, e, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3481([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_970([a, b, d, g, e, f, h, j, k, i, l], is_dual)
    } else {
        select_52([a, c, i, e, g, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3482([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1010([b, c, d, e, g, h, j, i, k], is_dual)
    } else {
        select_325([a, d, e, f, g, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3480([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3481([c, b, d, e, g, f, h, a, i, j, k, l], is_dual)
    } else {
        select_3482([c, a, b, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3484([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_381([b, e, c, d, f, h, i, g], is_dual)
    } else {
        select_61([d, a, g, j, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_3485([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_266([b, d, c, f, h, i, g], is_dual)
    } else {
        select_2495([a, d, b, c, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3483([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3484([b, f, d, a, e, g, j, h, i, k], is_dual)
    } else {
        select_3485([b, c, a, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3479([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3480([b, a, c, e, d, f, g, h, i, k, l, j], is_dual)
    } else {
        select_3483([a, b, c, e, i, g, h, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3476([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_3477([a, d, g, e, f, h, c, i, j, k], is_dual)
    } else {
        select_3479([a, b, d, c, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_3488([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3164([i, j, g, d, e, a, b, h], !is_dual)
    } else {
        select_648([a, e, c, d, g, f, h, k, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3489([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_580([d, j, h, i, g, a, e, f, b], !is_dual)
    } else {
        select_1402([a, c, g, d, h, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_3487([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3488([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3489([i, k, d, a, g, j, e, b, h, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3490([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1669([a, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_155([f, j, k, h, a, g, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3486([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3487([a, c, d, f, g, h, i, b, j, k, l], is_dual)
    } else {
        select_3490([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3475([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3476([a, c, d, b, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_3486([a, b, c, d, i, f, h, j, k, g, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3496([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([b, d, c, g, f, i], is_dual)
    } else {
        select_83([a, c, e, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3495([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_382([c, f, d, a, g, h], is_dual)
    } else {
        select_3496([b, c, a, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3494([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3495([a, b, c, d, f, h, i, g, j, k], is_dual)
    } else {
        select_3495([a, b, c, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3498([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_99([h, i, d, g, a, f], !is_dual)
    } else {
        select_34([e, b, c, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3497([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2193([a, b, f, e, g, d, h, i], is_dual)
    } else {
        select_3498([a, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3493([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3494([b, c, d, a, e, f, h, i, g, j, k], is_dual)
    } else {
        select_3497([k, h, l, a, j, i, b, f, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3500([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_68([b, h, e, a, i], is_dual)
    } else {
        select_3496([b, c, a, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3499([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_736([b, a, d, e, h, g, j, i], is_dual)
    } else {
        select_3500([a, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3492([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3493([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_3499([c, b, a, d, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3491([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3476([a, c, d, b, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_3492([a, b, c, d, i, f, h, j, k, g, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3474([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3475([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_3491([b, a, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_3504([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_255([a, f, c, d, h, e, g, i, j], is_dual)
    } else {
        select_755([a, e, g, b, j, f, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3504([a, d, b, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_3504([a, d, c, e, b, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_38([a, b, c, i, h, g, k], is_dual)
    } else {
        select_551([c, d, g, e, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3507([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2186([a, b, c, d, f, h, g, j, k, i], is_dual)
    } else {
        select_3508([a, b, e, d, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3510([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_77([c, g, d, e, h, f, i], is_dual)
    } else {
        select_71([e, a, b, i, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_3509([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2186([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_3510([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3506([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3507([b, c, d, a, e, g, h, f, i, j, k], is_dual)
    } else {
        select_3509([b, c, f, d, a, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3505([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3506([a, d, e, f, c, b, g, h, i, k, j], is_dual)
    } else {
        select_3342([a, d, e, f, b, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3502([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3503([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_3505([c, d, b, a, e, f, h, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3514([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_385([a, b, c, f, e, h, i, j, k], is_dual)
    } else {
        select_311([a, c, e, d, f, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3513([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2618([a, f, i, k, e, b, h, g, d], !is_dual)
    } else {
        select_3514([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3515([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_947([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_2026([a, d, b, e, c, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3512([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3513([a, j, h, l, b, f, k, i, c, d, g], !is_dual)
    } else {
        select_3515([a, f, c, b, e, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3517([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_143([b, c, d, f, a, i, h, j], is_dual)
    } else {
        select_1383([b, a, e, c, d, g, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3516([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2409([b, c, d, f, h, g, a, i, k, j, l], is_dual)
    } else {
        select_3517([c, b, a, d, f, e, g, j, i, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3511([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_3512([a, b, d, g, f, c, h, i, k, j, l, m], is_dual)
    } else {
        select_3516([a, b, d, e, c, f, h, g, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3501([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3502([a, d, c, e, b, f, g, i, h, j, k], is_dual)
    } else {
        select_3511([a, b, c, e, d, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3473([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3474([a, b, c, e, d, f, g, i, j, h, l, k, m], is_dual)
    } else {
        select_3501([a, b, c, e, f, d, g, i, h, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3523([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1956([b, h, c, a, f, i, g, j], is_dual)
    } else {
        select_3430([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3522([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_282([a, h, c, b, e, i, g, j], is_dual)
    } else {
        select_3523([a, b, d, c, g, f, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3521([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3522([a, d, b, e, c, h, g, i, j, f, k], is_dual)
    } else {
        select_3522([a, d, c, e, b, h, f, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3526([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_469([a, b, c, g, f, i, j, k, h, l], is_dual)
    } else {
        select_144([a, d, c, e, i, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3527([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1364([e, i, j, f, h, a, b, c, g], !is_dual)
    } else {
        select_675([b, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_3525([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3526([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3527([k, i, h, m, b, a, l, f, j, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3530([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_141([d, g, e, h, a, f], !is_dual)
    } else {
        select_75([d, b, c, e, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_3529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_257([c, d, e, a, h, f, g], is_dual)
    } else {
        select_3530([b, a, f, e, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_95([b, e, d, g, f, h, i], is_dual)
    } else {
        select_95([a, e, c, h, f, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3531([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3532([b, c, d, a, e, g, h, f, j, i], is_dual)
    } else {
        select_187([b, f, d, e, a, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3528([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3529([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3531([h, g, j, l, m, a, k, e, i, b, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3524([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3525([a, b, c, d, e, f, g, h, i, j, k, l, n], is_dual)
    } else {
        select_3528([b, f, d, e, h, g, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3520([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_3521([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3524([a, b, e, c, d, h, g, i, j, k, f, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3536([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_140([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_477([a, e, c, d, g, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3535([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2215([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_3536([a, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3534([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3535([a, b, d, c, e, h, g, i, f, k, j, m], is_dual)
    } else {
        select_3535([a, c, d, b, e, h, f, i, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3539([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_932([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_205([f, d, e, a, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3538([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3143([a, b, c, d, g, i, f, h, k], is_dual)
    } else {
        select_3539([a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_293([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_237([a, g, d, e, f, c, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3540([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3541([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_269([c, d, e, b, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3537([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3538([a, b, d, e, c, g, h, i, f, j, k], is_dual)
    } else {
        select_3540([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_3533([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3534([e, k, l, m, b, h, i, j, a, f, g, c, d], !is_dual)
    } else {
        select_3537([e, k, l, a, m, b, h, i, j, f, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3519([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3520([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_3533([a, b, e, g, f, h, j, i, c, l, m, k, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_3546([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2092([e, a, b, c, f, g, h, i, j, k], is_dual)
    } else {
        select_33([c, d, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_3547([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_831([a, b, d, i, f, k, h, l], is_dual)
    } else {
        select_1254([c, d, h, e, f, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3545([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_3546([b, c, e, f, a, g, d, h, i, j, k], is_dual)
    } else {
        select_3547([b, c, e, d, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3544([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3545([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_3545([a, b, c, d, f, e, g, i, h, j, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_3549([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_249([a, c, b, d, e, f, g], is_dual)
    } else {
        select_67([a, c, d, f, g, b], is_dual)
    }
}
/// n = 12, i = 4
fn select_3551([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_491([a, d, h, e, f, g, j, i, k, l], is_dual)
    } else {
        select_846([a, b, c, i, f, k, h, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3550([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3551([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_3551([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3548([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3549([a, c, b, d, i, k, l], is_dual)
    } else {
        select_3550([a, b, c, d, e, f, g, h, i, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3543([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3544([a, c, d, e, b, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3548([a, b, c, d, e, f, h, i, j, k, g, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_3556([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([a, b, c, d, e, f, g], is_dual)
    } else {
        select_83([a, b, f, g, e], is_dual)
    }
}
/// n = 8, i = 2
fn select_3555([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3556([b, f, d, e, a, g, h], is_dual)
    } else {
        select_772([b, d, e, a, c, f, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_3554([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2651([a, e, c, d, h, f, g, k, i, m], is_dual)
    } else {
        select_3555([a, j, m, e, l, k, i, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1143([e, c, d, a, f, g, h, j], is_dual)
    } else {
        select_3174([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3559([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_878([b, c, e, a, f, d, g, h, i], is_dual)
    } else {
        select_725([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3558([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3559([h, f, a, j, k, e, i, b, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3553([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3554([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_3557([a, b, c, g, e, h, i, j, f, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3563([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_153([a, b, d, f, e, g, h], is_dual)
    } else {
        select_34([e, b, c, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_3562([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3563([a, f, g, d, e, i, j, k], is_dual)
    } else {
        select_144([d, e, b, c, h, f, g, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3564([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_257([a, c, d, e, h, f, g], is_dual)
    } else {
        select_445([a, b, f, g, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3561([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3562([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_3564([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3566([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_560([d, e, b, c, f, g, h, j], is_dual)
    } else {
        select_156([g, a, h, i, d, e, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3567([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1452([h, f, e, a, i, b, g], !is_dual)
    } else {
        select_364([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3565([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3566([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_3567([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3560([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3561([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_3565([a, b, c, h, e, g, i, f, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3552([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3553([a, c, d, e, b, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_3560([a, b, d, e, f, g, c, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3542([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3543([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3552([a, g, l, k, n, b, c, m, i, d, e, j, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3518([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3519([a, b, c, f, e, g, i, h, d, j, k, m, l, n], is_dual)
    } else {
        select_3542([a, b, c, e, d, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3472([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3473([a, b, d, e, c, f, g, i, h, j, l, k, m], is_dual)
    } else {
        select_3518([a, b, d, c, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3573([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1838([e, h, j, a, f, i, b, c, g], !is_dual)
    } else {
        select_1813([a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3575([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_120([g, c, i, d, a, h], !is_dual)
    } else {
        select_70([c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3574([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1950([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_3575([f, j, a, g, i, b, c, h, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3572([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_3573([a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_3574([a, g, c, d, e, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3571([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3476([a, b, d, c, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3572([a, b, c, d, i, f, g, j, k, h, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3580([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([g, h, i, d, e, f, b, a], !is_dual)
    } else {
        select_1231([b, c, a, f, d, g, e, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3579([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3580([e, h, i, d, f, g, b, a, c], !is_dual)
    } else {
        select_634([d, h, i, e, g, f, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3578([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1619([b, f, e, g, h, a, d], is_dual)
    } else {
        select_3579([b, c, a, e, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3577([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2281([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_3578([i, h, j, c, a, f, b, d, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3576([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1592([c, b, d, a, e, h, g, f, j, i], is_dual)
    } else {
        select_3577([b, g, a, c, d, h, i, j, f, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3570([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3571([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3576([a, b, c, d, i, f, j, h, k, g, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3583([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2345([a, b, d, c, e, g, h, i, f, j], is_dual)
    } else {
        select_2942([a, c, d, b, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3586([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_76([a, e, c, d, g, f, h, i, j], is_dual)
    } else {
        select_247([d, i, g, j, a, e, b, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3587([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_67([a, b, f, e, g, h], is_dual)
    } else {
        select_324([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3585([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3586([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3587([a, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3589([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2394([a, b, c, f, h, g, e], is_dual)
    } else {
        select_2762([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3588([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3589([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_2033([a, b, f, c, h, g, i, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3584([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3585([d, i, k, a, f, j, e, g, h, c], !is_dual)
    } else {
        select_3588([d, e, i, k, a, j, f, g, h, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3582([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3583([f, d, j, k, e, a, g, i, b, h], !is_dual)
    } else {
        select_3584([a, c, b, d, f, g, e, h, k, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3593([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_120([a, g, h, i, e, f], !is_dual)
    } else {
        select_241([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3592([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3593([a, b, g, e, h, i, j, f, k], is_dual)
    } else {
        select_239([a, f, d, c, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3592([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_2170([f, a, g, d, e, b, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3596([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2107([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_127([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3595([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_476([a, e, j, k, h, i, f, g], !is_dual)
    } else {
        select_3596([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3594([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3592([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3595([e, l, k, a, f, j, i, b, h, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3590([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3591([a, c, d, b, e, g, i, f, h, j, k], is_dual)
    } else {
        select_3594([a, b, d, c, e, g, i, h, f, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3581([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_3582([e, f, l, a, b, g, j, k, h, c, i], !is_dual)
    } else {
        select_3590([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3569([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_3570([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3581([b, c, d, i, f, g, j, h, k, a, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3604([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([f, c, b, e, h, j], is_dual)
    } else {
        select_83([g, a, i, d, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3603([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_3604([c, b, d, f, e, h, g, j, i, k], is_dual)
    } else {
        select_3080([a, g, c, f, d, i, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3602([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_3055([i, d, l, j, h, a, g, f], !is_dual)
    } else {
        select_3603([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3601([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3602([a, c, d, b, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3602([b, d, c, a, f, e, h, g, j, k, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3607([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_61([g, b, h, a, j], is_dual)
    } else {
        select_1617([b, d, a, c, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3606([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_974([a, b, c, h, g, j, e, i], is_dual)
    } else {
        select_3607([a, b, e, d, f, g, i, h, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3609([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_453([b, e, c, d, f, g, i], is_dual)
    } else {
        select_644([a, b, f, e, d, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3608([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3609([a, f, b, h, d, e, j, g, i, k], is_dual)
    } else {
        select_2474([a, c, g, d, i, f, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3605([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3606([b, a, c, d, f, g, e, h, k, j, i], is_dual)
    } else {
        select_3608([c, b, d, f, e, g, a, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3600([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3601([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    } else {
        select_3605([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3610([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3099([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3099([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3599([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3600([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    } else {
        select_3610([e, k, i, a, b, j, f, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3614([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3171([a, b, e, d, f, h, g, i, j, k], is_dual)
    } else {
        select_102([a, c, e, f, i, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3616([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_186([a, c, b, g, h, i], is_dual)
    } else {
        select_53([b, a, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3617([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_153([e, b, g, d, a, f, i], is_dual)
    } else {
        select_1774([b, a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3615([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3616([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3617([j, i, k, f, g, a, b, h, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3613([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3614([a, d, c, e, g, f, i, h, k, j, l], is_dual)
    } else {
        select_3615([a, b, d, h, e, f, g, i, j, l, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3619([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_67([f, a, b, d, g, e], is_dual)
    } else {
        select_3115([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3618([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3258([a, c, d, b, e, g, f, h, i], is_dual)
    } else {
        select_3619([a, d, f, e, g, b, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3612([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3613([a, c, b, d, e, f, h, g, i, k, l, j], is_dual)
    } else {
        select_3618([a, b, c, i, f, h, j, g, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3621([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_545([a, b, f, d, e, h, g, i, j], is_dual)
    } else {
        select_1547([a, b, c, i, e, j, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3623([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2458([a, b, c, f, e, h, i, g, j], is_dual)
    } else {
        select_2396([b, c, a, d, e, f, i, g, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3622([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_807([b, c, d, e, f, g, h, a, i, j], is_dual)
    } else {
        select_3623([b, a, c, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3620([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3621([b, a, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_3622([a, d, b, c, g, e, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3611([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3612([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3620([a, c, d, b, h, i, g, k, j, l, f], is_dual)
    }
}
/// n = 13, i = 5
fn select_3598([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_3599([a, b, c, d, f, h, i, j, k, l, g, m], is_dual)
    } else {
        select_3611([a, c, b, d, e, f, h, g, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3629([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_51([a, b, d, h, j, k], is_dual)
    } else {
        select_487([c, e, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3628([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3629([a, b, d, c, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3088([d, g, e, c, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3630([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_81([a, b, g, c, i, j], is_dual)
    } else {
        select_614([c, d, a, b, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3627([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3628([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3630([b, c, d, f, h, g, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3632([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_84([a, d, g, e, h, f, i], is_dual)
    } else {
        select_1088([j, k, g, a, b, c, i], !is_dual)
    }
}
/// n = 7, i = 3
fn select_3633([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_121([d, g, e, a, b, f, c], !is_dual)
    } else {
        select_121([d, g, f, a, b, e, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3631([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3632([a, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_3633([k, l, h, a, b, c, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3626([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3627([a, b, c, d, f, g, i, h, k, j, l], is_dual)
    } else {
        select_3631([a, b, c, e, d, f, g, i, j, k, l, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3636([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_250([a, c, d, i, j, g], is_dual)
    } else {
        select_606([a, b, g, e, h, f, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3635([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3001([b, c, d, a, j, i, k, g], is_dual)
    } else {
        select_3636([a, d, b, c, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 5, i = 2
fn select_3639([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_91([a, b, d, c, e], is_dual)
    } else {
        select_91([a, c, d, b, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_3640([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_685([a, b, i, j], !is_dual)
    } else {
        select_1266([g, i, j, f, a, h, c, e, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3638([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_3639([a, b, j, c, k], is_dual)
    } else {
        select_3640([a, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3642([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_71([a, b, c, g, i, f], is_dual)
    } else {
        select_186([a, f, d, h, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3641([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3642([c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1124([h, k, a, b, j, d, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3637([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3638([a, b, d, c, e, f, h, i, j, g, k], is_dual)
    } else {
        select_3641([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3634([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3635([a, b, c, d, f, g, i, k, h, j, l], is_dual)
    } else {
        select_3637([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3625([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3626([a, d, e, b, f, c, h, j, k, g, l, i], is_dual)
    } else {
        select_3634([a, d, e, c, f, b, g, i, k, h, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3624([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3625([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_3625([b, a, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3597([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3598([b, c, d, e, f, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_3624([b, c, d, a, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3568([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_3569([a, b, c, f, e, g, h, j, i, k, d, l, m], is_dual)
    } else {
        select_3597([a, b, c, f, e, d, g, h, j, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3471([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3472([f, c, d, e, b, a, i, j, h, g, l, k, m, n], is_dual)
    } else {
        select_3568([f, c, d, b, a, e, i, j, g, k, l, h, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3470([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_3471([g, f, a, d, e, b, k, j, c, h, i, l, m, n], is_dual)
    } else {
        select_3471([g, f, c, d, e, b, k, j, a, h, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3469([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3470([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_3470([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3468([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3469([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_3469([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 6
fn select_3647([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3317([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_3317([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3652([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_284([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1940([a, f, j, b, c, i, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3651([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_3652([a, b, c, h, d, i, g, j, k, f], is_dual)
    } else {
        select_3448([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3656([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_331([f, g, e, j, i, a, h, b], !is_dual)
    } else {
        select_300([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3657([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1524([a, b, d, c, e, g, h, f, i], is_dual)
    } else {
        select_1524([a, c, d, b, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3655([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3656([b, c, a, d, f, e, g, h, i, j], is_dual)
    } else {
        select_3657([g, e, j, k, f, a, i, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3654([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3655([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3655([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3660([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_1811([a, b, d, c, f, e, g, h, i, j], is_dual)
    } else {
        select_820([a, b, e, f, c, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3659([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3660([b, c, d, g, a, f, h, i, j, k], is_dual)
    } else {
        select_1008([b, c, d, a, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3662([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_20([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_527([g, b, c, a, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3661([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_1874([a, h, k, e, l, b, j, g], !is_dual)
    } else {
        select_3662([a, c, b, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3658([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3659([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3661([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3653([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3654([a, b, f, k, l, i, c, j, g, d, h], !is_dual)
    } else {
        select_3658([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3650([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3651([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_3653([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3649([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_3650([a, b, c, e, f, i, h, j, d, k, l, m], is_dual)
    } else {
        select_3450([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_3667([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_1935([a, g, f, j, k, i, b, h, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3666([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3667([a, f, i, j, k, b, c, h, g, d, e], !is_dual)
    } else {
        select_2631([a, b, i, j, k, f, c, h, g, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3448([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3666([a, b, c, h, d, i, g, j, k, l, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_3664([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3665([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_3665([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3671([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2127([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_2244([a, b, j, k, l, c, i, g, h, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3670([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3671([a, b, c, e, d, h, g, j, k, i, l, m], is_dual)
    } else {
        select_793([a, b, d, f, c, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3673([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_139([a, b, g, k, l, f, j, c, i], !is_dual)
    } else {
        select_2421([a, b, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3674([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_139([a, b, g, j, k, e, i, c, h], !is_dual)
    } else {
        select_1940([a, b, e, d, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3672([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3673([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_3674([a, b, d, g, f, c, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3669([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3670([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3672([a, b, d, g, f, i, h, c, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3668([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2511([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3669([a, b, c, f, e, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3663([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_3664([a, b, c, d, f, i, h, j, e, k, l, m], is_dual)
    } else {
        select_3668([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3648([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_3649([a, b, c, d, e, f, g, h, i, j, k, l, n], is_dual)
    } else {
        select_3663([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3646([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3647([a, b, c, d, e, f, i, j, k, h, l, m, n], is_dual)
    } else {
        select_3648([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3682([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_87([a, b, g, d, i, j, f], is_dual)
    } else {
        select_70([d, f, c, h, e, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_3681([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1950([g, d, i, j, k, a, h, e, f, c], !is_dual)
    } else {
        select_3682([a, b, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3680([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3681([f, i, l, a, g, k, b, j, c, d, h], !is_dual)
    } else {
        select_3257([a, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3679([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3680([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_3680([a, b, c, e, d, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3678([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3679([a, b, e, c, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_3679([a, b, e, d, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3687([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_74([a, b, d, e, g, h, k], is_dual)
    } else {
        select_185([i, j, k, a, b, g, f, h, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3686([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([b, g, c, d, a, i, h], is_dual)
    } else {
        select_3687([b, a, e, c, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3690([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_499([a, b, f, d, g, h, e, j], is_dual)
    } else {
        select_993([h, i, j, d, g, a, e, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3689([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3690([a, f, b, d, h, e, g, j, i, k], is_dual)
    } else {
        select_452([d, e, c, g, i, f, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3688([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3689([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3689([b, d, c, a, f, e, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3685([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_3686([b, a, c, d, e, g, h, f, j, i, k], is_dual)
    } else {
        select_3688([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3684([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3685([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_1378([c, d, b, a, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3694([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3044([h, k, j, a, i, f, b, c, d], !is_dual)
    } else {
        select_782([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3693([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_338([a, b, e, c, d, g, h, i, f, j], is_dual)
    } else {
        select_3694([a, c, d, e, b, g, f, i, h, k, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3697([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_68([i, e, b, a, h], !is_dual)
    } else {
        select_375([b, a, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2472([a, b, d, e, f, h, g, j, i], is_dual)
    } else {
        select_3697([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3698([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1772([a, b, c, d, f, i, h, j], is_dual)
    } else {
        select_812([b, c, d, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3695([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3696([a, b, c, d, e, g, h, i, f, j], is_dual)
    } else {
        select_3698([b, c, d, e, a, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3692([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3693([a, b, d, e, c, g, h, i, f, j, k], is_dual)
    } else {
        select_3695([b, a, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3702([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1596([a, d, e, b, f, c, g, h, i], is_dual)
    } else {
        select_1596([a, d, e, c, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3701([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1654([f, i, j, a, h, g, b, c], !is_dual)
    } else {
        select_3702([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_453([a, b, c, d, e, f, g], is_dual)
    } else {
        select_111([a, b, e, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3703([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3704([f, j, k, a, i, h, b, g, e], !is_dual)
    } else {
        select_1595([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3700([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3701([a, b, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_3703([a, d, b, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3707([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_68([h, i, b, c, d], !is_dual)
    } else {
        select_562([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3706([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3707([d, a, b, c, e, g, f, h, j, i], is_dual)
    } else {
        select_213([f, d, e, a, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3708([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2092([e, a, b, c, d, g, f, h, i, j], is_dual)
    } else {
        select_2396([c, d, b, e, f, g, h, a, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3705([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3706([a, c, d, b, g, h, i, f, j, k], is_dual)
    } else {
        select_3708([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3699([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3700([a, d, e, c, b, f, h, i, g, k, l], is_dual)
    } else {
        select_3705([a, b, d, e, c, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3691([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3692([a, d, b, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_3699([a, d, c, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3683([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3684([a, b, c, e, f, g, i, h, d, j, k], is_dual)
    } else {
        select_3691([a, b, c, e, d, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3677([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3678([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_3683([a, b, c, d, f, e, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3676([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3677([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3677([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3675([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3676([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_3676([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3645([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_3646([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3675([a, b, c, d, l, m, n, h, f, e, k, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3644([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3645([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_3645([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3718([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2973([b, a, c, d, f, h, e, g], is_dual)
    } else {
        select_1123([g, h, f, i, a, d, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3717([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1729([e, k, g, j, i, a, h, b, c, f, d], !is_dual)
    } else {
        select_3718([e, h, k, g, i, b, a, c, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3720([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_565([a, b, c, e, f, h, i, g], is_dual)
    } else {
        select_405([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3719([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3720([a, b, c, d, f, h, i, j, k], is_dual)
    } else {
        select_1968([c, d, a, b, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3716([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3717([a, b, c, d, g, i, k, h, f, l, j], is_dual)
    } else {
        select_3719([b, c, d, e, a, f, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3723([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1731([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1524([a, c, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3722([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_947([d, a, c, e, b, f, g, h, i], is_dual)
    } else {
        select_3723([c, b, d, e, f, a, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3725([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_50([f, a, c, e, d, h, g, i], is_dual)
    } else {
        select_386([d, g, b, i, f, e, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3726([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2768([a, b, g, c, e, j, k, h], is_dual)
    } else {
        select_174([e, h, d, i, f, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3724([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3725([a, c, d, e, g, f, i, h, j, l], is_dual)
    } else {
        select_3726([a, b, d, c, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3721([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3722([j, g, e, h, m, a, l, f, i, d], !is_dual)
    } else {
        select_3724([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3715([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3716([h, k, e, l, m, f, a, i, j, b, c, g], !is_dual)
    } else {
        select_3721([h, l, m, k, f, i, a, e, j, c, b, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3714([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3715([i, f, k, m, a, g, l, b, h, j, c, d, e], !is_dual)
    } else {
        select_3715([i, g, k, m, b, f, l, a, h, j, c, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3713([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3714([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3714([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3712([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3713([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_3713([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_3733([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1039([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_270([f, h, a, j, k, e, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3732([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3733([a, h, k, l, f, b, j, c, i, d, g], !is_dual)
    } else {
        select_282([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_3734([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_143([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_143([a, j, k, f, m, b, l, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3731([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3732([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3734([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3730([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3731([a, f, j, k, m, g, l, b, c, i, d, h, e], !is_dual)
    } else {
        select_3731([a, g, j, k, m, f, l, b, c, i, d, h, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3729([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3730([a, g, i, k, m, b, c, l, j, d, e, h, f], !is_dual)
    } else {
        select_3731([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3728([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3729([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_3729([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_3738([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2686([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1196([a, b, c, f, e, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3741([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_192([b, e, d, f, g, h], is_dual)
    } else {
        select_792([a, c, b, g, f, e, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_3270([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_26([c, j, g, b], is_dual)
    }
}
/// n = 11, i = 3
fn select_3740([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3741([b, c, g, e, a, f, h, j, i, k], is_dual)
    } else {
        select_3742([b, c, e, a, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3743([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_282([a, f, c, e, g, h, i, j], is_dual)
    } else {
        select_2525([a, b, d, c, h, f, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3739([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3740([a, b, d, e, f, c, g, h, j, i, k], is_dual)
    } else {
        select_3743([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3737([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3738([a, b, d, h, e, i, g, c, j, k, l], is_dual)
    } else {
        select_3739([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3748([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_111([a, b, g, d, i, e, j], is_dual)
    } else {
        select_2664([h, i, j, d, a, g, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3749([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_71([e, a, i, j, b, g], !is_dual)
    } else {
        select_1596([b, a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3747([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3748([a, b, d, g, e, f, i, h, j, k], is_dual)
    } else {
        select_3749([a, e, c, d, h, f, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3746([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3586([e, b, d, a, f, g, h, i, j, k], is_dual)
    } else {
        select_3747([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3751([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_422([a, c, d, g, f, e, h], is_dual)
    } else {
        select_606([g, h, i, f, a, d, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3750([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_226([c, b, d, a, e, f, g, h, i], is_dual)
    } else {
        select_3751([a, j, k, g, i, b, c, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3745([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3746([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3750([a, e, j, h, l, m, b, k, f, i, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3744([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3745([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3745([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3736([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3737([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_3744([a, b, c, g, f, i, h, d, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_3755([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_330([a, b, c, e, f, g, d, h, i, k], is_dual)
    } else {
        select_1963([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3754([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_3755([a, f, h, j, l, m, b, k, g, i, e], !is_dual)
    } else {
        select_572([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_3758([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_270([f, e, c, d, h, g, i, j], is_dual)
    } else {
        select_270([f, e, a, b, i, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3759([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_270([a, b, d, e, g, f, h, i], is_dual)
    } else {
        select_846([a, b, c, h, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3757([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3758([a, d, e, f, c, b, g, h, i, j], is_dual)
    } else {
        select_3759([b, c, h, e, f, g, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3756([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1687([a, b, c, d, e, h, g, j, i, k, l], is_dual)
    } else {
        select_3757([a, b, e, f, c, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3753([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_3754([a, c, d, e, h, g, j, b, i, k, l, m, n], is_dual)
    } else {
        select_3756([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3752([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3753([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3753([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3735([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3736([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    } else {
        select_3752([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3727([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3728([a, b, c, d, m, n, l, h, e, k, f, j, i], !is_dual)
    } else {
        select_3735([a, b, c, d, f, e, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3711([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3712([a, b, c, d, h, m, n, k, e, l, f, j, i], !is_dual)
    } else {
        select_3727([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_97([g, i, f, j, a, b, h, c], !is_dual)
    } else {
        select_161([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3766([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1545([h, a, b, i, f, e, j, g, k], is_dual)
    } else {
        select_3767([e, f, a, c, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3765([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3766([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3722([j, e, g, h, l, a, k, f, i, c], !is_dual)
    }
}
/// n = 11, i = 3
fn select_3769([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_202([a, b, c, g, i, f, j, k, h], is_dual)
    } else {
        select_2343([a, f, b, e, d, h, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3771([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_452([g, i, f, a, h, d, e, b], !is_dual)
    } else {
        select_452([f, i, g, a, h, e, d, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3770([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_476([a, h, c, d, f, g, j, i], is_dual)
    } else {
        select_3771([a, b, c, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3768([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3769([b, c, d, e, a, f, h, i, g, j, k], is_dual)
    } else {
        select_3770([b, d, g, e, f, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3764([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_3765([i, m, j, n, a, f, g, b, l, c, k, h], !is_dual)
    } else {
        select_3768([a, c, d, e, b, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3763([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3764([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_3764([b, a, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3762([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3763([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3763([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3761([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3762([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3762([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_3778([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2078([a, d, c, b, f, e, h, g, i], is_dual)
    } else {
        select_3088([b, d, a, f, h, g, e], is_dual)
    }
}
/// n = 11, i = 3
fn select_3777([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_226([h, b, a, d, e, f, g, i, j], is_dual)
    } else {
        select_3778([a, b, i, c, g, h, j, f, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3776([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_790([a, f, i, m, n, b, l, c, k, g, h], !is_dual)
    } else {
        select_3777([a, d, e, b, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3779([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3504([a, d, c, b, g, h, f, i, j, e, k], is_dual)
    } else {
        select_1382([a, g, b, e, d, h, i, f, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3775([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3776([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_3779([a, d, e, b, f, h, i, g, c, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3774([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3775([a, b, c, d, e, h, g, i, j, f, k, l, m, n], is_dual)
    } else {
        select_3775([b, a, c, d, e, h, f, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3773([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3774([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3774([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3772([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3773([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3773([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3760([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3761([a, b, c, d, f, h, g, e, j, i, k, l, m, n], is_dual)
    } else {
        select_3772([a, b, c, d, f, h, e, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3710([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_3711([a, b, c, d, f, g, h, i, j, k, e, l, m, n], is_dual)
    } else {
        select_3760([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_3787([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_963([a, b, c, i, d, j, g, h, k], is_dual)
    } else {
        select_226([b, c, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_3786([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2614([a, g, b, d, c, i, k, l, h, m], is_dual)
    } else {
        select_3787([a, c, e, f, b, d, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3789([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_282([b, h, c, a, e, i, g, j], is_dual)
    } else {
        select_1383([b, a, d, c, g, f, h, j, k, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3791([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_74([a, f, d, e, g, h, j], is_dual)
    } else {
        select_50([a, b, c, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3790([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1683([b, a, h, c, j, f, k, g, i], is_dual)
    } else {
        select_3791([b, a, f, d, e, g, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3788([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3789([a, b, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_3790([a, b, d, c, e, g, h, i, j, f, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3785([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3786([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3788([a, d, e, b, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3784([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3785([a, b, c, d, e, f, i, h, j, g, k, l, m], is_dual)
    } else {
        select_3785([b, a, c, d, e, f, i, g, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3783([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3784([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_3784([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3782([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3783([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_3783([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_3795([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_2097([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1000([a, b, k, c, d, j, i, e, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3797([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_403([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1841([a, b, c, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3796([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3797([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_3797([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3794([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3795([a, b, c, d, f, e, g, h, k, l, i], is_dual)
    } else {
        select_3796([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3802([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_76([a, e, c, d, g, f, h, i, j], is_dual)
    } else {
        select_565([d, i, g, j, a, e, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3801([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_308([a, f, c, d, g, e, j, k, h], is_dual)
    } else {
        select_3802([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3800([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3801([e, j, k, b, h, i, a, f, c, g, d], !is_dual)
    } else {
        select_3487([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3799([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3800([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_3800([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3798([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3799([a, b, c, h, k, i, j, f, g, d, e], !is_dual)
    } else {
        select_3799([a, b, c, i, k, h, j, f, g, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3793([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3794([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3798([a, b, c, e, f, h, i, d, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_3807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_109([d, e, c, g, a, f, h, i, j], is_dual)
    } else {
        select_1952([b, a, c, d, f, e, h, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3808([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_109([d, e, c, g, a, f, h, j, i], is_dual)
    } else {
        select_3682([b, a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3806([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3807([c, b, d, f, a, g, e, h, i, j, k], is_dual)
    } else {
        select_3808([c, a, d, e, b, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3805([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3806([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3806([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3810([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3808([c, a, d, e, b, g, f, h, i, j], is_dual)
    } else {
        select_3808([c, b, d, f, a, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3809([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3810([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3810([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3804([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_3805([a, b, f, i, k, c, j, g, d, h, e], !is_dual)
    } else {
        select_3809([a, b, c, i, k, f, j, g, h, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3814([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_80([a, c, b, f, e, h, i], is_dual)
    } else {
        select_755([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3815([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([b, f, d, e, a, g, h], is_dual)
    } else {
        select_2625([b, a, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3813([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3814([b, c, d, e, f, g, h, a, i], is_dual)
    } else {
        select_3815([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3819([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_292([e, g, h, f, b, d, c], !is_dual)
    } else {
        select_198([a, b, c, e, f, d, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3818([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_3819([b, a, c, e, d, f, h, i, g], is_dual)
    } else {
        select_914([h, d, i, g, e, a, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3817([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3818([i, e, j, a, g, h, b, c, f], !is_dual)
    } else {
        select_2412([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3816([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3815([c, b, d, a, e, f, h, g, i], is_dual)
    } else {
        select_3817([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3812([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3813([a, d, c, e, b, g, f, i, h], is_dual)
    } else {
        select_3816([a, b, d, e, c, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3811([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3812([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_3812([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3803([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_3804([a, b, c, e, f, g, h, i, d, j, k], is_dual)
    } else {
        select_3811([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3792([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3793([a, b, c, d, f, e, g, h, j, i, k, l], is_dual)
    } else {
        select_3803([a, b, c, d, f, h, i, j, e, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3781([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3782([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_3792([a, b, c, d, f, g, j, e, i, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_3828([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_51([a, b, j, k, i, c], !is_dual)
    } else {
        select_230([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3827([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3828([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1267([b, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3829([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_74([a, f, c, d, e, g, h], is_dual)
    } else {
        select_3422([a, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3827([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3829([a, g, d, e, f, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3825([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_3826([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2127([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3824([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1848([a, b, c, d, j, l, k, i, e, h], !is_dual)
    } else {
        select_3825([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3831([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1193([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_412([a, b, g, k, c, j, d, i, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3834([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1257([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1548([g, h, a, j, e, i, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3835([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2078([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_153([b, f, g, h, e, a, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3833([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3834([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3835([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3836([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_226([c, b, d, a, e, f, g, h, i], is_dual)
    } else {
        select_1813([b, c, d, h, g, a, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3832([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_3833([a, g, b, k, l, j, c, d, i, h], !is_dual)
    } else {
        select_3836([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3830([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3831([a, b, c, e, f, g, d, h, i, j, l], is_dual)
    } else {
        select_3832([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3823([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3824([a, b, c, f, j, l, m, k, i, g, h, e], !is_dual)
    } else {
        select_3830([a, b, c, f, j, l, m, k, g, i, d, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3839([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1900([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_191([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_3838([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3652([a, b, c, h, f, j, g, i, l, k], is_dual)
    } else {
        select_3839([a, b, m, j, l, k, c, h, d, e, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3841([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_58([a, c, d, b, e, f, g, h, j, i], is_dual)
    } else {
        select_2614([a, g, b, e, c, f, i, k, h, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3845([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_153([e, b, a, d, g, f, h], is_dual)
    } else {
        select_22([b, a, c, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3844([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_580([a, k, i, j, h, g, e, c, b], !is_dual)
    } else {
        select_3845([a, c, d, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3847([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1010([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_186([a, d, e, f, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3848([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_685([b, c, e, f], is_dual)
    } else {
        select_2474([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3846([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3847([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3848([f, b, c, h, a, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3843([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3844([a, d, e, c, f, g, b, h, i, j, k], is_dual)
    } else {
        select_3846([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3850([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_614([a, b, d, f, e, g, h, j], is_dual)
    } else {
        select_53([g, c, a, d, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3851([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_444([a, i, g, b, c], !is_dual)
    } else {
        select_2997([a, b, e, d, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3849([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3850([b, c, e, d, f, g, a, h, i, j], is_dual)
    } else {
        select_3851([b, a, c, e, d, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3842([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_3843([a, c, e, d, f, b, g, h, i, j, k], is_dual)
    } else {
        select_3849([a, c, e, f, b, g, d, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3840([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_3841([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3842([a, c, d, f, b, g, e, h, j, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3837([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_3838([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_3840([a, b, j, c, l, m, n, h, k, d, i, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_3822([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_3823([a, b, c, g, f, i, d, h, j, l, k, m, n], is_dual)
    } else {
        select_3837([a, b, c, e, d, f, h, g, j, i, k, m, l, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3859([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_703([a, d, c, g, e, h, i], is_dual)
    } else {
        select_39([e, f, b, d], is_dual)
    }
}
/// n = 11, i = 4
fn select_3858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_3859([i, k, g, j, a, b, h, f, d], !is_dual)
    } else {
        select_128([a, d, c, g, f, e, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3857([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3858([a, b, d, c, f, e, g, h, i, k, l], is_dual)
    } else {
        select_69([c, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_3861([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1536([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1536([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3862([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_38([a, b, d, c, e, f, g], is_dual)
    } else {
        select_51([a, b, c, e, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3860([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3861([c, d, g, e, f, h, i, j], is_dual)
    } else {
        select_3862([a, b, h, e, f, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3856([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3857([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_3860([b, c, a, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3864([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_70([a, e, h, f, g, b, c], !is_dual)
    } else {
        select_70([a, f, h, e, g, b, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3863([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3864([e, g, h, k, f, i, d, b], !is_dual)
    } else {
        select_2974([g, j, e, f, k, i, h, c, d, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3855([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3856([c, a, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3863([j, l, i, k, a, b, c, f, h, d, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3866([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_299([a, c, d, f, e, g, h, i, k], is_dual)
    } else {
        select_791([e, i, j, g, k, a, f, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3865([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_79([a, b, d, f, e, g, h, i], is_dual)
    } else {
        select_3866([a, c, b, d, e, f, g, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3854([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3855([b, c, d, a, e, f, g, h, i, l, j, k], is_dual)
    } else {
        select_3865([h, k, l, f, a, i, b, c, j, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3853([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3854([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_3854([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_3872([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_38([a, h, e, b, f, g, i], is_dual)
    } else {
        select_612([a, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_3871([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3872([a, c, b, h, d, g, i, f, j], is_dual)
    } else {
        select_1518([a, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3874([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_803([a, b, f, e, h, g, d, i], is_dual)
    } else {
        select_436([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3873([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_76([e, a, c, g, d, f, i, h, j], is_dual)
    } else {
        select_3874([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_3870([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3871([b, d, c, a, e, g, f, h, i, j], is_dual)
    } else {
        select_3873([f, l, m, a, i, k, b, g, j, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3869([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3870([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3870([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_3876([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_591([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_144([a, i, c, d, b, g, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3875([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3876([a, b, e, f, c, d, g, h, i, j], is_dual)
    } else {
        select_72([a, b, c, d, g, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3868([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3869([a, b, c, f, e, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_3875([a, b, c, f, d, g, e, h, i, j, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_3879([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_81([a, f, g, c, e, h], is_dual)
    } else {
        select_834([a, b, e, d, h, f, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3878([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3879([a, d, b, e, c, f, g, h, i], is_dual)
    } else {
        select_3879([a, d, c, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3880([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2362([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2335([e, b, h, i, d, a, f, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3877([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_3878([a, b, c, d, f, h, i, e, g], is_dual)
    } else {
        select_3880([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_3867([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3868([a, b, c, e, f, d, g, h, i, j, k, m, l], is_dual)
    } else {
        select_3877([a, b, l, m, k, i, e, c, d, j], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3852([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3853([a, b, d, e, f, h, j, c, i, k, l, m], is_dual)
    } else {
        select_3867([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3821([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3822([a, b, c, f, e, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_3852([a, b, c, d, e, f, g, i, h, j, k, m, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3888([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_624([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_289([b, d, c, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3887([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1059([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_3888([e, g, i, a, f, h, b, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3889([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_736([f, h, a, i, e, g, b, c], !is_dual)
    } else {
        select_1870([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3886([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3887([a, b, d, g, e, f, h, j, k], is_dual)
    } else {
        select_3889([a, b, c, f, e, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3892([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_213([i, h, g, d, f, e, c], !is_dual)
    } else {
        select_88([a, g, b, h, d, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3893([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_313([a, c, f, g, d, i], is_dual)
    } else {
        select_940([j, g, i, h, f, a, e, d, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3891([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3892([c, a, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_3893([c, d, b, a, e, g, h, f, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3895([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_61([d, f, c, g, e], is_dual)
    } else {
        select_892([h, i, f, d, g, a, b, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3896([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_111([h, f, j, a, g, e, c], !is_dual)
    } else {
        select_198([a, b, e, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3894([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3895([j, h, f, g, i, a, d, e, b], !is_dual)
    } else {
        select_3896([a, b, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3890([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3891([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_3894([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3885([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3886([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3890([a, i, e, k, h, j, g, f, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3899([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_74([a, g, f, h, i, d, b], !is_dual)
    } else {
        select_74([a, f, g, h, i, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3898([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1069([a, i, j, g, b, c, f], !is_dual)
    } else {
        select_3899([a, c, d, g, e, h, i, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3901([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_197([a, b, f, d, e, h, g, i, j], is_dual)
    } else {
        select_136([a, c, g, d, e, h, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3902([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_878([a, b, f, d, e, h, g, j, i], is_dual)
    } else {
        select_136([a, c, g, d, e, h, f, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3900([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3901([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_3902([a, c, d, e, b, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3897([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3898([a, f, j, l, k, g, i, b, c, d, h], !is_dual)
    } else {
        select_3900([a, b, d, c, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3884([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_3885([a, c, d, h, f, i, g, b, j, k, l], is_dual)
    } else {
        select_3897([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3904([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1462([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1462([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3906([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_257([c, d, e, a, f, g, h], is_dual)
    } else {
        select_445([a, b, f, g, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3905([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3561([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3906([a, b, d, e, c, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3903([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3904([a, b, c, d, h, f, i, g, j], is_dual)
    } else {
        select_3905([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3883([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_3884([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_3903([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3909([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3557([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3565([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3908([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3909([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_3909([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3907([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2331([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_3908([a, b, c, h, j, k, i, e, g, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3882([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3883([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3907([a, b, c, k, l, g, i, d, j, e, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3914([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1419([a, e, b, g, i, d, f, h, k], is_dual)
    } else {
        select_1419([a, d, c, f, h, e, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3913([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_3878([a, b, c, d, f, g, i, e, h], is_dual)
    } else {
        select_3914([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3917([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_677([b, c, a, d, e, f, g, i, h], is_dual)
    } else {
        select_440([b, g, c, e, a, f, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3918([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_834([d, a, b, h, e, i, f, g], is_dual)
    } else {
        select_250([f, a, g, c, d, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3916([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3917([g, d, j, k, a, h, i, f, e, c], !is_dual)
    } else {
        select_3918([b, c, a, d, f, h, i, e, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_3915([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3916([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3916([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3912([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3913([a, b, d, c, f, e, g, j, h, k, i], is_dual)
    } else {
        select_3915([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_413([a, b, i, g, k, e, c, h], !is_dual)
    } else {
        select_2244([a, g, j, i, k, b, h, f, e, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3922([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_881([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_74([a, b, c, d, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3920([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3921([a, b, j, l, i, k, c, h, d, g, e], !is_dual)
    } else {
        select_3922([a, d, c, e, b, f, h, g, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3924([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2651([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_443([a, b, c, g, e, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3923([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3924([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_442([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3919([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_3920([a, b, c, e, d, f, h, g, i, k, j, l], is_dual)
    } else {
        select_3923([a, b, c, g, f, d, h, j, l, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3911([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3912([a, b, l, k, j, g, d, e, c, i, h], !is_dual)
    } else {
        select_3919([a, b, d, e, c, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3931([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_52([a, b, f, e, h, i], is_dual)
    } else {
        select_23([c, d, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3930([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_68([b, h, e, a, i], is_dual)
    } else {
        select_3931([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3929([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_444([a, b, h, i, j], is_dual)
    } else {
        select_3930([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3928([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3929([a, b, c, d, f, g, h, i, e, j], is_dual)
    } else {
        select_990([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3934([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_993([f, g, i, d, h, a, b, e, c], !is_dual)
    } else {
        select_122([d, c, b, f, g, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_3933([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_90([c, d, e, f, a, g], is_dual)
    } else {
        select_3934([b, a, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3937([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_52([i, j, k, a, d, b], !is_dual)
    } else {
        select_2661([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3936([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_68([j, d, a, b, g], !is_dual)
    } else {
        select_3937([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_484([c, a, b, d, f, e, i, g, h], is_dual)
    } else {
        select_167([a, d, b, f, i, e, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3935([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_3936([a, b, c, d, e, g, i, f, h, j, k], is_dual)
    } else {
        select_3938([b, a, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3933([d, b, c, e, g, f, i, h, j], is_dual)
    } else {
        select_3935([a, b, c, e, f, g, h, i, j, d, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3927([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3928([h, d, j, k, f, a, i, e, g, c], !is_dual)
    } else {
        select_3932([a, b, c, d, f, g, e, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3926([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3927([e, k, i, a, f, g, j, b, h, c, d], !is_dual)
    } else {
        select_3927([e, k, j, a, f, g, i, b, h, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3925([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3926([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3926([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3910([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3911([a, b, d, c, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_3925([a, b, d, e, h, g, i, j, c, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3881([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3882([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_3910([a, b, c, d, f, g, e, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3820([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3821([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3881([a, b, c, d, e, f, i, j, k, l, h, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3780([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_3781([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    } else {
        select_3820([a, b, c, d, f, g, h, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3709([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3710([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_3780([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3643([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_3644([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    } else {
        select_3709([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3467([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_3468([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3643([a, b, c, d, e, f, g, h, i, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_3466([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3467([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_3467([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3465([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_3466([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3466([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_2810([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_2811([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3465([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5([a, b, c, d, e, f, g, h, i, k, m, j, l, n], is_dual)
    } else {
        select_2810([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3953([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_723([c, d, b, e, a, f, g, i, h], is_dual)
    } else {
        select_1813([b, c, d, g, f, a, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3952([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3953([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_3953([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3957([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_98([i, f, a, g, d, b], !is_dual)
    } else {
        select_186([f, h, g, a, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3956([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3957([a, b, c, e, d, h, f, i, g], is_dual)
    } else {
        select_2483([h, f, i, d, g, e, b, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3955([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3956([b, d, c, e, f, a, g, h, i], is_dual)
    } else {
        select_1396([e, g, h, i, a, b, f, c, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3959([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_618([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_38([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3960([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_303([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_831([a, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3958([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3959([f, i, j, d, k, h, g, e, b], !is_dual)
    } else {
        select_3960([i, f, j, h, k, d, g, e, c, a], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3954([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3955([g, h, a, b, d, f, j, k, i], is_dual)
    } else {
        select_3958([c, a, f, d, e, g, i, k, l, m, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_3951([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3952([j, d, l, g, h, m, a, e, i, c], !is_dual)
    } else {
        select_3954([a, b, c, d, e, f, g, h, i, k, m, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3965([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2348([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_434([b, c, d, f, e, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3964([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_939([e, b, c, d, g, h, f, j, i, k], is_dual)
    } else {
        select_3965([f, a, b, d, g, e, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3967([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_453([b, c, d, f, e, g, h], is_dual)
    } else {
        select_88([f, g, i, a, h, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3966([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3011([b, a, d, e, g, i, f, j, h], is_dual)
    } else {
        select_3967([a, f, c, d, g, h, e, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3963([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3964([d, c, b, e, f, a, g, h, i, j, l], is_dual)
    } else {
        select_3966([c, d, a, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3970([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_719([j, k, e, f, a, b, h], !is_dual)
    } else {
        select_2495([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3969([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3970([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_3970([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3968([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3969([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_342([b, f, d, e, h, g, a, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3962([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3963([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3968([b, c, d, a, e, f, h, i, g, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3973([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1333([j, i, f, k, d, g, e, c], !is_dual)
    } else {
        select_87([a, b, f, d, i, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3975([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_951([b, c, g, a, f, j, i], is_dual)
    } else {
        select_1617([b, d, c, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3976([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_153([f, i, g, h, e, a, b], !is_dual)
    } else {
        select_100([e, a, c, d, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3974([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3975([a, b, f, c, g, e, h, i, j, k], is_dual)
    } else {
        select_3976([a, c, d, e, g, h, f, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_3972([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3973([a, d, b, h, f, g, e, j, i, l, k], is_dual)
    } else {
        select_3974([k, j, m, i, g, d, l, h, f, e, c, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3978([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_628([e, i, f, a, h, g, b, c, d], !is_dual)
    } else {
        select_628([e, i, g, a, h, f, b, d, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3981([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_129([a, b, d, e, f, i, j], is_dual)
    } else {
        select_129([b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3980([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_292([e, j, k, f, a, h, b], !is_dual)
    } else {
        select_3981([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3979([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1513([b, d, h, e, f, a, k, j], is_dual)
    } else {
        select_3980([b, d, c, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3977([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3978([e, k, f, l, a, b, h, i, c], !is_dual)
    } else {
        select_3979([c, a, d, b, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3971([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_3972([b, c, a, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_3977([d, j, k, m, g, h, l, i, e, f, a, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3961([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3962([d, h, l, m, k, j, i, a, f, g, e, c], !is_dual)
    } else {
        select_3971([a, b, c, d, f, g, h, i, e, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_3950([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3951([a, b, c, d, g, f, h, j, i, e, k, l, m], is_dual)
    } else {
        select_3961([a, b, c, d, e, f, g, h, j, i, k, m, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_3985([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1069([a, i, j, g, b, c, f], !is_dual)
    } else {
        select_1875([a, d, c, e, g, i, h, k, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_3988([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3009([a, b, c, d, e, f, h, i, j, k], is_dual)
    } else {
        select_91([g, a, b, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3987([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3988([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_3988([h, i, j, k, f, g, e, a, b, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3989([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_87([d, g, h, e, a, f, b], !is_dual)
    } else {
        select_121([g, e, h, a, d, f, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_3986([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3987([a, f, b, c, e, i, g, l, m, j, k], is_dual)
    } else {
        select_3989([a, g, d, h, e, f, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_3984([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3985([e, b, c, f, g, a, h, i, k, l, m], is_dual)
    } else {
        select_3986([a, b, c, d, e, f, h, i, g, j, m, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3992([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1772([d, c, a, b, e, f, h, g], is_dual)
    } else {
        select_736([a, d, b, c, e, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_3993([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([a, c, e, f, g, d, h, j], is_dual)
    } else {
        select_345([c, b, d, f, e, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3991([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_3992([h, d, k, j, e, a, g, b], !is_dual)
    } else {
        select_3993([b, a, c, e, d, f, h, i, j, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3995([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3704([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1693([d, f, i, h, e, a, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3997([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_65([b, a, c, d, e, f, g, i, j], is_dual)
    } else {
        select_252([a, f, c, d, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3998([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_215([a, c, d, f, g, h], is_dual)
    } else {
        select_75([i, e, j, k, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3996([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3997([i, g, j, k, f, e, h, a, b, d], !is_dual)
    } else {
        select_3998([b, a, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3994([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3995([a, h, c, e, f, i, g, k, l], is_dual)
    } else {
        select_3996([j, l, k, i, f, e, a, h, b, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3990([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3991([a, b, c, f, g, h, i, j, k, l, e], is_dual)
    } else {
        select_3994([a, c, b, d, f, e, g, h, j, k, i, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3983([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3984([a, d, c, b, f, g, i, j, k, m, l, h, n], is_dual)
    } else {
        select_3990([a, b, d, e, f, h, g, j, k, m, i, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4002([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_891([a, b, c, h, f, i, g, j], is_dual)
    } else {
        select_251([a, f, d, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4003([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_192([a, f, d, e, g, b], is_dual)
    } else {
        select_2078([a, c, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4001([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4002([b, c, e, a, d, f, g, h, i, j], is_dual)
    } else {
        select_4003([a, d, e, b, g, f, i, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4005([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_974([a, b, c, f, g, i, e, h], is_dual)
    } else {
        select_632([a, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4004([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2456([a, c, d, e, h, f, g, i, j, k], is_dual)
    } else {
        select_4005([b, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4000([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_4001([a, c, e, f, b, d, g, h, i, j, k], is_dual)
    } else {
        select_4004([a, c, e, f, d, b, h, i, g, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4009([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_153([c, b, g, d, e, f, h], is_dual)
    } else {
        select_61([f, a, c, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_4008([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_886([c, d, a, e, b, g, f], is_dual)
    } else {
        select_4009([c, b, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4011([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_382([b, c, e, d, g, h], is_dual)
    } else {
        select_644([a, c, b, e, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4012([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_186([a, c, d, h, f, k], is_dual)
    } else {
        select_3498([j, h, k, i, a, g, e, c, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_4010([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4011([m, l, h, f, k, i, a, b, c], !is_dual)
    } else {
        select_4012([a, c, d, e, f, g, h, j, k, m, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_4007([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4008([f, c, b, i, a, h, k, l], is_dual)
    } else {
        select_4010([b, c, d, a, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_4015([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_235([d, i, j, k, a, e, b, g], !is_dual)
    } else {
        select_993([a, e, c, d, f, h, j, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4014([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4015([a, b, c, d, e, f, g, i, j, k, h], is_dual)
    } else {
        select_380([i, k, g, d, h, a, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4017([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_381([j, i, h, f, e, b, a, g], !is_dual)
    } else {
        select_314([b, d, c, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4016([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2183([i, h, j, g, e, a, c, b, f], !is_dual)
    } else {
        select_4017([b, c, a, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_4013([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4014([k, m, j, h, l, i, f, a, c, b, d], !is_dual)
    } else {
        select_4016([a, d, c, e, i, g, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_4006([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4007([b, a, d, c, e, f, g, j, i, k, h, l, m], is_dual)
    } else {
        select_4013([b, c, a, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3999([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4000([g, a, f, b, d, e, i, j, h, k, l], is_dual)
    } else {
        select_4006([a, b, c, e, d, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3982([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_3983([a, d, b, c, e, g, h, i, j, k, l, m, f, n], is_dual)
    } else {
        select_3999([b, c, d, a, e, g, h, f, i, j, m, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3949([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3950([b, d, c, f, g, h, j, k, l, a, i, n, m], is_dual)
    } else {
        select_3982([b, a, c, d, e, f, g, h, i, l, j, k, n, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4023([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2754([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2756([i, g, j, d, h, e, a, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4022([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3130([c, b, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_4023([c, d, a, e, b, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4024([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_249([a, b, d, e, f, i, h], is_dual)
    } else {
        select_3261([a, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4021([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4022([b, c, d, e, g, h, a, i, j, k], is_dual)
    } else {
        select_4024([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4028([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_111([g, f, i, a, b, h, c], !is_dual)
    } else {
        select_772([a, d, e, b, c, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4027([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4028([b, c, d, a, e, f, h, g, i], is_dual)
    } else {
        select_214([f, i, h, j, a, b, c, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4030([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_38([a, b, d, c, e, f, g], is_dual)
    } else {
        select_33([g, b, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4029([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4030([g, h, i, f, d, b, a, e], !is_dual)
    } else {
        select_382([b, d, c, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_4026([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4027([a, b, c, e, d, g, h, f, i, j], is_dual)
    } else {
        select_4029([b, c, e, f, h, a, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4032([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_878([b, a, c, d, e, g, f, i, h], is_dual)
    } else {
        select_211([f, b, d, a, e, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4033([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_618([f, a, h, i, e, g, c, b], !is_dual)
    } else {
        select_214([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4031([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4032([a, b, e, d, g, h, f, j, i, k], is_dual)
    } else {
        select_4033([a, j, g, k, i, b, h, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4025([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4026([a, b, d, f, c, i, g, j, l, h], is_dual)
    } else {
        select_4031([a, c, d, e, b, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_4020([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4021([a, j, k, g, l, m, b, h, i, c, d], !is_dual)
    } else {
        select_4025([a, c, b, d, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4036([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2865([c, d, b, a, e, f, g, h, i, j], is_dual)
    } else {
        select_3436([g, i, k, a, j, b, c, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4035([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1311([b, g, d, e, a, f, i, h, k], is_dual)
    } else {
        select_4036([a, c, b, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_4039([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_67([a, b, f, e, d, h], is_dual)
    } else {
        select_629([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_4038([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4039([b, c, a, d, f, e, h, g], is_dual)
    } else {
        select_2268([b, a, c, d, f, g, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_4042([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_111([g, f, j, a, b, h, c], !is_dual)
    } else {
        select_375([a, d, b, c, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4043([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([e, a, c, d, f, h, g], is_dual)
    } else {
        select_1617([h, k, j, f, i, e, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4041([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4042([g, i, h, k, j, e, a, b, c, f], !is_dual)
    } else {
        select_4043([a, c, b, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4044([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_121([e, g, h, a, b, f, d], !is_dual)
    } else {
        select_386([e, g, h, b, f, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4040([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4041([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_4044([a, b, d, e, h, g, i, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_4037([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_4038([e, b, d, f, a, g, h, i], is_dual)
    } else {
        select_4040([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4034([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4035([a, b, c, d, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_4037([b, d, c, e, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4019([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_4020([a, b, d, c, e, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_4034([a, j, h, l, m, k, b, c, i, f, g, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4050([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_212([a, c, b, e, f, g, d, h, i], is_dual)
    } else {
        select_289([b, d, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4049([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4050([b, a, c, d, f, e, h, i, g], is_dual)
    } else {
        select_1452([a, b, f, d, g, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_4048([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1183([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4049([b, g, c, a, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4052([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1475([a, b, d, c, f, e, g, h, j, k], is_dual)
    } else {
        select_1475([a, i, j, k, h, e, g, f, d, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4053([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_81([a, f, h, g, e, c], !is_dual)
    } else {
        select_1448([a, i, f, h, g, d, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4051([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4052([a, b, d, c, e, g, f, h, j, i, k], is_dual)
    } else {
        select_4053([a, d, f, g, b, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4047([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4048([a, h, k, g, e, j, i, b, f, c], !is_dual)
    } else {
        select_4051([a, h, i, k, e, g, j, f, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4057([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_375([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_88([h, i, j, a, e, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4056([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2394([a, e, b, d, f, h, g], is_dual)
    } else {
        select_4057([a, c, b, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4058([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_192([b, c, a, d, e, f], is_dual)
    } else {
        select_51([a, f, b, c, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4055([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_4056([a, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_4058([a, b, c, e, h, g, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4060([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_834([d, b, c, e, g, f, i, j], is_dual)
    } else {
        select_1528([e, a, c, f, d, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4059([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4060([b, c, a, d, f, g, e, i, h, j], is_dual)
    } else {
        select_1875([d, e, c, a, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4054([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4055([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_4059([b, d, c, g, f, h, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4046([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4047([a, c, f, e, b, g, i, h, k, j, l], is_dual)
    } else {
        select_4054([a, c, d, e, b, g, h, f, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4063([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_728([b, a, c, f, e, h, i], is_dual)
    } else {
        select_1843([e, a, b, d, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4062([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4063([b, c, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2414([e, i, h, k, j, a, f, b, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4067([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_700([g, j, e, h, a, c, b], !is_dual)
    } else {
        select_88([b, c, d, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4066([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_910([g, h, j, k, e, i, d, f, b, c], !is_dual)
    } else {
        select_4067([g, j, h, k, d, i, e, f, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4069([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_141([e, h, d, i, a, f], !is_dual)
    } else {
        select_205([b, c, d, e, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_4068([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4069([a, b, f, d, h, e, i, j, g], is_dual)
    } else {
        select_2973([a, c, e, d, h, g, f, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4065([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4066([j, h, k, f, e, i, a, c, g, b, d], !is_dual)
    } else {
        select_4068([j, k, e, f, i, h, c, b, a, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4072([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_111([a, b, g, d, j, e, i], is_dual)
    } else {
        select_993([a, e, c, d, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4071([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2405([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_4072([b, d, c, e, g, f, a, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4070([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2788([a, b, f, c, e, i, h, g, j, k], is_dual)
    } else {
        select_4071([a, b, c, d, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4064([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4065([h, j, k, l, b, a, i, c, g, f, e], !is_dual)
    } else {
        select_4070([b, c, d, e, a, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4061([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4062([h, k, a, l, b, j, i, c, g, f, d], !is_dual)
    } else {
        select_4064([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4045([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4046([a, b, d, e, c, h, f, i, j, g, k, l], is_dual)
    } else {
        select_4061([a, b, c, e, d, h, g, i, j, f, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4018([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4019([a, b, c, d, e, g, h, i, j, k, f, l, m], is_dual)
    } else {
        select_4045([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_3948([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3949([a, b, c, e, d, f, g, h, i, k, l, m, j, n], is_dual)
    } else {
        select_4018([g, f, i, n, l, a, m, k, b, j, c, d, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4079([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_288([g, i, h, j, d, f, a, c], !is_dual)
    } else {
        select_157([d, h, g, k, e, j, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4078([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4079([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_3567([g, j, i, k, d, e, f, a, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4080([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1842([f, a, c, d, e, g, h, i, j], is_dual)
    } else {
        select_3567([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_4077([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4078([k, m, l, g, h, f, a, j, b, c, i], !is_dual)
    } else {
        select_4080([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_4083([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1452([a, b, e, g, h, i, d], is_dual)
    } else {
        select_1770([b, a, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_4084([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_67([h, f, g, a, d, b], !is_dual)
    } else {
        select_121([g, f, h, d, a, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4082([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_4083([b, a, c, e, f, g, d, h, i], is_dual)
    } else {
        select_4084([h, g, i, e, a, f, b, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4081([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4078([a, c, b, e, f, d, h, i, g, j, k], is_dual)
    } else {
        select_4082([e, a, c, i, g, f, d, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_4076([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4077([b, a, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_4081([f, l, m, j, g, h, a, b, k, c, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4088([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_67([b, g, d, i, f, k], is_dual)
    } else {
        select_2144([a, b, c, h, e, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4090([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_453([d, b, c, f, e, g, i], is_dual)
    } else {
        select_700([a, e, d, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4089([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4090([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_186([f, g, c, a, e, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4087([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4088([b, a, d, c, f, e, i, g, j, h, k, l], is_dual)
    } else {
        select_4089([b, e, d, g, f, h, a, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4093([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_77([b, e, c, d, g, f, h], is_dual)
    } else {
        select_61([d, a, h, i, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_4092([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4093([i, f, k, g, h, j, a, e, b], !is_dual)
    } else {
        select_1250([i, g, k, f, h, j, a, e, c, d, b], !is_dual)
    }
}
/// n = 7, i = 3
fn select_4095([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_61([a, b, e, g, d], is_dual)
    } else {
        select_61([a, c, d, f, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_4094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4095([a, b, c, e, h, g, i], is_dual)
    } else {
        select_386([g, j, h, a, f, c, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4091([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4092([j, m, h, n, l, f, a, i, b, g, e], !is_dual)
    } else {
        select_4094([b, a, c, d, h, f, k, l, m, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_4086([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_4087([f, b, a, e, h, g, c, j, i, k, m, l], is_dual)
    } else {
        select_4091([b, a, c, d, e, f, g, i, h, j, k, l, n, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([f, c, b, e, h, g], is_dual)
    } else {
        select_99([a, c, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4099([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_167([a, b, e, d, f, g, i, j], is_dual)
    } else {
        select_4100([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4098([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_4099([b, a, c, e, f, g, h, d, j, i], is_dual)
    } else {
        select_3484([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 6, i = 2
fn select_4101([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_444([a, e, f, c, d], !is_dual)
    } else {
        select_91([a, b, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_4097([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4098([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_4101([g, b, c, h, d, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_4103([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1797([a, e, c, d, g, h, f, i, j], is_dual)
    } else {
        select_2957([h, j, l, e, i, k, a, b, f, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4105([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_820([a, b, d, g, f, i, k, l], is_dual)
    } else {
        select_1423([j, l, a, h, k, e, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4106([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_48([b, c, e, g, f, i, h, k], is_dual)
    } else {
        select_325([a, d, e, h, g, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_4104([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4105([a, b, e, c, g, h, j, f, k, i, l, m], is_dual)
    } else {
        select_4106([a, c, b, e, d, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_4102([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4103([b, c, g, e, f, a, h, i, l, m, j, k], is_dual)
    } else {
        select_4104([b, c, d, a, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_4096([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4097([b, c, d, f, i, g, a, k, l, m], is_dual)
    } else {
        select_4102([b, a, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4085([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4086([a, c, b, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_4096([a, c, b, d, e, f, g, h, j, i, k, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4075([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4076([c, a, d, b, e, f, g, j, i, k, h, l, m], is_dual)
    } else {
        select_4085([a, c, b, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_4110([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1914([h, a, b, e, d, g, i], is_dual)
    } else {
        select_1306([e, b, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4109([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2076([b, a, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_4110([b, d, c, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4115([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([a, b, d, g, h, j], is_dual)
    } else {
        select_99([c, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4114([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_640([a, c, d, g, h, f, k], is_dual)
    } else {
        select_4115([a, c, b, f, e, i, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3235([k, h, l, g, i, e, j, a, f, b], !is_dual)
    } else {
        select_4114([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4116([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2997([b, a, d, e, g, f, i, j, l], is_dual)
    } else {
        select_4095([a, b, c, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4112([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4113([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_4116([a, b, c, d, e, g, f, i, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4118([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_81([a, f, i, g, e, c], !is_dual)
    } else {
        select_445([g, h, f, i, a, d, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4120([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_153([c, b, d, e, g, f, h], is_dual)
    } else {
        select_186([f, g, i, a, d, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4119([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_718([f, d, i, g, h, a, e, b], !is_dual)
    } else {
        select_4120([a, c, b, d, e, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4117([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_4118([b, c, d, e, f, a, g, i, h], is_dual)
    } else {
        select_4119([g, i, h, b, e, a, c, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4111([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4112([a, b, d, e, c, f, g, j, h, k, i, l], is_dual)
    } else {
        select_4117([a, i, j, k, f, g, c, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4108([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4109([a, c, e, f, i, h, g, d, j, k], is_dual)
    } else {
        select_4111([a, b, c, e, d, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4125([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1596([a, c, d, b, f, e, h, g, i], is_dual)
    } else {
        select_719([a, b, f, g, h, e, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4124([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1417([a, b, d, f, e, h, j, k], is_dual)
    } else {
        select_4125([c, b, a, d, e, f, g, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_4126([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_81([a, e, c, d, f, g], is_dual)
    } else {
        select_675([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_4123([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4124([a, c, b, g, e, f, j, h, l, k, i], is_dual)
    } else {
        select_4126([a, c, d, h, e, i, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4128([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_250([a, c, d, f, h, g], is_dual)
    } else {
        select_288([a, j, f, k, i, e, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4129([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_70([a, f, c, h, e, j, g], is_dual)
    } else {
        select_561([a, k, j, f, i, d, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4127([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4128([a, j, g, k, h, e, i, b, f, c, d], !is_dual)
    } else {
        select_4129([a, j, k, h, i, e, g, b, f, d, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4122([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4123([b, d, c, a, e, g, f, h, j, i, l, k], is_dual)
    } else {
        select_4127([e, j, k, m, h, f, a, g, i, d, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4133([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_38([b, e, d, c, f, h, g], is_dual)
    } else {
        select_26([e, i, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4132([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_623([a, b, c, f, g, e, h, i, j], is_dual)
    } else {
        select_4133([b, a, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4134([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1418([a, c, d, f, e, g, i], is_dual)
    } else {
        select_1576([a, c, b, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4131([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4132([a, d, b, c, f, g, h, i, e, j], is_dual)
    } else {
        select_4134([b, d, c, a, f, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4137([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_167([a, b, c, d, e, f, i, g], is_dual)
    } else {
        select_700([a, b, f, d, i, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4136([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_4137([a, c, b, e, g, d, i, h, f], is_dual)
    } else {
        select_1308([f, g, i, h, a, e, d, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4135([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4136([e, i, h, f, g, b, a, c, d], !is_dual)
    } else {
        select_4049([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4130([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4131([i, j, e, k, f, a, g, h, b, c], !is_dual)
    } else {
        select_4135([a, i, h, k, e, f, g, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4121([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4122([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_4130([a, c, b, g, e, h, i, j, k, f, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4107([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4108([e, k, m, l, j, f, a, i, b, g, h, d], !is_dual)
    } else {
        select_4121([b, a, c, d, e, f, h, i, g, j, m, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_4074([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_4075([a, b, c, d, e, f, g, h, j, i, k, m, l, n], is_dual)
    } else {
        select_4107([f, k, i, n, a, j, l, m, g, c, b, h, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4143([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_67([a, b, f, e, c, g], is_dual)
    } else {
        select_2908([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4145([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_141([a, f, h, i, g, c], !is_dual)
    } else {
        select_216([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4144([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_121([a, b, c, e, f, g, h], is_dual)
    } else {
        select_4145([a, c, d, b, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4142([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4143([c, a, d, b, e, f, g, i], is_dual)
    } else {
        select_4144([e, f, h, i, a, b, c, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4148([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1596([a, c, d, b, e, f, h, g, i], is_dual)
    } else {
        select_1536([h, j, i, e, f, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4147([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2183([i, h, j, f, e, a, c, b, g], !is_dual)
    } else {
        select_4148([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4146([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4147([b, a, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_4147([a, b, c, d, h, f, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4141([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4142([b, c, a, i, g, h, j, f, k], is_dual)
    } else {
        select_4146([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_4152([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_216([a, d, c, e, f, h, g], is_dual)
    } else {
        select_216([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4151([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1088([g, b, c, a, f, h, i], is_dual)
    } else {
        select_4152([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4150([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4151([a, c, d, e, b, g, f, h, i], is_dual)
    } else {
        select_709([a, c, d, f, g, b, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4156([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_52([f, h, i, a, g, b], !is_dual)
    } else {
        select_55([b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_4155([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_122([a, c, d, e, f, g], is_dual)
    } else {
        select_4156([e, h, f, i, a, b, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4154([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4155([e, h, i, j, f, a, g, b, d], !is_dual)
    } else {
        select_710([e, a, c, d, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4158([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_640([i, j, g, k, a, e, b], !is_dual)
    } else {
        select_188([a, c, d, g, h, f, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4157([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4158([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_933([e, b, a, d, g, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4153([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4154([b, c, a, e, f, g, i, h, j, k], is_dual)
    } else {
        select_4157([a, b, c, d, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4149([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4150([f, h, k, l, g, j, a, b, i, d], !is_dual)
    } else {
        select_4153([b, a, c, e, d, f, h, g, i, k, l, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_4140([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_4141([c, d, e, a, b, f, g, h, i, j, k], is_dual)
    } else {
        select_4149([a, b, c, d, e, f, g, h, k, l, m, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4162([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4011([b, c, f, a, e, h, g, i, j], is_dual)
    } else {
        select_451([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4163([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2567([a, c, b, d, f, g, e, h], is_dual)
    } else {
        select_386([a, c, e, g, b, h, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_4161([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4162([a, c, b, d, e, f, g, i, j, k], is_dual)
    } else {
        select_4163([a, b, e, d, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2202([e, i, k, h, j, f, c, a, g, b], !is_dual)
    } else {
        select_4161([e, h, k, i, j, g, b, c, f, d, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4167([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_292([a, c, e, f, d, g, i], is_dual)
    } else {
        select_103([h, g, f, e, c, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4166([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4167([g, j, h, d, i, e, a, b, f], !is_dual)
    } else {
        select_632([d, a, c, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4169([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_700([b, c, d, e, f, g, h], is_dual)
    } else {
        select_186([f, h, i, a, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4168([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4169([d, f, a, h, e, k, i, l, g], is_dual)
    } else {
        select_2452([e, b, c, d, g, f, i, j, l, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_4165([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_4166([a, e, c, g, h, f, d, j, i, k], is_dual)
    } else {
        select_4168([b, a, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_4171([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_736([d, j, i, h, g, f, a, b], !is_dual)
    } else {
        select_2469([d, j, k, i, g, h, e, f, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4172([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3055([a, c, d, e, f, i, h, g], is_dual)
    } else {
        select_1770([a, e, b, g, d, i, j, h, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_4170([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4171([a, e, c, g, f, h, i, d, l, k, j], is_dual)
    } else {
        select_4172([d, b, c, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4164([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4165([c, d, b, e, f, a, g, h, i, l, k, j], is_dual)
    } else {
        select_4170([c, d, a, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4159([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4160([f, c, a, b, h, i, g, l, e, j, k], is_dual)
    } else {
        select_4164([b, c, a, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4139([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4140([b, a, c, d, e, f, i, j, g, h, k, l, m], is_dual)
    } else {
        select_4159([c, d, e, b, f, g, i, h, a, k, l, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4178([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_581([d, a, c, g, e, i, h], is_dual)
    } else {
        select_215([a, b, e, d, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4177([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4137([a, c, e, f, h, d, j, i, g], is_dual)
    } else {
        select_4178([b, d, c, g, f, h, e, k, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4179([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3304([a, b, c, d, g, h, f, i], is_dual)
    } else {
        select_729([a, c, e, d, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_4176([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4177([h, k, l, f, i, j, a, b, c, d, g], !is_dual)
    } else {
        select_4179([b, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4180([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_3995([a, b, c, d, f, g, e, i, h], is_dual)
    } else {
        select_2792([d, h, i, g, f, a, b, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4175([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4176([a, c, b, d, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_4180([k, j, i, c, f, b, g, a, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4183([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_618([a, b, c, f, e, h, i, g], is_dual)
    } else {
        select_157([a, e, b, d, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_4184([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_911([b, a, c, e, g, f, i, j, h, l], is_dual)
    } else {
        select_4178([k, g, l, a, j, b, h, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4182([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_4183([b, d, f, e, c, g, h, i, j], is_dual)
    } else {
        select_4184([a, b, d, c, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4186([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4090([a, c, b, e, d, f, h, g, j, i], is_dual)
    } else {
        select_2233([a, b, e, g, f, h, i, d, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4185([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1306([e, d, c, g, f, a, h, j, i], is_dual)
    } else {
        select_4186([c, b, a, e, f, h, d, i, g, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_4181([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4182([f, j, k, g, m, e, l, a, h, i, b, c], !is_dual)
    } else {
        select_4185([b, a, d, e, g, i, f, j, k, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_4174([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4175([g, h, j, k, m, e, l, a, b, f, i, c], !is_dual)
    } else {
        select_4181([b, a, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4190([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_650([a, b, d, f, g, e, i, h], is_dual)
    } else {
        select_639([a, b, c, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4189([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4190([a, b, f, c, e, h, j, i, g], is_dual)
    } else {
        select_1606([e, a, b, d, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4188([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4189([c, d, a, e, b, f, g, i, h, j], is_dual)
    } else {
        select_4189([c, d, b, e, a, f, h, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4193([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2228([i, g, k, c, d, e, h], !is_dual)
    } else {
        select_3378([a, b, d, f, g, j, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4196([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([a, f, b, d, i, j], is_dual)
    } else {
        select_26([c, g, e, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4195([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_382([b, f, c, g, i, e], is_dual)
    } else {
        select_4196([i, g, k, f, j, h, d, a, b, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4197([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3604([k, h, j, i, f, g, d, b, a, e], !is_dual)
    } else {
        select_382([b, f, c, h, g, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_4194([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4195([j, k, g, i, h, d, a, f, b, e, c], !is_dual)
    } else {
        select_4197([j, k, h, i, g, d, f, a, e, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4192([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4193([a, b, c, d, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_4194([i, j, l, a, k, h, d, c, g, b, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4199([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_97([a, b, d, g, e, f, i, j], is_dual)
    } else {
        select_1576([a, b, c, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4201([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_499([a, d, f, e, c, g, h, j], is_dual)
    } else {
        select_3496([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4200([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_699([i, j, e, h, a, f, g, c, b], !is_dual)
    } else {
        select_4201([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4198([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4199([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_4200([a, d, c, e, b, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4191([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4192([a, b, d, c, f, e, h, i, j, g, k, l], is_dual)
    } else {
        select_4198([a, b, e, d, c, g, i, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4187([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_4188([d, e, a, f, b, g, h, i, c, j], is_dual)
    } else {
        select_4191([a, b, d, e, c, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4173([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_4174([a, b, d, c, f, e, g, h, i, j, l, k, m], is_dual)
    } else {
        select_4187([h, g, j, l, e, m, f, a, k, b, i, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4138([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_4139([b, c, d, e, a, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_4173([b, c, d, e, f, g, i, j, k, l, a, m, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_4073([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_4074([a, c, d, b, e, g, f, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4138([a, b, c, d, h, g, j, i, k, l, m, n, f], is_dual)
    }
}
/// n = 14, i = 6
fn select_3947([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3948([a, b, d, e, c, f, g, h, j, k, l, n, i, m], is_dual)
    } else {
        select_4073([a, b, d, c, e, f, g, i, j, l, n, m, h, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_3946([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3947([c, d, a, e, f, i, g, b, j, k, h, l, m, n], is_dual)
    } else {
        select_3947([c, d, b, e, f, i, h, a, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3945([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3946([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3946([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3944([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3945([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_3945([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_4213([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_294([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_100([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4212([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1333([f, b, d, e, a, h, g, i], is_dual)
    } else {
        select_4213([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4211([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_728([a, b, d, h, g, f, i], is_dual)
    } else {
        select_4212([a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4215([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_156([g, j, b, c, a, h, e], !is_dual)
    } else {
        select_561([a, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4217([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([j, g, a, e, h, b, d], !is_dual)
    } else {
        select_153([i, h, a, f, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4216([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4217([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_703([c, e, f, g, h, i, a], is_dual)
    }
}
/// n = 11, i = 4
fn select_4214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4215([a, b, f, c, e, g, h, i, j, k], is_dual)
    } else {
        select_4216([a, b, c, d, h, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4210([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_4211([b, e, c, a, f, g, d, h, i, j], is_dual)
    } else {
        select_4214([b, c, e, d, f, a, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4220([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1956([f, i, j, a, h, b, c, g], !is_dual)
    } else {
        select_251([a, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4219([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([c, f, d, e, a, g, h], is_dual)
    } else {
        select_4220([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4223([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_235([d, f, h, i, a, g, e, b], !is_dual)
    } else {
        select_26([b, c, f, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_4222([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4223([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1693([d, f, h, i, e, a, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4221([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4222([g, e, j, a, h, b, i, c, f], !is_dual)
    } else {
        select_1683([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4218([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4219([a, c, d, b, e, f, h, g, i, j], is_dual)
    } else {
        select_4221([a, c, d, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4209([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4210([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4218([b, c, g, d, e, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4226([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_545([b, a, g, c, e, h, f, j, k], is_dual)
    } else {
        select_765([a, d, c, b, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4227([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([a, g, c, d, f, i, h], is_dual)
    } else {
        select_290([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4225([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4226([b, c, e, d, f, h, g, a, i, j, k], is_dual)
    } else {
        select_4227([b, c, a, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4230([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_453([e, c, d, a, f, g, h], is_dual)
    } else {
        select_852([b, a, d, c, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4229([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_565([b, a, c, f, e, h, i, j], is_dual)
    } else {
        select_4230([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4228([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_2342([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4229([b, c, h, d, f, g, i, j, a, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4224([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4225([a, b, c, f, e, g, h, d, i, j, k], is_dual)
    } else {
        select_4228([a, b, c, f, d, g, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4208([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4209([a, b, c, d, f, e, h, i, g, j, k], is_dual)
    } else {
        select_4224([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_4235([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1208([b, c, d, a, e, f, h, g], is_dual)
    } else {
        select_639([f, h, i, e, b, a, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4234([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4235([g, i, e, j, a, b, h, c, f], !is_dual)
    } else {
        select_1606([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4238([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_294([b, e, d, c, g, f, i, h], is_dual)
    } else {
        select_1781([h, i, j, e, g, a, f, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4237([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2344([c, d, b, e, a, f, g, h, i], is_dual)
    } else {
        select_4238([c, d, a, e, f, b, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4240([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_167([a, b, d, e, g, h, j, f], is_dual)
    } else {
        select_940([j, i, g, h, e, a, f, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4241([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_803([b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_235([e, a, b, d, g, h, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_4239([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4240([b, a, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_4241([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4237([e, h, g, j, k, a, i, f, b, c], !is_dual)
    } else {
        select_4239([a, b, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4233([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4234([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4236([a, b, c, d, e, f, g, i, j, k, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4244([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2889([f, h, j, i, a, b, c, g], !is_dual)
    } else {
        select_1459([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4243([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_845([a, f, c, e, g, i, h, j, l], is_dual)
    } else {
        select_4244([f, j, k, i, l, a, g, b, d, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4245([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1413([a, g, i, j, f, e, c, h], !is_dual)
    } else {
        select_299([a, b, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4242([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4243([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4245([a, d, g, e, b, f, i, h, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4232([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4233([f, j, k, l, a, h, b, g, c, i, d], !is_dual)
    } else {
        select_4242([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4231([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4232([c, d, a, e, f, g, h, b, i, j, l, k], is_dual)
    } else {
        select_4232([c, d, b, e, f, g, h, a, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4207([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4208([c, d, b, e, f, a, h, i, g, j, k], is_dual)
    } else {
        select_4231([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4252([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_375([e, b, c, d, f, h, g, i, j], is_dual)
    } else {
        select_4156([e, j, k, l, a, g, h, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4253([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_292([d, h, i, f, a, e, c], !is_dual)
    } else {
        select_345([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_4251([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4252([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_4253([j, g, k, e, i, f, a, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4250([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2514([b, a, c, d, g, f, e, h, i, j], is_dual)
    } else {
        select_4251([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4249([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1121([b, d, a, g, e, f, h, j, i], is_dual)
    } else {
        select_4250([a, c, b, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4256([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_623([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_103([d, c, f, e, a, g, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_4257([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_444([a, f, e, b, g], !is_dual)
    } else {
        select_311([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4255([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4256([e, h, j, f, i, a, b, c, g], !is_dual)
    } else {
        select_4257([b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_4261([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_22([a, c, d, e, g, f, h], is_dual)
    } else {
        select_24([a, b], is_dual)
    }
}
/// n = 11, i = 4
fn select_4260([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_368([a, f, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_4261([b, e, c, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1811([a, b, f, d, e, h, g, i, k, l], is_dual)
    } else {
        select_4260([a, c, b, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_4263([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_685([b, c, d, e], is_dual)
    } else {
        select_52([a, b, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4262([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_4263([a, c, d, e, h, g, j], is_dual)
    } else {
        select_4167([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4258([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4259([a, c, b, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_4262([a, c, b, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4254([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4255([a, b, c, g, e, f, h, j, i, l], is_dual)
    } else {
        select_4258([a, d, b, c, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4248([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4249([a, c, e, d, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_4254([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4268([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1533([a, b, c, d, f, h, g, i], is_dual)
    } else {
        select_685([c, d, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_4270([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_55([e, c, d, g, f], is_dual)
    } else {
        select_39([a, b, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4269([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2596([a, d, e, h, g, k, l], is_dual)
    } else {
        select_4270([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4267([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4268([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_4269([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4266([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4267([e, a, b, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4267([f, c, d, a, b, e, h, g, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4265([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1907([a, b, c, d, h, i, k, g], is_dual)
    } else {
        select_4266([c, d, e, f, a, b, g, h, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4272([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_66([a, h, i, b, c, d, g], !is_dual)
    } else {
        select_1458([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4271([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1375([b, a, e, f, c, d, g, h, j, i], is_dual)
    } else {
        select_4272([a, b, c, d, e, g, i, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_4264([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4265([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_4271([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4247([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_4248([a, b, e, f, d, g, h, c, i, j, k, l], is_dual)
    } else {
        select_4264([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4276([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([b, f, d, a, e, h, g, i], is_dual)
    } else {
        select_2625([b, a, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4276([c, b, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_3817([b, c, d, g, f, i, a, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4278([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_482([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_2939([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1462([a, f, b, d, e, h, g, i, j], is_dual)
    } else {
        select_4278([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4274([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4275([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4277([a, c, d, b, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4282([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_140([f, g, d, e, a, h, j, k], is_dual)
    } else {
        select_520([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4281([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([a, f, c, d, g, i, h], is_dual)
    } else {
        select_4282([a, b, e, c, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4280([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_478([a, f, b, c, h, i, k, g], is_dual)
    } else {
        select_4281([a, d, b, c, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4283([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1311([a, g, b, f, c, d, i, k, h], is_dual)
    } else {
        select_2725([a, c, d, e, b, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4279([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4280([b, c, f, d, e, g, i, h, a, j, k], is_dual)
    } else {
        select_4283([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4273([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_4274([a, b, e, f, d, g, h, i, c, j, k], is_dual)
    } else {
        select_4279([a, b, d, e, f, c, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4246([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4247([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_4273([c, d, b, a, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4206([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_4207([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_4246([b, c, d, a, f, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4290([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_74([b, f, c, d, e, g, h], is_dual)
    } else {
        select_846([f, h, i, j, a, b, g, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4291([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1666([f, g, i, j, k, a, h, b, d, e], !is_dual)
    } else {
        select_405([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4289([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4290([a, g, i, j, k, f, h, b, d, e], !is_dual)
    } else {
        select_4291([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4288([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4289([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_281([a, f, i, j, k, g, b, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4294([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4069([g, j, i, f, b, h, a, c, e], !is_dual)
    } else {
        select_4069([f, i, j, g, a, h, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4293([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_119([f, b, c, e, a, g, h, j], is_dual)
    } else {
        select_4294([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4297([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_82([a, h, b, e, i], is_dual)
    } else {
        select_2596([a, c, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_519([b, a, d, e, c, f, h, g, i], is_dual)
    } else {
        select_4297([a, b, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_921([b, a, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_214([f, i, e, j, h, a, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4296([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4298([b, g, d, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4292([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4293([f, i, l, m, g, a, b, j, c, h], !is_dual)
    } else {
        select_4295([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_4287([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4288([f, g, l, m, j, a, b, i, d, e, h], !is_dual)
    } else {
        select_4292([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4301([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1468([g, i, f, j, a, b, h, c, d], !is_dual)
    } else {
        select_143([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_61([h, a, c, i, j], is_dual)
    } else {
        select_803([b, a, d, f, e, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4305([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_294([a, b, c, d, g, i, h, j], is_dual)
    } else {
        select_487([b, d, e, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_4303([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4304([b, a, d, c, h, g, i, f, j, k], is_dual)
    } else {
        select_4305([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4307([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([e, b, c, d, f, g, h], is_dual)
    } else {
        select_1586([e, i, h, j, f, a, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4306([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4307([a, d, b, c, e, f, g, i, h, j], is_dual)
    } else {
        select_386([e, i, g, f, h, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4303([b, c, d, e, a, f, h, g, i, j, k], is_dual)
    } else {
        select_4306([b, c, e, g, f, a, h, j, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_4300([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4301([a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_4302([j, k, l, h, m, a, f, g, c, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4309([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1084([b, a, f, d, e, g, h, j, i, k], is_dual)
    } else {
        select_32([b, c, a, i, j, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_4312([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_85([b, c, d, f, g, e], is_dual)
    } else {
        select_122([a, b, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4313([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1586([f, h, d, i, g, a, b, e], !is_dual)
    } else {
        select_188([f, g, h, d, b, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4311([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4312([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_4313([a, b, d, g, h, f, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4311([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_644([e, d, c, a, f, h, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4308([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4309([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_4310([i, k, l, g, a, f, b, j, h, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4299([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4300([a, c, b, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_4308([a, b, c, d, e, f, h, i, j, k, l, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_4286([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4287([g, j, f, l, m, a, h, i, k, c, e, b, d], !is_dual)
    } else {
        select_4299([g, j, i, l, m, f, h, a, k, c, b, d, e], !is_dual)
    }
}
/// n = 7, i = 2
fn select_4319([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_77([a, b, c, d, e, f, g], is_dual)
    } else {
        select_82([d, e, c, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_4318([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2107([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_4319([a, b, f, d, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4317([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4318([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_3163([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1683([f, a, b, d, i, g, e, h, j], is_dual)
    } else {
        select_1683([e, a, c, d, i, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4316([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4317([f, b, g, d, a, h, e, i, j], is_dual)
    } else {
        select_4320([b, a, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4324([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, d, c, f, e, g, h], is_dual)
    } else {
        select_188([f, i, g, e, a, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4323([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_102([g, i, j, a, e, h, b], !is_dual)
    } else {
        select_4324([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4325([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_67([b, a, d, h, f, g], is_dual)
    } else {
        select_156([i, h, b, g, a, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4322([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4323([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_4325([f, i, k, j, g, e, a, b, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4328([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_65([a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_529([a, b, h, e, g, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4327([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4328([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_3478([b, g, c, e, a, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4326([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4327([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_247([e, b, a, g, h, j, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4321([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4322([h, e, k, l, f, a, i, j, b, c, g], !is_dual)
    } else {
        select_4326([b, a, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4315([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_4316([b, c, a, e, g, f, d, h, i, j], is_dual)
    } else {
        select_4321([b, c, d, e, g, a, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4314([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2497([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_4315([a, c, d, e, f, g, h, i, b, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4285([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_4286([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4314([f, g, j, l, m, i, a, h, b, k, d, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4284([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4285([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4285([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4205([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4206([a, l, f, m, n, i, k, g, b, h, c, j], !is_dual)
    } else {
        select_4284([a, f, b, d, h, e, i, g, k, l, j, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_4337([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_61([a, f, g, b, h], is_dual)
    } else {
        select_314([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4338([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1267([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1267([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4336([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_4337([e, f, i, j, a, b, h, g], !is_dual)
    } else {
        select_4338([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4340([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_111([d, h, i, a, b, g, e], !is_dual)
    } else {
        select_487([d, b, c, f, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_4339([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_67([d, e, c, b, f, g], is_dual)
    } else {
        select_4340([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4335([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_4336([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4339([a, b, g, e, f, c, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4343([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_361([f, d, h, a, b, g, e], !is_dual)
    } else {
        select_122([b, d, c, f, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_4342([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_67([d, e, c, a, f, g], is_dual)
    } else {
        select_4343([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4344([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, e, c, d, f, g, h], is_dual)
    } else {
        select_1452([a, b, g, e, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4341([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_4342([a, b, g, e, f, c, h, i], is_dual)
    } else {
        select_4344([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4334([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4335([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_4341([c, a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4347([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_265([a, d, b, e, c, f, g, h], is_dual)
    } else {
        select_1524([a, d, c, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4347([a, b, f, c, e, g, h, i, j], is_dual)
    } else {
        select_519([c, e, a, b, d, g, h, i, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_4345([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3244([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_4346([a, b, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4333([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4334([h, j, a, l, b, c, k, f, i, g], !is_dual)
    } else {
        select_4345([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4351([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2542([g, d, j, k, e, h, i, b, f], !is_dual)
    } else {
        select_1630([g, h, j, k, d, e, i, f, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4350([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_175([e, i, d, j, k, a, b, g], !is_dual)
    } else {
        select_4351([b, a, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4354([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_451([h, i, j, k, d, g, e, f, b, c], !is_dual)
    } else {
        select_3498([h, j, k, e, d, g, f, a, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4355([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_153([h, g, a, e, f, b, c], !is_dual)
    } else {
        select_153([h, g, a, e, f, b, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4354([a, b, c, e, d, f, h, i, g, j, k], is_dual)
    } else {
        select_4355([e, d, j, k, g, h, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4352([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4353([b, a, c, e, d, f, h, g, i, j, k], is_dual)
    } else {
        select_175([e, h, d, j, k, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4349([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4350([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4352([a, c, d, b, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4358([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1364([f, i, j, h, g, a, b, d, e], !is_dual)
    } else {
        select_650([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4357([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4358([g, a, i, j, k, b, h, e, c, f], !is_dual)
    } else {
        select_1606([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_4356([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1426([a, j, l, m, f, k, h, i, b, c], !is_dual)
    } else {
        select_4357([a, g, l, m, h, k, f, i, b, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4348([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_4349([a, b, f, e, c, g, i, h, j, k, l], is_dual)
    } else {
        select_4356([a, j, m, k, l, h, b, f, i, d, g, c, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4332([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4333([a, b, c, e, d, g, f, h, j, k, i, l], is_dual)
    } else {
        select_4348([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4331([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4019([a, i, j, m, n, k, l, f, h, b, c, d, g], !is_dual)
    } else {
        select_4332([a, i, j, n, m, l, k, f, g, b, d, h, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4364([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_710([h, j, k, g, e, a, b, i], !is_dual)
    } else {
        select_187([a, e, c, d, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4365([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_491([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_405([e, i, j, g, k, a, b, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4363([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_4364([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4365([e, a, b, d, h, f, g, k, l, m, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_4368([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_292([a, c, b, e, d, f, g], is_dual)
    } else {
        select_83([c, d, e, b, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_4367([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_170([e, h, g, f, a, c, d], !is_dual)
    } else {
        select_4368([a, c, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4370([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_238([b, c, d, e, f, g, h], is_dual)
    } else {
        select_252([a, h, i, j, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4369([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_468([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_4370([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_4367([f, g, i, j, a, b, c, h], !is_dual)
    } else {
        select_4369([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_4362([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4363([a, b, c, d, e, f, g, h, j, k, i, m, l], is_dual)
    } else {
        select_4366([h, g, l, m, j, e, a, f, d, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_192([c, e, a, d, g, f], is_dual)
    } else {
        select_675([a, b, c, f, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4372([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4373([a, c, b, d, e, f, g, i, j, h], is_dual)
    } else {
        select_323([e, a, b, d, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4376([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_700([b, e, d, a, f, g, h], is_dual)
    } else {
        select_1774([b, a, c, d, f, e, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4377([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_581([g, b, c, e, f, j, i], is_dual)
    } else {
        select_154([g, h, k, d, e, i, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4375([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4376([a, d, b, g, e, i, h, j, k], is_dual)
    } else {
        select_4377([b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4379([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_624([g, h, j, f, i, e, a, c, d], !is_dual)
    } else {
        select_213([f, a, b, h, e, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4380([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_61([h, a, b, e, i], is_dual)
    } else {
        select_235([e, a, c, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4378([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4379([a, b, c, g, e, f, h, i, j, k], is_dual)
    } else {
        select_4380([a, b, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_4374([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4375([a, b, g, c, e, i, f, j, h, k, l, m], is_dual)
    } else {
        select_4378([a, b, f, d, e, h, g, j, i, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_4371([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_4372([j, l, m, h, i, e, f, a, k, b], !is_dual)
    } else {
        select_4374([b, c, a, d, f, e, g, h, i, j, m, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_4361([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4362([a, g, b, c, e, f, j, h, k, l, m, n, i], is_dual)
    } else {
        select_4371([b, a, d, c, e, g, f, h, i, j, l, m, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4385([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_581([a, b, d, e, h, g, j], is_dual)
    } else {
        select_581([a, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4384([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2228([d, h, j, f, g, a, c], !is_dual)
    } else {
        select_4385([d, j, k, f, g, i, e, h, b, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4386([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_580([a, c, b, e, g, h, i, f, j], is_dual)
    } else {
        select_250([a, b, f, d, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_4383([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4384([g, a, b, d, f, i, h, e, j, k, l], is_dual)
    } else {
        select_4386([d, e, a, c, f, h, g, i, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4389([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_292([f, i, j, a, b, c, g], !is_dual)
    } else {
        select_1010([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4390([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_213([f, i, j, a, b, g, d], !is_dual)
    } else {
        select_644([b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4389([h, g, j, k, i, d, f, a, e, c], !is_dual)
    } else {
        select_4390([g, j, k, h, i, d, e, a, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4392([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_381([c, b, a, f, d, g, e, h], is_dual)
    } else {
        select_213([d, g, i, a, e, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4391([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1475([f, j, g, k, i, d, h, e, a, c], !is_dual)
    } else {
        select_4392([f, h, k, d, g, i, a, b, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4387([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4388([g, c, a, h, f, e, d, j, i, k, l], is_dual)
    } else {
        select_4391([j, l, k, i, h, e, d, f, g, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4382([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4383([d, c, a, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_4387([c, d, b, e, f, a, g, h, j, i, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_4396([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, c, a, e, f, d, g], is_dual)
    } else {
        select_325([a, b, c, d, e, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4395([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4396([h, d, i, e, f, g, b, a], !is_dual)
    } else {
        select_199([h, f, i, e, d, g, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4397([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1208([e, f, g, i, h, d, a, c], !is_dual)
    } else {
        select_186([f, d, i, g, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4394([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4395([i, g, j, a, h, b, f, e, c], !is_dual)
    } else {
        select_4397([i, h, j, g, a, b, f, e, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4400([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2596([a, c, d, g, f, h, j], is_dual)
    } else {
        select_186([h, i, j, a, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4399([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_265([a, b, d, c, f, e, h, g], is_dual)
    } else {
        select_4400([a, d, b, c, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4402([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_111([a, c, d, g, i, f, h], is_dual)
    } else {
        select_186([h, j, i, a, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4155([b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_4402([i, k, h, j, g, e, b, a, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4398([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4399([b, c, e, d, h, f, g, i, j, k], is_dual)
    } else {
        select_4401([h, i, k, l, e, j, f, a, b, g, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4393([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4394([a, c, f, e, g, k, i, j, h, n], is_dual)
    } else {
        select_4398([b, a, c, d, g, f, h, j, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4381([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4382([a, d, f, e, h, b, g, k, j, i, m, l], is_dual)
    } else {
        select_4393([a, c, d, e, b, g, f, i, j, h, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4360([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4361([b, c, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_4381([b, a, c, d, e, f, h, i, g, j, k, l, n, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_463([a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_86([a, j, f, k, b, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_580([a, i, k, g, j, b, h, c, d], !is_dual)
    } else {
        select_186([a, d, e, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4410([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_141([a, g, i, j, h, b], !is_dual)
    } else {
        select_551([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4409([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4410([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_76([e, c, d, a, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_4407([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4408([a, c, b, d, e, g, f, i, h, j, m], is_dual)
    } else {
        select_4409([a, f, d, e, b, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4405([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4406([a, j, k, g, m, i, l, b, f, c, h], !is_dual)
    } else {
        select_4407([a, g, j, k, m, i, l, b, h, f, d, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4412([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_570([a, g, i, l, e, k, b, c, h], !is_dual)
    } else {
        select_579([a, b, e, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_4414([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_192([g, h, b, c, e, f], is_dual)
    } else {
        select_22([a, e, f, d, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4413([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2226([c, b, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4414([c, a, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4411([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_4412([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4413([a, c, e, b, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4404([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4405([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    } else {
        select_4411([a, b, d, e, c, f, g, h, j, k, i, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4416([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1633([a, c, d, e, b, f, g, i, h, j, k], is_dual)
    } else {
        select_837([a, f, h, e, b, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4418([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_509([a, b, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_1464([a, b, c, i, j, f, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4419([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2160([a, g, j, k, f, i, b, h, c, e], !is_dual)
    } else {
        select_4365([f, g, j, k, a, i, b, h, c, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4417([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4418([a, h, k, g, m, j, l, b, f, c, i], !is_dual)
    } else {
        select_4419([a, b, d, f, e, g, h, i, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4415([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4416([a, b, d, f, e, h, g, j, i, k, m], is_dual)
    } else {
        select_4417([a, b, c, d, g, f, h, i, k, l, n, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4403([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4404([a, b, c, d, g, h, i, k, f, l, m, j, n], is_dual)
    } else {
        select_4415([a, b, c, e, d, h, f, i, j, k, g, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4359([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4360([a, b, c, d, e, f, h, g, i, l, k, m, n, j], is_dual)
    } else {
        select_4403([a, b, c, e, d, g, h, f, i, l, j, m, n, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_4330([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4331([a, b, e, d, c, h, f, i, j, k, g, m, l, n], is_dual)
    } else {
        select_4359([a, b, c, e, d, h, g, i, j, k, f, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_4426([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_638([a, b, c, f, g, e, h, i], is_dual)
    } else {
        select_1448([a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_71([g, a, e, d, i, f], is_dual)
    } else {
        select_1289([a, b, c, f, h, g, i, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_4429([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_88([f, a, c, i, g, e, j], is_dual)
    } else {
        select_88([e, b, d, h, g, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4427([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4428([b, d, e, c, h, g, f, i, j], is_dual)
    } else {
        select_4429([a, b, f, c, e, g, j, h, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_4425([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4426([a, e, f, d, h, g, j, l, m], is_dual)
    } else {
        select_4427([b, a, g, c, e, f, i, h, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4432([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_451([a, f, c, d, e, g, i, h, j, k], is_dual)
    } else {
        select_103([j, k, e, f, a, h, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4431([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_531([a, d, b, c, e, f, g, h, i, j], is_dual)
    } else {
        select_4432([a, d, b, c, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4434([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_111([d, g, h, a, f, e, b], !is_dual)
    } else {
        select_487([d, b, c, e, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_4433([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3160([a, c, d, b, e, f, h, i, g, j, k], is_dual)
    } else {
        select_4434([a, d, g, h, f, b, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4430([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4431([a, b, g, c, e, f, j, i, k, l, h], is_dual)
    } else {
        select_4433([f, b, a, d, e, g, h, k, j, l, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_4424([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4425([a, b, d, c, f, h, g, j, e, k, i, l, m], is_dual)
    } else {
        select_4430([b, c, d, a, f, h, e, j, i, g, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_4438([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_626([b, a, d, h, g, e, k, j], is_dual)
    } else {
        select_1617([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4437([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2930([b, e, c, d, f, h, g, j, i, l], is_dual)
    } else {
        select_4438([b, a, d, g, f, h, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4436([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_2268([i, a, b, g, f, k, l, e], is_dual)
    } else {
        select_4437([b, a, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_4440([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4072([a, b, c, e, g, f, i, j, h, k], is_dual)
    } else {
        select_241([a, b, d, e, h, i, g, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4442([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_499([a, b, c, e, f, h, i, j], is_dual)
    } else {
        select_216([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4443([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_122([b, f, d, h, e, g], is_dual)
    } else {
        select_1165([a, b, c, e, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4441([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4442([i, j, k, l, e, h, a, g, f, d], !is_dual)
    } else {
        select_4443([e, b, c, d, f, i, h, g, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_4439([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4440([a, f, d, c, e, h, g, k, i, j, l], is_dual)
    } else {
        select_4441([a, b, g, d, e, h, f, i, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_4435([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4436([a, c, d, b, e, g, h, f, i, k, l, j], is_dual)
    } else {
        select_4439([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_4423([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4424([c, d, a, e, f, g, b, h, i, j, l, k, m], is_dual)
    } else {
        select_4435([c, d, b, e, f, g, a, h, j, k, i, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4448([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, e, c, d, f, g, h], is_dual)
    } else {
        select_940([h, e, j, f, i, a, g, c, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4449([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_499([a, b, c, d, e, f, g, i], is_dual)
    } else {
        select_763([d, h, i, g, f, e, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4447([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4448([b, c, d, a, e, g, f, h, i, k], is_dual)
    } else {
        select_4449([b, d, f, e, a, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4450([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1364([a, b, c, g, e, h, i, f, j], is_dual)
    } else {
        select_214([a, b, e, d, f, i, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_4446([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4447([h, i, l, j, a, k, e, b, g, f, d], !is_dual)
    } else {
        select_4450([a, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4453([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_361([f, g, h, a, b, e, d], !is_dual)
    } else {
        select_122([a, c, d, f, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4452([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4453([f, g, h, i, d, a, b, e], !is_dual)
    } else {
        select_2596([a, c, d, f, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4454([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_67([h, f, j, a, e, c], !is_dual)
    } else {
        select_2999([b, c, d, f, e, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4451([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_4452([a, e, d, b, f, g, h, j, i], is_dual)
    } else {
        select_4454([h, g, k, j, i, a, e, c, f, b, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4445([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4446([a, b, c, d, e, f, g, i, h, j, k, m], is_dual)
    } else {
        select_4451([b, f, a, d, h, g, e, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4457([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_638([a, e, b, c, h, i, g, j], is_dual)
    } else {
        select_1127([a, b, d, f, e, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4459([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_381([b, e, c, d, f, g, h, i], is_dual)
    } else {
        select_32([a, g, c, f, e, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4458([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4459([a, b, d, e, g, f, i, j, l, k], is_dual)
    } else {
        select_199([b, f, c, e, h, g, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4456([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4457([a, c, e, d, f, h, g, i, j, l], is_dual)
    } else {
        select_4458([h, k, j, m, i, l, e, a, f, b, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4462([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_381([b, g, c, d, f, i, j, h], is_dual)
    } else {
        select_88([k, l, g, d, e, h, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4461([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4462([b, a, c, d, e, f, g, i, j, l, k, h], is_dual)
    } else {
        select_1535([a, e, c, d, g, f, h, j, l, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_4465([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([c, d, b, e, g, f], is_dual)
    } else {
        select_62([a, f, c, h, d], is_dual)
    }
}
/// n = 9, i = 4
fn select_4464([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_68([a, f, c, h, i], is_dual)
    } else {
        select_4465([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4466([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_213([h, f, g, c, d, e, b], !is_dual)
    } else {
        select_382([c, i, d, f, a, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4463([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_4464([a, b, d, e, f, g, h, c, i], is_dual)
    } else {
        select_4466([h, i, d, e, g, c, f, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4460([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4461([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_4463([a, b, h, d, i, e, j, l, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_4455([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4456([h, k, l, m, e, i, j, b, f, a, c, g, d], !is_dual)
    } else {
        select_4460([c, b, d, f, e, g, a, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4444([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_4445([h, j, k, m, e, i, l, f, a, b, g, c, d], !is_dual)
    } else {
        select_4455([h, j, i, m, e, k, l, a, f, g, b, d, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4422([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4423([b, a, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_4444([b, c, d, h, f, g, i, k, a, j, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_4472([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_212([h, b, a, e, f, i, g, k, j], is_dual)
    } else {
        select_95([g, b, c, d, e, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4471([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_37([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_4472([b, c, d, e, g, f, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4470([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3108([a, j, f, l, h, b, i, g], !is_dual)
    } else {
        select_4471([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4469([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_4048([a, b, e, g, f, h, c, i, j, k], is_dual)
    } else {
        select_4470([a, b, e, c, d, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4474([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_947([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_2792([b, a, c, g, f, h, i, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_4473([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4065([h, g, i, k, a, e, j, b, f, c, d], !is_dual)
    } else {
        select_4474([a, i, h, k, g, e, j, f, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4468([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4469([a, c, d, e, b, g, h, f, j, i, l, k], is_dual)
    } else {
        select_4473([a, k, l, j, g, f, h, c, b, i, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4477([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_732([a, i, h, j, k, e, g, f, b, c], !is_dual)
    } else {
        select_3889([a, b, e, d, g, h, f, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4479([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4137([e, i, j, g, a, h, c, b, f], !is_dual)
    } else {
        select_204([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_4480([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2107([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_2107([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4478([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4479([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_4480([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4476([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4477([a, c, b, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_4478([a, j, i, k, h, e, g, b, d, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4483([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_74([a, f, c, d, e, h, j], is_dual)
    } else {
        select_270([b, c, a, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4484([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_265([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_729([b, a, e, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4482([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4483([a, h, i, j, k, b, g, e, f, c], !is_dual)
    } else {
        select_4484([a, b, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4488([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, b, c, h, j, k], is_dual)
    } else {
        select_129([c, d, e, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4487([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_453([g, d, e, a, f, h, i], is_dual)
    } else {
        select_4488([b, a, c, e, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4486([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2078([a, f, d, e, b, g, h, j, i], is_dual)
    } else {
        select_4487([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4490([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_188([a, e, b, g, h, d, f], is_dual)
    } else {
        select_188([a, d, c, f, h, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4489([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4490([h, g, j, e, i, a, b, c], !is_dual)
    } else {
        select_188([g, i, h, b, c, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4485([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4486([c, a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4489([h, a, j, l, f, k, b, c, i, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4481([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4482([a, e, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4485([a, i, j, l, m, e, k, b, h, f, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4475([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4476([a, b, c, g, e, f, i, j, l, k, h], is_dual)
    } else {
        select_4481([a, b, d, c, e, g, f, h, j, l, i, m, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4467([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4468([a, k, m, l, h, e, i, j, f, b, c, g], !is_dual)
    } else {
        select_4475([a, b, c, d, e, f, g, h, i, k, m, l, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4421([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4422([a, b, c, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_4467([a, k, l, n, g, h, m, f, j, b, c, d, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4496([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_192([b, c, d, g, f, h], is_dual)
    } else {
        select_1236([f, a, e, b, c, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4495([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4496([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_885([c, d, e, g, f, b, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4498([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_192([b, c, d, f, e, g], is_dual)
    } else {
        select_560([e, a, b, c, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4497([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4496([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_4498([g, b, c, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4494([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4495([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_4497([a, c, d, b, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4493([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1439([g, b, c, d, f, h, i, a, j, k], is_dual)
    } else {
        select_4494([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4501([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2753([d, j, h, k, f, e, i, a, b, g], !is_dual)
    } else {
        select_222([d, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4500([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4501([h, k, l, b, g, f, j, a, i, c, e], !is_dual)
    } else {
        select_4501([g, k, l, a, h, f, j, b, i, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4505([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_294([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_700([e, h, f, g, a, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4504([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4505([i, j, k, d, e, a, h, f], !is_dual)
    } else {
        select_1094([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4504([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2354([g, k, e, d, h, i, f, b, a], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4508([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_122([a, b, c, g, h, i], is_dual)
    } else {
        select_53([c, b, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_4507([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2452([i, k, l, g, f, j, b, a, c, h], !is_dual)
    } else {
        select_4508([b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4509([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_3171([h, j, g, k, e, d, i, a, b, f], !is_dual)
    } else {
        select_639([e, a, c, d, h, g, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4506([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4507([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4509([k, i, l, a, f, j, g, b, h, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4502([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4503([f, k, l, h, g, j, a, b, i, c, d], !is_dual)
    } else {
        select_4506([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4499([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4500([a, f, k, m, l, g, h, b, j, i, c, d], !is_dual)
    } else {
        select_4502([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4492([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4493([a, h, f, l, m, b, g, j, k, c, i], !is_dual)
    } else {
        select_4499([a, h, j, l, m, b, f, g, k, i, c, d, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4514([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_560([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_560([a, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_4513([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_748([g, k, l, m, h, a, b, i, d, f], !is_dual)
    } else {
        select_4514([a, c, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_4517([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_21([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_99([b, g, e, a, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4516([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1956([b, f, c, a, e, h, g, i], is_dual)
    } else {
        select_4517([b, c, a, d, e, g, f, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_4515([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4516([a, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_748([h, k, l, m, g, a, b, j, c, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4512([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4513([a, f, b, d, e, h, i, g, k, j, l, m, n], is_dual)
    } else {
        select_4515([a, g, b, c, e, h, f, j, i, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_4522([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_62([a, c, d, g, i], is_dual)
    } else {
        select_62([b, c, e, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4521([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_216([b, e, c, d, g, f, h], is_dual)
    } else {
        select_4522([g, j, i, e, h, a, b, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4523([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_381([h, j, k, f, i, a, b, c], !is_dual)
    } else {
        select_53([b, c, d, e, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4520([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4521([b, c, d, g, f, a, h, i, j, k], is_dual)
    } else {
        select_4523([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4519([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1599([a, b, c, d, f, h, i, g, j], is_dual)
    } else {
        select_4520([b, c, d, e, a, f, g, i, h, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4525([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_565([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_812([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_4526([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_565([a, b, d, f, g, i, j, h], is_dual)
    } else {
        select_1518([a, c, e, b, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4524([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4525([a, b, c, i, g, h, f, j], is_dual)
    } else {
        select_4526([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4518([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4519([b, a, d, c, h, g, i, f, k, j, l], is_dual)
    } else {
        select_4524([a, b, d, f, e, g, j, i, h, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_4511([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_4512([a, b, c, d, e, f, g, h, j, k, l, m, n, i], is_dual)
    } else {
        select_4518([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_4529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_811([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_748([g, i, j, f, k, a, b, h, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4528([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4529([a, b, d, e, g, f, i, h, k, l, j], is_dual)
    } else {
        select_3175([f, j, k, l, i, a, b, g, c, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4527([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4528([a, b, c, d, e, f, h, i, g, j, k, m], is_dual)
    } else {
        select_4528([a, c, b, d, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_4510([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4511([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_4527([a, j, k, m, n, f, g, h, l, b, i, c, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4491([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4492([a, g, b, c, e, f, h, j, k, m, i, n, l], is_dual)
    } else {
        select_4510([a, c, d, e, b, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4420([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_4421([a, b, d, e, c, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_4491([a, c, b, d, e, f, g, h, i, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4329([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4330([a, d, e, f, b, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_4420([a, d, e, f, c, g, h, b, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4204([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_4205([a, c, e, d, f, g, h, i, j, k, l, m, b, n], is_dual)
    } else {
        select_4329([a, c, b, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1378([a, b, e, c, f, d, g, h, i, j], is_dual)
    } else {
        select_1378([a, b, e, d, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4540([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_215([i, j, k, a, b, h], !is_dual)
    } else {
        select_63([c, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_4541([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_205([a, b, i, g, j, k], is_dual)
    } else {
        select_63([c, d, e, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4539([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4540([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_4541([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4538([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1700([b, a, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_4539([b, c, d, e, f, g, h, a, i, j, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4543([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2889([a, b, c, e, h, f, i, g], is_dual)
    } else {
        select_452([a, b, d, f, g, e, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4545([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_294([f, g, i, h, d, a, b, e], !is_dual)
    } else {
        select_529([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4544([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4545([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_382([h, d, i, g, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4542([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4543([b, a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_4544([b, e, d, a, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_4537([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4538([c, b, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4542([h, j, l, m, a, k, b, c, d, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4546([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1907([a, b, c, d, h, e, i, j], is_dual)
    } else {
        select_2864([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4536([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4537([a, b, c, g, d, e, f, h, j, l, m, i, n], is_dual)
    } else {
        select_4546([h, c, d, e, f, a, g, i, k, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4534([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_4535([h, e, f, g, c, a, i, d, j, k], is_dual)
    } else {
        select_4536([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_4551([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_354([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2474([f, d, e, h, a, g, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4552([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_81([a, d, b, e, g, f], is_dual)
    } else {
        select_452([a, c, b, d, e, f, h, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_4550([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4551([i, h, j, l, m, e, k, a, b, g, d], !is_dual)
    } else {
        select_4552([b, c, d, h, g, f, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4554([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2352([b, d, a, c, f, e, g, h], is_dual)
    } else {
        select_1611([f, h, i, e, a, b, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4555([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_250([a, c, e, d, f, g], is_dual)
    } else {
        select_50([f, h, i, e, a, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4553([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4554([a, b, e, d, h, g, f, j, i], is_dual)
    } else {
        select_4555([a, b, c, f, g, i, e, j, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_4549([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4550([j, k, n, l, h, m, i, a, b, f, g, d, e], !is_dual)
    } else {
        select_4553([k, l, n, h, m, f, a, b, i, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4559([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_51([b, f, c, d, g, j], is_dual)
    } else {
        select_48([h, k, f, j, i, e, b, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4558([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4559([i, h, k, l, e, f, j, a, g, b, d], !is_dual)
    } else {
        select_4559([i, h, k, l, f, e, j, a, g, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4557([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_191([f, h, k, l, e, a, j], !is_dual)
    } else {
        select_4558([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4562([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_685([a, g, h, i], !is_dual)
    } else {
        select_2700([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4563([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1423([e, k, a, h, j, f, b], !is_dual)
    } else {
        select_2495([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4561([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4562([j, i, k, e, a, h, b, c, g], !is_dual)
    } else {
        select_4563([a, d, b, c, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4565([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([b, f, d, a, h], is_dual)
    } else {
        select_499([b, a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4564([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2842([a, c, b, d, f, e, h, g, j, i, k], is_dual)
    } else {
        select_4565([a, g, c, i, f, h, d, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4560([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4561([b, a, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_4564([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_4556([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4557([j, k, l, n, i, f, m, a, b, h, d, e], !is_dual)
    } else {
        select_4560([k, l, n, j, f, m, i, g, a, b, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4548([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4549([a, b, c, d, e, g, h, j, i, k, l, f, m, n], is_dual)
    } else {
        select_4556([b, a, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_4570([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_153([a, b, f, d, g, h, i], is_dual)
    } else {
        select_213([d, a, c, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4569([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1772([f, h, g, i, a, e, d, c], !is_dual)
    } else {
        select_4570([a, c, b, e, g, f, d, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4568([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2410([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4569([b, c, f, e, h, g, a, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3080([a, g, d, f, e, i, h, k], is_dual)
    } else {
        select_2898([d, b, c, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4572([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3895([e, j, k, h, i, a, g, f, d], !is_dual)
    } else {
        select_4573([a, d, b, c, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4575([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1563([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_626([d, i, j, k, a, e, g, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4574([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2269([a, b, d, e, h, i, g, k], is_dual)
    } else {
        select_4575([a, b, c, e, g, f, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4571([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4572([a, c, e, d, b, f, g, h, i, j, l], is_dual)
    } else {
        select_4574([b, c, e, d, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_4568([b, a, f, e, c, g, h, j, i, k], is_dual)
    } else {
        select_4571([a, b, c, d, e, g, f, i, j, h, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4579([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_803([b, c, d, g, f, h, j, i], is_dual)
    } else {
        select_252([k, l, e, m, a], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4578([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3088([c, g, d, a, h, f, j], is_dual)
    } else {
        select_4579([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4580([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_250([g, b, c, e, i, h], is_dual)
    } else {
        select_84([j, k, f, m, a, l, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4577([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4578([j, i, k, m, g, l, f, a, h, b, c, d, e], !is_dual)
    } else {
        select_4580([a, c, d, b, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4582([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_280([a, f, c, d, e, g, h, i], is_dual)
    } else {
        select_560([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4581([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, c, d, e, g, h], is_dual)
    } else {
        select_4582([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_4576([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4577([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_4581([f, g, c, d, e, b, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4566([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4567([f, j, l, k, n, h, m, a, b, g, c, i], !is_dual)
    } else {
        select_4576([a, b, d, e, g, f, h, k, i, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4547([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4548([b, d, c, e, f, g, a, i, j, h, k, l, m, n], is_dual)
    } else {
        select_4566([b, d, a, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4533([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_4534([b, c, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4547([b, c, d, e, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_4588([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_76([b, h, c, f, a, g, i, j, k], is_dual)
    } else {
        select_229([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4587([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4588([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_4588([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4589([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_541([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_1000([a, b, g, d, c, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4586([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_4587([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_4589([a, b, c, e, h, g, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4585([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1192([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4586([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4584([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2164([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_4585([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_4595([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_38([a, g, d, c, f, h, i], is_dual)
    } else {
        select_1563([a, b, d, h, e, f, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4594([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_527([e, c, d, a, f, g, h, i, k], is_dual)
    } else {
        select_4595([b, c, a, d, f, g, h, e, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4597([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_98([c, b, e, h, f, g], is_dual)
    } else {
        select_581([g, a, c, d, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4596([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_203([d, b, c, a, e, f, g, h, i], is_dual)
    } else {
        select_4597([c, d, a, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4593([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4594([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4596([b, a, g, c, i, f, h, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4592([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4593([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_4593([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4598([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_425([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_425([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4592([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4598([b, c, i, d, a, j, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4601([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4540([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_64([b, c, d, e, f, g, a, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4600([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4601([c, b, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1683([g, i, k, l, a, j, b, c, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_4599([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4600([a, b, c, d, e, f, h, i, j, k, l, m], is_dual)
    } else {
        select_4600([a, b, c, d, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4590([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4591([h, a, j, l, n, k, m, b, c, d, i], !is_dual)
    } else {
        select_4599([c, d, b, a, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_4583([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4584([a, c, h, e, f, g, b, i, k, j, l], is_dual)
    } else {
        select_4590([a, c, b, d, e, f, g, h, j, l, m, n, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_4532([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4533([a, b, d, e, f, c, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_4583([a, b, c, d, f, g, e, h, i, k, l, n, j, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4608([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_948([a, b, c, d, f, g, e, h, j], is_dual)
    } else {
        select_948([b, c, d, a, g, e, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4609([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1514([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_199([e, d, c, a, g, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4607([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4608([a, f, b, d, h, e, g, j, i, k], is_dual)
    } else {
        select_4609([a, b, c, g, e, f, i, j, h, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4611([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1095([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_1095([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4610([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1734([b, c, d, a, e, h, g, f, i], is_dual)
    } else {
        select_4611([b, c, f, e, h, a, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4606([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4607([a, c, b, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_4610([a, c, b, g, f, i, h, j, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_4615([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1534([g, h, i, k, j, d, e, a, b, f], !is_dual)
    } else {
        select_2700([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4614([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4615([h, j, l, e, i, k, a, b, f, g, d], !is_dual)
    } else {
        select_3058([a, c, b, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4617([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_111([h, g, j, d, f, e, c], !is_dual)
    } else {
        select_381([a, b, e, d, g, h, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_4616([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_718([d, e, c, a, f, g, h, i], is_dual)
    } else {
        select_4617([b, a, c, d, f, e, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4613([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4614([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_4616([j, i, l, a, e, k, f, h, b, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4619([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2363([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_718([a, c, d, b, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4621([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4196([a, d, b, f, e, h, i, j, g, k], is_dual)
    } else {
        select_4100([b, d, c, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4620([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4621([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_4615([h, j, l, e, i, k, a, b, f, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4618([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4619([a, j, e, l, k, i, f, b], !is_dual)
    } else {
        select_4620([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4612([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4613([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4618([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4605([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4606([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_4612([a, c, d, e, b, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_4625([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_250([e, c, d, f, h, g], is_dual)
    } else {
        select_710([e, i, f, k, j, a, b, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4626([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_444([a, f, g, c, d], !is_dual)
    } else {
        select_4095([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4624([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4625([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4626([e, f, c, d, b, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4629([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_167([b, c, d, e, g, h, i, f], is_dual)
    } else {
        select_213([a, b, f, g, d, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4630([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_111([h, g, j, a, f, e, c], !is_dual)
    } else {
        select_940([b, a, e, d, g, h, i, f, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4628([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4629([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_4630([h, i, k, d, j, e, g, a, f, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4627([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2919([i, d, k, e, g, j, h, a, b, f], !is_dual)
    } else {
        select_4628([i, g, k, e, d, j, h, b, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4623([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4624([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_4627([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4634([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_719([i, l, f, j, a, c, d], !is_dual)
    } else {
        select_562([b, c, d, e, g, h, i, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_4635([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_68([a, e, c, f, g], is_dual)
    } else {
        select_98([a, b, c, d, e, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_4633([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4634([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_4635([f, l, a, h, j, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4637([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_213([h, j, k, a, b, i, f], !is_dual)
    } else {
        select_53([g, e, c, d, f, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_4636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4637([i, j, h, l, m, k, a, f, g, b, e], !is_dual)
    } else {
        select_174([a, f, m, h, k, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4632([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4633([a, d, b, c, e, f, h, i, g, k, j, m], is_dual)
    } else {
        select_4636([a, d, b, c, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_4640([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_141([f, h, d, i, b, g], !is_dual)
    } else {
        select_215([a, c, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_4639([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4640([b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_84([i, j, h, k, a, e, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4642([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_453([b, c, a, e, f, h, i], is_dual)
    } else {
        select_487([a, d, e, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4641([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_531([a, d, b, c, e, f, g, h, i, k], is_dual)
    } else {
        select_4642([b, a, f, c, e, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4638([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4639([a, b, f, d, g, h, e, j, i, k, l], is_dual)
    } else {
        select_4641([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4631([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4632([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_4638([a, d, c, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4622([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4623([b, a, c, d, f, h, i, j, g, l, m], is_dual)
    } else {
        select_4631([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4604([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_4605([f, h, j, g, m, k, l, a, b, c, i, d], !is_dual)
    } else {
        select_4622([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_4648([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_51([b, f, c, d, g, h], is_dual)
    } else {
        select_48([h, f, j, k, e, i, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4647([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4648([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4648([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4646([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4347([e, f, i, j, k, a, b, h, g], !is_dual)
    } else {
        select_4647([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4645([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4646([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1903([j, k, e, f, a, i, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4651([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_257([c, d, e, b, h, f, g], is_dual)
    } else {
        select_1143([a, b, f, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4650([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4651([a, b, e, c, f, d, g, h, i, j, k], is_dual)
    } else {
        select_4651([a, b, e, d, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 1
fn select_4653([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_257([a, d, e, b, c, f, g], is_dual)
    } else {
        select_257([c, d, e, b, a, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4654([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_192([h, i, f, j, a, b], !is_dual)
    } else {
        select_280([b, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4652([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4653([c, d, e, b, f, g, h], is_dual)
    } else {
        select_4654([a, b, c, d, e, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4649([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4650([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_4652([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4644([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_4645([a, b, d, e, g, h, i, j, c, k, l], is_dual)
    } else {
        select_4649([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4643([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1658([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_4644([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4603([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4604([b, c, d, e, f, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_4643([c, b, d, a, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4660([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_205([f, d, e, a, g, i], is_dual)
    } else {
        select_772([b, a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4659([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3143([a, d, b, c, e, f, h, g, i], is_dual)
    } else {
        select_4660([a, b, c, d, e, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4662([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_469([a, e, c, d, f, h, i, g, k, l], is_dual)
    } else {
        select_965([b, c, e, a, d, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4661([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1803([a, h, e, g, b, f, i, j, l], is_dual)
    } else {
        select_4662([a, c, b, d, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4658([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4659([c, a, d, b, f, j, h, i, l, g], is_dual)
    } else {
        select_4661([a, b, c, d, e, f, h, g, j, k, l, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4665([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1364([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_188([a, e, b, g, f, h, d], is_dual)
    }
}
/// n = 12, i = 5
fn select_4667([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_100([b, a, d, e, g, j, h, l], is_dual)
    } else {
        select_702([i, l, g, k, j, a, h, b, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4668([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_98([h, i, a, e, g, f], !is_dual)
    } else {
        select_77([a, c, b, d, f, e, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_4666([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4667([g, j, m, h, l, k, e, i, a, f, c, b], !is_dual)
    } else {
        select_4668([a, c, d, g, h, e, k, i, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4664([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4665([e, g, d, a, f, j, i, k, h], is_dual)
    } else {
        select_4666([b, d, a, c, e, f, i, h, g, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_4670([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2663([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_3164([h, j, k, e, i, a, b, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4672([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_98([b, c, d, f, e, g], is_dual)
    } else {
        select_32([g, f, h, d, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4671([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3160([a, d, c, b, f, e, h, g, i, j, k], is_dual)
    } else {
        select_4672([a, g, d, b, f, j, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4669([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4670([j, h, i, l, g, a, k, b, e, f, c], !is_dual)
    } else {
        select_4671([a, b, d, c, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4663([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4664([b, a, c, d, e, f, h, j, i, g, k, l, m], is_dual)
    } else {
        select_4669([a, b, d, c, f, e, g, i, j, h, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4657([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4658([a, c, b, d, e, g, h, f, j, i, k, l], is_dual)
    } else {
        select_4663([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4677([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_381([b, e, c, d, f, g, h, j], is_dual)
    } else {
        select_382([a, c, g, f, e, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4678([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_292([a, b, g, e, d, i, k], is_dual)
    } else {
        select_1231([b, d, c, e, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4676([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4677([b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_4678([a, b, c, g, f, e, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4675([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4676([k, l, m, g, h, j, i, a, e, b, f, c], !is_dual)
    } else {
        select_4079([l, m, i, g, h, j, a, b, e, f, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4681([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_65([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_103([b, g, e, a, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4680([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_565([e, a, b, d, f, h, j, g], is_dual)
    } else {
        select_4681([b, c, a, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4682([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3160([a, b, d, c, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3115([g, c, d, a, h, f, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4679([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4680([b, a, c, f, e, g, i, j, k, l], is_dual)
    } else {
        select_4682([a, c, b, d, e, f, g, h, i, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4674([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4675([a, b, c, d, e, f, g, j, h, k, i, l, m], is_dual)
    } else {
        select_4679([b, a, c, d, e, f, g, j, i, k, h, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4686([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_451([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_52([f, c, d, a, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4685([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_166([a, c, f, e, b, g, h, i, j], is_dual)
    } else {
        select_4686([a, c, b, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4684([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2884([b, a, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_4685([a, c, b, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4689([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_212([f, k, l, g, i, a, b, h, d], !is_dual)
    } else {
        select_95([c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4688([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4689([b, c, d, a, e, g, f, h, k, i, j, l], is_dual)
    } else {
        select_2344([c, d, f, e, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4691([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_71([f, j, k, d, a, h], !is_dual)
    } else {
        select_1289([c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4690([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4629([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_4691([a, b, c, d, e, g, h, i, j, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4687([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4688([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4690([g, j, l, i, k, a, b, f, h, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4683([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4684([a, c, b, d, f, h, i, j, k, l, m], is_dual)
    } else {
        select_4687([b, a, c, d, e, f, g, h, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4673([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4674([j, k, l, n, h, m, f, b, a, g, i, c, d], !is_dual)
    } else {
        select_4683([a, b, g, c, e, h, j, i, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4656([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4657([f, j, l, h, n, k, m, g, a, b, c, i, d], !is_dual)
    } else {
        select_4673([a, b, d, c, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4695([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_290([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_223([a, b, c, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4694([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4695([a, b, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_4695([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4698([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1070([b, c, d, e, f, g, h], is_dual)
    } else {
        select_2768([e, f, h, i, g, a, c, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4700([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_252([b, c, a, h, j], is_dual)
    } else {
        select_252([e, f, d, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4699([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4700([a, b, c, f, d, e, g, h, i, j], is_dual)
    } else {
        select_1073([d, e, g, f, a, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_4697([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4698([b, c, d, h, a, j, g, k, l], is_dual)
    } else {
        select_4699([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4696([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_4697([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3686([a, b, e, f, d, g, c, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_4693([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4694([b, c, d, a, f, h, g, i, k, j], is_dual)
    } else {
        select_4696([g, b, a, e, c, d, h, j, k, l, m, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4706([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, c, d, g, f, j], is_dual)
    } else {
        select_62([b, d, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4705([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_61([g, b, d, i, f], is_dual)
    } else {
        select_4706([g, k, i, j, h, e, f, a, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4704([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3639([a, b, i, c, k], is_dual)
    } else {
        select_4705([j, i, l, k, g, h, b, f, c, e, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4708([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([a, b, c, f, h, g], is_dual)
    } else {
        select_951([a, g, d, e, i, j, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_4707([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1124([h, l, a, b, i, c, d], !is_dual)
    } else {
        select_4708([d, a, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4703([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4704([a, b, d, e, c, f, i, h, g, j, k, l], is_dual)
    } else {
        select_4707([a, b, d, c, e, f, g, i, h, j, l, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_4711([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_167([a, c, b, d, e, g, h, f], is_dual)
    } else {
        select_39([a, e, f, b], is_dual)
    }
}
/// n = 12, i = 5
fn select_4712([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_88([a, d, e, h, f, k, l], is_dual)
    } else {
        select_1720([j, h, l, i, g, a, d, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4710([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4711([c, d, f, h, a, i, g, j], is_dual)
    } else {
        select_4712([b, c, d, a, e, f, g, j, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4709([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3001([b, c, d, a, i, h, k, g], is_dual)
    } else {
        select_4710([a, d, b, c, e, f, g, i, k, j, l, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_4702([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4703([b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4709([a, b, c, d, f, g, j, h, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4715([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_974([a, b, f, c, h, g, e, i], is_dual)
    } else {
        select_629([a, b, e, d, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_4717([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_38([a, c, d, b, e, g, f], is_dual)
    } else {
        select_61([a, c, f, b, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4716([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4717([a, f, b, c, e, h, i, g], is_dual)
    } else {
        select_1750([a, d, c, b, f, e, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4714([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4715([a, d, e, b, f, c, g, h, i], is_dual)
    } else {
        select_4716([a, d, e, c, f, b, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_4719([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_67([a, c, d, f, g, e], is_dual)
    } else {
        select_3304([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4720([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1093([c, b, g, a, f, i, h], is_dual)
    } else {
        select_4508([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4718([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4719([a, d, c, f, b, g, i, h], is_dual)
    } else {
        select_4720([a, c, d, e, b, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4713([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4714([b, c, a, e, d, g, h, i, f], is_dual)
    } else {
        select_4718([b, c, e, d, a, f, h, i, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_4701([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4702([a, c, d, b, e, f, g, i, h, j, l, k, m], is_dual)
    } else {
        select_4713([a, c, d, h, e, i, b, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_4692([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4693([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_4701([a, b, c, d, f, e, h, i, j, k, g, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4655([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4656([b, c, e, d, f, g, h, i, j, k, a, l, m, n], is_dual)
    } else {
        select_4692([b, c, a, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4602([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_4603([a, h, b, c, e, d, i, g, k, l, n, j, m], is_dual)
    } else {
        select_4655([a, d, e, b, f, c, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4531([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4532([a, c, b, d, f, e, g, h, j, i, l, m, k, n], is_dual)
    } else {
        select_4602([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4728([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_531([a, d, b, c, f, g, h, e, i, j], is_dual)
    } else {
        select_2216([a, b, d, c, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4730([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_213([e, h, i, d, a, f, c], !is_dual)
    } else {
        select_1781([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4729([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_628([h, i, j, a, g, e, f, b, c], !is_dual)
    } else {
        select_4730([i, h, j, a, g, f, b, e, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4727([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4728([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_4729([a, b, c, g, f, i, h, e, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_4732([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_67([a, g, i, e, h, f], !is_dual)
    } else {
        select_241([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4733([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3115([a, e, c, d, g, f, i, h], is_dual)
    } else {
        select_571([a, f, b, d, h, e, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4731([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4732([e, k, j, a, i, h, b, g, d], !is_dual)
    } else {
        select_4733([e, l, k, a, j, i, h, f, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4726([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4727([a, d, b, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_4731([a, d, c, e, f, b, g, i, h, k, j, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_4736([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_1980([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_122([g, i, k, a, j, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_933([d, e, i, k, j, a, b, g], !is_dual)
    } else {
        select_729([d, b, e, c, f, h, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_4735([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4736([f, i, k, e, j, a, b, h, c, g, d], !is_dual)
    } else {
        select_4737([e, i, k, a, f, j, h, b, c, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4740([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_77([b, d, c, g, f, e, h], is_dual)
    } else {
        select_141([g, i, d, j, a, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4739([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4740([h, k, l, f, j, a, b, i, c, d], !is_dual)
    } else {
        select_1611([b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4741([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_311([e, c, g, d, f, i, h], is_dual)
    } else {
        select_710([e, j, g, l, k, a, b, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4738([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4739([e, h, j, l, m, a, k, f, i, g, c, d], !is_dual)
    } else {
        select_4741([a, b, c, d, e, g, f, i, h, j, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4734([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4735([e, h, l, k, a, f, j, i, c, g, d], !is_dual)
    } else {
        select_4738([a, b, c, d, e, f, g, h, j, k, i, m, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4725([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4726([e, i, j, l, m, a, k, f, g, b, h, d], !is_dual)
    } else {
        select_4734([a, b, c, d, e, f, g, i, k, h, j, m, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4746([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_484([c, a, b, e, g, f, i, d, h], is_dual)
    } else {
        select_1043([a, c, b, e, d, g, i, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4745([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_120([i, a, b, c, f, h], is_dual)
    } else {
        select_4746([b, c, d, f, e, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4748([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_71([b, a, h, c, j, f], is_dual)
    } else {
        select_375([b, a, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4747([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2855([d, a, b, f, h, j, g, i], is_dual)
    } else {
        select_4748([d, c, e, a, b, h, g, i, j, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_4744([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4745([c, d, e, b, f, g, a, h, i, j], is_dual)
    } else {
        select_4747([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4750([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1028([a, f, b, d, g, e, i, h, j, k], is_dual)
    } else {
        select_1797([a, e, c, d, g, h, f, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4753([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([i, e, k, j, a, b], !is_dual)
    } else {
        select_62([c, d, g, h, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_4752([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4753([h, k, i, j, g, e, b, c, a, f, d], !is_dual)
    } else {
        select_1720([h, i, j, g, f, b, c, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4751([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1605([a, d, b, e, f, h, i, j, g, l], is_dual)
    } else {
        select_4752([a, c, d, b, g, f, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4749([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4750([b, c, a, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_4751([h, k, e, l, m, j, f, a, i, b, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4743([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4744([k, e, h, l, m, a, f, j, i, b], !is_dual)
    } else {
        select_4749([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_4756([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_444([a, g, d, b, h], !is_dual)
    } else {
        select_834([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4755([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_151([a, h, b, d, e, g, j, i], is_dual)
    } else {
        select_4756([a, b, c, e, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4754([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2450([h, e, j, l, a, k, b, f, i, c, g], !is_dual)
    } else {
        select_4755([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4742([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_4743([f, l, m, n, a, j, k, g, h, i, b, c, e], !is_dual)
    } else {
        select_4754([a, b, d, c, f, g, i, j, k, l, h, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4724([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4725([f, l, m, n, a, g, k, i, h, b, j, c, d], !is_dual)
    } else {
        select_4742([a, b, d, c, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_4761([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1772([a, c, b, f, e, h, i, g], is_dual)
    } else {
        select_3178([a, b, d, c, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4760([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4761([g, j, d, k, e, i, h, a, b, f], !is_dual)
    } else {
        select_988([g, h, k, e, d, i, a, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4762([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2753([a, c, b, e, h, g, f, j, k, i], is_dual)
    } else {
        select_830([a, k, g, l, b, h, i, d, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4759([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_4760([j, k, l, a, h, i, b, c, g, f, e], !is_dual)
    } else {
        select_4762([a, b, c, d, e, g, h, f, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_723([c, a, e, d, b, g, f, i, h], is_dual)
    } else {
        select_1376([a, c, e, f, b, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4766([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4545([a, c, b, f, g, h, e, i, j], is_dual)
    } else {
        select_1863([b, c, a, d, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4765([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1183([a, c, d, e, b, f, g, h, j], is_dual)
    } else {
        select_4766([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4763([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4764([f, a, c, d, b, g, h, j, k, i], is_dual)
    } else {
        select_4765([a, b, c, e, g, f, i, j, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4758([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4759([a, c, b, e, d, h, g, i, f, k, l, j], is_dual)
    } else {
        select_4763([a, c, d, b, e, h, f, i, g, j, l, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4769([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3177([g, i, k, j, h, d, e, a, b, f], !is_dual)
    } else {
        select_3177([g, h, j, k, i, d, f, a, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4771([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_974([h, g, j, i, a, b, f, c], !is_dual)
    } else {
        select_628([a, c, d, g, f, e, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4772([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_638([b, c, a, d, f, g, e, h], is_dual)
    } else {
        select_2324([b, c, e, g, a, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_4770([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4771([a, b, c, d, f, e, g, i, j, h], is_dual)
    } else {
        select_4772([b, c, a, f, h, g, i, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_4768([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4769([b, a, c, e, f, g, h, i, k, d, j], is_dual)
    } else {
        select_4770([j, k, h, i, e, f, g, d, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4775([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_97([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_3164([i, j, h, f, e, b, a, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4777([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_98([d, i, a, f, h, b], !is_dual)
    } else {
        select_940([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4776([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4777([b, c, a, f, d, g, i, e, h], is_dual)
    } else {
        select_376([h, i, g, f, d, b, a, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4774([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4775([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4776([b, c, g, e, a, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4779([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1137([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1137([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4778([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2911([b, c, a, d, g, f, h, i, e], is_dual)
    } else {
        select_4779([d, i, h, g, f, b, a, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4773([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4774([b, c, a, d, f, e, g, i, j, h], is_dual)
    } else {
        select_4778([i, j, e, b, a, f, h, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4767([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4768([b, c, a, d, f, h, g, i, k, j, e], is_dual)
    } else {
        select_4773([i, d, k, j, f, h, g, e, b, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4757([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4758([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_4767([f, k, l, a, b, j, i, g, c, h, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4723([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_4724([a, b, c, d, e, f, h, g, i, j, l, m, k, n], is_dual)
    } else {
        select_4757([a, b, g, c, d, f, h, j, l, k, m, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4785([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1770([h, j, g, i, e, a, b, f, c], !is_dual)
    } else {
        select_1770([g, j, h, i, f, a, b, e, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4787([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_153([b, c, f, e, d, g, h], is_dual)
    } else {
        select_215([d, f, i, a, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4786([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4241([j, i, k, f, h, g, e, d, a, b], !is_dual)
    } else {
        select_4787([a, d, c, f, e, i, h, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4784([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_4785([j, g, i, k, a, h, d, f, e, b], !is_dual)
    } else {
        select_4786([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_4790([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_453([b, a, c, d, e, f, g], is_dual)
    } else {
        select_141([a, d, h, i, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4789([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_501([a, b, d, f, e, g, h, j], is_dual)
    } else {
        select_4790([e, i, j, a, h, b, f, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1874([a, g, b, d, f, k, h, i], is_dual)
    } else {
        select_4789([i, j, l, k, a, g, f, e, h, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4783([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4784([a, b, c, g, i, e, j, h, k, f, l], is_dual)
    } else {
        select_4788([a, b, c, d, e, f, h, i, j, k, g, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4794([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_61([d, c, f, h, e], is_dual)
    } else {
        select_88([a, b, e, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4793([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4794([i, f, j, a, h, g, e, b, c], !is_dual)
    } else {
        select_561([a, b, e, d, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4792([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_222([a, b, c, h, g, i, f, j], is_dual)
    } else {
        select_4793([a, b, d, f, e, g, j, h, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4791([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4792([a, b, c, d, e, f, i, g, h, j, k], is_dual)
    } else {
        select_4792([a, b, c, d, e, f, i, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4782([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_4783([a, b, d, c, f, h, g, i, j, e, k, l], is_dual)
    } else {
        select_4791([a, c, b, d, f, e, h, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4798([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4490([d, a, c, e, h, f, i, g], is_dual)
    } else {
        select_121([f, d, i, e, g, h, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4797([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_659([d, e, c, h, f, a, i, g], is_dual)
    } else {
        select_4798([c, b, a, d, f, i, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4799([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_80([b, d, a, c, f, e, g], is_dual)
    } else {
        select_222([a, c, b, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4796([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4797([a, c, b, e, f, d, g, i, h], is_dual)
    } else {
        select_4799([a, e, b, f, d, i, g, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_4802([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_120([a, b, c, d, f, g], is_dual)
    } else {
        select_120([a, b, c, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_4803([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_642([a, b, c, e, f, g, d, h], is_dual)
    } else {
        select_642([b, a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_4801([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_4802([h, g, j, d, k, a, i], !is_dual)
    } else {
        select_4803([b, d, c, g, f, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4804([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_202([a, c, d, e, f, b, g, i, h], is_dual)
    } else {
        select_1970([a, c, e, b, f, g, d, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4800([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4801([b, a, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_4804([h, j, g, k, f, d, a, i, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4795([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_4796([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_4800([a, b, c, e, f, g, h, i, j, d, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4781([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4782([b, a, c, d, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_4795([b, f, d, h, a, g, k, e, i, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4809([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1402([a, e, j, b, h, i], !is_dual)
    } else {
        select_948([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4808([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4809([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_4809([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4811([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2107([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_324([a, b, f, d, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4810([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4811([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_988([a, b, f, d, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4808([d, g, k, j, a, e, i, f, h, c], !is_dual)
    } else {
        select_4810([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4815([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, e, c, d, g, f, i], is_dual)
    } else {
        select_32([d, f, a, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4814([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4376([a, b, f, e, h, g, d, i, j], is_dual)
    } else {
        select_4815([b, a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4816([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_358([a, b, c, f, e, d, g, h, i], is_dual)
    } else {
        select_356([d, e, c, a, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4813([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4814([a, e, c, d, g, f, i, h, l, j], is_dual)
    } else {
        select_4816([h, a, b, d, j, e, l, k, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4817([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_947([b, c, d, a, e, g, f, h, i], is_dual)
    } else {
        select_422([e, f, j, a, b, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4812([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4813([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_4817([d, k, l, j, i, a, g, h, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4806([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_4807([a, f, b, d, h, e, j, k, i, l, g], is_dual)
    } else {
        select_4812([a, c, b, d, f, e, h, i, g, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4822([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, c, d, e, f, g, h], is_dual)
    } else {
        select_304([e, i, j, a, f, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4821([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2405([a, d, e, c, f, b, g, h, i, j], is_dual)
    } else {
        select_4822([a, d, e, b, f, c, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4824([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_499([g, i, e, f, h, a, d, b], !is_dual)
    } else {
        select_1231([g, i, h, f, e, a, d, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4823([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2789([h, i, e, j, k, g, f, a, c, b], !is_dual)
    } else {
        select_4824([i, h, k, f, e, g, c, b, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4820([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4821([e, h, j, i, k, a, g, f, c, d], !is_dual)
    } else {
        select_4823([a, c, b, d, e, g, f, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4819([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4820([a, f, b, c, e, h, i, j, k, g, l], is_dual)
    } else {
        select_3588([e, k, l, j, a, h, i, g, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4827([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_623([a, b, d, e, g, i, h, j, k], is_dual)
    } else {
        select_3115([a, c, d, h, f, g, k, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4829([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_51([a, b, e, f, h, i], is_dual)
    } else {
        select_96([c, d, a, b, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_4828([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4829([a, e, c, d, f, g, h, j, i], is_dual)
    } else {
        select_435([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4827([a, b, c, d, f, g, h, e, i, k, j], is_dual)
    } else {
        select_4828([b, a, c, d, e, g, h, f, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4830([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1396([i, g, e, j, f, a, h, c, b], !is_dual)
    } else {
        select_4005([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4825([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4826([b, a, c, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_4830([j, e, k, l, a, f, g, i, b, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4818([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4819([e, j, l, m, a, k, g, h, f, c, b, i], !is_dual)
    } else {
        select_4825([a, c, d, b, e, h, g, f, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4805([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4806([e, m, l, a, k, f, i, j, h, g, b, c], !is_dual)
    } else {
        select_4818([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4780([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_4781([e, j, f, m, a, k, l, b, i, h, g, c], !is_dual)
    } else {
        select_4805([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4722([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_4723([a, b, c, d, e, f, h, g, i, j, k, m, l, n], is_dual)
    } else {
        select_4780([f, k, g, n, a, h, i, l, m, b, c, j, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4721([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4722([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4722([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4530([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_4531([a, b, d, e, f, c, g, h, i, j, l, k, n, m], is_dual)
    } else {
        select_4721([a, b, d, e, f, g, h, i, j, k, l, m, c, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4203([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_4204([a, b, d, f, e, g, h, j, i, c, k, l, m, n], is_dual)
    } else {
        select_4530([a, b, d, c, e, f, g, h, j, i, k, m, n, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4839([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_288([e, a, b, c, f, h, i, j], is_dual)
    } else {
        select_300([b, c, d, f, e, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4840([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3418([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_820([a, b, h, f, c, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4838([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4839([b, c, d, g, a, f, h, i, j, k], is_dual)
    } else {
        select_4840([b, c, d, a, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4842([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_280([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_75([a, g, h, i, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4841([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_191([a, b, g, h, i, c, f], !is_dual)
    } else {
        select_4842([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_4837([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4838([a, c, d, e, b, g, f, h, i, k, j], is_dual)
    } else {
        select_4841([a, h, b, d, e, j, l, m, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_4846([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_154([a, b, f, d, e, h, g, i], is_dual)
    } else {
        select_325([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4845([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4846([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_4846([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4844([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_4342([a, b, g, e, f, h, i, d], is_dual)
    } else {
        select_4845([b, a, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4847([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_191([a, f, h, i, e, b, g], !is_dual)
    } else {
        select_299([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4843([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4844([k, l, i, a, b, j, g, f, c], !is_dual)
    } else {
        select_4847([b, i, j, k, g, a, h, d, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4836([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4837([e, a, g, c, d, f, h, j, l, i, m, k, n], is_dual)
    } else {
        select_4843([k, e, m, j, n, l, f, h, a, g, i, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4853([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_703([a, c, d, f, g, i, k], is_dual)
    } else {
        select_703([b, c, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4852([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_820([b, g, c, e, f, i, h, k], is_dual)
    } else {
        select_4853([a, b, f, d, e, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4851([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4852([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_4852([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4850([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_4851([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_4852([b, c, a, e, f, d, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4855([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_166([h, k, i, j, g, b, c, f, d], !is_dual)
    } else {
        select_376([i, h, m, e, l, a, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4857([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_61([f, b, h, j, d], is_dual)
    } else {
        select_1231([i, h, k, g, f, a, e, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4856([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3957([a, b, d, f, e, h, j, i, l], is_dual)
    } else {
        select_4857([h, k, l, i, j, e, f, g, b, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4854([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4855([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_4856([b, a, d, c, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4849([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_4850([j, m, i, a, l, h, k, g, b, e, f, c], !is_dual)
    } else {
        select_4854([i, j, k, m, a, h, l, g, b, e, c, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4858([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1907([a, d, g, h, e, i, b, f], !is_dual)
    } else {
        select_576([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_4848([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4849([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_4858([a, g, d, b, i, f, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_4835([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_4836([a, d, b, c, e, f, g, i, h, j, l, m, n, k], is_dual)
    } else {
        select_4848([e, j, n, l, m, h, f, k, a, b, c, i, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4862([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_81([h, i, d, f, e, a], !is_dual)
    } else {
        select_477([d, f, b, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4861([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_150([f, b, a, h, d, i, e, g, j], is_dual)
    } else {
        select_4862([b, a, c, e, d, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4865([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([b, d, c, e, f, h], is_dual)
    } else {
        select_122([a, c, e, d, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4866([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_700([b, g, e, h, f, i, d], is_dual)
    } else {
        select_100([e, a, c, d, f, g, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4864([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4865([a, b, d, g, e, i, h, j, f], is_dual)
    } else {
        select_4866([a, b, c, e, d, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4867([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2053([k, h, j, a, i, f, e, g, c], !is_dual)
    } else {
        select_97([a, b, d, f, h, j, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4863([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4864([b, e, d, f, g, a, h, j, i, k], is_dual)
    } else {
        select_4867([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4860([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_4861([a, e, d, h, b, f, j, g, i, k], is_dual)
    } else {
        select_4863([a, c, d, b, f, g, i, e, h, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4871([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_820([f, h, i, d, a, b, g, e], !is_dual)
    } else {
        select_1266([f, h, i, d, b, g, a, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4870([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4871([a, b, c, e, f, g, h, i, d], is_dual)
    } else {
        select_3102([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4869([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1810([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_4870([e, b, c, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4873([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1456([e, i, j, d, f, h, a, g], !is_dual)
    } else {
        select_606([d, f, b, c, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4872([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4873([b, c, a, d, e, g, f, h, j, i], is_dual)
    } else {
        select_1464([d, e, k, f, a, i, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4868([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4869([d, a, c, h, j, f, g, l, i, k], is_dual)
    } else {
        select_4872([a, b, i, d, k, f, e, m, h, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4859([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_4860([d, a, c, f, g, h, j, i, k, l, e], is_dual)
    } else {
        select_4868([a, b, c, d, f, e, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_4834([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4835([b, a, c, d, e, g, h, f, i, k, l, j, m, n], is_dual)
    } else {
        select_4859([b, d, c, e, g, h, f, i, a, k, l, j, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_4880([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_98([f, d, a, h, e, g], is_dual)
    } else {
        select_764([b, d, a, c, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4879([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4880([b, a, f, c, e, i, g, j, k], is_dual)
    } else {
        select_84([a, g, b, d, h, f, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_4882([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_153([c, b, f, d, e, g, h], is_dual)
    } else {
        select_186([g, f, i, a, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4881([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_452([a, d, c, f, g, e, i, h], is_dual)
    } else {
        select_4882([a, b, e, d, h, i, f, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4878([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4879([a, b, d, c, f, e, h, i, g, j, k], is_dual)
    } else {
        select_4881([b, e, d, g, f, a, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4883([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_732([a, h, g, j, k, e, i, f, b, c], !is_dual)
    } else {
        select_1291([a, e, b, d, g, i, f, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_4877([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4878([a, b, d, c, f, e, h, g, i, j, k], is_dual)
    } else {
        select_4883([a, b, f, c, h, e, j, i, k, l, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_4876([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4877([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_4877([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4888([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2769([f, h, d, i, a, g, b, e], !is_dual)
    } else {
        select_188([f, g, h, d, a, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4887([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3430([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_4888([b, h, c, a, f, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4886([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4887([a, j, m, i, l, k, f, g, b, h, d], !is_dual)
    } else {
        select_845([a, f, c, e, g, i, h, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4885([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4886([a, c, d, b, e, g, f, h, i, j, l, k, m], is_dual)
    } else {
        select_4245([a, d, f, e, b, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4884([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4885([a, g, j, l, m, i, h, k, b, c, d, f, e], !is_dual)
    } else {
        select_4885([a, h, j, l, m, i, g, k, b, c, d, f, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4875([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4876([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_4884([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_4890([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1120([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_328([c, a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_4895([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_313([h, d, i, f, a, g], !is_dual)
    } else {
        select_1289([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4896([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1266([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1266([a, b, c, d, e, g, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4894([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4895([h, i, j, e, a, f, g, b, d], !is_dual)
    } else {
        select_4896([h, i, j, e, a, f, g, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4898([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_122([d, g, i, a, h, f], !is_dual)
    } else {
        select_340([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4897([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4898([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_4898([a, b, c, d, e, g, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4893([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4894([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_4897([e, i, j, a, f, g, h, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4892([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4893([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_425([f, a, b, c, e, h, i, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_4901([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_81([b, e, c, d, f, g], is_dual)
    } else {
        select_102([e, g, h, a, b, f, d], !is_dual)
    }
}
/// n = 8, i = 2
fn select_4902([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_67([a, b, c, e, f, h], is_dual)
    } else {
        select_316([a, e, c, d, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4900([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4901([a, b, c, g, e, h, f, i], is_dual)
    } else {
        select_4902([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4899([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2266([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_4900([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4891([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4892([a, c, b, d, e, g, h, i, f, j], is_dual)
    } else {
        select_4899([a, b, d, c, e, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_4889([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_4890([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_4891([g, h, l, k, a, c, b, j, d, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4874([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4875([e, a, b, d, g, f, h, k, l, j, i, m, n], is_dual)
    } else {
        select_4889([j, m, e, n, k, l, f, a, h, g, i, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4833([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4834([b, a, c, d, f, g, e, h, j, k, m, n, i, l], is_dual)
    } else {
        select_4874([a, b, d, c, f, g, h, j, i, k, m, n, l, e], is_dual)
    }
}
/// n = 14, i = 6
fn select_4832([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4833([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4833([b, c, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_4911([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([a, b, c, d, e, f], is_dual)
    } else {
        select_82([c, d, b, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_4910([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, i], is_dual)
    } else {
        select_4911([h, i, a, b, f, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4909([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2633([a, h, j, f, i, b, c, d, g], !is_dual)
    } else {
        select_4910([c, d, b, a, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4912([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2335([b, d, f, h, e, a, g, i, j], is_dual)
    } else {
        select_2367([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_4908([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_4909([a, g, h, i, k, b, j, e, f, d], !is_dual)
    } else {
        select_4912([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4915([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_116([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_117([f, c, d, e, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4914([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, b, c, e, g, h], is_dual)
    } else {
        select_4915([a, d, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_4916([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_84([a, b, c, d, e, f, h], is_dual)
    } else {
        select_84([a, b, d, c, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4914([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_4916([a, i, g, j, b, f, h, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4907([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4908([a, f, k, j, h, i, c, b, d, g, e], !is_dual)
    } else {
        select_4913([a, f, b, j, k, h, c, i, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4919([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4290([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_4290([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4918([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2614([a, b, i, k, j, l, g, f, h, e], !is_dual)
    } else {
        select_4919([a, b, j, i, k, l, h, c, d, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4922([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_495([c, f, d, e, a, g, h, i], is_dual)
    } else {
        select_3532([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4923([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_324([a, e, c, d, g, f, h], is_dual)
    } else {
        select_1528([b, a, f, e, d, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4921([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4922([c, a, b, d, e, f, g, h, i, k], is_dual)
    } else {
        select_4923([f, k, l, a, h, j, b, c, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4920([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4921([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_4921([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4917([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_4918([a, b, d, c, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_4920([a, b, i, k, j, m, l, c, h, g, f, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4906([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4907([a, b, j, l, m, c, i, h, g, e, f], !is_dual)
    } else {
        select_4917([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4929([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_98([f, d, a, g, e, h], is_dual)
    } else {
        select_702([b, d, a, c, e, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_4928([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_102([g, i, h, b, c, f, d], !is_dual)
    } else {
        select_4929([h, g, i, k, j, e, a, b, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4927([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4928([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_2323([i, e, k, a, g, j, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4931([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_368([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1271([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4930([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4931([a, f, c, d, e, h, g, i, j, k, l], is_dual)
    } else {
        select_1903([b, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_4926([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4927([g, k, l, m, e, h, a, b, c, i, f], !is_dual)
    } else {
        select_4930([b, d, a, c, e, f, g, h, j, m, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_4934([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2756([d, c, g, e, f, i, k, h, j], is_dual)
    } else {
        select_1870([a, b, d, h, e, j, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4933([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < e) || (is_dual && m > e) {
        select_4934([b, d, c, a, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_344([a, f, b, g, h, j, i, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_4936([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_736([f, j, h, k, i, d, g, a], !is_dual)
    } else {
        select_1528([d, b, c, e, f, h, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4935([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4936([l, k, i, j, a, e, h, b, g, c, f], !is_dual)
    } else {
        select_4163([a, b, h, d, e, i, f, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4932([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4933([b, a, d, c, f, g, i, h, e, j, k, l, m], is_dual)
    } else {
        select_4935([a, c, d, b, f, e, g, i, j, h, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_4925([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4926([j, g, k, m, f, l, a, h, i, b, c, d, e], !is_dual)
    } else {
        select_4932([j, f, k, m, a, g, l, h, i, d, b, c, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4924([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4925([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4925([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4905([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4906([a, b, h, k, m, i, l, g, j, c, f, d, e], !is_dual)
    } else {
        select_4924([a, b, c, f, e, d, h, i, j, k, g, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4941([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1545([e, h, j, f, i, b, a, c, g], !is_dual)
    } else {
        select_1813([b, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4944([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_626([a, f, d, b, h, e, g, i], is_dual)
    } else {
        select_626([a, e, d, c, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4943([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_974([h, g, j, e, b, a, i, f], !is_dual)
    } else {
        select_4944([b, a, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4942([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1813([a, b, c, h, e, i, g, k], is_dual)
    } else {
        select_4943([a, b, g, d, e, f, j, k, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4941([g, a, c, b, e, i, h, j, f, k], is_dual)
    } else {
        select_4942([a, b, c, d, e, g, f, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4939([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4940([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4940([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4938([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_4782([a, b, c, d, f, g, h, i, k, j, e, l], is_dual)
    } else {
        select_4939([b, c, a, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4937([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4938([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4938([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4904([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4905([a, b, k, i, l, m, c, e, g, j, d, h, f], !is_dual)
    } else {
        select_4937([a, b, l, m, k, c, g, e, d, j, i, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4953([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_34([a, j, k, i], !is_dual)
    } else {
        select_129([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_4952([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_4953([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_266([b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4954([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_75([e, c, d, f, g], is_dual)
    } else {
        select_88([a, b, g, e, h, f, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_4951([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4952([g, j, l, m, e, i, k, a, f, h, c, d], !is_dual)
    } else {
        select_4954([e, b, c, d, g, f, h, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4955([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_67([g, a, b, d, h, e], is_dual)
    } else {
        select_1562([a, c, b, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_4950([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4951([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_4955([g, l, k, e, j, f, i, b, a, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4958([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_186([a, g, b, i, d, f], is_dual)
    } else {
        select_186([a, f, c, h, e, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_4957([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_565([b, g, c, d, f, h, i, k], is_dual)
    } else {
        select_4958([i, k, l, g, j, e, f, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4959([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2494([b, a, c, d, f, e, g, h, j, k, i, l], is_dual)
    } else {
        select_992([j, g, l, i, k, e, f, a, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_4956([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4957([a, b, c, d, e, g, f, h, i, k, j, l], is_dual)
    } else {
        select_4959([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4949([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4950([h, j, l, m, e, i, a, k, b, f, g, c, d], !is_dual)
    } else {
        select_4956([e, j, l, m, a, h, i, k, b, f, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_4948([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4949([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4949([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_4963([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_385([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_33([a, g, c], is_dual)
    }
}
/// n = 9, i = 4
fn select_4964([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_444([a, f, g, c, d], !is_dual)
    } else {
        select_561([a, f, h, i, e, g, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4962([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4963([a, b, c, e, f, h, g, i, j], is_dual)
    } else {
        select_4964([a, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4961([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2632([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_4962([a, j, b, k, l, g, c, i, d, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4967([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2324([f, a, b, d, g, e, h], is_dual)
    } else {
        select_2324([e, a, c, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4966([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_290([b, a, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_4967([j, f, k, g, a, b, i, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4965([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4966([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_4966([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4960([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4961([a, b, d, c, e, f, g, h, j, k, l, i], is_dual)
    } else {
        select_4965([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_4947([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_4948([a, b, c, d, f, h, g, i, j, m, k, l, n], is_dual)
    } else {
        select_4960([a, b, l, m, i, n, j, h, d, k, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4972([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_316([e, f, d, i, a, h, g], !is_dual)
    } else {
        select_309([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4971([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4972([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_4972([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4970([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_284([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4971([a, f, i, j, b, c, g, h, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4975([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2288([e, g, h, i, a, b, f, c, d], !is_dual)
    } else {
        select_95([e, a, h, i, g, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4974([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_191([a, e, c, f, d, g, h], is_dual)
    } else {
        select_4975([a, b, c, g, e, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4976([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_81([a, h, c, e, f, i], is_dual)
    } else {
        select_561([a, c, b, d, i, g, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4973([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4974([a, f, c, e, b, h, g, i, j, k], is_dual)
    } else {
        select_4976([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4969([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4970([a, b, c, f, e, h, g, j, l, i], is_dual)
    } else {
        select_4973([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4979([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3586([a, c, b, d, e, f, g, i, j, h], is_dual)
    } else {
        select_1597([a, b, e, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3099([a, e, b, d, h, i, f, j, g], is_dual)
    } else {
        select_4979([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4982([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_84([b, d, e, a, c, f, h], is_dual)
    } else {
        select_84([d, b, c, a, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4981([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_791([a, d, e, b, c, f, g, i, h], is_dual)
    } else {
        select_4982([d, a, f, b, c, h, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4984([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_444([a, g, d, e, i], is_dual)
    } else {
        select_529([j, g, i, h, a, f, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_4985([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2973([d, b, c, e, g, h, f, i], is_dual)
    } else {
        select_2233([a, c, d, f, e, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4983([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4984([i, f, h, k, j, e, d, g, a, c], !is_dual)
    } else {
        select_4985([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4980([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4981([h, g, j, d, k, i, e, a, b, f], !is_dual)
    } else {
        select_4983([b, a, c, d, e, g, f, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_4977([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4978([a, c, d, b, f, e, g, h, i, j], is_dual)
    } else {
        select_4980([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_4968([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4969([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4977([a, c, g, d, i, f, b, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_4946([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_4947([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_4968([a, b, c, d, f, h, g, i, k, m, n, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4990([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_659([f, e, i, a, h, g, c, b], !is_dual)
    } else {
        select_3751([f, g, i, e, h, a, b, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4989([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4990([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_4990([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4992([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_421([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_421([a, b, d, c, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4991([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4992([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_4992([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4988([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4989([a, b, i, f, j, c, g, h, d], !is_dual)
    } else {
        select_4991([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4996([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_250([c, d, e, h, i, g], is_dual)
    } else {
        select_3378([a, b, c, f, g, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4998([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_21([d, a, b, c, e, f, g, h], is_dual)
    } else {
        select_51([a, b, c, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4997([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3629([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4998([a, b, d, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4995([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4996([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4997([a, b, c, f, e, g, d, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5002([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_32([f, b, c, e, h, g], is_dual)
    } else {
        select_39([i, j, d, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5001([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5002([a, b, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_266([b, d, c, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5000([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_886([c, g, d, a, f, h, i], is_dual)
    } else {
        select_5001([b, c, a, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5003([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_250([e, k, l, f, a, j], !is_dual)
    } else {
        select_1257([b, c, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_4999([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5000([b, a, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_5003([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4994([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4995([h, j, k, l, e, m, a, f, b, i, c], !is_dual)
    } else {
        select_4999([b, c, a, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_4993([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4994([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4994([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4987([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4988([a, b, c, f, e, h, g, i, k, j], is_dual)
    } else {
        select_4993([a, b, d, c, e, f, g, h, j, k, l, m, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5007([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, c, d, b, g, h], is_dual)
    } else {
        select_3359([a, b, e, c, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5009([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4545([f, g, i, e, h, a, b, d, c], !is_dual)
    } else {
        select_933([a, g, f, i, h, e, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5008([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5009([a, i, h, j, g, e, b, f, d], !is_dual)
    } else {
        select_4033([a, i, g, j, h, b, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5006([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5007([a, c, b, d, e, g, h, f, i], is_dual)
    } else {
        select_5008([a, c, e, d, g, f, h, b, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5011([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1298([a, b, c, g, e, f, h, j, i], is_dual)
    } else {
        select_237([a, d, b, f, e, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5010([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5011([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_5011([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5005([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5006([a, b, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_5010([a, b, c, e, d, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5015([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4241([b, c, d, a, e, f, h, g, j, i], is_dual)
    } else {
        select_1452([i, h, f, e, a, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5016([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3164([a, c, b, e, h, j, k, g], is_dual)
    } else {
        select_948([e, b, d, a, f, g, j, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5014([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5015([a, b, c, f, g, h, i, e, k, j], is_dual)
    } else {
        select_5016([a, c, b, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5018([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_74([a, g, b, d, e, j, k], is_dual)
    } else {
        select_3430([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5019([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_160([b, d, e, f, g, k, h], is_dual)
    } else {
        select_199([i, g, l, b, a, j, c, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5017([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5018([k, i, h, l, m, g, f, j, a, d, b], !is_dual)
    } else {
        select_5019([h, i, f, k, l, m, g, j, a, e, d, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5013([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5014([b, a, c, d, e, g, h, f, j, i, k], is_dual)
    } else {
        select_5017([c, b, d, f, g, h, a, e, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5012([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5013([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5013([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5004([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5005([a, b, d, e, c, g, f, i, h, j, k], is_dual)
    } else {
        select_5012([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_4986([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4987([a, b, c, d, e, h, g, j, k, f, m, i, l], is_dual)
    } else {
        select_5004([a, b, d, e, c, h, f, j, i, k, g, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4945([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4946([a, b, c, d, e, f, h, i, j, k, l, m, g, n], is_dual)
    } else {
        select_4986([a, b, m, j, n, k, l, i, c, g, d, h, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_4903([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4904([a, b, g, l, k, n, j, m, c, i, d, f, h], !is_dual)
    } else {
        select_4945([a, b, c, d, e, f, g, i, j, l, m, h, n, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_4831([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_4832([a, b, d, f, e, g, h, i, k, j, l, n, c, m], is_dual)
    } else {
        select_4903([a, b, c, d, f, e, g, h, i, k, l, n, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_4202([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_4203([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_4831([a, b, c, f, e, g, h, j, i, k, l, m, d, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3943([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3944([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_4202([a, b, c, d, f, g, h, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_5031([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4640([b, c, d, f, h, e, g, i, j], is_dual)
    } else {
        select_71([i, e, j, f, a, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5030([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4569([a, f, c, i, e, k, g, m, l], is_dual)
    } else {
        select_5031([a, b, e, d, g, h, f, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5033([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_736([f, i, h, j, a, e, g, b], !is_dual)
    } else {
        select_3186([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_5032([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5033([a, d, f, b, e, h, j, g, l, m], is_dual)
    } else {
        select_2471([b, c, a, e, f, h, g, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5029([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5030([a, c, d, b, f, g, i, j, e, l, k, m, h], is_dual)
    } else {
        select_5032([a, b, c, d, f, e, i, h, j, g, l, k, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_5036([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_642([h, i, d, e, g, a, b, f], !is_dual)
    } else {
        select_2413([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5037([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_358([a, d, c, f, g, i, h, j, k], is_dual)
    } else {
        select_1475([h, i, j, l, k, a, e, g, b, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5035([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_5036([h, e, l, a, i, k, f, b, g], !is_dual)
    } else {
        select_5037([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5034([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_4372([i, l, k, h, f, e, a, b, j, g], !is_dual)
    } else {
        select_5035([a, c, d, b, f, g, e, i, h, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5028([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5029([a, b, c, d, f, g, h, i, j, k, e, l, m], is_dual)
    } else {
        select_5034([b, c, a, d, f, e, g, i, j, k, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5041([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_933([a, b, c, e, h, f, j, g], is_dual)
    } else {
        select_152([a, d, c, f, e, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5040([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1769([a, c, d, h, f, g, j, i, k], is_dual)
    } else {
        select_5041([i, j, h, l, k, a, e, f, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5043([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_358([e, f, i, h, g, a, c, b, d], !is_dual)
    } else {
        select_365([e, g, i, f, h, b, a, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5045([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_51([a, f, h, i, g, b], !is_dual)
    } else {
        select_54([a, b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5044([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_565([f, i, h, j, a, e, b, g], !is_dual)
    } else {
        select_5045([a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5042([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5043([a, c, d, e, g, h, i, f, j], is_dual)
    } else {
        select_5044([g, k, h, i, j, a, e, c, b, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5039([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5040([a, b, c, d, f, e, g, i, j, k, h, l], is_dual)
    } else {
        select_5042([a, b, c, g, f, h, j, k, i, e, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_5048([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_736([g, h, f, i, a, d, e, b], !is_dual)
    } else {
        select_1546([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5047([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4569([e, g, i, f, h, a, c, b, d], !is_dual)
    } else {
        select_5048([e, i, f, h, g, c, b, a, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5051([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_31([h, i, j, k, e, f, a, b, g], !is_dual)
    } else {
        select_314([b, d, c, e, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_5050([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3690([a, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_5051([a, f, b, d, e, i, g, j, k, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5053([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_499([a, f, b, d, e, h, i, j], is_dual)
    } else {
        select_266([d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5054([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_153([l, k, a, h, i, b, f], !is_dual)
    } else {
        select_128([a, c, d, g, e, f, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5052([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5053([e, c, d, a, f, g, i, h, j, l], is_dual)
    } else {
        select_5054([b, a, d, c, g, f, e, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5049([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5050([b, c, d, a, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_5052([h, j, m, l, e, k, i, a, b, g, f, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5046([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_5047([k, h, l, f, e, a, c, j, g], !is_dual)
    } else {
        select_5049([a, b, d, c, e, g, f, h, i, k, j, m, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5038([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5039([i, l, e, m, h, k, j, f, a, b, g, c], !is_dual)
    } else {
        select_5046([b, a, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5027([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5028([j, k, i, m, a, f, l, g, b, c, h, d, e], !is_dual)
    } else {
        select_5038([j, k, f, m, a, i, l, b, c, g, h, d, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5059([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1486([a, c, b, d, f, g, e, h, i], is_dual)
    } else {
        select_1486([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5058([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1874([e, f, j, g, k, a, i, d], !is_dual)
    } else {
        select_5059([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5057([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5058([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2942([f, j, i, e, k, g, a, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5061([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1485([b, a, c, d, f, g, e, h, i], is_dual)
    } else {
        select_1767([f, h, k, e, j, g, a, i, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5064([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_141([b, c, e, f, g, h], is_dual)
    } else {
        select_141([a, c, d, g, f, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_5065([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([b, a, d, e, f, h, g], is_dual)
    } else {
        select_71([b, a, g, c, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_5063([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5064([a, b, c, g, e, f, h, i, j], is_dual)
    } else {
        select_5065([b, c, e, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5062([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4922([a, b, f, c, e, g, h, i, k, j], is_dual)
    } else {
        select_5063([b, a, c, d, h, g, f, j, k, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_5060([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_5061([i, f, l, m, b, a, j, g, k, h, c], !is_dual)
    } else {
        select_5062([b, a, c, e, d, g, f, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5056([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5057([f, l, j, m, a, b, k, g, h, c, i], !is_dual)
    } else {
        select_5060([a, b, d, c, e, f, h, g, j, k, i, m, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5070([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_375([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_22([b, c, d, e, h, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5071([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_153([f, j, a, h, g, b, c], !is_dual)
    } else {
        select_1979([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5069([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5070([b, d, c, e, g, f, i, h, j], is_dual)
    } else {
        select_5071([a, b, f, d, g, e, j, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5068([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5069([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_210([b, h, c, e, a, f, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_5073([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_710([e, i, f, k, j, a, g, c], !is_dual)
    } else {
        select_1088([f, b, d, h, e, i, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_5074([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_886([a, b, c, d, e, g, f], is_dual)
    } else {
        select_1956([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5072([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_5073([a, c, b, d, g, e, h, f, i, j, k], is_dual)
    } else {
        select_5074([c, d, e, g, f, b, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5067([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5068([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_5072([e, j, k, l, h, a, b, i, f, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5077([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_933([e, b, c, a, g, h, j, f], is_dual)
    } else {
        select_3164([a, d, c, e, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5076([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5077([a, b, d, c, f, g, h, e, i, j], is_dual)
    } else {
        select_5015([a, c, d, b, e, h, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5078([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3973([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_1225([a, c, b, e, f, g, i, j, h, d, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5076([b, c, a, d, f, e, h, g, j, i], is_dual)
    } else {
        select_5078([c, d, b, f, g, a, h, j, e, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5066([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5067([a, b, d, c, e, g, f, h, i, l, m, j], is_dual)
    } else {
        select_5075([a, c, b, g, h, e, f, j, l, k, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_5055([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_5056([b, a, d, c, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_5066([f, j, l, n, a, k, m, b, c, g, d, i, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5026([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_5027([b, c, h, d, i, f, j, g, a, k, l, m, n], is_dual)
    } else {
        select_5055([b, c, a, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_5085([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_153([b, c, d, f, e, h, g], is_dual)
    } else {
        select_644([h, i, e, f, d, g, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5084([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1750([b, a, d, c, e, f, h, g, i], is_dual)
    } else {
        select_5085([e, i, j, h, a, g, f, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5083([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5084([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_3182([a, c, e, d, b, f, h, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_5087([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_67([a, d, c, f, e, h], is_dual)
    } else {
        select_1402([a, b, e, d, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5086([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1924([a, c, b, e, d, f, g, h, i, j], is_dual)
    } else {
        select_5087([a, e, c, f, g, h, b, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5082([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5083([a, b, c, f, d, e, g, h, j, i], is_dual)
    } else {
        select_5086([a, b, c, f, e, d, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_5091([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_71([e, d, f, g, a, b], !is_dual)
    } else {
        select_141([d, e, f, g, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5090([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5091([b, d, g, e, i, j, f], is_dual)
    } else {
        select_1088([a, c, f, e, h, k, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5092([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2458([c, d, e, a, f, b, g, h, i], is_dual)
    } else {
        select_950([c, d, e, b, f, a, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5089([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5090([a, c, b, d, f, g, e, j, h, i, k], is_dual)
    } else {
        select_5092([h, i, f, j, k, a, g, e, c, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5094([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2458([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_1290([b, c, d, a, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5093([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5094([b, a, c, e, d, f, h, g, j], is_dual)
    } else {
        select_2788([a, c, e, b, d, h, g, j, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5088([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5089([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_5093([a, i, j, h, k, e, f, g, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5081([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_5082([a, h, k, e, j, i, g, b, d, f], !is_dual)
    } else {
        select_5088([a, d, c, b, e, g, f, k, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5099([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_803([b, d, a, e, f, h, i, g], is_dual)
    } else {
        select_803([a, c, b, e, g, h, j, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5098([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_67([h, a, d, g, e, i], is_dual)
    } else {
        select_5099([a, e, b, c, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5100([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_933([a, b, d, f, i, h, k, g], is_dual)
    } else {
        select_2762([a, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5097([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5098([d, b, c, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_5100([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5102([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1956([i, g, l, a, j, b, c, h], !is_dual)
    } else {
        select_160([c, d, e, f, g, k, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5104([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_499([a, b, d, f, e, h, i, j], is_dual)
    } else {
        select_266([b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5103([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2137([a, c, g, d, e, i, h], is_dual)
    } else {
        select_5104([i, j, g, l, k, f, a, b, h, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5101([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5102([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_5103([c, b, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5096([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5097([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_5101([a, h, j, k, l, m, b, i, f, c, g, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5106([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4008([e, f, g, i, h, a, b, d], !is_dual)
    } else {
        select_86([e, f, g, h, b, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5105([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3244([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5106([h, j, a, k, b, c, f, i, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5095([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5096([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    } else {
        select_5105([a, b, c, e, d, g, f, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5080([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5081([a, i, k, l, b, g, j, f, c, d, h], !is_dual)
    } else {
        select_5095([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_5111([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4570([b, c, d, f, g, h, e, j, i], is_dual)
    } else {
        select_4137([a, c, e, f, g, d, k, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5113([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_292([h, j, f, g, b, e, d], !is_dual)
    } else {
        select_212([a, c, b, g, f, j, i, e, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5112([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1431([j, k, e, f, h, a, b, g, c], !is_dual)
    } else {
        select_5113([b, a, d, c, f, e, g, j, i, k, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5110([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5111([b, c, d, e, f, g, a, h, k, i, j], is_dual)
    } else {
        select_5112([h, k, i, j, e, f, g, a, b, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5115([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1772([g, h, a, i, e, f, b, c], !is_dual)
    } else {
        select_2492([g, h, i, e, f, a, b, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5114([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_66([a, i, e, f, b, g, d], !is_dual)
    } else {
        select_5115([a, i, h, g, f, e, c, d, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5109([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5110([a, d, c, b, g, f, e, i, j, h, k], is_dual)
    } else {
        select_5114([a, i, e, k, g, h, b, d, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5116([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4477([a, b, c, d, e, f, h, i, j, k, g], is_dual)
    } else {
        select_383([a, i, j, h, e, g, b, c, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5108([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_5109([a, d, c, e, g, f, h, b, i, k, j], is_dual)
    } else {
        select_5116([a, i, k, j, g, f, b, h, d, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5120([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2912([i, h, j, d, e, f, a, g, b], !is_dual)
    } else {
        select_629([e, a, f, c, d, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5122([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_626([a, c, e, d, h, g, f, j], is_dual)
    } else {
        select_213([c, b, f, g, i, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5121([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5122([b, a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_1095([a, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5119([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_5120([b, a, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_5121([i, j, d, k, e, g, f, h, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5124([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2413([h, d, k, e, g, j, a, c, f], !is_dual)
    } else {
        select_2454([c, a, b, e, d, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5123([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1732([j, i, k, g, e, d, f, h, a], !is_dual)
    } else {
        select_5124([b, a, c, e, f, d, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5118([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5119([e, j, k, a, f, h, i, g, c, b, d], !is_dual)
    } else {
        select_5123([h, j, k, e, f, i, a, g, b, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5117([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5118([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_5118([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5107([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5108([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_5117([a, b, j, k, f, g, i, c, h, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5079([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5080([a, b, d, c, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_5107([a, f, i, g, l, b, j, k, c, d, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5025([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_5026([a, b, d, c, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_5079([a, f, m, n, k, b, j, g, d, c, l, h, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5024([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5025([a, b, c, d, e, h, g, i, j, k, f, l, m, n], is_dual)
    } else {
        select_5025([a, c, b, d, e, h, f, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5023([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5024([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5024([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5022([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5023([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5023([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_5135([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_294([i, j, f, k, d, g, a, b], !is_dual)
    } else {
        select_33([h, c, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_5136([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3119([b, e, d, a, g, f, i], is_dual)
    } else {
        select_2836([b, c, a, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5135([c, b, a, f, d, h, e, k, j, i, g], is_dual)
    } else {
        select_5136([g, i, k, d, h, a, f, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2444([a, c, e, g, f, d, h, j, k], is_dual)
    } else {
        select_2205([b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5134([c, b, d, e, a, f, g, i, h, j, k], is_dual)
    } else {
        select_5137([c, a, d, e, b, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5140([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_122([a, b, d, g, h, f], is_dual)
    } else {
        select_942([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5139([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_941([a, c, e, d, g, h, f, i, j, k], is_dual)
    } else {
        select_5140([a, b, d, f, g, e, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5138([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_5139([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2315([b, a, f, i, j, k, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_5132([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5133([b, a, c, g, f, h, j, i, e, l, k], is_dual)
    } else {
        select_5138([c, b, a, d, f, e, g, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5144([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_368([a, c, b, d, f, g, h, e, i, j], is_dual)
    } else {
        select_266([b, c, d, f, e, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_5143([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5144([h, k, i, l, a, e, j, b, g, d], !is_dual)
    } else {
        select_152([a, c, d, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5146([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_71([i, a, j, k, b, h], !is_dual)
    } else {
        select_368([b, a, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5145([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1264([a, c, d, f, e, h, g, j, k, l], is_dual)
    } else {
        select_5146([h, i, k, l, e, j, a, f, c, b, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_5142([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_5143([a, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5145([b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5148([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2472([b, c, a, d, e, f, g, i, h], is_dual)
    } else {
        select_4686([a, c, b, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5150([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_53([b, c, d, e, g, h], is_dual)
    } else {
        select_1266([a, b, c, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5149([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5150([b, a, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3642([j, g, i, l, k, f, a, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5147([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5148([i, j, l, h, k, b, f, a, c, g], !is_dual)
    } else {
        select_5149([b, c, a, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5141([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5142([a, c, b, d, e, g, f, h, i, k, j, m, l], is_dual)
    } else {
        select_5147([a, b, c, d, h, g, j, i, k, l, f, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5131([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5132([c, b, d, h, f, g, i, a, j, k, m, l], is_dual)
    } else {
        select_5141([b, c, d, a, e, f, g, h, j, i, l, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5155([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([f, b, c, d, h, g], is_dual)
    } else {
        select_213([i, h, f, d, g, e, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5154([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2232([c, b, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_5155([c, a, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5157([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_68([i, f, c, a, b], !is_dual)
    } else {
        select_434([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4390([a, b, d, c, e, g, h, i, f, j], is_dual)
    } else {
        select_5157([a, b, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5153([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5154([b, a, d, c, e, g, h, i, j, f], is_dual)
    } else {
        select_5156([b, c, a, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_65([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_122([i, j, k, a, f, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5159([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5160([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_358([a, g, c, f, b, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5158([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4901([a, b, d, c, h, i, l, g], is_dual)
    } else {
        select_5159([a, c, e, b, d, f, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5152([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5153([b, c, d, f, g, i, a, h, k, j], is_dual)
    } else {
        select_5158([b, c, a, d, e, f, h, i, g, j, l, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_5164([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_235([g, f, h, i, a, d, e, b], !is_dual)
    } else {
        select_235([f, g, h, i, a, e, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5165([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_375([a, c, b, d, e, g, h, f, j], is_dual)
    } else {
        select_803([b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5163([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5164([h, f, j, i, g, a, e, b, c], !is_dual)
    } else {
        select_5165([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5166([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1290([b, a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_4730([i, g, j, a, e, h, b, c, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5162([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5163([g, e, j, k, i, a, h, c, b, f], !is_dual)
    } else {
        select_5166([a, b, c, d, e, f, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5168([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2414([g, d, j, k, i, e, h, a, b, f], !is_dual)
    } else {
        select_1024([b, a, c, e, d, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5167([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5168([b, c, d, e, a, f, g, h, j, i, k], is_dual)
    } else {
        select_4814([b, a, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5161([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5162([j, k, i, l, a, g, b, h, e, f, c], !is_dual)
    } else {
        select_5167([i, k, j, l, a, h, b, g, e, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5151([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5152([a, c, d, b, e, g, h, f, j, i, l, k], is_dual)
    } else {
        select_5161([a, c, e, d, g, f, h, b, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5130([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_5131([b, c, a, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_5151([b, a, c, d, h, g, i, k, j, l, m, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5173([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1456([a, b, e, h, f, i, g, k], is_dual)
    } else {
        select_1716([g, a, b, c, d, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_294([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_61([a, c, e, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_5174([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_987([b, d, e, g, f, h, j, i, m], is_dual)
    } else {
        select_5175([a, b, c, d, i, h, g, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5172([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5173([a, c, b, d, f, i, j, h, k, g, m], is_dual)
    } else {
        select_5174([b, a, d, c, e, f, h, g, i, k, j, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_5178([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_213([g, j, k, a, b, f, d], !is_dual)
    } else {
        select_128([b, c, d, g, e, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_5179([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_38([a, b, c, f, e, g, h], is_dual)
    } else {
        select_55([c, d, g, e, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_5177([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5178([a, b, c, f, e, i, g, h, k, j, l], is_dual)
    } else {
        select_5179([a, b, d, h, f, j, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5176([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_5177([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_187([a, i, b, d, j, f, g, l, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_5171([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5172([a, c, b, d, e, g, f, i, h, j, k, l, m], is_dual)
    } else {
        select_5176([c, d, e, a, g, f, i, b, h, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_5183([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_700([a, c, f, e, d, h, g], is_dual)
    } else {
        select_892([a, c, b, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1456([d, a, c, e, g, f, h, i], is_dual)
    } else {
        select_5183([b, f, c, d, g, e, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_5184([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_120([a, d, e, c, f, h], is_dual)
    } else {
        select_4368([g, d, h, a, e, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5181([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5182([a, b, c, d, f, e, g, j, i, h], is_dual)
    } else {
        select_5184([a, b, g, d, f, h, e, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5187([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_499([a, c, f, e, b, g, h, i], is_dual)
    } else {
        select_3931([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5186([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1288([a, g, b, e, f, i, j, k, h, l], is_dual)
    } else {
        select_5187([a, h, d, c, f, g, k, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5188([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2634([d, e, c, a, f, h, g, i, j], is_dual)
    } else {
        select_4746([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_5185([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5186([a, b, d, c, f, e, g, h, j, k, i, l], is_dual)
    } else {
        select_5188([a, f, d, h, i, g, j, e, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5180([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5181([a, i, c, j, e, b, f, h, l, k], is_dual)
    } else {
        select_5185([a, c, b, d, e, f, g, h, k, i, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5170([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5171([b, c, a, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_5180([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5193([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_198([h, g, j, e, i, a, b, f], !is_dual)
    } else {
        select_314([b, d, c, e, h, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5192([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5193([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3895([b, c, f, e, a, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5194([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3819([b, a, c, h, e, f, j, k, i], is_dual)
    } else {
        select_1095([a, b, d, e, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5191([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5192([a, f, b, d, h, g, e, j, i, k], is_dual)
    } else {
        select_5194([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5196([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_358([g, j, h, f, i, a, e, b, d], !is_dual)
    } else {
        select_365([h, g, j, e, i, a, f, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5198([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1979([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_434([a, c, d, f, e, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5197([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5104([f, b, c, d, g, e, i, h, j, k], is_dual)
    } else {
        select_5198([e, b, a, d, g, h, f, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5195([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5196([a, b, g, c, h, f, e, i, j, k], is_dual)
    } else {
        select_5197([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5190([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5191([a, c, d, e, b, g, f, h, i, j, k], is_dual)
    } else {
        select_5195([b, c, e, d, a, f, g, h, i, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_5199([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_79([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1464([a, f, g, c, e, h, b], is_dual)
    }
}
/// n = 12, i = 5
fn select_5189([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_5190([b, a, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_5199([b, h, k, i, a, f, c, j], !is_dual)
    }
}
/// n = 13, i = 5
fn select_5169([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_5170([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5189([a, b, c, h, d, g, i, j, k, l, f, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5129([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5130([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_5169([a, b, d, c, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5128([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5129([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5129([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5206([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_67([a, c, d, h, f, g], is_dual)
    } else {
        select_1124([i, h, a, g, e, c, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5207([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_294([a, b, f, c, e, h, g, i], is_dual)
    } else {
        select_216([b, e, c, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5205([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5206([a, b, c, d, f, e, g, i, h], is_dual)
    } else {
        select_5207([b, a, c, d, f, e, i, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5209([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1290([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4570([e, i, j, g, b, a, h, c, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5211([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_98([b, a, e, g, h, i], is_dual)
    } else {
        select_53([a, e, c, d, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_5210([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_725([i, f, k, j, a, h, e, g, b], !is_dual)
    } else {
        select_5211([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5208([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5209([b, a, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_5210([e, j, g, k, h, a, i, f, b, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5204([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5205([b, a, c, d, f, e, h, i, g], is_dual)
    } else {
        select_5208([h, e, j, k, a, i, b, f, g, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5214([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_203([c, a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_68([i, j, a, e, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5213([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5214([c, d, b, f, g, e, a, j, i, h], is_dual)
    } else {
        select_949([b, c, a, d, f, g, e, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5215([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1769([a, b, c, e, f, g, h, d, i], is_dual)
    } else {
        select_4611([b, c, a, e, f, d, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5212([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5213([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_5215([i, e, j, b, a, h, f, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5203([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5204([a, b, g, c, e, f, i, j, k, h, l], is_dual)
    } else {
        select_5212([a, b, f, d, e, h, g, j, k, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_5218([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_80([a, c, b, d, e, f, h], is_dual)
    } else {
        select_80([b, d, a, c, f, e, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_5220([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2789([i, h, d, j, k, f, g, a, b, e], !is_dual)
    } else {
        select_1328([d, b, c, f, e, h, g, k, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5221([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_699([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_2355([f, h, i, d, g, a, b, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5219([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5220([b, a, c, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_5221([d, e, c, a, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5218([d, j, e, k, g, a, b, h], !is_dual)
    } else {
        select_5219([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5223([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_373([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_117([a, d, e, h, f, k, g, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5225([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1797([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1797([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5224([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5225([b, c, d, a, e, h, g, f, i], is_dual)
    } else {
        select_4118([g, i, j, e, h, a, b, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5222([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5223([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5224([a, c, d, g, f, b, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5216([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5217([j, f, l, a, h, k, b, i, g, c, d], !is_dual)
    } else {
        select_5222([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5202([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5203([a, c, e, d, f, g, h, i, b, j, k, l], is_dual)
    } else {
        select_5216([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_5230([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_246([a, b, g, d, e, f, h, i, j], is_dual)
    } else {
        select_142([c, f, d, e, b, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5231([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_240([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_2677([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5229([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5230([a, d, e, b, c, f, g, h, i, k], is_dual)
    } else {
        select_5231([a, b, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5233([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_677([c, b, d, e, f, a, g, i, h], is_dual)
    } else {
        select_792([c, a, d, e, f, b, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_980([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_5233([g, i, e, j, k, a, f, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5228([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5229([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_5232([f, k, l, h, a, i, b, j, c, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5237([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2474([a, c, e, d, g, f, i, j], is_dual)
    } else {
        select_2836([a, b, f, d, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5238([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_61([a, b, g, i, j], is_dual)
    } else {
        select_252([c, d, e, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_5237([a, b, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_5238([g, i, d, j, k, e, h, a, b, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5235([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3708([c, a, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5236([j, f, l, a, h, k, b, i, d, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5234([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3681([f, h, l, a, i, k, b, j, c, d, g], !is_dual)
    } else {
        select_5235([a, b, d, c, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5227([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5228([a, b, c, e, d, f, h, i, g, k, j, l], is_dual)
    } else {
        select_5234([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5241([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1183([a, d, b, e, f, c, h, g, i], is_dual)
    } else {
        select_3182([a, d, c, e, f, b, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_5242([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_80([d, a, b, c, e, g, f], is_dual)
    } else {
        select_67([d, a, f, e, c, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_5240([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_5241([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_5242([a, d, g, b, f, h, c], is_dual)
    }
}
/// n = 9, i = 3
fn select_5245([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_878([b, c, e, a, f, d, g, i, h], is_dual)
    } else {
        select_724([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5244([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5245([a, c, f, b, e, g, i, h, j], is_dual)
    } else {
        select_3370([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5243([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_298([i, h, k, l, f, g, a, j, b, c], !is_dual)
    } else {
        select_5244([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5239([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_5240([f, k, l, h, i, a, g, b, j], !is_dual)
    } else {
        select_5243([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5226([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_5227([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_5239([a, b, c, d, e, f, h, i, j, k, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5201([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5202([a, b, d, c, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_5226([f, k, l, g, m, a, b, i, c, h, j, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5200([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5201([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5201([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5127([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_5128([a, b, e, d, c, f, h, g, i, j, l, m, k], is_dual)
    } else {
        select_5200([a, b, c, d, e, i, h, j, l, k, m, g, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5126([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5127([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5127([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_5253([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_857([e, h, j, a, i, f, b, c, g], !is_dual)
    } else {
        select_1813([a, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5255([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_250([a, j, k, f, b, i], !is_dual)
    } else {
        select_161([a, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5254([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5255([b, a, c, d, e, f, g, h, i, k, l], is_dual)
    } else {
        select_4625([f, j, k, l, a, h, i, b, c, g, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5252([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5253([f, j, k, l, a, h, b, c, i, g], !is_dual)
    } else {
        select_5254([a, c, b, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5258([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_468([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_70([a, h, j, b, i, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5257([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_873([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_5258([b, a, c, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5256([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5257([a, b, d, e, c, f, g, i, h, k, l], is_dual)
    } else {
        select_5235([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5251([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5252([a, b, c, d, e, f, h, i, j, k, l, g], is_dual)
    } else {
        select_5256([a, c, b, d, e, f, g, h, i, l, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5250([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5251([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_5251([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5249([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5250([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_5250([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1995([a, b, c, d, f, e, g, h, i, l, j, k], is_dual)
    } else {
        select_1677([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5248([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5249([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_5259([a, b, c, d, e, f, g, h, j, k, l, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5247([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5248([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    } else {
        select_1709([a, b, c, d, e, g, f, h, j, l, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5267([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_102([g, i, f, b, a, h, c], !is_dual)
    } else {
        select_161([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5266([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3751([i, k, j, g, f, b, c, a, h], !is_dual)
    } else {
        select_5267([b, c, d, e, f, g, j, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5265([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2765([b, c, d, h, f, a, g, i, j, k], is_dual)
    } else {
        select_5266([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5271([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_292([b, a, c, e, h, i, g], is_dual)
    } else {
        select_487([b, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5270([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4777([h, j, i, e, f, a, b, g, c], !is_dual)
    } else {
        select_5271([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5272([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_67([e, a, c, d, g, f], is_dual)
    } else {
        select_2413([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5269([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5270([a, c, d, b, e, f, g, h, j, i], is_dual)
    } else {
        select_5272([a, c, g, f, e, b, i, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5268([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_5269([g, j, d, k, h, e, i, f, a, b], !is_dual)
    } else {
        select_5123([b, a, c, e, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5264([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5265([c, a, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_5268([f, k, l, a, g, j, b, c, i, h, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5263([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5264([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_5264([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_5277([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_571([a, f, b, d, h, e, i, g, k], is_dual)
    } else {
        select_571([a, e, c, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5276([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5277([a, b, c, d, f, g, e, h, j, i, k], is_dual)
    } else {
        select_4733([a, c, b, d, g, e, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5278([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1485([b, a, c, d, f, g, e, h, i], is_dual)
    } else {
        select_2033([a, g, b, c, f, h, i, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5276([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_5278([d, j, k, h, a, e, i, f, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5279([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5061([g, k, l, j, a, e, i, f, h, c, d], !is_dual)
    } else {
        select_5276([a, b, d, g, e, f, h, j, k, l, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5275([e, b, d, a, f, g, h, j, i, k, l], is_dual)
    } else {
        select_5279([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5281([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2876([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2876([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5285([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_95([e, d, b, c, g, f, i], is_dual)
    } else {
        select_361([f, a, d, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5284([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1528([f, b, d, a, e, h, g, j], is_dual)
    } else {
        select_5285([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5283([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1485([b, a, c, e, f, h, g, j, i], is_dual)
    } else {
        select_5284([a, b, d, c, f, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5282([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5061([g, b, c, e, a, f, h, j, i, k, l], is_dual)
    } else {
        select_5283([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5280([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5281([a, g, c, d, h, f, b, i, j, l], is_dual)
    } else {
        select_5282([a, c, d, e, b, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5273([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5274([a, e, c, d, f, g, h, i, j, b, k, l], is_dual)
    } else {
        select_5280([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5262([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_5263([a, b, f, j, k, m, c, l, g, h, i, e], !is_dual)
    } else {
        select_5273([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5261([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5262([a, b, c, d, e, f, h, i, g, k, l, j, m], is_dual)
    } else {
        select_1761([a, b, f, k, m, l, c, g, h, d, j, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5260([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5261([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5261([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5246([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5247([a, b, c, d, l, g, m, j, k, e, i, h], !is_dual)
    } else {
        select_5260([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5125([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_5126([a, b, c, d, f, e, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5246([a, b, c, d, f, i, h, j, k, e, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5021([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5022([a, b, c, d, e, f, g, h, i, j, l, k, n, m], is_dual)
    } else {
        select_5125([a, b, c, d, e, f, g, h, j, l, k, i, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5296([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_67([h, e, i, a, f, b], !is_dual)
    } else {
        select_565([a, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5295([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1564([a, c, d, b, e, f, g, h, j], is_dual)
    } else {
        select_5296([a, b, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5294([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1593([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5295([a, d, b, c, f, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5298([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2264([f, k, l, a, b, j, h, i, g], !is_dual)
    } else {
        select_1631([b, a, e, c, d, f, g, h, j, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5297([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1969([b, a, g, e, f, c, h, j, i, k], is_dual)
    } else {
        select_5298([a, b, c, d, e, f, h, g, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5293([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5294([b, a, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_5297([f, g, a, l, m, b, j, k, h, i, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5301([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_109([a, i, j, e, f, h, g, c, d], !is_dual)
    } else {
        select_1914([a, b, d, e, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5303([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4448([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_3496([a, c, d, e, b, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1367([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_5303([a, b, d, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5301([a, c, d, h, f, b, g, j, i, k], is_dual)
    } else {
        select_5302([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5306([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3141([a, c, b, d, e, f, g, i, h, k], is_dual)
    } else {
        select_565([a, b, d, f, e, h, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_5307([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_565([f, h, i, k, d, e, a, g], !is_dual)
    } else {
        select_3139([f, j, h, k, d, i, g, b, c, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5305([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5306([e, h, j, k, a, i, g, f, b, c, d], !is_dual)
    } else {
        select_5307([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5304([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5305([a, i, l, k, b, j, f, c, h, e, g], !is_dual)
    } else {
        select_3142([a, b, e, d, f, h, i, g, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5299([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5300([a, c, b, d, e, f, h, i, g, j, l], is_dual)
    } else {
        select_5304([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5292([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5293([a, f, g, l, m, b, c, j, k, h, i, d, e], !is_dual)
    } else {
        select_5299([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5278([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_5278([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5309([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5310([a, e, f, c, d, h, g, j, i, k], is_dual)
    } else {
        select_3127([a, e, h, l, m, j, f, k, b, g, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5308([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5309([a, f, l, m, b, g, k, c, j, h, i, d, e], !is_dual)
    } else {
        select_5309([a, g, l, m, c, f, k, b, j, h, i, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5291([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5292([a, f, g, j, m, b, c, k, l, h, i, d, e], !is_dual)
    } else {
        select_5308([a, f, g, k, m, b, c, j, l, i, h, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5290([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5291([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5291([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_5318([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_68([h, d, e, b, f], !is_dual)
    } else {
        select_212([a, c, b, e, d, h, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5317([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5318([i, g, j, e, h, a, b, c, f], !is_dual)
    } else {
        select_831([a, c, e, d, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5316([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1295([a, g, e, c, d, f, i, h, k], is_dual)
    } else {
        select_5317([e, j, k, l, f, i, a, g, h, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_5322([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_129([a, c, h, d, f, g, j], is_dual)
    } else {
        select_129([b, c, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5321([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5322([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_5322([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5321([c, d, a, e, f, g, b, h, i, j], is_dual)
    } else {
        select_5321([c, d, b, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5319([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5320([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2966([d, c, a, b, g, f, h, i, j, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_5315([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5316([a, d, b, c, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_5319([b, c, d, a, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5326([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, d, c, e, g, f, i], is_dual)
    } else {
        select_103([i, j, d, h, a, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5325([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2053([a, f, c, i, e, g, j, k, l], is_dual)
    } else {
        select_5326([a, b, d, e, f, g, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5324([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1608([f, b, e, d, i, g, h, k, j], is_dual)
    } else {
        select_5325([a, c, b, g, e, f, j, h, k, l, i, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_5328([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3207([a, c, d, e, g, f, i, h, j, k], is_dual)
    } else {
        select_3088([j, g, l, a, b, k, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5329([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_699([i, k, g, j, a, b, h, c, d], !is_dual)
    } else {
        select_1731([a, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5327([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5328([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_5329([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5323([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5324([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_5327([a, e, g, b, d, h, f, k, j, i, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5314([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5315([a, c, h, d, e, f, i, j, g, l, k, m], is_dual)
    } else {
        select_5323([a, b, d, c, e, f, i, g, j, h, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_5332([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_947([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_1767([f, h, k, e, j, b, a, i, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5331([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5332([f, g, i, k, a, b, j, c, h, d, e], !is_dual)
    } else {
        select_2032([a, g, i, k, f, b, j, c, h, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5335([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_214([f, a, e, d, i, h, j, g], is_dual)
    } else {
        select_1094([b, c, a, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_5337([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_71([e, d, g, f, a, c], !is_dual)
    } else {
        select_71([e, d, f, g, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5336([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4030([b, d, e, a, f, i, h, g], is_dual)
    } else {
        select_5337([i, j, f, a, b, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5334([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5335([b, a, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_5336([e, g, a, b, d, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_5340([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_382([h, d, i, f, e, a], !is_dual)
    } else {
        select_4522([a, c, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5339([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_270([a, g, c, d, e, f, h, j], is_dual)
    } else {
        select_5340([a, h, b, f, g, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5338([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5339([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_223([e, a, b, d, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5333([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5334([a, b, d, h, e, f, i, g, j, l, k], is_dual)
    } else {
        select_5338([a, c, d, g, e, f, i, h, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_5330([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_5331([e, a, h, b, i, g, k, l, f, m, n], is_dual)
    } else {
        select_5333([b, c, a, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_5313([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_5314([b, a, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_5330([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5312([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5313([a, b, c, d, e, h, g, i, j, f, k, l, m, n], is_dual)
    } else {
        select_5313([b, a, c, d, e, h, f, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5311([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5312([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5312([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5289([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_5290([a, b, h, d, j, e, g, i, k, l, c, m, n], is_dual)
    } else {
        select_5311([a, b, d, c, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5288([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5289([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5289([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_5350([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_96([b, d, c, e, g, f, h], is_dual)
    } else {
        select_340([a, c, f, e, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5349([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_618([j, h, g, k, a, e, i, b], !is_dual)
    } else {
        select_5350([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5348([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2939([a, e, b, d, g, h, f, i, j], is_dual)
    } else {
        select_5349([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5347([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3157([b, a, c, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_5348([f, k, e, m, a, i, l, b, j, g, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5346([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5347([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5347([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5354([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_280([a, f, e, i, j, h, b, g], !is_dual)
    } else {
        select_144([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5354([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_282([a, f, i, e, k, b, j, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5352([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5353([a, c, h, d, f, b, g, i, j, k, l], is_dual)
    } else {
        select_4588([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5357([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_110([a, b, c, g, e, i, j], is_dual)
    } else {
        select_331([a, b, e, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5358([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_834([a, j, k, e, i, b, c, g], !is_dual)
    } else {
        select_331([a, c, e, d, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5356([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5357([a, b, c, d, e, g, h, f, i, k], is_dual)
    } else {
        select_5358([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5359([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_330([a, b, e, c, d, f, g, h, i, k], is_dual)
    } else {
        select_1988([a, b, c, d, g, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5355([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_5356([a, c, g, e, b, f, h, i, j, k, l], is_dual)
    } else {
        select_5359([a, c, b, d, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5351([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5352([a, b, h, l, m, e, j, k, i, f, g, d], !is_dual)
    } else {
        select_5355([a, b, h, l, m, e, j, k, f, i, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5345([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_5346([a, b, f, l, m, c, j, k, g, i, d, h, e], !is_dual)
    } else {
        select_5351([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5360([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3135([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3135([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5344([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5345([a, b, c, g, m, d, j, l, k, h, i, e, f], !is_dual)
    } else {
        select_5360([a, b, c, j, m, g, l, d, k, h, i, e, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_385([a, i, g, j, f, h, b, c, e], !is_dual)
    } else {
        select_1456([a, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_5367([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_67([e, a, h, f, g, b], !is_dual)
    } else {
        select_303([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5365([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5366([a, b, e, d, f, h, i, g, k, j], is_dual)
    } else {
        select_5367([a, c, e, g, h, j, f, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5364([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5365([a, c, b, e, h, g, i, f, k, l, j], is_dual)
    } else {
        select_3131([a, b, c, d, f, i, g, h, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5370([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_910([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1731([a, c, b, d, e, g, f, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5033([f, j, e, k, i, a, h, c, b, g], !is_dual)
    } else {
        select_5370([b, c, a, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2032([a, i, h, k, e, b, j, g, f, d], !is_dual)
    } else {
        select_5369([e, h, i, k, a, b, j, f, g, c, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5363([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5364([a, b, d, c, e, g, f, h, i, k, j, l], is_dual)
    } else {
        select_5368([a, b, e, h, g, j, i, f, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5362([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3126([a, f, l, n, b, i, m, g, k, j, h, d, c], !is_dual)
    } else {
        select_5363([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5361([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5362([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5362([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5343([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_5344([a, b, c, g, h, e, j, d, i, l, k, m, n], is_dual)
    } else {
        select_5361([a, b, c, e, d, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_5376([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2651([a, f, d, e, b, g, h, i, j, k], is_dual)
    } else {
        select_2652([a, b, c, d, e, g, h, f, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5375([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5376([a, b, d, c, e, f, g, h, i, k, l], is_dual)
    } else {
        select_412([a, f, j, l, b, g, c, i, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5374([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3149([a, b, f, d, e, h, i, g, j, k, l], is_dual)
    } else {
        select_5375([a, e, h, m, n, k, f, l, i, b, j, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5373([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5374([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_3135([a, f, g, d, i, b, h, e, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5372([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5373([a, b, d, e, c, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5373([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 6
fn select_5377([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3125([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3125([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5371([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5372([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_5377([a, b, c, i, k, n, f, l, m, j, g, h, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5342([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_5343([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5371([a, b, c, f, e, g, h, i, j, k, d, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_5385([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3171([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_241([a, d, f, e, g, b, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_5387([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_292([f, a, b, e, d, g, h], is_dual)
    } else {
        select_103([h, g, e, f, a, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5386([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5387([b, g, d, a, e, f, i, j], is_dual)
    } else {
        select_197([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5384([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5385([b, f, a, d, e, h, g, j, i, l], is_dual)
    } else {
        select_5386([a, c, b, g, f, i, e, h, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_5390([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_803([a, c, b, d, e, f, h, g], is_dual)
    } else {
        select_122([d, b, a, f, g, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_5389([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4640([a, c, b, e, f, g, h, d, i], is_dual)
    } else {
        select_5390([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1287([d, i, k, h, e, g, j, a, f, c], !is_dual)
    } else {
        select_5389([b, e, c, d, g, i, h, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5383([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5384([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    } else {
        select_5388([k, h, l, a, i, j, f, g, b, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5392([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_109([a, e, i, b, f, h, g, d, c], !is_dual)
    } else {
        select_5221([a, f, i, e, h, b, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_298([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_5392([g, f, i, j, a, b, c, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5382([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5383([e, i, l, m, j, f, k, a, g, b, c, h], !is_dual)
    } else {
        select_5391([a, b, g, d, f, e, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_624([f, j, k, g, i, a, b, d, e], !is_dual)
    } else {
        select_213([b, c, g, f, h, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5396([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5397([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_826([h, k, g, i, a, f, e, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5398([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1227([e, i, j, a, h, f, b, g, d], !is_dual)
    } else {
        select_331([a, e, c, d, g, f, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5395([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5396([a, c, b, g, e, f, i, j, k, h, l], is_dual)
    } else {
        select_5398([a, c, f, d, e, h, g, k, i, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_5401([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_487([h, a, f, e, i], is_dual)
    } else {
        select_96([d, e, b, c, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_5400([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5401([b, a, f, d, e, g, h, i, k], is_dual)
    } else {
        select_1254([a, e, g, c, h, f, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_5403([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_38([a, b, d, c, e, g, f], is_dual)
    } else {
        select_39([a, b, f, c], is_dual)
    }
}
/// n = 11, i = 3
fn select_5404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_375([a, b, d, e, f, h, i, k, j], is_dual)
    } else {
        select_266([a, b, c, f, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5402([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5403([a, b, i, e, g, k, h], is_dual)
    } else {
        select_5404([c, e, d, a, b, g, f, h, k, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5399([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5400([c, b, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_5402([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_5394([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_5395([k, i, l, n, a, f, m, b, g, c, j, d], !is_dual)
    } else {
        select_5399([a, c, d, b, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5408([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_98([f, d, a, g, e, h], is_dual)
    } else {
        select_2898([d, b, a, c, e, h, f, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_5407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3345([a, e, d, b, h, g, j, f, k], is_dual)
    } else {
        select_5408([b, e, c, a, f, h, j, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_5406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2077([b, a, e, f, h, c, i, g, k, j], is_dual)
    } else {
        select_5407([a, b, d, e, c, g, h, f, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5411([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_68([a, b, d, e, i], is_dual)
    } else {
        select_130([d, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5410([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2458([c, a, b, d, f, g, e, i, h], is_dual)
    } else {
        select_5411([c, d, b, f, g, e, a, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5409([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_723([b, f, a, c, e, g, i, h, j], is_dual)
    } else {
        select_5410([a, b, c, d, h, i, f, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5405([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5406([a, c, b, e, h, g, f, i, k, j, l], is_dual)
    } else {
        select_5409([c, b, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_5393([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5394([a, b, d, c, e, f, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_5405([b, c, a, e, d, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_5381([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_5382([i, l, k, n, b, f, a, m, c, g, j, d, h], !is_dual)
    } else {
        select_5393([b, c, a, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5380([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5381([a, c, b, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_5381([b, c, a, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5379([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5380([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5380([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5378([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5379([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5379([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5341([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5342([a, b, c, d, g, f, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_5378([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5287([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5288([a, b, c, d, e, g, f, h, i, j, l, m, k, n], is_dual)
    } else {
        select_5341([a, b, c, d, e, f, g, h, j, i, k, m, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5421([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1417([b, f, d, e, a, g, h, i], is_dual)
    } else {
        select_5065([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5420([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5421([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_2907([a, b, d, e, f, c, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5423([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_67([a, b, c, g, h, i], is_dual)
    } else {
        select_2858([a, c, b, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_5422([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5423([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_5211([c, b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5419([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_5420([a, b, i, h, j, k, f, g, c], !is_dual)
    } else {
        select_5422([a, c, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5424([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1178([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_1959([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5418([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5419([a, b, i, k, l, g, j, c, d, f, h], !is_dual)
    } else {
        select_5424([a, b, c, d, e, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5064([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1576([f, c, b, e, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5427([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_287([a, d, b, c, h, g, f, i], is_dual)
    } else {
        select_5428([a, d, c, b, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5431([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_361([f, a, b, h, i, e, j], is_dual)
    } else {
        select_34([g, c, d, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5432([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_235([a, b, d, e, g, f, i, h], is_dual)
    } else {
        select_91([a, b, c, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5430([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5431([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_5432([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5429([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1724([a, g, j, k, f, h, c, d, e], !is_dual)
    } else {
        select_5430([a, f, i, j, k, g, h, b, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5426([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5427([a, c, d, e, g, f, i, h, j], is_dual)
    } else {
        select_5429([a, c, b, d, h, f, g, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_5434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3741([b, d, c, e, a, f, g, h, i, j], is_dual)
    } else {
        select_2216([b, d, a, e, f, c, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5433([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5434([a, b, e, c, d, f, h, i, g, j], is_dual)
    } else {
        select_5434([a, b, e, d, c, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5425([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5426([a, d, c, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_5433([a, d, b, f, e, g, c, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5417([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5418([a, b, c, d, f, e, h, i, g, j, k, l], is_dual)
    } else {
        select_5425([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5438([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_222([e, g, b, d, a, f, h, i], is_dual)
    } else {
        select_2432([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5437([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5438([a, c, d, b, f, e, h, g, i], is_dual)
    } else {
        select_659([a, d, g, f, b, h, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_330([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_425([a, b, c, h, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5436([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5437([a, c, d, h, f, b, g, i, j], is_dual)
    } else {
        select_5439([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_864([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_5436([a, b, c, e, f, g, h, i, d, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5416([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_5417([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_5435([a, b, d, e, c, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4301([b, c, d, e, h, g, a, i, j, k], is_dual)
    } else {
        select_777([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5446([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1208([a, c, e, d, f, g, h, i], is_dual)
    } else {
        select_214([a, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5445([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5446([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_4009([c, b, e, g, f, a, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5449([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2769([a, b, c, f, g, e, i, h], is_dual)
    } else {
        select_314([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5450([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_77([b, c, d, g, e, f, h], is_dual)
    } else {
        select_32([a, b, d, f, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5448([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5449([b, d, e, c, f, a, g, h, i], is_dual)
    } else {
        select_5450([b, d, e, a, f, c, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5451([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2592([a, c, d, e, f, h], is_dual)
    } else {
        select_1459([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5447([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5448([a, i, j, k, l, g, b, c, h], !is_dual)
    } else {
        select_5451([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5444([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5445([a, j, k, l, g, i, b, c, h], !is_dual)
    } else {
        select_5447([a, b, c, d, e, f, g, h, j, k, l, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5442([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5443([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_5444([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1497([b, a, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_527([e, b, d, a, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5454([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5455([a, b, c, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_122([f, b, a, j, i, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_5453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3244([a, c, b, d, e, g, h, f, i, j], is_dual)
    } else {
        select_5454([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_5457([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2343([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_735([a, b, c, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5456([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5457([a, c, b, e, d, f, h, g, i, j], is_dual)
    } else {
        select_1440([a, c, g, e, f, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5452([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_5453([a, b, c, e, f, g, d, h, j, i, k], is_dual)
    } else {
        select_5456([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5441([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_5442([a, c, d, e, f, b, h, g, i, j, k, l], is_dual)
    } else {
        select_5452([a, h, g, j, k, m, b, l, c, d, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5440([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5441([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_5441([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5415([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5416([a, b, c, e, f, g, d, i, h, j, k, l], is_dual)
    } else {
        select_5440([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_5464([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1616([a, b, h, c, e, f, g, j, i, k], is_dual)
    } else {
        select_1548([a, f, d, i, e, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5466([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_436([b, c, d, f, g, h, i, j], is_dual)
    } else {
        select_128([a, c, b, e, g, f, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_5467([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_77([b, c, d, h, f, g, i], is_dual)
    } else {
        select_644([a, c, b, e, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5465([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_5466([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_5467([a, g, b, d, e, f, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5463([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5464([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_5465([c, b, e, d, f, a, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5462([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1740([a, b, c, g, e, i, h, f, j, k], is_dual)
    } else {
        select_5463([b, c, a, e, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5470([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1185([a, i, b, c, g, h, f, j, k], is_dual)
    } else {
        select_708([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5469([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5470([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_5470([a, c, d, e, f, g, b, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5468([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5469([a, b, c, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_777([c, a, d, e, b, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5461([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5462([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_5468([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5460([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5461([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_5461([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5475([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2204([i, j, e, g, a, h, c, b, f], !is_dual)
    } else {
        select_157([b, e, a, d, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5474([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4119([b, c, f, e, h, a, i, g, j], is_dual)
    } else {
        select_5475([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5479([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([h, i, e, c, f, a], !is_dual)
    } else {
        select_33([g, b, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_5478([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_820([a, c, d, e, g, f, h, j], is_dual)
    } else {
        select_5479([i, j, f, h, e, g, a, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5480([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_52([i, e, j, h, d, a], !is_dual)
    } else {
        select_34([g, b, c, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_5477([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5478([i, g, j, k, h, a, f, d, e, b], !is_dual)
    } else {
        select_5480([b, a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5481([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_699([i, j, f, h, a, b, g, c, d], !is_dual)
    } else {
        select_62([g, i, d, c, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5476([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5477([a, c, b, e, d, g, i, f, h, j, k], is_dual)
    } else {
        select_5481([a, h, j, i, k, f, g, e, d, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5473([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5474([a, c, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_5476([a, c, d, f, g, b, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5484([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_280([a, f, h, j, k, g, c, d], !is_dual)
    } else {
        select_224([h, i, f, j, k, a, e, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5485([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2472([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_2472([c, b, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5483([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5484([f, h, j, k, g, a, i, b, c, d, e], !is_dual)
    } else {
        select_5485([a, h, f, j, k, g, i, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5482([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_403([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_5483([a, j, g, k, l, b, h, c, i, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5472([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_5473([a, b, d, e, g, h, i, c, j, k, l], is_dual)
    } else {
        select_5482([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5471([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5472([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_5472([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5459([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5460([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_5471([a, b, c, d, e, f, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5486([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2331([a, b, c, h, l, m, d, k, e, j, i], !is_dual)
    } else {
        select_2602([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5458([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5459([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5486([a, b, c, d, f, e, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5414([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_5415([a, b, c, e, i, f, j, h, d, k, l, m, n], is_dual)
    } else {
        select_5458([a, b, c, e, d, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5493([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_285([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_285([a, c, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5494([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4963([a, c, b, g, h, i, j, f, k], is_dual)
    } else {
        select_2343([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5492([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_5493([a, c, g, e, f, b, h, j, i], is_dual)
    } else {
        select_5494([a, c, b, d, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5498([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_626([b, a, c, f, g, e, i, h], is_dual)
    } else {
        select_314([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5497([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_237([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_5498([b, a, h, c, f, g, e, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2271([a, b, g, c, f, j, i, h, k], is_dual)
    } else {
        select_5497([b, a, e, d, f, h, i, g, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5500([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3011([a, b, d, f, g, i, e, j, h], is_dual)
    } else {
        select_1056([b, e, c, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5499([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1741([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_5500([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5495([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5496([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_5499([g, b, e, d, a, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5491([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5492([a, g, c, h, e, f, b, i, j, k, l], is_dual)
    } else {
        select_5495([a, c, d, e, b, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_5504([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_639([g, d, h, i, a, e, f, c], !is_dual)
    } else {
        select_1088([e, g, h, d, f, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5503([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4608([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5504([h, j, e, a, f, i, b, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5507([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_95([f, e, h, i, a, b, g], !is_dual)
    } else {
        select_314([b, d, a, c, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5506([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5507([f, g, i, j, a, e, h, c, d], !is_dual)
    } else {
        select_1088([e, f, i, g, h, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5505([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4608([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5506([h, j, e, k, f, b, a, i, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5502([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5503([a, h, i, k, e, f, j, b, g, c], !is_dual)
    } else {
        select_5505([e, h, i, k, a, f, j, b, g, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5509([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1874([a, g, i, h, j, b, f, d], !is_dual)
    } else {
        select_696([a, g, h, i, k, j, e, f, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_5509([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_5509([a, h, i, k, f, j, b, c, d, g, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5501([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5502([a, b, g, c, e, i, f, j, h, k, l], is_dual)
    } else {
        select_5508([a, e, b, f, d, h, g, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_5490([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_5491([c, a, d, e, b, f, h, i, g, j, k, l], is_dual)
    } else {
        select_5501([f, l, j, n, a, g, m, b, c, h, k, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5489([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5490([a, b, c, d, e, h, g, i, j, f, k, l, m, n], is_dual)
    } else {
        select_5490([b, a, c, d, e, h, f, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5488([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5489([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5489([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5487([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5488([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5488([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5413([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5414([a, b, c, d, f, e, g, h, j, i, k, m, l, n], is_dual)
    } else {
        select_5487([a, b, c, d, e, f, g, h, i, j, l, n, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_5518([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_917([c, d, a, b, f, g, e, h], is_dual)
    } else {
        select_917([c, d, b, a, e, g, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5517([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1875([e, d, c, f, i, h, k, l, g], is_dual)
    } else {
        select_5518([a, b, c, g, e, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5516([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5517([a, b, c, d, e, f, g, j, h, k, i, l], is_dual)
    } else {
        select_3953([i, e, l, j, k, a, g, f, h, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5515([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5516([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5516([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5514([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_5515([a, b, c, d, e, f, h, g, i, j, l, k], is_dual)
    } else {
        select_2881([a, b, c, d, h, j, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_5524([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_100([j, g, e, k, h, d, f, a], !is_dual)
    } else {
        select_205([b, c, e, g, i, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_5523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5524([b, d, c, f, g, e, i, k, h, l, j], is_dual)
    } else {
        select_1225([a, b, e, f, g, d, h, j, k, l, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5525([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_167([a, b, d, e, g, h, j, f], is_dual)
    } else {
        select_382([a, c, f, g, i, d], is_dual)
    }
}
/// n = 12, i = 5
fn select_5522([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_5523([a, c, b, e, d, f, h, j, k, i, g, l], is_dual)
    } else {
        select_5525([b, c, e, g, f, h, k, d, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_5527([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_565([f, g, h, i, c, e, a, d], !is_dual)
    } else {
        select_157([h, i, f, g, c, d, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5526([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3185([k, l, i, j, h, d, e, f, a, c], !is_dual)
    } else {
        select_5527([b, c, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5521([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_5522([c, a, b, e, g, f, i, h, j, d, k, l], is_dual)
    } else {
        select_5526([b, c, a, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_5531([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_205([d, h, i, f, g, a], !is_dual)
    } else {
        select_118([e, f, h, i, d, g, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5530([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3171([g, h, k, j, d, i, e, a, b, f], !is_dual)
    } else {
        select_5531([b, c, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5529([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5530([a, c, f, d, e, h, g, k, l, i, m], is_dual)
    } else {
        select_857([d, b, e, g, i, f, j, k, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5533([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2405([g, h, j, k, d, i, e, a, b, f], !is_dual)
    } else {
        select_1773([a, c, e, d, g, h, f, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5535([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_71([f, h, i, d, a, g], !is_dual)
    } else {
        select_215([b, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5535([a, b, f, d, g, h, e, i, j], is_dual)
    } else {
        select_1773([a, c, e, d, g, i, f, j, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_5532([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5533([a, b, f, d, e, i, g, k, l, h, m], is_dual)
    } else {
        select_5534([a, c, e, d, f, h, g, j, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_5528([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_5529([b, c, a, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_5532([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5520([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5521([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5528([b, c, d, a, f, g, e, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5519([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5520([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5520([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5513([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_5514([a, b, j, k, m, l, g, i, c, d, e, h, f], !is_dual)
    } else {
        select_5519([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_5539([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1375([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_2338([a, i, k, g, l, b, c, j, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5538([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5539([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_5539([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_5543([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_84([a, b, d, e, h, g, i], is_dual)
    } else {
        select_603([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5544([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_560([a, e, c, d, f, g, i, j], is_dual)
    } else {
        select_386([a, g, b, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5542([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5543([a, b, c, e, d, g, f, h, i, j], is_dual)
    } else {
        select_5544([a, c, b, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5541([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3750([a, f, j, i, l, m, b, k, g, h, d], !is_dual)
    } else {
        select_5542([a, c, d, b, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5540([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5541([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5541([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5537([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_5538([a, b, c, i, l, k, m, h, d, j, e, g], !is_dual)
    } else {
        select_5540([a, b, c, e, f, d, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5550([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_238([a, c, d, f, e, g, i], is_dual)
    } else {
        select_103([h, i, e, f, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5549([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_921([b, c, d, e, a, f, g, h, j, i], is_dual)
    } else {
        select_5550([a, c, d, e, b, f, g, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_5551([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2889([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_3090([a, f, h, g, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5548([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5549([a, c, b, d, e, f, g, i, j, h], is_dual)
    } else {
        select_5551([a, i, j, f, h, c, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5547([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5548([a, i, l, j, k, b, g, c, f, h], !is_dual)
    } else {
        select_1369([a, b, d, e, g, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5553([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1924([a, b, d, e, f, g, h, j, i, l], is_dual)
    } else {
        select_4163([a, c, h, e, g, f, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5552([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5553([a, b, c, f, d, g, e, h, i, k, j, l], is_dual)
    } else {
        select_5553([a, b, c, f, e, g, d, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5546([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5547([a, b, e, c, d, f, i, h, g, k, l, j], is_dual)
    } else {
        select_5552([a, e, b, c, d, f, g, i, k, l, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5545([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5546([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_5546([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5536([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5537([a, b, c, e, f, d, g, i, j, h, m, k, l], is_dual)
    } else {
        select_5545([a, b, c, l, m, k, j, i, g, e, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5512([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5513([a, b, c, d, e, f, h, g, i, k, m, j, l], is_dual)
    } else {
        select_5536([a, b, c, e, d, f, h, g, j, k, m, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5511([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_5512([a, b, c, e, g, f, h, i, d, j, k, m, l], is_dual)
    } else {
        select_5512([a, b, c, k, m, l, h, j, d, i, e, g, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5560([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1914([e, g, h, a, b, f, d], !is_dual)
    } else {
        select_737([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_5562([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_660([b, c, d, a, e, g, f, h], is_dual)
    } else {
        select_2363([b, d, a, e, c, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5561([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4235([b, c, a, d, e, g, f, h, i], is_dual)
    } else {
        select_5562([g, e, i, h, a, c, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5559([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5560([h, e, i, a, f, g, c, b], !is_dual)
    } else {
        select_5561([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5564([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1827([a, b, d, e, f, g, i, j, h], is_dual)
    } else {
        select_845([a, f, h, i, j, c, g, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5566([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1476([a, d, b, c, f, e, h, i, g], is_dual)
    } else {
        select_4668([g, h, j, a, b, i, f, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_238([a, c, d, e, g, h, j], is_dual)
    } else {
        select_266([f, k, l, i, j, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5568([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_5568([b, a, c, d, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5565([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_5566([f, g, k, l, i, j, a, b, c, h], !is_dual)
    } else {
        select_5567([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5563([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5564([f, b, c, d, e, g, i, k, h, l], is_dual)
    } else {
        select_5565([b, a, d, c, e, g, f, h, j, i, m, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5558([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5559([f, c, e, h, g, a, j, k, i], is_dual)
    } else {
        select_5563([b, c, e, d, a, f, g, i, h, l, j, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5573([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_82([a, i, b, d, j], is_dual)
    } else {
        select_134([g, h, i, j, a, f, e, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_5574([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_61([c, d, b, e, f], is_dual)
    } else {
        select_382([c, g, d, e, a, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5572([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5573([a, c, b, e, d, f, g, h, i, j], is_dual)
    } else {
        select_5574([a, b, g, h, d, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5576([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_82([g, h, b, d, j], is_dual)
    } else {
        select_803([a, d, c, f, e, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5575([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_933([f, a, b, c, h, k, l, g], is_dual)
    } else {
        select_5576([c, d, b, e, g, f, i, j, k, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_5571([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_5572([a, d, c, e, g, f, i, j, k, l], is_dual)
    } else {
        select_5575([b, c, a, d, e, f, g, h, i, j, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_5580([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([a, f, c, e, h, j], is_dual)
    } else {
        select_62([b, g, d, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5579([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_68([i, e, a, b, g], !is_dual)
    } else {
        select_5580([a, c, b, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5581([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_98([b, d, e, h, i, k], is_dual)
    } else {
        select_2538([a, c, d, e, f, g, h, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5578([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5579([h, k, l, i, j, e, f, g, a, b, d], !is_dual)
    } else {
        select_5581([b, a, d, c, e, g, f, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_5584([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([i, k, j, d, g, a], !is_dual)
    } else {
        select_32([f, b, c, e, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5583([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_292([a, b, h, f, e, j, m], is_dual)
    } else {
        select_5584([k, l, j, i, h, f, g, b, c, e, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5582([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3055([k, e, m, i, f, a, h, b], !is_dual)
    } else {
        select_5583([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5577([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5578([c, b, a, d, f, e, g, j, k, i, h, l], is_dual)
    } else {
        select_5582([a, c, b, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5570([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5571([a, b, c, d, f, g, h, i, e, j, l, k, m], is_dual)
    } else {
        select_5577([l, j, m, k, g, i, h, e, b, c, f, d, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5586([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4154([b, d, c, e, f, a, g, h, i, j], is_dual)
    } else {
        select_616([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_5589([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_98([a, b, d, f, g, e], is_dual)
    } else {
        select_453([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_167([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_2660([a, c, d, b, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5588([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5589([c, e, d, f, a, g, h], is_dual)
    } else {
        select_5590([b, c, a, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4777([i, j, k, f, g, a, b, h, c], !is_dual)
    } else {
        select_1595([b, c, d, e, a, f, g, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5587([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5588([j, k, i, l, f, a, g, b, c, h], !is_dual)
    } else {
        select_5591([b, c, d, a, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5585([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5586([e, j, l, k, i, f, g, a, d, h], !is_dual)
    } else {
        select_5587([e, k, m, l, j, f, i, h, a, b, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5569([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5570([b, a, c, d, f, g, h, i, j, k, l, e, m], is_dual)
    } else {
        select_5585([b, c, a, d, f, e, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5557([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5558([a, b, c, e, d, f, g, i, h, k, l, j, m], is_dual)
    } else {
        select_5569([b, c, e, d, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5596([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1418([f, c, d, e, a, g, h], is_dual)
    } else {
        select_4508([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5595([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5596([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_2268([a, h, i, j, b, f, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5597([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4569([e, i, h, g, f, b, a, d, c], !is_dual)
    } else {
        select_3818([b, d, c, e, g, f, a, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5594([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5595([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_5597([a, i, j, h, c, f, b, d, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5600([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_224([a, b, c, d, e, f, h, i], is_dual)
    } else {
        select_516([c, d, f, a, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5599([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3436([b, c, d, f, g, h, a, i, j], is_dual)
    } else {
        select_5600([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_5602([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_140([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_386([a, c, f, e, b, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5601([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_570([a, e, d, b, f, h, i, g, k], is_dual)
    } else {
        select_5602([a, b, c, f, e, g, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5598([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5599([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_5601([a, j, i, l, b, k, g, f, c, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5593([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5594([a, e, i, m, j, k, f, b, h, c], !is_dual)
    } else {
        select_5598([a, e, l, m, i, j, k, h, b, f, g, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5606([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_246([a, b, g, d, e, f, h, j, k], is_dual)
    } else {
        select_1236([b, c, f, d, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5605([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5231([a, b, e, c, g, f, i, k, h], is_dual)
    } else {
        select_5606([a, c, d, b, e, f, g, h, j, i, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5608([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2394([a, b, c, h, i, g, e], is_dual)
    } else {
        select_5178([a, b, d, c, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5607([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_2792([b, a, h, c, i, g, j, e], is_dual)
    } else {
        select_5608([b, c, a, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5604([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5605([b, c, a, d, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_5607([b, c, e, d, f, g, i, h, a, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_5612([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_21([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_167([a, b, h, f, g, e, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5611([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_81([a, g, b, e, i, l], is_dual)
    } else {
        select_5612([c, d, a, b, e, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5614([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3604([a, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_1103([g, b, i, d, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_5616([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_62([f, i, b, e, c], !is_dual)
    } else {
        select_39([g, h, d, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5615([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5616([k, g, l, i, e, h, a, b, c], !is_dual)
    } else {
        select_2845([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5613([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5614([k, l, m, i, h, j, g, f, e, d, a, c], !is_dual)
    } else {
        select_5615([g, k, m, l, j, i, h, d, f, e, a, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5610([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5611([e, k, l, m, j, i, a, h, g, f, b, d], !is_dual)
    } else {
        select_5613([l, m, k, i, h, j, a, e, g, f, b, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5619([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_198([a, b, f, e, g, h, d, j], is_dual)
    } else {
        select_803([d, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5618([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5619([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_3895([a, e, b, d, f, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5620([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_203([b, a, c, d, f, e, g, i, j], is_dual)
    } else {
        select_643([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5617([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5618([a, c, d, b, f, e, g, h, i, j], is_dual)
    } else {
        select_5620([b, c, d, a, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5609([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5610([h, l, j, m, a, i, k, f, g, e, c, b, d], !is_dual)
    } else {
        select_5617([b, a, d, f, g, i, h, e, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5603([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5604([e, i, a, l, m, h, j, f, k, b, g, c], !is_dual)
    } else {
        select_5609([e, i, l, m, h, j, k, a, f, b, g, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5592([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5593([a, b, c, d, e, f, g, h, j, l, k, m, i], is_dual)
    } else {
        select_5603([a, c, b, d, e, f, g, h, j, l, i, m, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5556([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5557([a, b, d, e, c, f, g, i, h, l, j, k, m], is_dual)
    } else {
        select_5592([a, d, e, c, g, i, h, b, j, f, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5555([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5556([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5556([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_5625([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4083([b, c, d, e, f, g, h, a, i], is_dual)
    } else {
        select_4083([g, h, i, e, f, b, c, a, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5624([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5625([a, d, b, c, g, f, i, h, e], is_dual)
    } else {
        select_5625([a, d, c, b, g, e, i, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_5628([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_565([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_710([a, b, c, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5627([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3303([b, c, a, d, f, h, j, g], is_dual)
    } else {
        select_5628([a, d, e, b, c, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5630([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_618([a, c, e, d, f, h, g, j], is_dual)
    } else {
        select_4167([c, a, b, h, g, e, i, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5629([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5154([b, a, c, d, e, f, h, i, j, g], is_dual)
    } else {
        select_5630([b, c, a, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5626([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5627([c, a, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_5629([c, d, b, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5623([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_5624([a, d, g, c, h, b, f, j, i], is_dual)
    } else {
        select_5626([a, c, d, b, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5635([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_98([d, i, a, f, h, e], !is_dual)
    } else {
        select_1231([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5634([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_5635([g, i, d, e, h, a, b, f, c], !is_dual)
    } else {
        select_1812([g, h, i, e, d, f, b, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5633([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5634([a, d, b, e, h, f, j, i, g], is_dual)
    } else {
        select_3031([b, c, a, e, h, g, j, k, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5636([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1604([c, a, d, e, b, g, h, f, j, k, i], is_dual)
    } else {
        select_1609([b, d, c, a, e, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5632([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5633([f, j, l, k, a, i, h, g, d, c, b], !is_dual)
    } else {
        select_5636([a, c, b, d, e, f, g, i, h, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5631([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5632([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_5632([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5622([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_5623([a, b, f, e, g, h, c, j, k, i], is_dual)
    } else {
        select_5631([a, b, e, f, d, c, h, i, g, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_81([a, b, g, c, h, j], is_dual)
    } else {
        select_1236([c, d, e, a, b, g, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5643([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_700([b, c, d, f, e, h, g], is_dual)
    } else {
        select_186([e, f, i, a, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5642([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5643([h, j, f, i, a, e, g, b, c], !is_dual)
    } else {
        select_214([a, c, e, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5640([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5641([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_5642([c, b, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5646([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2902([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2902([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5645([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5646([a, b, c, d, e, f, h, i, j], is_dual)
    } else {
        select_516([b, c, e, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5647([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_38([b, c, e, d, f, g, h], is_dual)
    } else {
        select_2902([a, b, c, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5644([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5645([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_5647([a, c, d, e, b, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5639([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5640([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5644([a, b, c, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_5649([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2315([a, b, g, f, i, c, h], is_dual)
    } else {
        select_5267([a, b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5651([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_166([e, i, g, h, f, a, b, d, c], !is_dual)
    } else {
        select_5643([a, c, b, d, e, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5652([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_74([a, b, c, e, f, h, j], is_dual)
    } else {
        select_1964([c, d, a, b, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5650([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5651([h, f, j, i, c, d, b, g, a], !is_dual)
    } else {
        select_5652([c, d, a, b, e, f, i, g, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5648([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5649([a, d, e, c, f, b, g, i, h], is_dual)
    } else {
        select_5650([c, b, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5638([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5639([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_5648([a, g, i, b, j, k, f, c, h, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5656([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_76([f, j, k, e, a, i, g, c, d], !is_dual)
    } else {
        select_606([e, h, j, k, a, i, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5655([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5656([b, g, d, e, a, f, h, i, j, k, l], is_dual)
    } else {
        select_2566([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5654([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2369([b, a, c, d, g, f, i, k, h, j], is_dual)
    } else {
        select_5655([a, b, e, c, d, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5653([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5654([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_5654([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5637([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5638([a, b, d, e, f, h, j, g, k, i, l], is_dual)
    } else {
        select_5653([a, b, i, j, k, m, l, f, h, c, d, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5621([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_5622([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_5637([a, b, d, f, e, g, h, i, c, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5554([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_5555([a, b, c, f, e, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_5621([a, b, c, f, g, d, h, i, e, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5510([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5511([a, b, c, d, f, e, g, h, i, k, l, j, m], is_dual)
    } else {
        select_5554([a, b, c, d, l, m, h, k, j, f, e, i, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5412([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_5413([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5510([a, b, c, d, f, j, i, h, k, e, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5286([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5287([a, b, c, d, e, f, g, h, k, i, l, j, m, n], is_dual)
    } else {
        select_5412([a, b, c, d, e, f, g, h, k, j, l, i, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5020([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_5021([a, b, c, d, e, f, g, h, j, k, l, m, i, n], is_dual)
    } else {
        select_5286([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3942([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_3943([a, b, c, d, e, g, f, h, i, j, l, k, n, m], is_dual)
    } else {
        select_5020([a, b, c, d, e, g, h, i, j, l, k, m, f, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5669([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3345([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_700([b, f, e, h, g, a, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5668([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5669([a, c, d, b, f, e, i, h, g], is_dual)
    } else {
        select_1908([a, i, h, f, e, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5667([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5668([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1544([a, b, c, g, h, f, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5672([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_303([a, e, c, d, g, f, h, i], is_dual)
    } else {
        select_3221([h, i, j, a, e, g, f, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5673([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1784([h, i, j, a, e, f, b, c, g], !is_dual)
    } else {
        select_2002([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5671([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5672([a, b, g, c, e, f, i, j, k, h], is_dual)
    } else {
        select_5673([a, b, f, d, e, h, g, j, k, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5676([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_75([c, a, b, h, j], is_dual)
    } else {
        select_75([f, d, e, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5675([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3556([c, g, e, f, a, h, i], is_dual)
    } else {
        select_5676([a, d, b, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5674([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5675([c, a, b, d, e, f, g, h, i, k], is_dual)
    } else {
        select_5389([g, j, k, a, h, b, c, i, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5670([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_5671([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_5674([h, a, i, k, l, m, e, j, f, b, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5666([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5667([a, e, c, g, h, f, l, j, k, i], is_dual)
    } else {
        select_5670([a, f, b, d, e, i, g, h, k, l, j, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_5681([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_141([a, b, d, h, j, k], is_dual)
    } else {
        select_75([c, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5680([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3556([d, g, e, f, a, h, i], is_dual)
    } else {
        select_5681([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5683([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_453([a, f, b, d, e, h, i], is_dual)
    } else {
        select_453([a, e, c, d, f, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5684([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1563([a, b, c, h, f, g, k, l, j], is_dual)
    } else {
        select_252([a, i, d, e, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5682([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5683([h, c, d, a, f, g, j, k, i], is_dual)
    } else {
        select_5684([b, c, d, a, e, f, g, h, i, l, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_5679([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_5680([i, j, k, a, m, n, h, l, b, f, g], !is_dual)
    } else {
        select_5682([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5685([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_249([a, e, c, d, f, g, h], is_dual)
    } else {
        select_876([a, b, c, d, g, f, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_5678([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5679([a, b, d, c, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_5685([a, l, m, n, i, h, f, b, j, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5689([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_111([a, c, d, g, h, f, i], is_dual)
    } else {
        select_266([i, k, h, j, e, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5688([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3011([e, b, c, d, g, h, f, i, j], is_dual)
    } else {
        select_5689([h, j, k, l, e, i, a, f, b, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5691([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_451([b, a, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_235([a, e, c, d, g, f, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5690([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5691([h, i, k, l, e, j, a, b, g, f, d], !is_dual)
    } else {
        select_1251([b, d, c, e, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5687([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5688([a, d, e, c, f, b, g, h, j, i, k, l], is_dual)
    } else {
        select_5690([a, d, b, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 6, i = 2
fn select_5694([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_68([e, f, a, b, c], !is_dual)
    } else {
        select_685([b, c, d, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_5695([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_71([e, h, i, d, a, f], !is_dual)
    } else {
        select_205([b, c, d, e, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_5693([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_5694([a, c, d, e, g, h], is_dual)
    } else {
        select_5695([g, i, j, f, a, h, b, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5697([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_53([c, a, d, e, f, g], is_dual)
    } else {
        select_188([g, i, j, a, b, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_97([f, c, d, e, a, g, h, j], is_dual)
    } else {
        select_5697([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5692([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5693([f, i, h, j, k, e, a, g, c, d], !is_dual)
    } else {
        select_5696([f, i, h, j, k, e, b, g, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5686([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_5687([b, c, a, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_5692([b, c, g, d, f, h, i, a, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_5677([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5678([a, b, d, c, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_5686([a, f, b, c, e, h, g, j, k, i, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5665([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_5666([a, d, c, e, g, f, h, i, b, k, j, l, m, n], is_dual)
    } else {
        select_5677([a, b, c, d, e, g, h, i, f, k, l, j, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_5703([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_562([i, j, k, h, e, f, a, b], !is_dual)
    } else {
        select_340([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5702([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2473([a, b, d, f, e, h, i, g, k], is_dual)
    } else {
        select_5703([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5701([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2203([b, g, d, a, e, f, j, i, k, h], is_dual)
    } else {
        select_5702([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_5706([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_153([f, h, d, g, e, a, b], !is_dual)
    } else {
        select_103([d, h, f, g, e, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5705([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_5706([b, c, d, g, e, h, f, j], is_dual)
    } else {
        select_1309([h, g, i, k, d, j, e, a, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5708([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_154([a, b, d, g, h, f, k, l], is_dual)
    } else {
        select_763([b, f, c, e, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5707([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4099([b, c, d, g, f, e, i, h, k, j], is_dual)
    } else {
        select_5708([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_5704([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5705([b, c, d, e, f, h, i, j, k, l, n], is_dual)
    } else {
        select_5707([i, j, m, n, k, l, e, f, g, b, a, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5700([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5701([a, c, b, g, h, i, e, f, k, j, l], is_dual)
    } else {
        select_5704([c, b, a, d, e, g, h, f, j, k, i, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5699([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5700([a, b, d, c, e, g, f, h, j, k, l, i, m, n], is_dual)
    } else {
        select_5700([a, c, d, b, f, g, e, h, i, l, k, j, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_5713([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_379([b, d, a, c, e, f, g, i, h, j], is_dual)
    } else {
        select_266([a, d, c, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_5714([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_205([d, h, i, f, a, b], !is_dual)
    } else {
        select_1224([g, f, h, i, d, a, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5712([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5713([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5714([b, h, d, a, f, i, g, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_5715([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1055([h, j, i, k, f, a, g, e, c, d, b], !is_dual)
    } else {
        select_2472([i, j, h, k, f, a, e, b, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5711([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5712([a, c, b, d, e, f, g, h, j, l, i, m], is_dual)
    } else {
        select_5715([a, b, c, f, e, g, i, j, k, l, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5717([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_834([d, a, c, g, e, i, f, h], is_dual)
    } else {
        select_386([f, g, j, a, d, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5718([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2232([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1402([f, c, g, d, a, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5716([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5717([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_5718([b, d, a, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5710([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_5711([a, c, b, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_5716([j, h, k, l, g, a, e, b, c, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5722([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1617([b, a, d, c, e, f, h, i, g], is_dual)
    } else {
        select_1617([i, h, k, j, e, f, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5721([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5635([h, k, f, e, i, b, a, g, d], !is_dual)
    } else {
        select_5722([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5723([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1055([a, b, c, e, f, h, i, g, j, l, k], is_dual)
    } else {
        select_1344([b, c, d, a, e, f, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5720([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5721([k, l, m, j, h, f, g, b, a, c, i], !is_dual)
    } else {
        select_5723([b, c, d, g, e, f, h, j, i, l, k, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_5725([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_378([a, c, b, e, h, f, g, i, k, l, j], is_dual)
    } else {
        select_405([a, b, d, e, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5726([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_5683([b, a, c, e, d, f, h, i, g], is_dual)
    } else {
        select_1452([i, d, j, a, e, g, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5724([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_5725([b, c, d, e, a, f, h, g, i, j, k, l], is_dual)
    } else {
        select_5726([b, i, d, g, a, f, h, k, l, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_5719([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5720([a, b, c, d, e, g, f, i, j, h, l, k, m], is_dual)
    } else {
        select_5724([a, b, d, c, e, g, i, h, j, f, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_5709([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5710([i, k, l, n, j, m, f, a, g, b, c, d, h], !is_dual)
    } else {
        select_5719([b, c, d, e, a, g, f, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5698([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5699([b, c, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_5709([a, b, c, d, e, g, h, i, j, f, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5664([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < m) || (is_dual && f > m) {
        select_5665([a, b, c, d, e, g, h, i, j, k, l, m, f, n], is_dual)
    } else {
        select_5698([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_5731([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3151([a, b, e, d, g, f, i, h, j, k], is_dual)
    } else {
        select_5284([j, i, l, k, a, g, e, b, h, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_5734([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_77([c, g, d, f, h, e, i], is_dual)
    } else {
        select_215([a, b, i, f, j, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_5735([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([a, b, c, e, d, f, h, g], is_dual)
    } else {
        select_763([a, c, b, d, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_5733([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5734([b, c, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_5735([b, h, c, j, a, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5732([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_4811([a, e, d, g, b, f, i, h, j], is_dual)
    } else {
        select_5733([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5730([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5731([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_5732([b, a, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5738([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1208([a, f, h, i, g, e, b, d], !is_dual)
    } else {
        select_639([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4032([a, e, c, d, h, f, g, j, i, k], is_dual)
    } else {
        select_5738([a, j, h, k, i, f, e, g, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5736([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_5737([a, c, b, d, f, e, g, h, i, j, l], is_dual)
    } else {
        select_3588([h, i, e, m, f, k, b, a, j, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5729([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5730([i, j, h, n, k, m, a, e, l, f, g, b], !is_dual)
    } else {
        select_5736([a, e, c, d, h, f, g, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5728([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < e) || (is_dual && m > e) {
        select_5699([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5729([a, b, c, d, f, g, h, i, j, k, l, m, e, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_5744([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_213([b, a, h, g, k, e, i], is_dual)
    } else {
        select_1617([b, d, c, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5743([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1095([a, b, d, h, i, e, g, k], is_dual)
    } else {
        select_5744([a, b, d, c, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2919([b, f, d, e, a, g, i, j, h, k], is_dual)
    } else {
        select_5743([b, a, d, c, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5745([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5669([a, c, f, d, e, g, i, j, h], is_dual)
    } else {
        select_70([e, k, j, a, f, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5741([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5742([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_5745([b, a, d, e, f, c, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_5748([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1621([b, a, c, e, f, d, h, i, g], is_dual)
    } else {
        select_719([b, d, e, a, i, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5750([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_382([b, f, d, a, i, j], is_dual)
    } else {
        select_4115([b, d, c, a, e, g, f, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_5751([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_98([a, c, e, f, d, h], is_dual)
    } else {
        select_89([a, b, d, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5749([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5750([a, b, d, e, f, h, g, i, k, l], is_dual)
    } else {
        select_5751([c, g, d, f, e, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5747([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5748([b, a, f, h, g, i, e, j, k], is_dual)
    } else {
        select_5749([a, c, b, d, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5752([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_67([a, b, h, i, k, m], is_dual)
    } else {
        select_5713([c, d, e, a, f, g, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5746([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5747([b, f, c, e, a, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5752([b, c, a, e, d, g, h, f, i, l, j, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5740([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5741([b, a, c, f, e, h, g, j, k, i, m], is_dual)
    } else {
        select_5746([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_5756([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_67([a, c, e, h, f, j], is_dual)
    } else {
        select_1979([b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5758([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_294([a, b, d, f, h, i, k, l], is_dual)
    } else {
        select_154([b, c, e, g, h, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5757([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5758([b, a, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_1971([g, c, e, a, h, f, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_5755([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5756([a, c, d, f, e, h, g, i, j, k, l], is_dual)
    } else {
        select_5757([a, b, d, g, e, h, f, i, j, k, n, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_70([g, b, c, d, f, j, h], is_dual)
    } else {
        select_171([h, i, g, j, d, e, b, a], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5762([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_216([b, c, d, e, f, h, g], is_dual)
    } else {
        select_382([a, c, g, f, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5761([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5762([a, b, f, c, e, i, g, j, k], is_dual)
    } else {
        select_5713([c, a, b, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5759([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5760([c, e, d, a, f, g, h, j, i, k], is_dual)
    } else {
        select_5761([c, b, a, d, f, g, e, h, i, k, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_5754([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5755([a, d, e, c, b, f, h, g, j, i, m, k, n, l], is_dual)
    } else {
        select_5759([b, d, e, a, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_5765([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_660([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_102([f, h, i, d, a, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5764([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1295([b, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_5765([j, k, i, g, f, b, a, c, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5768([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1536([e, d, c, a, f, h, g, i], is_dual)
    } else {
        select_1617([a, c, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4570([i, h, j, e, a, b, g, f, d], !is_dual)
    } else {
        select_5768([b, d, a, c, g, e, f, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5769([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1772([h, e, a, i, f, g, b, c], !is_dual)
    } else {
        select_623([e, h, i, f, g, a, b, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5766([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_5767([i, j, k, h, g, e, d, a, f, b], !is_dual)
    } else {
        select_5769([e, a, d, c, h, g, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5763([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5764([c, d, b, e, a, f, g, h, j, i, k], is_dual)
    } else {
        select_5766([k, j, l, f, a, i, g, b, d, c, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5753([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5754([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_5763([a, f, c, b, e, i, g, h, k, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5739([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_5740([b, a, c, d, e, g, h, i, j, l, k, m, f], is_dual)
    } else {
        select_5753([a, b, c, d, e, g, f, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5727([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5728([b, c, d, e, g, f, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_5739([a, b, c, d, e, g, h, i, j, f, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5663([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5664([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5727([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_5777([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_212([a, e, b, g, d, i, h, j, f], is_dual)
    } else {
        select_188([h, g, j, f, a, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5776([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1956([h, b, c, i, f, d, g, l], is_dual)
    } else {
        select_5777([d, a, c, e, f, i, g, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5778([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1123([a, e, c, d, g, f, h, j], is_dual)
    } else {
        select_955([i, j, g, f, e, h, b, a, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5775([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5776([a, b, c, d, e, f, h, g, i, k, l, j], is_dual)
    } else {
        select_5778([i, k, l, g, h, j, d, e, a, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5780([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1621([a, b, e, d, h, i, g, j, k], is_dual)
    } else {
        select_2772([b, d, c, f, e, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5782([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_252([b, f, c, d, h], is_dual)
    } else {
        select_719([a, b, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5781([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_978([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_5782([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_5779([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5780([a, i, c, e, f, g, k, l, h, m, j], is_dual)
    } else {
        select_5781([a, h, b, d, e, g, j, i, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5774([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5775([b, e, d, a, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_5779([b, c, d, a, f, g, h, i, e, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5787([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_52([e, c, d, g, f, i], is_dual)
    } else {
        select_62([i, j, a, h, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_5786([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1231([k, l, m, g, j, a, f, b, c], !is_dual)
    } else {
        select_5787([a, b, d, e, g, h, i, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5785([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2536([a, b, c, g, e, h, j, i, l], is_dual)
    } else {
        select_5786([a, e, d, b, c, f, h, i, j, g, k, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5784([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3001([a, b, c, g, i, j, k, h], is_dual)
    } else {
        select_5785([c, a, b, d, e, f, g, i, h, k, l, j, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_5789([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5683([c, a, d, g, f, e, j, i, h], is_dual)
    } else {
        select_831([a, h, c, b, i, g, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5788([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_5718([a, d, e, b, f, i, h, g, j, k], is_dual)
    } else {
        select_5789([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5783([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5784([b, c, d, e, a, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_5788([b, c, f, e, a, g, i, h, k, l, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_5773([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5774([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    } else {
        select_5783([b, a, c, d, e, f, h, i, g, k, l, j, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_5793([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2363([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1484([f, d, i, a, g, b, h, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5794([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_81([a, i, j, f, d, b], !is_dual)
    } else {
        select_501([f, h, i, j, a, g, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5792([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5793([f, i, j, a, h, d, e, g, c], !is_dual)
    } else {
        select_5794([a, b, c, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5796([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_156([g, c, a, i, f, e, j], is_dual)
    } else {
        select_3186([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5795([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5796([a, b, c, f, e, i, j, h, k, g], is_dual)
    } else {
        select_1683([a, b, e, d, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5791([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5792([a, c, f, e, h, g, j, b, i, k], is_dual)
    } else {
        select_5795([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5799([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_614([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_3164([b, f, c, a, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5798([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4516([a, c, e, b, g, h, j, l, i], is_dual)
    } else {
        select_5799([a, b, d, c, f, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5797([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3814([a, c, h, e, b, g, j, k, i], is_dual)
    } else {
        select_5798([a, c, b, e, d, g, f, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5790([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5791([b, c, f, e, h, g, a, i, j, l, k], is_dual)
    } else {
        select_5797([c, b, a, e, d, g, f, i, h, k, l, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_5772([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5773([a, c, b, d, e, g, f, h, j, i, l, k, m], is_dual)
    } else {
        select_5790([a, b, c, d, e, g, h, i, j, f, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5805([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_803([b, d, e, f, g, i, j, h], is_dual)
    } else {
        select_922([a, c, b, e, f, h, i, k, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5804([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3895([f, b, e, a, g, j, h, i, l], is_dual)
    } else {
        select_5805([a, b, c, e, d, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_5807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_235([g, h, j, k, a, f, b, d], !is_dual)
    } else {
        select_122([i, j, k, a, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5806([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5807([i, k, j, l, g, h, a, f, c, d, e], !is_dual)
    } else {
        select_3965([d, c, b, a, g, h, j, f, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_5803([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5804([h, l, j, m, k, f, g, i, e, a, b, d], !is_dual)
    } else {
        select_5806([j, h, k, l, m, e, f, i, g, a, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5810([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_68([a, c, i, e, j], is_dual)
    } else {
        select_213([a, b, d, g, h, f, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5809([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5810([b, c, a, d, e, g, h, f, k, i], is_dual)
    } else {
        select_3965([i, k, j, h, e, g, a, f, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5808([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5809([i, g, j, k, e, f, h, a, d, b, c], !is_dual)
    } else {
        select_3054([b, d, a, c, e, h, g, i, j, f], is_dual)
    }
}
/// n = 13, i = 6
fn select_5802([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5803([a, b, d, c, e, f, g, i, j, h, l, k, m], is_dual)
    } else {
        select_5808([f, i, k, l, h, e, a, j, g, b, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5801([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5802([f, k, m, l, h, g, i, a, b, j, c, e, d], !is_dual)
    } else {
        select_5802([g, k, m, l, h, f, i, a, b, j, d, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5813([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3061([a, b, d, c, e, f, h, i, j, g, k], is_dual)
    } else {
        select_3054([a, b, f, d, g, h, i, e, j, k], is_dual)
    }
}
/// n = 6, i = 2
fn select_5816([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_98([a, b, c, d, e, f], is_dual)
    } else {
        select_98([a, b, c, d, f, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_5815([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_67([c, d, b, f, e, g], is_dual)
    } else {
        select_5816([a, e, c, d, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5818([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_111([f, g, i, c, d, e, b], !is_dual)
    } else {
        select_103([a, e, c, g, f, h, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_5817([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5818([a, c, g, e, d, i, h, j, f], is_dual)
    } else {
        select_3580([j, i, e, h, f, g, a, d, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5814([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_5815([d, c, f, a, e, g, h, i], is_dual)
    } else {
        select_5817([b, a, c, e, g, h, d, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5812([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5813([b, a, d, c, e, g, h, f, j, i, k], is_dual)
    } else {
        select_5814([b, f, d, a, g, e, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5811([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5812([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_5812([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5800([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_5801([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5811([f, g, k, l, m, h, i, a, b, c, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5771([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_5772([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5800([i, l, k, f, n, a, b, j, g, m, c, h, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5770([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5771([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5771([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5662([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_5663([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5770([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_5827([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2902([h, f, j, k, g, a, i, e, b], !is_dual)
    } else {
        select_764([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5826([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_110([a, g, c, h, k, e, l], is_dual)
    } else {
        select_5827([a, b, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5828([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1622([e, b, a, g, f, i, j, k], is_dual)
    } else {
        select_144([a, f, c, d, h, e, g, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5825([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5826([a, b, c, g, f, e, h, j, k, m, l, i], is_dual)
    } else {
        select_5828([a, b, f, d, i, e, g, h, k, m, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_5831([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_21([e, c, d, g, f, i, h, j], is_dual)
    } else {
        select_21([e, a, b, h, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5832([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_186([e, a, h, f, i, j], is_dual)
    } else {
        select_96([b, f, c, d, e, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_5830([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5831([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_5832([b, g, d, e, a, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5829([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5830([a, d, e, b, c, f, g, h, i, k, m], is_dual)
    } else {
        select_1195([b, c, h, a, g, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5824([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5825([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    } else {
        select_5829([b, a, c, d, e, g, h, i, f, k, j, m, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_5834([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_151([a, e, k, h, i, f, b, g], !is_dual)
    } else {
        select_3887([a, c, d, f, e, h, j, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5833([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5834([a, b, c, d, e, f, g, j, h, k, i], is_dual)
    } else {
        select_5834([a, b, c, d, e, f, g, j, i, k, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_5823([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_5824([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_5833([a, c, g, h, i, f, k, b, l, j, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_5838([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_152([a, b, e, d, f, g, i, h], is_dual)
    } else {
        select_571([a, c, f, d, e, h, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5837([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_500([a, b, d, g, e, f, h, j, k, i], is_dual)
    } else {
        select_5838([e, k, l, a, i, j, f, g, b, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5836([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5837([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5837([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5835([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1929([a, b, d, e, f, h, i, j, l, k], is_dual)
    } else {
        select_5836([a, b, c, e, f, g, i, h, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5822([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_5823([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_5835([a, b, d, c, e, f, g, i, h, j, k, m, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_5842([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_299([a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_327([a, e, k, g, j, i, f, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5841([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_79([a, b, d, f, e, g, h, i], is_dual)
    } else {
        select_5842([a, c, b, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5844([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2421([a, b, d, c, g, f, i, k, l], is_dual)
    } else {
        select_1179([a, c, e, b, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5845([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_109([a, h, l, b, f, k, i, c, e], !is_dual)
    } else {
        select_5221([a, j, k, h, i, b, g, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5843([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5844([a, b, c, e, d, f, h, i, g, j, k, l], is_dual)
    } else {
        select_5845([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5840([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_5841([a, k, l, f, b, i, c, h, j, g, d], !is_dual)
    } else {
        select_5843([a, c, b, d, e, h, f, g, i, l, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5839([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5840([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_5840([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5821([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5822([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5839([a, b, c, d, e, i, h, j, g, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5849([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2261([d, a, b, c, e, f, h, g, i, j], is_dual)
    } else {
        select_1631([g, e, m, k, l, a, j, h, f, i, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5848([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5849([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5849([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5850([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_127([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_127([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_5847([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_5848([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_5850([a, b, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5853([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1914([a, i, h, g, b, e, c], !is_dual)
    } else {
        select_1915([a, b, d, h, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5852([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_5474([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_5853([a, c, b, e, d, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5851([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3920([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5852([a, b, c, j, l, k, i, h, d, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5846([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5847([a, b, m, n, k, c, j, g, l, i, e, h, f], !is_dual)
    } else {
        select_5851([a, b, c, d, g, f, i, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5820([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5821([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_5846([a, b, c, d, e, f, g, h, i, k, l, m, j, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_5858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4727([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_4727([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5861([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_74([a, f, b, d, e, i, j], is_dual)
    } else {
        select_224([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_5860([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2827([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_5861([a, g, i, j, k, e, h, b, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5859([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5007([a, h, b, j, k, f, g, i, c], !is_dual)
    } else {
        select_5860([a, h, k, j, f, i, b, g, c, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5857([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5858([a, b, d, e, c, f, g, i, h, k, j], is_dual)
    } else {
        select_5859([a, b, k, h, l, i, j, f, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5864([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_121([d, e, j, a, g, h, b], !is_dual)
    } else {
        select_3934([i, g, j, d, h, a, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5863([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2480([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_5864([b, d, c, e, f, g, h, i, j, a], is_dual)
    }
}
/// n = 10, i = 4
fn select_5866([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_559([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_3889([a, c, b, g, f, i, e, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5866([a, c, b, d, f, e, g, i, j, h], is_dual)
    } else {
        select_3890([a, b, c, d, f, g, h, i, j, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_5862([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5863([a, b, e, d, c, f, g, h, j, i], is_dual)
    } else {
        select_5865([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5856([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_5857([a, b, d, c, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_5862([a, b, g, f, d, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5871([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1855([a, b, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_5187([i, j, k, g, e, d, a, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5872([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_643([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_152([d, a, c, g, f, h, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5870([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5871([a, c, b, d, e, f, g, i, j, k, h], is_dual)
    } else {
        select_5872([b, c, a, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5876([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_32([f, b, c, e, h, g], is_dual)
    } else {
        select_34([i, d, j, a], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5875([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5876([a, f, b, d, e, h, i, j, g, k], is_dual)
    } else {
        select_5322([a, b, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5877([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_803([a, d, c, f, e, g, i, k], is_dual)
    } else {
        select_122([j, i, k, h, d, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_5874([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5875([b, e, c, d, g, f, j, h, i, k, l], is_dual)
    } else {
        select_5877([i, b, a, d, e, h, k, g, l, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5873([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5874([b, c, a, d, f, e, g, h, i, j, l, m, k], is_dual)
    } else {
        select_5872([a, f, d, g, h, e, j, k, l, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_5869([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_5870([e, a, f, h, i, d, j, k, m, l, g], is_dual)
    } else {
        select_5873([a, b, c, e, d, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5881([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_292([i, j, e, h, a, f, b], !is_dual)
    } else {
        select_1289([a, c, d, e, g, h, j, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5882([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_294([a, g, d, c, h, e, k, j], is_dual)
    } else {
        select_1979([a, e, d, b, f, h, g, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5880([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5881([j, k, g, l, h, i, a, e, f, b], !is_dual)
    } else {
        select_5882([a, b, d, c, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5883([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_203([a, b, c, d, f, e, g, j, i], is_dual)
    } else {
        select_737([d, f, a, h, e, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5879([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5880([b, c, a, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_5883([c, e, d, a, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5886([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_71([i, j, k, e, a, c], !is_dual)
    } else {
        select_61([g, b, d, h, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_5885([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_954([b, c, e, d, h, f, g, i, j], is_dual)
    } else {
        select_5886([a, c, f, d, e, g, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5888([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_98([b, c, e, g, f, h], is_dual)
    } else {
        select_763([h, g, j, i, d, e, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5887([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2835([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_5888([b, d, a, e, f, c, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5884([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5885([b, c, a, d, e, f, h, i, j, k, g, l], is_dual)
    } else {
        select_5887([a, b, d, f, e, g, i, j, h, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5878([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5879([e, a, c, d, j, f, g, h, i, l, m, k], is_dual)
    } else {
        select_5884([a, g, c, b, i, f, h, j, e, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5868([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5869([c, b, d, g, h, f, i, a, j, e, k, m, l], is_dual)
    } else {
        select_5878([b, a, c, d, e, g, h, i, j, f, m, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5867([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5868([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5868([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_5855([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_5856([a, b, c, d, g, k, j, h, i, f, m, l], is_dual)
    } else {
        select_5867([a, b, c, d, e, f, h, g, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5893([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_683([a, b, c, d, f, e, h, g, i], is_dual)
    } else {
        select_162([c, b, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5892([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5893([a, c, d, b, e, f, g, i, h, j], is_dual)
    } else {
        select_2374([a, g, d, h, f, b, e, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5897([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_167([a, c, e, f, g, d, h, j], is_dual)
    } else {
        select_167([b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5896([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1580([c, b, g, d, f, j, h, i], is_dual)
    } else {
        select_5897([a, c, b, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_5898([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_560([d, h, g, i, a, e, b, f], !is_dual)
    } else {
        select_422([a, c, e, d, g, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5895([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_5896([b, c, a, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_5898([a, b, h, i, f, j, g, e, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5900([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_618([a, b, c, d, f, k, i, l], is_dual)
    } else {
        select_4880([b, a, d, e, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5901([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_166([a, b, d, f, e, i, k, h, j], is_dual)
    } else {
        select_4896([j, i, k, h, a, f, g, b, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5899([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5900([b, a, e, d, c, g, f, h, j, k, i, l], is_dual)
    } else {
        select_5901([b, a, c, e, g, i, f, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5894([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_5895([a, c, b, d, i, g, h, j, f, k, l, m], is_dual)
    } else {
        select_5899([a, b, c, e, d, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5891([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_5892([f, a, d, j, b, k, g, h, i, m], is_dual)
    } else {
        select_5894([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5906([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_88([i, j, f, a, d, g, b], !is_dual)
    } else {
        select_186([a, f, c, h, e, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_5905([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_638([j, k, h, l, b, a, e, c], !is_dual)
    } else {
        select_5906([a, c, d, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5907([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([a, c, d, f, h, j], is_dual)
    } else {
        select_2661([a, b, d, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5904([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_5905([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_5907([c, f, b, e, g, k, h, j, i, a], is_dual)
    }
}
/// n = 12, i = 5
fn select_5909([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2034([e, b, f, g, d, j, i, l], is_dual)
    } else {
        select_808([a, d, c, e, h, f, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5911([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_186([a, f, b, i, h, k], is_dual)
    } else {
        select_128([a, c, d, g, e, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5910([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5911([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_718([a, h, d, b, f, i, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5908([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5909([b, c, d, f, e, g, a, h, i, j, k, l], is_dual)
    } else {
        select_5910([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_5903([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5904([e, k, n, m, l, j, i, f, b, h, a, c], !is_dual)
    } else {
        select_5908([e, b, a, d, f, i, g, j, h, l, m, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_5914([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2842([b, a, d, e, h, f, i, j, g, m, l], is_dual)
    } else {
        select_701([a, g, d, c, f, k, h, j, i, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_5915([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2405([a, c, d, f, e, h, i, g, j, l], is_dual)
    } else {
        select_1009([b, c, d, a, f, e, i, g, j, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_5913([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5914([a, b, d, c, f, g, h, i, j, e, k, m, l], is_dual)
    } else {
        select_5915([a, b, c, e, i, f, j, h, g, l, m, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5917([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_198([i, a, b, e, f, g, k, l], is_dual)
    } else {
        select_375([g, b, c, d, f, h, j, i, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_5916([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_97([j, m, h, n, g, a, k, b], !is_dual)
    } else {
        select_5917([c, d, a, b, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_5912([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_5913([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5916([a, d, b, c, f, g, h, i, j, k, l, m, e, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5902([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5903([b, a, d, c, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_5912([b, a, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5890([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5891([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_5902([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_5922([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_98([c, b, e, f, d, g], is_dual)
    } else {
        select_3119([a, d, c, g, h, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5922([j, k, i, h, a, b, e, f, c], !is_dual)
    } else {
        select_157([a, b, e, d, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5924([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_51([a, h, c, d, g, k], is_dual)
    } else {
        select_2474([j, h, k, i, a, f, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5925([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_61([a, g, b, j, d], is_dual)
    } else {
        select_2836([i, j, g, h, a, f, d, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5923([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5924([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_5925([a, f, c, b, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5920([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5921([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_5923([a, b, c, d, f, g, h, e, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5929([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_99([b, c, e, f, g, h], is_dual)
    } else {
        select_703([a, c, d, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5928([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_38([b, g, d, c, f, h, i], is_dual)
    } else {
        select_5929([a, b, d, e, h, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5927([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5734([a, c, f, d, g, e, h, i, j, k], is_dual)
    } else {
        select_5928([a, b, e, d, h, g, i, f, l, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5926([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5927([c, a, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_5927([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5919([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5920([b, c, g, e, i, a, h, f, j, l, k], is_dual)
    } else {
        select_5926([b, c, d, a, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_5918([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_5919([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5895([b, d, c, h, f, g, i, j, a, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5889([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_5890([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5918([a, c, d, e, b, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5854([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_5855([a, b, d, f, e, h, g, i, j, c, k, m, l], is_dual)
    } else {
        select_5889([a, b, d, c, f, e, h, i, j, g, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5819([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_5820([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_5854([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5661([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_5662([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5819([a, b, d, c, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_5938([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1811([a, c, g, d, f, e, h, i, k, l], is_dual)
    } else {
        select_804([c, a, b, e, h, f, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_5940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_820([h, j, k, g, f, a, e, c], !is_dual)
    } else {
        select_52([i, j, k, a, d, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5941([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_154([h, j, k, d, g, f, a, c], !is_dual)
    } else {
        select_122([i, k, g, d, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5939([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5940([i, l, k, j, h, f, g, b, e, c, d], !is_dual)
    } else {
        select_5941([k, l, i, h, j, e, g, c, f, b, a], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5937([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5938([k, l, m, h, f, i, j, g, a, d, e, c], !is_dual)
    } else {
        select_5939([l, k, m, f, j, h, i, g, a, d, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5942([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5196([b, d, e, c, f, a, h, g, i, j], is_dual)
    } else {
        select_1512([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_5936([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5937([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_5942([i, l, f, m, j, a, h, g, d, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_5944([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2750([a, b, c, d, h, g, i, j], is_dual)
    } else {
        select_778([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5945([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_109([a, i, k, b, c, j, g, d, h], !is_dual)
    } else {
        select_390([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5943([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5944([d, a, e, f, b, c, g, h, j, i], is_dual)
    } else {
        select_5945([a, b, c, d, e, f, g, i, h, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5935([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5936([a, b, c, d, e, f, h, i, k, g, j, l, m], is_dual)
    } else {
        select_5943([f, a, j, l, k, m, h, g, i, d, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5949([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4442([a, c, f, d, e, g, i, j, h, k], is_dual)
    } else {
        select_3235([a, c, b, g, e, h, f, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5948([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_637([a, c, f, d, h, g, e, i, j], is_dual)
    } else {
        select_5949([b, a, c, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5950([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5938([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1512([b, c, d, f, h, e, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5947([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_5948([c, b, e, a, g, f, d, h, i, j, k], is_dual)
    } else {
        select_5950([b, c, e, d, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_5946([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5943([b, a, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_5947([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5934([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_5935([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_5946([a, f, j, g, k, m, h, l, i, d, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5954([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4601([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1766([g, i, k, j, a, b, c, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5953([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5954([j, k, f, i, l, m, a, h, g, c, b], !is_dual)
    } else {
        select_1217([f, i, k, l, j, m, a, g, h, e, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5957([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_5940([a, c, b, f, e, g, h, i, d, j, k], is_dual)
    } else {
        select_3484([b, a, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_5956([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2996([b, a, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_5957([f, j, l, a, i, k, g, h, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5959([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_374([c, a, d, e, f, b, g, h, j, i], is_dual)
    } else {
        select_374([c, b, d, e, f, a, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5960([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1208([a, b, h, c, g, f, i, j], is_dual)
    } else {
        select_332([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5958([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5959([b, g, a, c, d, f, i, h, j, l], is_dual)
    } else {
        select_5960([a, c, e, b, d, f, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_5955([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5956([f, j, l, k, m, d, i, g, h, a, e, c], !is_dual)
    } else {
        select_5958([f, j, l, m, i, d, k, g, h, a, e, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5952([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5953([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5955([c, b, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5961([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1439([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_1439([a, b, d, e, f, c, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_5951([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5952([a, b, c, d, e, f, i, h, j, l, k, g, m], is_dual)
    } else {
        select_5961([a, l, e, k, j, i, h, g, b, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5933([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_5934([a, c, d, f, g, h, i, b, j, e, l, k, m], is_dual)
    } else {
        select_5951([a, b, c, d, e, g, i, f, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_5932([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5933([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5933([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5968([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_250([a, c, f, d, h, g], is_dual)
    } else {
        select_2444([h, j, f, a, i, e, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5970([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_153([a, c, d, g, f, i, h], is_dual)
    } else {
        select_581([d, b, c, e, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5969([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5970([b, c, a, d, f, e, h, g, i, j], is_dual)
    } else {
        select_386([d, g, c, a, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5967([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5968([a, b, e, d, f, h, g, i, j, k], is_dual)
    } else {
        select_5969([h, k, l, a, j, i, e, f, b, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5972([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1863([b, c, e, d, f, g, i, h], is_dual)
    } else {
        select_4459([a, c, b, f, e, h, i, g, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5974([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_803([b, c, e, f, g, h, d, i], is_dual)
    } else {
        select_128([a, c, b, e, f, d, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_5973([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2040([b, a, c, e, d, g, f, h, j, i], is_dual)
    } else {
        select_5974([j, i, k, d, h, g, a, e, f, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5971([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5972([b, a, c, d, f, e, h, g, i, j, k], is_dual)
    } else {
        select_5973([h, k, l, a, i, j, e, f, g, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5966([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5967([a, d, e, c, f, g, b, h, j, i, k, l], is_dual)
    } else {
        select_5971([a, d, e, b, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_484([c, a, b, d, f, e, i, g, h], is_dual)
    } else {
        select_5480([c, a, b, d, f, g, i, e, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5979([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_499([a, h, d, e, f, g, i, k], is_dual)
    } else {
        select_95([b, d, c, g, f, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5977([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5978([g, k, l, j, e, h, i, a, b, f], !is_dual)
    } else {
        select_5979([a, b, c, d, e, f, g, h, j, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3139([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_812([a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5976([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5977([a, b, d, c, f, g, h, i, e, j, k, l], is_dual)
    } else {
        select_5980([b, a, c, e, i, f, h, g, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_5982([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2634([d, b, c, f, e, h, g, j, i], is_dual)
    } else {
        select_804([j, h, k, d, g, f, i, a, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5981([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2271([b, c, f, d, g, h, e, i, j], is_dual)
    } else {
        select_5982([j, h, l, e, k, f, g, a, i, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_5975([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_5976([b, d, a, e, f, g, c, h, i, k, j, l], is_dual)
    } else {
        select_5981([b, d, c, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5965([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5966([g, l, m, k, f, i, j, a, h, d, e, b], !is_dual)
    } else {
        select_5975([g, k, m, l, i, f, j, a, h, d, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5986([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2889([a, d, e, b, c, f, g, h], is_dual)
    } else {
        select_1397([a, d, e, c, b, f, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_5985([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1619([g, h, b, c, d, e, f], !is_dual)
    } else {
        select_5986([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5987([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_707([d, f, g, a, b, c, e, h, j], is_dual)
    } else {
        select_707([f, d, e, a, b, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5984([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5985([h, c, d, e, f, g, i, j], is_dual)
    } else {
        select_5987([a, b, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5988([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2632([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2632([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_5983([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5984([b, c, a, e, f, g, d, h, j, i], is_dual)
    } else {
        select_5988([a, b, c, d, e, f, g, i, h, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_5964([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5965([a, b, c, d, e, f, g, i, k, h, j, m, l], is_dual)
    } else {
        select_5983([f, a, j, g, l, k, m, h, i, d, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5994([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1979([a, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_122([b, c, e, h, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_5993([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5994([c, b, d, e, a, f, g, h, i, j, l], is_dual)
    } else {
        select_102([h, k, f, b, a, j, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_5995([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_5535([d, a, c, e, g, h, f, i, k], is_dual)
    } else {
        select_1124([f, b, i, j, d, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_5992([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5993([b, c, a, d, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_5995([k, l, i, j, g, h, b, c, a, f, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_5996([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5009([g, l, m, h, e, a, b, i, d], !is_dual)
    } else {
        select_5544([e, c, a, d, f, g, h, j, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_5991([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5992([k, g, j, l, m, f, e, i, a, h, b, c], !is_dual)
    } else {
        select_5996([a, b, c, d, f, e, g, i, h, k, m, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5999([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_250([e, c, d, f, h, g], is_dual)
    } else {
        select_1088([a, b, g, e, i, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_6000([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_250([e, b, c, f, h, g], is_dual)
    } else {
        select_5091([a, g, d, i, e, j, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5998([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5999([e, a, b, c, g, f, h, i, k, j], is_dual)
    } else {
        select_6000([f, b, c, d, i, e, h, g, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_6003([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_717([a, b, c, d, f, g, e], is_dual)
    } else {
        select_717([a, b, c, e, f, g, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_6002([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6003([b, a, c, d, e, f, g], is_dual)
    } else {
        select_120([d, a, e, c, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6001([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_683([b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_6002([a, d, h, e, g, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5997([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5998([c, d, e, b, a, g, f, h, i, k, j], is_dual)
    } else {
        select_6001([c, d, e, a, f, g, b, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_5990([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5991([b, a, c, d, f, e, g, h, j, k, l, i, m], is_dual)
    } else {
        select_5997([g, k, e, l, m, f, i, j, h, b, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6006([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5009([a, h, g, i, e, c, b, f, d], !is_dual)
    } else {
        select_5551([a, h, i, e, g, c, b, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6005([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2123([f, c, e, b, d, g, i, h, j, m, k], is_dual)
    } else {
        select_6006([h, a, b, d, f, k, l, n, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6008([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3960([b, a, d, e, g, f, h, j, i, l], is_dual)
    } else {
        select_4163([a, c, h, e, f, g, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6010([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2405([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2405([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6009([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1914([a, b, e, f, i, g, k], is_dual)
    } else {
        select_6010([a, f, c, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6007([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_6008([b, c, d, f, e, a, g, h, j, k, i, l], is_dual)
    } else {
        select_6009([b, d, c, f, a, g, e, h, i, k, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_6004([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_6005([b, c, a, e, d, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_6007([f, l, k, h, m, n, a, i, b, c, j, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5989([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5990([b, c, g, e, f, h, a, j, l, i, m, k, n], is_dual)
    } else {
        select_6004([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5963([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5964([a, c, e, i, g, j, h, b, k, f, l, m, n], is_dual)
    } else {
        select_5989([a, b, c, e, d, f, g, h, i, k, j, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5962([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5963([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5963([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5931([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_5932([a, b, c, g, f, d, h, j, i, k, l, m, n], is_dual)
    } else {
        select_5962([a, b, c, d, e, f, h, i, g, j, k, m, l, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_6017([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4490([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_90([a, f, g, h, d, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_6018([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_444([a, b, g, c, h], is_dual)
    } else {
        select_331([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6016([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_6017([a, h, j, e, i, b, g, c], !is_dual)
    } else {
        select_6018([a, c, e, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6020([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_614([a, d, b, c, e, f, g, i], is_dual)
    } else {
        select_684([b, c, f, a, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6019([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2362([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_6020([b, a, c, d, f, h, e, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_6015([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6016([a, c, b, d, e, f, h, i, j, k], is_dual)
    } else {
        select_6019([a, b, d, c, f, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6024([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_685([a, b, c, g], is_dual)
    } else {
        select_2188([a, b, d, e, h, f, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_6025([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_484([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_529([d, b, c, e, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6023([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6024([a, b, c, d, e, f, i, g, h], is_dual)
    } else {
        select_6025([d, b, c, e, f, g, i, a, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6027([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_61([h, b, i, a, j], is_dual)
    } else {
        select_342([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6026([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4268([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_6027([b, c, d, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6022([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6023([a, j, k, h, g, f, i, e, b, c], !is_dual)
    } else {
        select_6026([a, h, f, j, k, g, i, b, e, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6021([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1907([a, f, j, k, g, b, c, h], !is_dual)
    } else {
        select_6022([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6014([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6015([a, f, j, k, h, i, b, g, c, e, d], !is_dual)
    } else {
        select_6021([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_6032([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_21([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_103([g, b, a, e, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6031([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_6032([a, d, b, c, f, h, g, e, i], is_dual)
    } else {
        select_3340([b, c, d, a, f, e, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6033([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_240([c, d, a, b, e, f, g, i, h], is_dual)
    } else {
        select_157([a, b, c, f, e, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6030([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_6031([c, a, b, d, f, e, g, h, i, j], is_dual)
    } else {
        select_6033([a, b, c, e, f, d, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6036([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, c, d, e, f, g, h], is_dual)
    } else {
        select_188([a, d, g, f, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6035([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6036([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_6036([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6038([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_61([i, a, b, j, f], is_dual)
    } else {
        select_51([g, h, e, k, d, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6037([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6038([a, b, c, d, f, e, g, h, j, k, i], is_dual)
    } else {
        select_4368([f, b, a, j, i, k, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_6034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_6035([f, g, j, k, i, a, h, d, e, c], !is_dual)
    } else {
        select_6037([a, b, c, e, d, h, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6029([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6030([f, g, a, j, k, h, d, i, b, e], !is_dual)
    } else {
        select_6034([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_6041([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4490([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_32([g, i, d, a, e, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6040([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1599([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_6041([b, c, f, e, h, g, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6039([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6040([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_6040([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6028([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6029([a, b, c, d, e, f, g, i, j, k, h], is_dual)
    } else {
        select_6039([a, f, g, i, k, j, d, h, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6013([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_6014([a, b, c, d, f, h, i, e, j, g, k], is_dual)
    } else {
        select_6028([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6044([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2848([a, c, b, f, d, e, g, h, j, i], is_dual)
    } else {
        select_1959([a, b, c, d, e, g, i, k, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6047([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6003([i, e, j, f, g, a, h], !is_dual)
    } else {
        select_677([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6046([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6047([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_241([a, c, g, e, f, b, i, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_6050([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([a, b, d, e, g], is_dual)
    } else {
        select_186([d, b, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_6049([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_677([b, c, a, d, e, f, g, i, h], is_dual)
    } else {
        select_6050([b, g, c, e, a, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6048([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1619([i, e, f, g, a, h, b], !is_dual)
    } else {
        select_6049([b, a, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6045([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6046([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_6048([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6043([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6044([a, d, c, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_6045([a, c, d, f, h, g, b, j, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6042([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_6014([a, b, j, l, k, c, d, i, h, g, e], !is_dual)
    } else {
        select_6043([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6012([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6013([a, b, k, l, i, g, h, e, c, j, d], !is_dual)
    } else {
        select_6042([a, b, e, d, c, f, h, g, i, k, j, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_6056([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2107([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_2107([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6055([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5850([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_6056([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6054([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6055([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2560([a, b, e, h, j, k, i, f, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6057([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6055([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2586([a, b, e, h, j, i, f, g, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6053([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6054([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_6057([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6060([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3108([a, j, f, k, h, b, i, g], !is_dual)
    } else {
        select_1496([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6061([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1496([a, b, d, e, c, f, g, h, j, i], is_dual)
    } else {
        select_66([a, j, f, h, b, i, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6059([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_6060([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6061([a, b, f, d, e, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6063([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3274([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3274([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6062([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_418([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_6063([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6058([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_6059([a, b, d, c, e, f, h, g, i, j, k], is_dual)
    } else {
        select_6062([a, b, d, g, f, c, h, j, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6052([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6053([a, b, e, d, h, g, f, k, l, i, j], is_dual)
    } else {
        select_6058([a, b, j, k, m, l, h, g, i, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6068([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4376([i, h, j, e, g, a, d, b, f], !is_dual)
    } else {
        select_4505([b, d, c, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6067([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2354([b, d, f, e, a, g, i, j, h], is_dual)
    } else {
        select_6068([b, a, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6070([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4376([b, a, d, e, g, h, k, j, f], is_dual)
    } else {
        select_4376([a, b, c, f, g, i, j, k, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_6072([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_91([a, b, i, j, k], is_dual)
    } else {
        select_436([a, c, d, g, e, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6071([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6072([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_6027([a, b, c, f, g, i, h, j, e, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6069([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_6070([a, b, f, c, i, g, j, k, h, e, l], is_dual)
    } else {
        select_6071([b, c, a, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6066([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6067([j, e, l, i, a, k, g, h, b, c], !is_dual)
    } else {
        select_6069([a, b, c, d, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6065([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6066([a, b, c, d, e, f, g, h, i, l, k, j], is_dual)
    } else {
        select_6066([a, c, b, d, e, f, g, h, i, l, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6064([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6065([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6065([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6051([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_6052([a, b, d, e, f, g, c, h, i, l, k, j, m], is_dual)
    } else {
        select_6064([a, b, c, d, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6011([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6012([a, b, c, l, k, m, h, i, f, j, d, g], !is_dual)
    } else {
        select_6051([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_5930([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_5931([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_6011([a, b, c, g, f, i, h, j, d, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5660([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < d) || (is_dual && l > d) {
        select_5661([a, b, c, e, d, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_5930([a, b, c, e, f, g, h, i, j, k, l, m, d, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_6081([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2770([a, c, d, b, e, f, g, h, i, k, l], is_dual)
    } else {
        select_4163([a, b, g, e, f, i, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6083([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5160([a, d, b, c, e, f, g, i, j, k, h], is_dual)
    } else {
        select_812([a, b, c, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6084([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_618([g, h, i, f, d, a, b, e], !is_dual)
    } else {
        select_2973([b, a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6082([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6083([b, c, d, e, a, f, i, h, g, j, k], is_dual)
    } else {
        select_6084([b, g, e, a, f, j, k, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6080([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6081([a, b, d, e, c, g, h, f, j, k, i, l], is_dual)
    } else {
        select_6082([a, c, d, e, b, f, h, i, g, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6088([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_141([a, b, d, f, j, g], is_dual)
    } else {
        select_88([h, i, f, a, e, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6087([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_84([b, c, a, e, g, h, l], is_dual)
    } else {
        select_6088([a, b, d, c, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6086([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6087([c, b, d, e, a, f, h, i, g, j, k, l], is_dual)
    } else {
        select_6084([c, g, e, a, f, j, k, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_6085([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6081([g, k, l, m, j, e, i, h, a, b, f, c], !is_dual)
    } else {
        select_6086([g, l, j, m, k, h, i, e, f, b, a, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6079([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6080([g, k, e, l, m, i, h, j, f, c, a, b], !is_dual)
    } else {
        select_6085([c, b, a, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6078([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6079([c, e, d, b, f, g, h, j, a, k, i, l, m], is_dual)
    } else {
        select_4140([a, b, c, d, e, f, i, j, g, h, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_6091([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5944([a, c, d, f, b, e, g, h, j, i], is_dual)
    } else {
        select_1217([a, b, c, e, d, f, g, i, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2413([h, g, j, e, a, i, b, c, f], !is_dual)
    } else {
        select_1514([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6095([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_628([a, b, c, e, g, h, i, f, k], is_dual)
    } else {
        select_628([a, b, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6093([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6094([e, j, k, f, g, i, a, b, h, c], !is_dual)
    } else {
        select_6095([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6092([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6093([h, f, k, l, a, b, i, j, c, d, g], !is_dual)
    } else {
        select_630([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6090([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6091([g, f, k, l, m, h, a, e, j, b, i, d], !is_dual)
    } else {
        select_6092([f, g, k, m, l, a, j, e, h, i, c, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_6098([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3850([a, c, b, d, f, e, g, h, j, i], is_dual)
    } else {
        select_2362([a, b, c, h, f, e, i, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_6100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_452([h, i, g, f, e, c, d, a], !is_dual)
    } else {
        select_452([g, i, h, e, f, d, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6099([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4862([b, a, c, e, d, g, f, h, i], is_dual)
    } else {
        select_6100([b, f, d, a, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6097([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6098([b, a, d, c, e, g, i, f, h, j], is_dual)
    } else {
        select_6099([b, f, d, a, h, g, e, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6104([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_381([a, b, f, d, g, h, e, j], is_dual)
    } else {
        select_803([e, a, c, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6103([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_203([d, a, c, b, e, f, g, h, i], is_dual)
    } else {
        select_6104([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6102([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1683([c, b, a, e, d, f, g, h, i], is_dual)
    } else {
        select_6103([b, c, d, e, a, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6106([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_303([a, b, e, d, f, g, i, h], is_dual)
    } else {
        select_34([a, c, h, e], is_dual)
    }
}
/// n = 8, i = 2
fn select_6107([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_67([f, g, b, a, e, h], is_dual)
    } else {
        select_1251([a, b, c, d, e, h, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_6105([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6106([a, b, d, f, g, h, e, i, j], is_dual)
    } else {
        select_6107([a, d, c, e, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6101([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6102([a, b, f, g, d, h, e, i, j, k], is_dual)
    } else {
        select_6105([b, a, c, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6096([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_6097([a, b, d, e, f, c, h, g, i, j, k], is_dual)
    } else {
        select_6101([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6089([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_6090([a, b, c, d, e, f, g, h, i, k, l, m, j], is_dual)
    } else {
        select_6096([g, h, m, l, f, a, k, e, j, b, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6077([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_6078([b, c, a, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_6089([b, c, d, e, g, i, h, j, k, l, a, m, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_6114([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_98([b, c, d, i, f, h], is_dual)
    } else {
        select_130([h, b, a, d, e, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6113([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5411([a, e, c, d, g, f, h, j, k], is_dual)
    } else {
        select_6114([c, a, b, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6112([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2938([b, c, a, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_6113([c, b, d, e, f, g, a, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6117([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_88([e, j, k, a, g, i, b], !is_dual)
    } else {
        select_551([b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6116([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5635([a, c, h, e, b, j, i, g, k], is_dual)
    } else {
        select_6117([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6118([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_381([b, d, c, e, f, h, g, j], is_dual)
    } else {
        select_88([d, i, k, a, e, g, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6115([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6116([b, c, a, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_6118([b, f, d, e, a, g, h, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6111([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6112([b, c, a, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_6115([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_6121([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_444([a, h, f, b, c], !is_dual)
    } else {
        select_4565([a, b, d, f, e, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6122([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1610([b, a, d, e, f, g, h, j, i], is_dual)
    } else {
        select_648([a, c, b, h, e, i, k, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6120([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6121([b, c, e, d, f, g, h, j, i], is_dual)
    } else {
        select_6122([a, b, d, c, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6125([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_128([b, c, d, f, g, e, h, i, k], is_dual)
    } else {
        select_5580([f, k, l, h, j, g, i, a, b, c, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6126([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_292([a, b, h, f, e, j, k], is_dual)
    } else {
        select_1596([b, c, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6124([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_6125([j, e, l, m, k, a, h, f, i, g, c, b], !is_dual)
    } else {
        select_6126([a, b, d, c, e, g, f, h, i, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_6127([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1984([g, h, i, d, e, a, f, b, c], !is_dual)
    } else {
        select_975([d, h, i, e, g, a, f, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6123([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6124([a, c, d, b, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_6127([a, c, h, e, b, g, j, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_6119([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6120([a, c, b, d, e, g, f, i, h, j, l, m], is_dual)
    } else {
        select_6123([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6110([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_6111([f, j, l, i, a, g, k, m, h, b, c, e], !is_dual)
    } else {
        select_6119([f, j, l, m, a, g, i, k, h, b, c, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6131([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_376([a, c, b, f, h, i, j, l], is_dual)
    } else {
        select_729([b, d, e, a, g, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_6132([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_67([g, f, i, a, e, b], !is_dual)
    } else {
        select_3259([b, c, f, e, d, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6130([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6131([c, a, e, d, b, f, h, g, k, i, l, j], is_dual)
    } else {
        select_6132([c, e, g, b, f, j, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6130([d, c, b, e, a, g, h, f, l, k, j, i], is_dual)
    } else {
        select_6086([a, d, c, e, b, f, h, i, g, l, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6135([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2269([g, j, i, a, h, e, b, c], !is_dual)
    } else {
        select_3088([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6137([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_48([c, e, a, d, f, g, i, h], is_dual)
    } else {
        select_188([i, k, l, a, b, j, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6138([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_111([f, g, h, d, b, e, c], !is_dual)
    } else {
        select_266([g, f, i, d, h, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6136([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6137([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6138([g, c, e, a, f, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6134([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6135([f, k, g, m, i, l, a, e, h, c], !is_dual)
    } else {
        select_6136([f, j, k, i, m, l, g, a, e, h, b, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6141([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_382([a, g, b, h, e, i], is_dual)
    } else {
        select_340([a, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6140([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6141([e, b, c, d, f, h, g, i, j], is_dual)
    } else {
        select_3174([a, f, c, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6143([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_153([a, b, i, e, f, j, k], is_dual)
    } else {
        select_529([a, c, d, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6142([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_1418([k, i, e, l, f, j, a], !is_dual)
    } else {
        select_6143([a, b, c, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6139([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6140([c, a, d, e, f, b, g, h, j, i, k], is_dual)
    } else {
        select_6142([c, b, d, e, f, a, g, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6133([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6134([a, b, d, c, e, f, g, i, j, l, m, h, k], is_dual)
    } else {
        select_6139([f, k, l, j, m, g, i, a, b, c, h, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6128([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_6129([k, g, l, j, m, a, h, i, e, f, b, c], !is_dual)
    } else {
        select_6133([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6109([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < l) || (is_dual && e > l) {
        select_6110([a, b, c, d, f, g, h, i, j, k, l, e, m], is_dual)
    } else {
        select_6128([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_6147([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1069([a, h, g, i, d, b, c], !is_dual)
    } else {
        select_2576([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6146([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6147([f, c, d, e, b, h, g, j, i], is_dual)
    } else {
        select_6006([g, a, b, e, f, i, k, l, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6151([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_100([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_100([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6150([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6151([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_32([f, j, i, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6149([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_4483([i, f, h, j, k, d, g, e, c, b], !is_dual)
    } else {
        select_6150([h, d, i, j, k, f, g, e, c, a], !is_dual)
    }
}
/// n = 8, i = 3
fn select_6152([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4163([e, b, a, c, d, f, g, h], is_dual)
    } else {
        select_4163([e, b, a, d, c, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6148([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6149([i, l, j, a, k, b, h, e, c, f, g], !is_dual)
    } else {
        select_6152([h, a, d, e, b, i, g, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6145([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6146([b, c, a, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_6148([f, j, k, g, l, m, a, h, b, c, i, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_6157([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_98([b, c, d, f, e, g], is_dual)
    } else {
        select_215([d, f, h, a, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3011([c, b, d, a, f, g, e, i, h], is_dual)
    } else {
        select_6157([b, e, d, a, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6155([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_6156([g, d, i, k, h, j, e, a, f, c], !is_dual)
    } else {
        select_5735([d, c, b, e, h, f, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_95([e, f, c, d, h, i, g], is_dual)
    } else {
        select_993([i, h, k, e, j, a, g, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6161([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_111([h, f, i, a, g, e, b], !is_dual)
    } else {
        select_95([a, e, c, d, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6159([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6160([a, b, c, d, e, f, h, g, i, j, l], is_dual)
    } else {
        select_6161([e, b, c, d, g, f, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6162([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_5619([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3055([h, d, j, i, g, a, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6158([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6159([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_6162([e, k, l, g, h, j, f, a, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6154([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6155([a, g, c, e, f, b, h, i, j, k, l], is_dual)
    } else {
        select_6158([a, c, b, d, e, f, h, i, g, k, j, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_6165([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_70([e, b, d, f, h, i, g], is_dual)
    } else {
        select_185([a, c, d, e, f, g, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6164([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_66([e, c, g, h, i, b, f], is_dual)
    } else {
        select_6165([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6168([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_167([a, b, d, f, e, g, j, i], is_dual)
    } else {
        select_4115([a, d, b, c, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6167([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_6168([b, c, a, d, f, e, h, i, g, j], is_dual)
    } else {
        select_214([f, b, e, d, a, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6166([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6167([b, c, a, d, f, e, h, i, g, k], is_dual)
    } else {
        select_6068([h, e, k, j, f, i, g, a, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6163([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6164([a, b, f, d, e, i, h, g, j, k, l], is_dual)
    } else {
        select_6166([a, b, g, c, e, h, f, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6153([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_6154([b, c, e, a, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_6163([b, c, d, e, f, a, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6144([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6145([a, c, d, b, e, f, h, j, i, k, l, g, m], is_dual)
    } else {
        select_6153([a, c, b, e, d, f, g, h, j, l, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6108([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6109([b, d, e, c, g, h, i, a, j, l, f, k, m], is_dual)
    } else {
        select_6144([b, d, a, c, e, f, g, i, j, h, l, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6076([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_6077([a, c, d, e, f, g, b, i, h, j, k, l, m], is_dual)
    } else {
        select_6108([a, c, b, e, f, g, h, d, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6075([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6076([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_6076([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6074([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_6075([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_6075([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_6173([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1818([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_2425([a, b, c, d, i, h, g, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_6177([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_2902([a, b, c, d, f, g, h, i, j], is_dual)
    } else {
        select_2902([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6178([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_82([a, b, h, i, j], is_dual)
    } else {
        select_63([c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_6176([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6177([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_6178([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6176([a, b, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_6176([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6174([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_6175([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1818([a, b, c, d, k, j, i, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6172([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6173([a, b, c, d, h, e, i, j, k], is_dual)
    } else {
        select_6174([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6171([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3824([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_6172([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6180([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5352([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_5352([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6179([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6180([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_6180([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6170([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6171([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_6179([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6183([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2060([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2060([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6184([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1515([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_1515([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6182([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6183([a, b, d, e, f, g, h, i, c, j, k], is_dual)
    } else {
        select_6184([a, b, d, e, f, c, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6181([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_6182([a, b, c, j, d, l, m, k, e, i, h], !is_dual)
    } else {
        select_3408([a, b, c, j, l, m, k, e, i, d, h, f, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6169([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6170([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_6181([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6073([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6074([a, b, c, d, e, f, h, g, j, i, k, l, m], is_dual)
    } else {
        select_6169([a, b, c, d, j, l, m, e, k, g, h, i, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_5659([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5660([a, b, c, d, e, g, f, j, i, l, k, h, n, m], is_dual)
    } else {
        select_6073([a, b, c, d, e, j, f, h, l, m, i, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_6195([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_565([a, b, d, f, e, g, h, j], is_dual)
    } else {
        select_4145([e, h, i, j, a, b, f, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6194([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_476([e, f, d, b, g, i, j, h], is_dual)
    } else {
        select_6195([a, b, c, g, e, f, h, k, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6197([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4241([b, c, d, a, f, e, h, i, g, j], is_dual)
    } else {
        select_4009([c, d, e, f, a, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6196([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6197([i, j, e, k, g, f, a, b, h, c], !is_dual)
    } else {
        select_3436([f, j, i, g, h, b, c, e, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6193([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6194([a, c, d, b, e, g, f, h, i, m, l, j], is_dual)
    } else {
        select_6196([a, b, g, c, e, f, i, j, k, m, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_6200([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3011([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_933([g, e, k, m, l, a, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6203([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_52([a, b, h, e, j, k], is_dual)
    } else {
        select_55([d, c, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6202([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6203([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_453([g, c, d, a, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6201([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2394([c, g, a, d, f, i, j], is_dual)
    } else {
        select_6202([a, b, c, d, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6199([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6200([a, b, c, d, e, f, h, i, g, k, j, l, m], is_dual)
    } else {
        select_6201([j, k, h, m, i, l, e, f, a, b, g, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6207([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_32([f, b, c, e, h, g], is_dual)
    } else {
        select_55([k, d, j, i, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6206([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6207([a, f, b, d, e, g, i, j, k, h, l], is_dual)
    } else {
        select_128([d, b, c, g, e, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_186([a, f, j, b, i, c], !is_dual)
    } else {
        select_130([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_6205([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6206([a, c, b, d, f, e, g, h, i, j, k, m], is_dual)
    } else {
        select_6208([h, g, l, m, k, d, e, a, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6209([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_761([c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1423([a, e, d, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6204([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6205([k, j, m, h, g, l, e, a, i, b, f, c, d], !is_dual)
    } else {
        select_6209([k, g, m, h, j, l, e, a, b, i, f, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6198([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6199([b, c, a, d, e, f, g, h, i, k, m, j, l], is_dual)
    } else {
        select_6204([a, b, c, d, e, f, h, i, j, l, m, g, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_6192([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6193([e, b, a, d, h, f, g, j, i, k, m, n, l], is_dual)
    } else {
        select_6198([g, b, c, a, f, i, k, l, j, e, m, h, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_6213([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_121([e, f, h, a, d, g, c], !is_dual)
    } else {
        select_5390([d, h, i, e, g, a, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6212([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1769([g, i, j, e, f, h, b, c, d], !is_dual)
    } else {
        select_6213([a, c, d, g, e, f, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6215([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_120([d, f, i, e, a, g], !is_dual)
    } else {
        select_1088([b, e, c, d, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6214([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6215([l, k, g, a, i, b, h, c, f], !is_dual)
    } else {
        select_4729([a, d, e, b, f, g, i, j, l, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_6211([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6212([f, a, h, d, j, g, k, e, m, i], is_dual)
    } else {
        select_6214([g, a, e, b, c, f, i, j, h, l, m, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6219([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_82([a, i, b, e, k], is_dual)
    } else {
        select_2664([j, i, k, g, a, h, f, d, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6220([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_88([b, a, c, i, e, k, h], is_dual)
    } else {
        select_434([a, b, d, h, f, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6218([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6219([a, d, c, b, e, f, h, i, g, j, l], is_dual)
    } else {
        select_6220([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6222([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_292([a, b, g, e, d, i, k], is_dual)
    } else {
        select_2755([b, d, c, e, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6223([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_361([a, c, g, f, h, e, j], is_dual)
    } else {
        select_100([a, b, d, e, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6221([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6222([b, a, c, g, e, f, i, j, k, l, h], is_dual)
    } else {
        select_6223([e, b, c, d, f, h, g, j, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6217([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6218([a, c, b, d, f, e, g, i, h, l, j, m], is_dual)
    } else {
        select_6221([l, k, m, g, i, h, j, f, e, a, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6226([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_626([i, j, e, k, f, h, a, b], !is_dual)
    } else {
        select_1774([a, c, d, e, g, h, j, f, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6225([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1772([h, k, f, j, e, a, b, g], !is_dual)
    } else {
        select_6226([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6224([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6225([i, g, j, k, e, f, h, a, b, d, c], !is_dual)
    } else {
        select_1769([i, e, k, a, g, h, f, d, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6216([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6217([a, b, g, d, e, f, i, l, j, h, k, m, n], is_dual)
    } else {
        select_6224([f, b, h, c, j, e, k, g, i, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_6210([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6211([b, a, d, c, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_6216([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6191([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6192([c, d, b, e, a, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_6210([c, d, a, e, f, g, h, b, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6190([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6191([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6191([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_6232([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_634([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_629([d, h, e, i, f, g, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6231([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6232([i, e, j, f, a, g, h, b, c], !is_dual)
    } else {
        select_4134([b, a, c, d, g, e, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6230([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6231([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_6231([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6235([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1511([b, a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1770([a, b, c, g, h, f, e, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6234([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4761([e, i, j, k, a, g, h, b, f, c], !is_dual)
    } else {
        select_6235([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6233([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6234([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_6234([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6229([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6230([a, b, e, d, c, f, g, h, i, k], is_dual)
    } else {
        select_6233([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6237([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1462([a, b, i, k, j, g, h, f, c], !is_dual)
    } else {
        select_221([a, b, j, k, i, h, g, e, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6240([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_565([f, i, g, k, d, e, a, h], !is_dual)
    } else {
        select_374([f, j, i, k, d, g, h, b, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6241([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_5525([b, a, c, f, e, g, d, h, i, j], is_dual)
    } else {
        select_1533([a, d, b, f, e, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6239([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6240([k, j, h, e, i, a, f, g, b, c, d], !is_dual)
    } else {
        select_6241([k, j, e, a, i, h, f, g, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6238([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6239([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_6239([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6237([a, b, k, j, h, i, f, g, c, e, d], !is_dual)
    } else {
        select_6238([a, b, c, e, d, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6228([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6229([a, b, j, k, h, c, i, g, f, d, e], !is_dual)
    } else {
        select_6236([a, b, j, k, i, c, h, g, f, e, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6227([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6228([a, b, c, d, g, f, i, j, k, m, h], is_dual)
    } else {
        select_6228([a, b, c, e, f, g, h, k, j, l, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_6189([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_6190([a, b, d, c, e, f, h, i, g, k, l, j, m, n], is_dual)
    } else {
        select_6227([a, b, j, m, n, l, k, c, h, i, d, g, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6248([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_74([a, b, d, e, f, h, j], is_dual)
    } else {
        select_1964([a, c, b, d, e, f, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6247([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4163([a, c, h, e, g, f, i, j], is_dual)
    } else {
        select_6248([a, b, e, d, f, g, h, k, i, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_6249([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1874([a, f, j, g, k, h, e, c], !is_dual)
    } else {
        select_1875([a, e, b, g, d, i, f, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6246([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6247([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_6249([a, j, l, i, k, b, f, h, c, d, g], !is_dual)
    }
}
/// n = 7, i = 3
fn select_6252([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_120([a, b, c, d, e, f], is_dual)
    } else {
        select_120([a, b, f, g, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6251([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_579([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_6252([a, f, c, h, b, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_6250([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_6251([a, c, b, d, f, h, e, i, g, j], is_dual)
    } else {
        select_3880([a, c, d, e, f, b, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6245([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_6246([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_6250([a, h, k, l, i, f, b, c, j, g, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_6256([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_120([e, a, f, h, g, b], !is_dual)
    } else {
        select_113([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_6255([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_728([a, e, d, c, h, f, g], is_dual)
    } else {
        select_6256([a, f, d, b, g, e, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6257([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_299([a, k, g, l, b, h, j, c, d], !is_dual)
    } else {
        select_3523([a, c, e, b, d, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6254([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6255([a, e, d, c, g, f, h, i, j], is_dual)
    } else {
        select_6257([a, g, k, i, m, l, e, h, b, j, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6260([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_157([e, g, d, i, a, h, b, f], !is_dual)
    } else {
        select_1528([b, a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6259([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1671([d, j, k, g, i, a, e, b, h], !is_dual)
    } else {
        select_6260([a, e, c, d, g, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6262([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_834([a, c, d, e, g, f, i, h], is_dual)
    } else {
        select_386([f, j, g, a, d, h, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6264([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_77([b, c, a, d, f, e, h], is_dual)
    } else {
        select_82([a, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6263([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3164([i, k, g, e, d, b, a, h], !is_dual)
    } else {
        select_6264([b, d, c, g, e, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6261([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6262([a, d, b, h, e, f, j, i, k, g], is_dual)
    } else {
        select_6263([b, a, c, e, g, h, f, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6258([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_6259([e, b, d, a, f, h, g, j, i, k, l], is_dual)
    } else {
        select_6261([a, b, d, c, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6253([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6254([a, b, c, d, e, f, g, h, i, j, m, k, l], is_dual)
    } else {
        select_6258([a, b, d, c, f, e, g, h, i, k, l, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6244([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_6245([a, h, k, j, m, i, l, g, e, b, c, f], !is_dual)
    } else {
        select_6253([a, c, b, d, e, g, h, f, j, l, i, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_6270([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3051([b, a, c, e, f, i, h, j, g], is_dual)
    } else {
        select_3051([b, a, d, e, f, i, g, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_6269([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6270([b, c, a, d, e, f, h, i, g, j], is_dual)
    } else {
        select_2363([e, g, b, a, f, j, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6271([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2269([d, b, c, f, g, e, h, j], is_dual)
    } else {
        select_4376([e, a, b, d, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6268([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6269([a, d, c, b, e, f, g, h, i, j], is_dual)
    } else {
        select_6271([f, b, c, h, e, a, i, g, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_6273([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_324([a, b, c, d, e, f, g], is_dual)
    } else {
        select_1402([a, b, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6272([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1427([b, a, c, d, f, g, h, e, i], is_dual)
    } else {
        select_6273([b, e, d, g, a, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6267([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_6268([a, b, c, d, f, g, e, h, j, i, k], is_dual)
    } else {
        select_6272([a, f, e, d, b, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1069([a, b, c, h, j, f, k], is_dual)
    } else {
        select_6248([a, b, d, e, f, g, i, h, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6278([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_91([a, b, c, i, j], is_dual)
    } else {
        select_1720([h, i, j, g, f, b, c, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6278([b, d, e, a, c, g, h, j, f, i], is_dual)
    } else {
        select_171([a, c, b, e, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6280([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_153([c, b, g, e, f, i, h], is_dual)
    } else {
        select_644([g, k, j, d, e, h, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6279([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2835([j, e, k, f, h, i, a, b, g, c], !is_dual)
    } else {
        select_6280([j, h, k, f, e, i, b, g, a, d, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6276([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6277([i, a, h, j, k, b, e, g, c, f], !is_dual)
    } else {
        select_6279([h, i, j, k, b, e, g, a, f, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6275([a, c, b, e, d, f, g, i, h, l, k, j], is_dual)
    } else {
        select_6276([a, b, c, e, h, g, i, f, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6266([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_6267([a, c, d, b, e, g, f, h, j, i, k], is_dual)
    } else {
        select_6274([a, j, i, h, m, e, l, f, k, b, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6282([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2109([g, h, a, j, k, b, i, e, f], !is_dual)
    } else {
        select_1683([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6281([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_322([a, c, e, b, d, f, g, h, j, i, k], is_dual)
    } else {
        select_6282([a, f, l, j, k, h, c, b, i, d, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6265([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6266([a, c, b, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_6281([a, h, k, j, m, e, l, f, b, c, i, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6243([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_6244([a, c, d, e, g, b, h, i, f, k, j, l, m], is_dual)
    } else {
        select_6265([a, c, d, b, f, g, e, i, h, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_6288([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_724([a, b, c, e, g, f, i, j, h], is_dual)
    } else {
        select_1622([a, f, b, d, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_6289([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4640([i, g, j, f, a, b, h, c, e], !is_dual)
    } else {
        select_955([i, f, j, a, g, h, b, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6287([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6288([j, l, m, i, h, k, a, b, f, c], !is_dual)
    } else {
        select_6289([h, i, l, k, j, b, a, g, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6292([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_451([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_122([b, c, d, g, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_6291([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_978([a, b, f, d, e, h, g, i, j, k], is_dual)
    } else {
        select_6292([a, b, g, c, e, f, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6294([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_451([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2474([a, c, d, e, g, h, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4442([a, b, f, d, e, g, i, h, j, k], is_dual)
    } else {
        select_6294([a, b, c, g, e, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6290([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6291([c, d, a, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6293([c, d, b, e, f, a, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6286([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6287([a, b, d, c, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_6290([b, c, d, e, a, g, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6298([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_820([h, j, k, g, f, a, e, c], !is_dual)
    } else {
        select_122([i, k, j, a, d, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6297([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6298([a, c, b, d, e, f, h, j, i, k, g], is_dual)
    } else {
        select_2355([j, k, f, h, g, a, d, e, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6299([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_699([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_699([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_6296([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6297([a, c, b, d, e, g, i, f, j, h, k], is_dual)
    } else {
        select_6299([d, c, f, e, a, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6296([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_501([a, h, g, j, f, e, i, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6285([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6286([a, b, d, c, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_6295([f, m, j, k, g, i, h, d, b, c, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6303([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5535([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_5535([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6305([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_77([b, c, d, e, f, g, i], is_dual)
    } else {
        select_32([a, d, c, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6304([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_495([c, a, e, d, b, f, g, h], is_dual)
    } else {
        select_6305([c, b, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6302([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6303([i, j, g, a, f, b, h, c, d], !is_dual)
    } else {
        select_6304([a, c, d, e, b, f, g, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_6307([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_95([d, i, e, h, g, a, f], !is_dual)
    } else {
        select_75([d, b, c, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_6306([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_81([d, e, b, c, f, g], is_dual)
    } else {
        select_6307([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6301([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_6302([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_6306([i, j, g, a, f, b, c, h, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6310([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_197([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_1576([a, c, b, f, e, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_6311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_265([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_948([a, c, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6309([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_6310([c, b, a, g, f, i, h, e, j], is_dual)
    } else {
        select_6311([a, c, e, d, h, f, g, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6314([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_153([j, i, a, g, h, b, e], !is_dual)
    } else {
        select_325([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6313([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6314([a, b, f, d, g, h, e, i, j, k], is_dual)
    } else {
        select_647([a, d, c, e, h, g, f, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6315([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_358([g, j, i, e, h, a, b, c, f], !is_dual)
    } else {
        select_650([a, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6312([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6313([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6315([a, b, c, g, e, i, h, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6308([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6309([c, d, b, e, f, a, g, h, i, k, j], is_dual)
    } else {
        select_6312([c, d, a, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_6301([b, d, c, a, g, i, h, j, k, f], is_dual)
    } else {
        select_6308([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6284([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6285([a, b, d, c, e, f, g, h, j, k, l, i, m], is_dual)
    } else {
        select_6300([b, c, a, e, d, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6321([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_111([g, f, k, a, b, h, d], !is_dual)
    } else {
        select_942([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6320([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5140([a, c, d, e, g, f, h, i, k, j], is_dual)
    } else {
        select_6321([a, b, d, f, g, e, h, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_6322([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2324([a, b, e, f, g, i, d], is_dual)
    } else {
        select_365([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6319([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6320([a, c, d, b, f, g, e, i, j, h, l, k], is_dual)
    } else {
        select_6322([k, l, i, f, e, a, b, c, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6324([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1486([j, i, k, h, f, e, b, a, g], !is_dual)
    } else {
        select_97([b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6325([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1772([c, b, a, e, g, f, i, h], is_dual)
    } else {
        select_1479([b, c, a, d, f, g, h, e, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6323([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6324([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_6325([a, d, c, b, f, e, g, i, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_6318([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_6319([b, c, a, d, f, e, g, h, i, k, l, j], is_dual)
    } else {
        select_6323([i, l, e, m, f, h, a, j, c, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6329([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_381([a, h, b, d, e, j, g, l], is_dual)
    } else {
        select_381([a, g, c, d, f, i, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6330([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_453([a, h, b, d, e, j, g], is_dual)
    } else {
        select_453([a, g, c, d, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6328([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6329([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6330([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6327([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3995([k, l, g, a, i, h, e, b, c], !is_dual)
    } else {
        select_6328([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_6333([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_71([a, b, g, d, f, i], is_dual)
    } else {
        select_763([a, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6332([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6333([b, a, c, d, e, g, f, i, h], is_dual)
    } else {
        select_733([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_6334([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1772([h, i, d, g, e, a, b, f], !is_dual)
    } else {
        select_4730([b, a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6331([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6332([b, c, a, d, e, f, h, g, j, k], is_dual)
    } else {
        select_6334([a, c, b, e, h, g, f, j, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_6326([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_6327([h, i, m, l, k, j, f, e, a, c, b, g], !is_dual)
    } else {
        select_6331([c, a, d, e, h, f, j, g, l, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6317([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6318([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_6326([j, e, l, m, h, i, k, a, b, f, g, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_6340([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_99([a, d, c, g, e, h], is_dual)
    } else {
        select_39([e, f, b, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_6339([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_499([i, g, j, h, f, a, d, b], !is_dual)
    } else {
        select_6340([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6338([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3064([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_6339([b, c, d, g, f, e, i, h, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_6342([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_71([a, b, e, f, d, h], is_dual)
    } else {
        select_382([b, c, d, e, g, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_6341([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6342([b, a, c, i, e, g, k, h], is_dual)
    } else {
        select_3059([b, d, c, a, f, e, i, h, k, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6337([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6338([c, d, b, e, a, f, g, i, j, h, k], is_dual)
    } else {
        select_6341([c, d, a, e, b, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6343([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_6277([h, i, j, k, e, a, f, g, c, b], !is_dual)
    } else {
        select_1406([h, j, i, a, g, f, b, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6336([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6337([a, c, e, d, b, f, h, i, g, k, j], is_dual)
    } else {
        select_6343([j, k, i, l, a, f, h, b, c, g, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6335([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4567([e, h, j, l, m, i, k, a, b, g, d, f], !is_dual)
    } else {
        select_6336([e, l, h, m, j, i, k, f, a, b, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6316([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6317([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    } else {
        select_6335([a, b, c, d, e, f, g, i, h, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6283([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6284([b, c, a, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_6316([b, c, d, e, f, g, h, i, j, a, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6242([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6243([a, b, k, l, m, g, i, j, d, c, e, h, f], !is_dual)
    } else {
        select_6283([a, g, k, l, m, b, i, j, c, d, e, h, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6188([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_6189([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_6242([a, b, k, c, m, n, g, l, j, h, d, i, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6351([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_618([f, d, c, b, g, e, i, h], is_dual)
    } else {
        select_3055([e, a, c, f, g, d, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6352([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5065([e, f, b, c, d, g, h, i], is_dual)
    } else {
        select_1736([g, a, c, d, f, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6350([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6351([b, c, h, e, g, f, a, i, j], is_dual)
    } else {
        select_6352([b, c, a, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_6353([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_444([a, d, f, c, e], !is_dual)
    } else {
        select_70([a, b, c, d, f, g, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_6349([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6350([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_6353([e, j, a, g, h, i, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_6357([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_21([b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_392([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6356([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_270([f, g, c, d, e, a, h, j], is_dual)
    } else {
        select_6357([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6355([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6356([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3989([b, h, c, a, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6358([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2566([a, b, h, d, e, f, g, i, j, k], is_dual)
    } else {
        select_1175([a, f, c, g, d, e, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6354([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6355([a, b, c, d, h, f, g, j, i, l], is_dual)
    } else {
        select_6358([a, c, e, b, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6348([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_6349([a, d, e, f, h, g, i, c, k, j], is_dual)
    } else {
        select_6354([a, b, d, c, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6361([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1084([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_408([b, a, c, e, f, d, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6360([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1311([d, e, j, k, g, i, f, a, h], !is_dual)
    } else {
        select_6361([d, e, g, i, j, k, h, b, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6363([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1803([a, e, d, g, b, f, h, j, i], is_dual)
    } else {
        select_3144([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_6365([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_444([d, e, f, b, g], !is_dual)
    } else {
        select_185([a, c, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6367([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_111([a, c, f, d, e, h, i], is_dual)
    } else {
        select_213([a, b, e, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2747([a, b, d, c, f, g, e, h, i, j], is_dual)
    } else {
        select_6367([h, i, j, a, b, g, e, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6364([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6365([h, g, j, a, b, i, e, f, d], !is_dual)
    } else {
        select_6366([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6362([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_6363([a, c, d, e, b, f, g, h, j, i], is_dual)
    } else {
        select_6364([a, c, b, e, d, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6359([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_6360([b, a, c, d, f, g, h, i, k, j, e], is_dual)
    } else {
        select_6362([h, d, f, k, j, i, g, e, a, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_6347([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_6348([b, a, c, d, e, f, h, g, i, j, k, m], is_dual)
    } else {
        select_6359([f, m, l, a, g, b, j, i, k, h, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_6346([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6347([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6347([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1692([a, c, d, b, f, e, i, g, j, h], is_dual)
    } else {
        select_376([b, c, a, f, g, i, h, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_6372([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2239([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6373([h, e, j, k, a, i, f, b, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6375([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2478([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2478([b, a, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6376([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1236([a, b, g, d, e, f, h, j], is_dual)
    } else {
        select_5065([c, a, f, d, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6374([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6375([f, j, k, l, a, h, i, g, b, c], !is_dual)
    } else {
        select_6376([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_6371([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6372([f, j, k, n, a, g, l, b, h, d, i], !is_dual)
    } else {
        select_6374([a, c, d, e, g, f, h, j, i, m, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6380([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_167([a, b, d, h, e, g, j, k], is_dual)
    } else {
        select_822([a, d, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6381([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_820([a, c, f, e, i, g, j, l], is_dual)
    } else {
        select_325([b, c, d, g, h, f, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6379([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6380([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_6381([j, e, k, m, h, l, a, f, i, g, c, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_6382([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4640([l, i, m, f, a, b, j, c, d], !is_dual)
    } else {
        select_6333([b, c, e, d, g, i, h, k, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_6378([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6379([f, l, m, n, a, j, k, h, i, b, c, g, e], !is_dual)
    } else {
        select_6382([a, b, c, d, e, f, g, i, h, k, j, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6377([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_4727([a, d, g, e, f, b, h, j, i, l, k], is_dual)
    } else {
        select_6378([a, c, d, b, e, f, h, g, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6370([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6371([a, c, b, e, d, f, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_6377([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6369([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6370([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6370([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_6389([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_89([b, c, d, e, f, g], is_dual)
    } else {
        select_703([a, c, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6389([a, c, e, d, f, g, h, j, k], is_dual)
    } else {
        select_2836([a, b, f, d, g, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_699([i, k, e, j, a, d, f, g, b], !is_dual)
    } else {
        select_6388([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6386([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_109([d, e, k, a, h, j, g, b, f], !is_dual)
    } else {
        select_6387([a, b, c, d, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_792([b, g, d, e, f, a, h, j], is_dual)
    } else {
        select_775([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6390([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6391([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_408([f, a, d, b, e, g, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6385([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6386([b, d, c, f, h, i, g, a, j, k, l], is_dual)
    } else {
        select_6390([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_6394([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_932([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_831([b, c, f, d, a, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6393([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1874([a, b, c, d, h, f, j, k], is_dual)
    } else {
        select_6394([a, b, c, f, e, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6397([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_100([a, b, d, g, e, h, j, l], is_dual)
    } else {
        select_2755([a, h, c, e, f, i, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_6396([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4777([j, k, m, f, i, a, b, g, e], !is_dual)
    } else {
        select_6397([b, c, e, d, f, g, i, h, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6398([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4137([b, c, h, f, g, e, j, k, i], is_dual)
    } else {
        select_1730([a, c, d, e, f, g, h, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_6395([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6396([a, c, b, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_6398([b, c, g, d, f, i, a, h, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6392([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6393([a, b, d, f, e, h, g, j, i, m, n], is_dual)
    } else {
        select_6395([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6384([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6385([a, b, f, e, d, h, g, i, k, l, j, n], is_dual)
    } else {
        select_6392([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_6403([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_167([b, a, d, e, g, f, j, i], is_dual)
    } else {
        select_167([a, b, c, f, h, e, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6402([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_67([b, d, e, h, f, j], is_dual)
    } else {
        select_6403([j, k, h, l, g, i, a, b, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6401([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6303([h, k, l, a, g, b, j, c, d], !is_dual)
    } else {
        select_6402([a, c, b, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_6400([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6401([b, c, d, e, g, i, a, h, j, k, l, m], is_dual)
    } else {
        select_3424([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_6406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_812([d, b, c, g, i, j, h], is_dual)
    } else {
        select_776([a, d, e, f, b, c, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_6408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1617([a, b, c, i, f, h, g, k, j], is_dual)
    } else {
        select_230([a, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6408([a, c, d, b, e, f, g, h, i, k, j], is_dual)
    } else {
        select_4517([b, c, e, h, f, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_6405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6406([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_6407([b, d, c, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_6404([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2312([a, b, c, g, i, k, l, m], is_dual)
    } else {
        select_6405([a, b, d, e, c, f, g, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_6399([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6400([a, b, c, d, f, e, g, h, i, k, j, m, l], is_dual)
    } else {
        select_6404([a, b, c, e, d, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_6383([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6384([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_6399([a, b, d, c, f, e, h, g, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_6368([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6369([a, b, c, d, f, e, h, i, g, j, k, l, n, m], is_dual)
    } else {
        select_6383([a, b, c, d, f, e, h, g, j, i, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6345([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6346([a, b, c, e, f, d, i, g, h, l, k, j, n], is_dual)
    } else {
        select_6368([a, b, c, d, f, e, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_6415([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, b, d, e, f, g, h], is_dual)
    } else {
        select_2007([f, i, j, a, b, h, c, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_6417([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_29([b, c, d, e, f, g, h], is_dual)
    } else {
        select_118([a, h, b, c, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6416([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6417([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_240([a, g, d, e, f, b, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6414([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6415([a, b, c, d, g, f, i, k, h, l], is_dual)
    } else {
        select_6416([c, d, e, a, b, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_6419([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_270([a, b, d, e, g, f, h, i], is_dual)
    } else {
        select_1548([a, b, c, h, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6418([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6415([a, b, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_6419([c, d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6413([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6414([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_6418([a, b, c, e, d, f, g, i, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6422([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_140([e, g, i, j, f, h, c, d], !is_dual)
    } else {
        select_140([e, f, i, j, g, h, a, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6421([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6422([c, d, e, f, a, g, h, i, k, l], is_dual)
    } else {
        select_2525([g, j, m, h, l, a, k, f, b, i], !is_dual)
    }
}
/// n = 8, i = 2
fn select_6424([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_468([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_468([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6423([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6424([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_5518([d, f, b, c, h, a, g, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_6420([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6421([a, b, c, d, e, f, h, i, j, k, l, g, m], is_dual)
    } else {
        select_6423([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6412([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_6413([b, c, d, a, e, g, f, h, i, k, j, l], is_dual)
    } else {
        select_6420([g, k, f, l, m, i, b, a, c, j, d, h, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1750([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_1423([h, e, a, f, i, g, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6427([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_6428([a, d, c, e, f, b, g, h, i], is_dual)
    } else {
        select_616([a, d, b, e, f, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6426([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_6427([a, b, c, e, d, f, h, g, i], is_dual)
    } else {
        select_186([c, e, g, f, d, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6432([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3604([b, d, c, e, f, a, g, h, i, j], is_dual)
    } else {
        select_1010([a, b, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6431([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4794([d, a, b, g, f, e, i, h, k], is_dual)
    } else {
        select_6432([h, g, j, k, d, i, f, e, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6430([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_384([h, i, k, j, e, a, g, c, d], !is_dual)
    } else {
        select_6431([b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, e, c, d, f, g, h], is_dual)
    } else {
        select_624([a, b, c, g, f, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6434([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_987([a, c, d, e, g, h, f, i, k], is_dual)
    } else {
        select_6435([a, b, d, f, h, g, e, j, i, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_6436([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_886([a, c, f, e, b, g, h], is_dual)
    } else {
        select_1903([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6433([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6434([a, b, d, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_6436([a, c, d, e, g, h, i, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_6429([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_6430([b, d, e, c, a, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6433([b, d, e, a, f, g, c, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6425([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6426([a, b, d, c, f, i, h, j, g], is_dual)
    } else {
        select_6429([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6411([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_6412([b, c, d, a, e, g, f, h, i, j, m, k, l], is_dual)
    } else {
        select_6425([g, k, l, f, m, i, a, b, c, d, j, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6410([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6411([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6411([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6442([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_250([c, d, e, f, h, g], is_dual)
    } else {
        select_4911([f, j, a, b, i, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6441([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4996([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_6442([a, b, c, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6444([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_618([i, g, j, k, a, f, h, b], !is_dual)
    } else {
        select_64([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6443([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6444([a, d, b, c, e, f, g, i, j, h, l], is_dual)
    } else {
        select_1568([b, c, f, a, e, g, h, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6440([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6441([c, d, a, b, e, f, g, i, h, j, k], is_dual)
    } else {
        select_6443([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_6447([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2250([b, c, a, d, e, h, f, i, g], is_dual)
    } else {
        select_3642([a, b, c, d, e, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_6446([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6447([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2253([g, a, i, j, e, f, h, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6445([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6446([a, h, k, l, i, j, b, g, c, d], !is_dual)
    } else {
        select_478([a, h, k, j, i, b, f, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6439([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6440([a, b, i, k, l, m, j, g, h, c, f, d], !is_dual)
    } else {
        select_6445([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_6448([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1461([a, b, j, k, i, h, e, f, c, g], !is_dual)
    } else {
        select_1542([a, b, i, k, j, e, h, g, d, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6438([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6439([a, b, c, d, e, f, i, h, j, k, g, l, m], is_dual)
    } else {
        select_6448([a, b, l, j, i, k, h, g, f, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6452([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1307([e, h, i, k, a, j, b, f, g, c], !is_dual)
    } else {
        select_5284([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6451([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6452([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_6452([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_6454([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1102([a, b, h, i, c, d, g], !is_dual)
    } else {
        select_778([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_6453([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1311([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_6454([a, b, e, f, c, d, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6450([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6451([a, b, f, e, d, h, g, j, k, i, l], is_dual)
    } else {
        select_6453([a, b, j, k, f, l, h, i, g, c], !is_dual)
    }
}
/// n = 9, i = 2
fn select_6459([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_95([a, b, d, e, f, i, h], is_dual)
    } else {
        select_53([a, c, d, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6458([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1334([a, c, b, g, h, i, f, j, k], is_dual)
    } else {
        select_6459([b, c, a, d, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6460([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5187([a, b, c, d, e, g, f, h, j], is_dual)
    } else {
        select_3704([e, i, j, a, h, f, b, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6457([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6458([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6460([f, j, i, l, a, b, k, g, h, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6456([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6457([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_6457([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_6461([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_790([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_566([a, b, j, f, i, k, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6455([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6456([a, b, c, e, f, d, g, h, j, k, i, l], is_dual)
    } else {
        select_6461([a, b, j, k, l, c, h, i, d, e, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6449([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6450([a, b, c, e, d, f, g, h, j, k, i, l], is_dual)
    } else {
        select_6455([a, b, f, l, m, k, h, j, i, c, d, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6437([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6438([a, b, f, c, e, h, j, g, l, i, k, n, m], is_dual)
    } else {
        select_6449([a, b, g, d, e, i, h, f, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6409([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6410([a, b, k, j, m, n, f, l, g, i, c, h, e], !is_dual)
    } else {
        select_6437([a, b, e, d, c, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6344([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_6345([a, b, c, e, d, f, g, j, i, h, k, l, m, n], is_dual)
    } else {
        select_6409([a, b, e, f, d, g, h, i, j, c, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6187([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_6188([a, b, c, d, e, f, h, j, i, k, l, m, g, n], is_dual)
    } else {
        select_6344([a, b, c, d, e, f, h, g, i, j, l, m, k, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_6471([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_235([f, d, h, i, e, g, a, c], !is_dual)
    } else {
        select_1289([f, h, i, e, d, g, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6470([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_176([d, g, h, i, a, e, f, c], !is_dual)
    } else {
        select_6471([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6469([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6470([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_6470([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6468([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6469([a, b, g, i, f, h, c, d, e], !is_dual)
    } else {
        select_6469([a, b, h, i, f, g, c, d, e], !is_dual)
    }
}
/// n = 7, i = 2
fn select_6476([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_54([a, b, c, d, e, f], is_dual)
    } else {
        select_34([e, c, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_6475([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_205([e, c, d, a, f, h], is_dual)
    } else {
        select_6476([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_6474([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_6475([b, c, d, e, a, f, h, g], is_dual)
    } else {
        select_312([b, a, d, e, c, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_6478([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_63([c, d, e, f, g], is_dual)
    } else {
        select_39([a, b, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_6477([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1129([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_6478([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6473([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6474([g, a, i, j, k, b, c, h], !is_dual)
    } else {
        select_6477([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_6479([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_226([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_67([a, c, h, g, i, b], is_dual)
    }
}
/// n = 11, i = 4
fn select_6472([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_6473([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_6479([a, c, b, e, f, g, d, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6467([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6468([a, b, i, j, k, c, d, e, h], !is_dual)
    } else {
        select_6472([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6466([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2712([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_6467([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_6483([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_191([a, b, c, d, e, f, g], is_dual)
    } else {
        select_280([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_6482([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_511([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_6483([a, b, d, e, h, c, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6485([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_709([a, i, j, g, b, h, e, f, c], !is_dual)
    } else {
        select_709([a, i, j, h, b, g, f, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6484([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1209([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_6485([a, b, k, l, i, j, c, d, e, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6481([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6482([a, b, d, f, g, c, e, h, i, k], is_dual)
    } else {
        select_6484([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_6488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_139([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_139([a, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6487([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_281([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_6488([a, b, f, c, d, e, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6489([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_476([a, b, h, c, i, f, j, g], is_dual)
    } else {
        select_327([a, b, f, d, e, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6486([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_6487([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6489([a, b, f, d, e, g, h, i, c, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6480([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6481([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_6486([a, b, d, f, g, c, h, e, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6465([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6466([a, b, c, f, g, d, e, h, i, j, k], is_dual)
    } else {
        select_6480([a, b, c, d, e, f, g, h, j, l, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_6493([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_4847([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2881([a, f, e, h, i, b, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6496([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1902([b, a, c, d, e, f, g, j, h, i], is_dual)
    } else {
        select_5403([a, h, i, j, f, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6495([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1914([a, b, g, f, h, c, i], is_dual)
    } else {
        select_6496([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_6497([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_659([a, d, c, e, b, f, g, h], is_dual)
    } else {
        select_1681([a, d, b, e, f, c, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6495([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_6497([a, i, j, f, b, h, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6492([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_6493([a, b, c, g, f, h, d, i, j], is_dual)
    } else {
        select_6494([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6500([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4256([b, c, d, f, g, h, a, i, j], is_dual)
    } else {
        select_1825([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6499([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2342([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_6500([a, b, d, c, h, g, i, j, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6498([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_6499([a, b, e, c, f, g, d, h, i, j, k], is_dual)
    } else {
        select_6499([a, b, e, d, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6491([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_6492([a, c, d, e, h, g, i, b, j, k], is_dual)
    } else {
        select_6498([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6504([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_249([a, b, c, d, f, h, i], is_dual)
    } else {
        select_3016([a, b, e, c, d, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6503([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6504([a, b, d, e, c, h, i, g, j, l], is_dual)
    } else {
        select_875([a, c, d, e, b, f, g, i, h, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_6507([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_565([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_121([e, g, h, a, b, c, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6506([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_119([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_6507([e, a, g, i, b, h, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6505([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1722([a, f, c, d, e, g, h, i], is_dual)
    } else {
        select_6506([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6502([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_6503([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_6505([a, b, e, f, h, g, d, j, i, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_6511([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3556([c, f, d, e, a, g, h], is_dual)
    } else {
        select_4213([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6510([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6106([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_6511([f, h, a, j, k, g, i, b, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6512([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1708([a, e, g, j, k, b, i, d, f], !is_dual)
    } else {
        select_661([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6509([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6510([a, i, k, h, j, b, f, c, g, d, e], !is_dual)
    } else {
        select_6512([a, i, j, k, b, h, f, c, g, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6514([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_191([a, g, i, j, f, b, h], !is_dual)
    } else {
        select_1080([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6515([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, b, c, d, f, g, h], is_dual)
    } else {
        select_3359([a, b, e, c, d, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_6513([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_6514([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_6515([a, i, h, j, k, f, b, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6508([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6509([a, f, c, d, e, g, h, i, j, k, l], is_dual)
    } else {
        select_6513([a, b, g, d, e, f, h, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6501([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6502([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6508([a, c, d, e, f, g, h, i, b, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6490([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6491([a, b, c, e, f, d, g, h, i, k, j], is_dual)
    } else {
        select_6501([a, b, c, d, e, f, g, h, j, k, l, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6464([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_6465([a, b, e, c, d, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6490([a, b, e, d, f, g, i, h, c, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_6523([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_292([d, a, c, e, h, i, f], is_dual)
    } else {
        select_562([g, h, i, e, f, d, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6522([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_156([g, j, a, f, b, h, e], !is_dual)
    } else {
        select_6523([i, j, f, h, b, g, a, c, d], !is_dual)
    }
}
/// n = 6, i = 2
fn select_6525([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_98([c, a, d, e, b, f], is_dual)
    } else {
        select_98([c, b, d, e, a, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_6524([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2269([a, c, b, d, f, e, g, i], is_dual)
    } else {
        select_6525([g, h, i, a, e, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6521([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6522([i, f, j, k, g, d, h, e, a, b], !is_dual)
    } else {
        select_6524([a, e, c, f, g, d, j, k, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6526([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_444([a, i, f, b, c], !is_dual)
    } else {
        select_6367([h, i, j, a, f, g, b, e, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6520([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_6521([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_6526([g, j, k, i, h, e, a, f, d, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6528([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1447([a, e, c, d, f, i, g, k, h], is_dual)
    } else {
        select_3558([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6529([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_67([a, b, g, e, h, i], is_dual)
    } else {
        select_1903([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6527([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6528([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_6529([i, j, f, k, a, h, e, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6519([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6520([b, c, d, e, g, f, a, h, i, j, k], is_dual)
    } else {
        select_6527([e, i, j, k, h, b, g, f, a, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6533([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2250([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_120([a, b, e, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([a, c, f, d, h, g], is_dual)
    } else {
        select_88([i, j, f, d, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6535([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_6535([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_6533([a, b, c, d, f, e, h, g, j, i], is_dual)
    } else {
        select_6534([c, b, d, f, e, a, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_368([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_340([e, c, d, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6536([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1772([f, i, a, j, e, h, b, g], !is_dual)
    } else {
        select_6537([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6532([a, b, c, d, f, e, g, h, j, i], is_dual)
    } else {
        select_6536([a, b, c, d, f, g, h, i, j, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_6530([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1439([a, b, d, c, e, g, h, i, f, k], is_dual)
    } else {
        select_6531([a, j, i, k, g, e, b, h, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6518([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_6519([a, h, k, l, f, i, j, g, c, d, e], !is_dual)
    } else {
        select_6530([a, b, c, d, f, i, j, g, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6543([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([e, a, c, d, f, i, g], is_dual)
    } else {
        select_626([h, i, f, j, a, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6542([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_650([e, f, c, d, a, g, i, j], is_dual)
    } else {
        select_6543([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6541([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6542([f, a, c, d, e, h, i, j, g, k], is_dual)
    } else {
        select_2268([g, i, a, b, e, f, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_6545([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_618([g, h, f, i, a, e, d, b], !is_dual)
    } else {
        select_1030([b, a, c, e, f, d, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6544([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1578([a, f, c, d, e, i, h, g, j], is_dual)
    } else {
        select_6545([e, i, k, j, f, a, h, g, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6540([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6541([c, a, d, e, f, b, h, g, i, j, k], is_dual)
    } else {
        select_6544([c, b, d, e, f, a, h, i, g, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_6547([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_287([g, a, h, b, e, f, j, i], is_dual)
    } else {
        select_311([f, c, d, e, i, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6549([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3365([b, c, d, a, e, f, g, i, h], is_dual)
    } else {
        select_122([f, a, b, i, h, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_6548([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_119([a, g, h, b, e, f, j, k], is_dual)
    } else {
        select_6549([a, f, c, d, e, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6546([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_6547([b, a, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_6548([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6539([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_6540([b, d, c, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_6546([b, a, d, e, f, c, h, i, g, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6553([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1073([b, c, a, f, e, h, i], is_dual)
    } else {
        select_647([a, d, b, c, e, f, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_6554([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_292([b, a, e, d, g, h, f], is_dual)
    } else {
        select_34([b, c, f, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_6552([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6553([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_6554([e, i, j, a, h, g, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_6555([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_515([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2805([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6551([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6552([b, c, d, e, g, i, a, h, j, k], is_dual)
    } else {
        select_6555([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_6558([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_516([a, b, e, c, d, g], is_dual)
    } else {
        select_516([c, d, e, a, b, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_6559([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_97([f, b, d, e, a, g, h, i], is_dual)
    } else {
        select_3616([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6557([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6558([b, f, c, d, a, g, h], is_dual)
    } else {
        select_6559([a, b, e, c, d, f, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_6561([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1070([a, b, c, d, e, f, g], is_dual)
    } else {
        select_82([d, e, b, g, a], is_dual)
    }
}
/// n = 7, i = 3
fn select_6560([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_6561([a, b, c, e, f, d, g], is_dual)
    } else {
        select_1124([c, b, e, f, d, g, a], is_dual)
    }
}
/// n = 10, i = 4
fn select_6556([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6557([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_6560([a, g, e, b, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6550([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_6551([a, b, e, f, d, c, h, i, g, j, k], is_dual)
    } else {
        select_6556([a, b, e, f, g, c, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6538([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6539([a, c, d, b, e, f, h, i, j, g, l, k], is_dual)
    } else {
        select_6550([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6517([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_6518([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_6538([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6566([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_811([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_1142([b, a, c, d, g, h, i, j, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_6568([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_185([f, j, k, a, b, i, g, h, c], !is_dual)
    } else {
        select_332([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6567([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_269([a, c, d, b, g, f, i, h], is_dual)
    } else {
        select_6568([a, b, e, c, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6565([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6566([a, b, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_6567([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6564([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6493([h, f, k, j, a, b, g, c, i], !is_dual)
    } else {
        select_6565([a, b, d, e, c, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6563([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6564([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6564([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1364([g, d, a, i, e, j, f, h, k], is_dual)
    } else {
        select_5285([e, b, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6575([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_292([j, k, f, g, a, h, b], !is_dual)
    } else {
        select_31([a, c, d, e, f, g, i, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6574([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_914([b, e, g, h, a, j, k, f], is_dual)
    } else {
        select_6575([b, a, e, c, d, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6572([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6573([b, d, e, c, f, a, g, h, i, j, l], is_dual)
    } else {
        select_6574([b, a, d, e, c, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_6577([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1333([a, c, d, f, e, i, g, h], is_dual)
    } else {
        select_3090([a, b, g, e, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_6576([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6577([b, a, c, d, f, e, g, i, h], is_dual)
    } else {
        select_3031([a, c, b, f, g, h, i, e, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6571([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6572([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6576([k, j, l, i, a, g, f, b, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6580([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_5531([h, j, k, f, a, b, i, c, d], !is_dual)
    } else {
        select_3207([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6579([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4083([i, j, k, f, g, a, c, b, h], !is_dual)
    } else {
        select_6580([a, c, d, e, b, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6581([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1649([a, b, c, e, f, g, h, i, j], is_dual)
    } else {
        select_1731([a, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6578([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6579([b, a, c, d, e, g, f, h, j, k, i], is_dual)
    } else {
        select_6581([b, d, e, c, a, g, f, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6570([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6571([a, b, c, d, e, g, h, i, j, k, f, l], is_dual)
    } else {
        select_6578([c, a, b, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6569([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6570([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_6570([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6562([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6563([a, b, d, c, e, f, g, j, i, h, k], is_dual)
    } else {
        select_6569([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6516([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_6517([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_6562([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6464([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_6516([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_6587([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4342([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_2323([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_6586([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6587([c, b, d, a, e, f, g, h], is_dual)
    } else {
        select_2955([c, a, d, f, b, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6591([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_53([b, e, c, d, f, g], is_dual)
    } else {
        select_188([e, j, i, g, a, h, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6590([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6591([j, k, g, l, h, a, e, i, f, b], !is_dual)
    } else {
        select_758([a, b, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_6589([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_6590([a, c, f, d, e, g, h, i, j, l, m, k], is_dual)
    } else {
        select_4555([a, e, b, j, h, k, f, m, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6593([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_167([f, j, h, i, g, d, a, b], !is_dual)
    } else {
        select_3859([a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6592([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_67([f, c, b, e, h, i], is_dual)
    } else {
        select_6593([a, b, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_6588([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_6589([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6592([l, m, h, i, e, a, k, f, b, j, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_6585([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_6586([a, e, b, j, h, k, l, f], is_dual)
    } else {
        select_6588([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6597([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1364([a, e, b, h, d, i, f, g, j], is_dual)
    } else {
        select_452([a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6596([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6415([f, g, i, h, k, a, j, e, d, c], !is_dual)
    } else {
        select_6597([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6599([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_501([g, d, i, j, a, h, f, c], !is_dual)
    } else {
        select_97([d, g, i, j, a, h, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6598([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_73([a, b, d, e, g, f, h, j, i, l], is_dual)
    } else {
        select_6599([f, k, l, a, i, j, b, g, c, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6595([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6596([a, c, b, h, e, j, k, m, g, i, l], is_dual)
    } else {
        select_6598([g, l, n, j, k, a, m, h, i, f, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6601([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_299([a, b, c, g, e, i, h, k, l], is_dual)
    } else {
        select_1828([e, j, m, i, l, a, k, g, f, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6600([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_79([a, b, c, g, e, i, j, h], is_dual)
    } else {
        select_6601([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_6594([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6595([a, b, c, d, f, g, i, j, e, k, l, h, m, n], is_dual)
    } else {
        select_6600([a, b, e, d, h, g, j, f, k, l, i, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6584([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6585([b, a, c, d, f, e, h, i, g, j, k, l, m], is_dual)
    } else {
        select_6594([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_6606([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_561([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_2228([g, h, j, b, a, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6608([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_215([j, d, k, a, f, h], !is_dual)
    } else {
        select_1289([c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6607([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_6608([i, k, l, g, j, e, f, h, a, b, d], !is_dual)
    } else {
        select_215([b, c, d, i, e, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_6605([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_6606([e, f, b, c, d, g, h, i, k, j], is_dual)
    } else {
        select_6607([k, l, e, m, h, i, f, j, a, g, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6610([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_489([b, a, c, e, d, f, h, g, i], is_dual)
    } else {
        select_156([g, b, a, i, d, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6612([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_186([a, g, b, h, d, j], is_dual)
    } else {
        select_130([a, d, c, f, e, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6611([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_250([a, b, h, d, j, g], is_dual)
    } else {
        select_6612([a, b, c, g, e, i, f, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6609([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_6610([a, e, d, g, b, f, h, j, i, k], is_dual)
    } else {
        select_6611([a, c, d, b, f, h, e, i, g, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6604([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6605([b, a, c, d, e, g, f, j, k, h, l, i, m], is_dual)
    } else {
        select_6609([e, i, l, m, k, j, g, f, a, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6615([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1401([g, a, c, d, f, i, k, l, h], is_dual)
    } else {
        select_3048([a, b, d, h, e, j, k, l, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6614([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6615([a, c, b, d, f, e, h, g, j, i, k, l], is_dual)
    } else {
        select_3575([g, c, i, a, f, d, h, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_6618([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_128([a, b, f, d, e, h, g, j, i], is_dual)
    } else {
        select_325([a, c, g, d, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6617([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_6618([a, c, b, d, f, e, h, g, i, j], is_dual)
    } else {
        select_422([a, e, h, g, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6619([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5646([a, b, c, g, e, f, i, j, k], is_dual)
    } else {
        select_259([b, e, d, c, f, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_6616([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6617([a, c, b, d, f, e, h, g, i, k, j, l], is_dual)
    } else {
        select_6619([k, l, m, i, h, d, g, a, j, e, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6613([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6614([e, l, m, f, j, k, g, h, a, b, i, c], !is_dual)
    } else {
        select_6616([f, l, m, e, j, k, g, h, a, i, b, c, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6603([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6604([a, b, c, i, e, g, h, f, j, k, l, m, n], is_dual)
    } else {
        select_6613([a, b, d, f, e, j, g, h, i, k, l, n, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_6622([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2627([h, g, e, k, a, j, b, i, c, f], !is_dual)
    } else {
        select_1683([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6625([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_703([f, a, h, d, i, e, j], is_dual)
    } else {
        select_34([g, b, c, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6624([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6625([k, g, j, i, h, f, a, d, b, e], !is_dual)
    } else {
        select_34([a, c, g, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_6623([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6624([b, a, c, d, e, g, h, i, j, f, k], is_dual)
    } else {
        select_486([g, k, f, d, j, a, i, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6621([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_6622([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_6623([a, c, d, e, g, h, b, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6628([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_257([c, d, f, b, e, g, h], is_dual)
    } else {
        select_560([e, a, b, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6629([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5911([a, c, b, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_4822([a, b, e, d, h, g, f, j, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_6627([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_6628([b, c, e, d, h, f, g, i, j, k, l], is_dual)
    } else {
        select_6629([i, h, m, n, k, e, l, f, a, b, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6626([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6627([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_6627([a, b, d, c, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6620([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_6621([i, j, m, l, e, f, g, a, k, h, d], !is_dual)
    } else {
        select_6626([b, c, a, d, e, f, g, h, i, j, l, k, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_6602([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6603([c, a, d, e, f, g, h, b, i, j, l, k, m, n], is_dual)
    } else {
        select_6620([c, b, d, e, a, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6583([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_6584([b, c, d, e, f, g, h, i, j, k, a, l, m, n], is_dual)
    } else {
        select_6602([b, a, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6582([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6583([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6583([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6462([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6463([a, b, c, h, d, e, g, k, i, l, j, m], is_dual)
    } else {
        select_6582([a, b, c, d, f, e, h, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6186([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_6187([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6462([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_6639([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3345([b, a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_32([i, j, e, a, b, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6638([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4083([h, i, j, e, f, a, c, b, g], !is_dual)
    } else {
        select_6639([a, c, d, b, e, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_4895([h, i, j, e, a, f, b, c, g], !is_dual)
    } else {
        select_1953([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6640([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2795([a, d, c, h, f, g, e, i, j], is_dual)
    } else {
        select_6641([i, j, f, k, g, d, h, a, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6637([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6638([k, f, j, g, i, d, h, a, e, b], !is_dual)
    } else {
        select_6640([a, b, c, d, e, f, i, g, k, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6644([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_618([i, f, g, k, a, d, h, b], !is_dual)
    } else {
        select_1985([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6643([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_2618([g, i, k, j, a, b, h, f, d], !is_dual)
    } else {
        select_6644([a, c, d, e, f, g, i, h, j, l, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6646([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_468([i, j, k, g, h, a, e, b], !is_dual)
    } else {
        select_422([a, c, d, g, h, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6648([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_451([a, b, c, g, e, f, h, i, j, k], is_dual)
    } else {
        select_451([a, b, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6647([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6648([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_122([b, c, g, h, i, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_6645([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_6646([a, b, c, g, f, i, h, j, e, k, l], is_dual)
    } else {
        select_6647([b, c, a, d, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_6642([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6643([e, a, c, d, f, g, h, j, i, l, m, k], is_dual)
    } else {
        select_6645([f, a, b, d, h, i, g, e, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_6636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_6637([b, j, c, a, f, e, k, h, i, m, l], is_dual)
    } else {
        select_6642([b, a, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6652([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_121([d, j, e, a, g, h, b], !is_dual)
    } else {
        select_4072([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6653([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3171([a, b, f, c, e, g, h, j, i, k], is_dual)
    } else {
        select_128([b, a, d, h, e, f, i, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6651([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6652([b, f, d, e, a, g, h, j, i, k], is_dual)
    } else {
        select_6653([b, c, a, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6650([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6651([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_6651([b, a, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6657([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_581([a, b, f, h, i, k, l], is_dual)
    } else {
        select_128([a, c, d, g, e, f, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_6656([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5713([b, c, e, d, g, h, f, i, k, j], is_dual)
    } else {
        select_6657([a, f, d, c, h, g, e, j, k, i, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_166([a, b, f, e, h, g, i, d, j], is_dual)
    } else {
        select_5237([b, a, c, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_6655([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6656([a, b, c, d, e, g, f, h, j, k, i, m, l], is_dual)
    } else {
        select_6658([a, b, c, e, g, i, k, f, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6659([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4166([k, i, l, a, e, j, h, b, f, c], !is_dual)
    } else {
        select_2045([b, a, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_6654([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6655([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_6659([a, f, b, d, i, g, h, j, e, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_6649([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6650([a, f, b, d, e, i, h, j, g, l, k], is_dual)
    } else {
        select_6654([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_6635([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_6636([a, b, d, c, e, g, h, i, j, k, f, l, m], is_dual)
    } else {
        select_6649([a, c, d, b, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_6634([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6635([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6635([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_6665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_391([a, b, c, d, h, f, g, j, k, l], is_dual)
    } else {
        select_259([c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_6666([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_812([a, b, c, e, i, g, j], is_dual)
    } else {
        select_3161([a, b, c, d, f, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6664([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6665([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6666([a, c, d, b, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_6669([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_21([b, c, d, e, g, i, h, j], is_dual)
    } else {
        select_98([a, b, f, j, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6668([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5160([a, g, c, d, e, h, f, i, j, k, l], is_dual)
    } else {
        select_6669([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6667([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6668([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_6127([a, b, i, f, j, g, k, l, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_6663([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6664([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_6667([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6671([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2900([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_4840([c, d, e, a, b, f, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6673([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2825([a, d, b, c, e, f, g, h, i, k, l], is_dual)
    } else {
        select_516([b, c, h, e, f, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6672([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6673([b, c, d, a, e, g, f, h, j, i, l, k], is_dual)
    } else {
        select_1533([a, i, c, d, f, j, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6670([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6671([a, f, b, c, d, h, i, g, j, l, k], is_dual)
    } else {
        select_6672([b, a, c, d, e, h, g, i, f, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6662([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6663([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_6670([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_6678([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_294([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_38([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_6677([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6678([d, a, b, f, h, i, g, k, j], is_dual)
    } else {
        select_2858([d, c, f, e, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6680([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_355([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_122([b, a, c, i, j, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_6679([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6680([d, a, e, b, c, h, g, i, f, j], is_dual)
    } else {
        select_2536([d, b, c, f, e, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6676([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6677([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_6679([g, b, c, d, f, a, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6675([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2540([a, d, e, f, g, h, b, i, j, k], is_dual)
    } else {
        select_6676([a, d, e, c, f, b, h, i, g, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6684([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3050([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_122([a, b, d, i, f, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_6683([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_6684([a, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_812([a, b, c, e, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6686([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_215([i, f, j, a, b, c], !is_dual)
    } else {
        select_130([b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_6685([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6686([b, a, h, c, f, j, g, k, l, i], is_dual)
    } else {
        select_75([b, d, e, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_6682([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6683([b, c, d, e, a, g, f, h, j, i, k], is_dual)
    } else {
        select_6685([b, a, e, c, d, g, h, i, j, f, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6689([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_122([a, h, b, j, e, f], is_dual)
    } else {
        select_942([a, e, c, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6688([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_565([a, b, d, e, i, h, l, j], is_dual)
    } else {
        select_6689([a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6687([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6683([b, c, d, e, a, g, f, i, j, h, k], is_dual)
    } else {
        select_6688([b, a, e, c, d, g, i, h, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6681([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6682([a, c, d, e, f, b, g, i, h, j, k, l], is_dual)
    } else {
        select_6687([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6674([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6675([a, b, d, e, f, c, h, g, j, i, k], is_dual)
    } else {
        select_6681([a, b, c, e, f, d, h, j, i, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_6661([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_6662([a, b, f, c, e, d, g, h, j, k, i, l], is_dual)
    } else {
        select_6674([a, c, d, f, b, e, g, h, j, i, k, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_6694([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_650([d, h, e, i, a, g, b, f], !is_dual)
    } else {
        select_3115([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_6695([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4434([a, b, c, h, i, f, g, j], is_dual)
    } else {
        select_161([a, b, f, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6693([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6694([b, h, e, i, a, f, g, j, k], is_dual)
    } else {
        select_6695([b, a, e, c, d, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6697([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_358([f, i, j, h, g, a, c, d, e], !is_dual)
    } else {
        select_629([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6698([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_3115([a, e, d, g, b, f, i, h], is_dual)
    } else {
        select_6314([a, c, b, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6696([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6697([g, a, i, j, k, b, e, h, c, f], !is_dual)
    } else {
        select_6698([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_6692([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6693([a, f, c, d, e, g, i, j, h, l, m], is_dual)
    } else {
        select_6696([a, h, b, e, j, g, f, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6700([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_3933([i, d, j, a, g, h, e, f, c], !is_dual)
    } else {
        select_6652([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6699([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6700([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_6700([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_6691([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6692([a, c, b, d, e, f, g, h, j, i, l, k, m], is_dual)
    } else {
        select_6699([a, f, i, e, b, g, h, j, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6703([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3586([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_3586([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6705([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2458([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_171([a, f, b, c, g, h, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1564([a, d, e, b, f, c, g, h, i], is_dual)
    } else {
        select_6705([a, d, e, c, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6702([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6703([b, d, e, c, f, g, a, h, i, j], is_dual)
    } else {
        select_6704([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6701([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1439([a, c, d, e, f, g, h, b, i, j], is_dual)
    } else {
        select_6702([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_6690([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_6691([a, b, c, e, d, f, g, h, j, i, l, m, k], is_dual)
    } else {
        select_6701([a, f, b, j, d, h, k, g, l, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_6660([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6661([a, c, b, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_6690([a, c, d, f, e, g, h, j, k, i, b, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_6633([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6634([a, b, d, f, e, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_6660([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_6712([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4396([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1513([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_6711([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_151([a, e, h, i, f, g, b, d], !is_dual)
    } else {
        select_6712([a, e, h, i, f, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6710([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6711([a, i, j, g, b, h, e, f, c], !is_dual)
    } else {
        select_1975([a, i, j, h, b, g, f, e, d], !is_dual)
    }
}
/// n = 7, i = 2
fn select_6714([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_249([a, b, c, d, e, f, g], is_dual)
    } else {
        select_4101([a, f, c, d, b, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_6713([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_866([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_6714([a, c, b, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6709([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_6710([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_6713([a, c, b, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6717([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_735([a, b, d, c, h, g, f, i], is_dual)
    } else {
        select_2943([a, b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_6718([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_425([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_2318([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_6716([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_6717([a, b, d, e, c, f, h, g, i], is_dual)
    } else {
        select_6718([a, b, d, g, f, c, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6721([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_385([a, h, i, j, f, g, c, d, e], !is_dual)
    } else {
        select_1022([a, i, f, j, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6720([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_728([a, d, f, e, b, g, h], is_dual)
    } else {
        select_6721([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6719([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2942([a, c, d, b, e, g, f, i, h], is_dual)
    } else {
        select_6720([a, b, d, c, e, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6715([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6716([a, b, d, f, e, c, g, h, i], is_dual)
    } else {
        select_6719([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6708([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6709([a, b, d, e, f, g, h, c, i, j], is_dual)
    } else {
        select_6715([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6727([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_71([e, a, i, j, b, h], !is_dual)
    } else {
        select_3931([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6728([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_215([j, f, k, a, b, i], !is_dual)
    } else {
        select_772([b, c, f, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6726([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6727([a, b, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_6728([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6725([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6726([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6726([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6729([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2160([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2160([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6724([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_6725([a, b, c, e, d, f, h, g, i, j, k], is_dual)
    } else {
        select_6729([a, b, c, e, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6723([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2447([a, b, c, d, e, h, i, g, j, k, l], is_dual)
    } else {
        select_6724([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_6734([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_29([b, c, d, e, f, g, h], is_dual)
    } else {
        select_6476([a, h, b, c, f, g, i], is_dual)
    }
}
/// n = 8, i = 1
fn select_6735([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_29([b, c, d, e, f, g, h], is_dual)
    } else {
        select_54([a, h, b, c, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_6733([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6734([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_6735([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6732([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_845([a, h, j, g, k, b, i, c, d], !is_dual)
    } else {
        select_6733([a, c, e, f, b, d, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6731([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6732([a, c, d, f, b, e, h, g, i, j, k], is_dual)
    } else {
        select_1499([a, j, g, k, l, h, b, c, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6738([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_639([a, b, d, e, g, h, f, i], is_dual)
    } else {
        select_571([g, h, j, a, e, i, b, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6737([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1803([a, h, j, e, f, i, g, b, c], !is_dual)
    } else {
        select_6738([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6736([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6737([a, j, k, f, b, g, i, c, h, d], !is_dual)
    } else {
        select_4883([a, j, i, k, f, g, b, c, h, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6730([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6731([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6736([a, g, c, d, f, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6722([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6723([a, b, k, l, m, j, f, h, g, d, i, c], !is_dual)
    } else {
        select_6730([a, b, j, m, l, k, f, h, i, c, g, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6707([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6708([a, b, f, c, e, g, h, i, k, j], is_dual)
    } else {
        select_6722([a, b, c, d, e, f, g, h, j, k, l, m, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6743([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1634([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_110([a, f, g, k, b, i, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6744([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_444([a, h, g, c, d], !is_dual)
    } else {
        select_561([a, d, b, e, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_6743([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6744([a, c, b, d, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6741([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1919([a, b, c, f, e, h, g, k, i, l], is_dual)
    } else {
        select_6742([a, b, c, d, g, f, i, j, k, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6747([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5673([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_2026([b, c, d, a, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6746([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6747([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_6747([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6750([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_224([a, b, c, d, g, f, i, j], is_dual)
    } else {
        select_259([c, f, e, a, d, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6749([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6750([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3436([b, c, g, f, i, h, a, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6751([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2244([a, b, d, c, f, g, i, j, h, l], is_dual)
    } else {
        select_3359([a, c, e, b, f, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6748([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6749([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_6751([a, b, j, k, l, m, f, h, i, g, c, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6745([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6746([a, b, d, f, e, i, h, g, l, j], is_dual)
    } else {
        select_6748([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6740([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_6741([a, b, c, d, e, f, g, h, j, l, k, i], is_dual)
    } else {
        select_6745([a, b, d, c, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_6756([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4882([a, b, e, d, h, i, f, g, k], is_dual)
    } else {
        select_571([d, a, c, f, g, e, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6757([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_571([g, i, k, a, f, j, b, c, h], !is_dual)
    } else {
        select_1285([a, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6755([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6756([f, k, l, g, j, a, h, i, b, c, d], !is_dual)
    } else {
        select_6757([a, c, b, d, e, f, g, i, h, j, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_6760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3229([a, b, e, f, c, d, g, h, i, j], is_dual)
    } else {
        select_48([a, b, e, f, i, h, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6759([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2542([b, h, e, f, g, a, i, k, j], is_dual)
    } else {
        select_6760([b, c, a, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6758([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6759([b, c, d, f, a, e, h, i, g, j, k], is_dual)
    } else {
        select_3791([a, c, d, b, e, i, h, j, g, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_6754([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6755([b, g, c, f, e, a, j, h, i, k, l, m], is_dual)
    } else {
        select_6758([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_6762([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1367([a, b, c, f, e, i, h, g], is_dual)
    } else {
        select_1500([a, c, b, d, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6761([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6762([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1393([a, f, b, c, e, g, i, j, k, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_6753([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6754([a, c, d, e, b, f, g, i, h, j, k, m, l], is_dual)
    } else {
        select_6761([a, c, d, h, e, b, g, j, i, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_6767([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_167([b, a, c, d, f, g, h, e], is_dual)
    } else {
        select_167([h, f, i, d, a, g, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6766([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_757([a, d, c, b, f, e, h, g, i, j], is_dual)
    } else {
        select_6767([a, f, b, h, e, i, j, k, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6765([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_3151([a, e, c, d, g, f, h, j, k, l], is_dual)
    } else {
        select_6766([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_6770([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_77([b, e, c, d, g, f, h], is_dual)
    } else {
        select_1103([d, a, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6769([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_580([d, a, c, f, h, g, e, j, i], is_dual)
    } else {
        select_6770([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6771([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_76([f, g, j, a, b, i, h, c, e], !is_dual)
    } else {
        select_405([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6768([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6769([k, h, l, a, j, i, b, f, g, d], !is_dual)
    } else {
        select_6771([a, b, c, f, e, h, i, g, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6764([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_6765([a, b, c, d, f, g, h, e, i, j, k, m], is_dual)
    } else {
        select_6768([a, h, k, l, m, i, j, e, f, g, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6774([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_50([a, f, i, j, g, h, e, b], !is_dual)
    } else {
        select_6161([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_6773([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1631([a, f, e, c, d, h, g, i, k, j, m], is_dual)
    } else {
        select_6774([a, m, h, l, k, i, f, j, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6775([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_476([a, b, e, d, g, f, i, h], is_dual)
    } else {
        select_830([a, i, j, g, b, e, h, c, f], !is_dual)
    }
}
/// n = 13, i = 5
fn select_6772([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6773([a, b, d, e, c, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_6775([a, i, b, c, f, j, h, g, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_6763([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_6764([a, c, h, d, b, f, g, i, j, k, m, l, n], is_dual)
    } else {
        select_6772([a, c, d, b, e, f, g, i, h, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_6752([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6753([a, b, c, d, e, f, h, i, g, j, k, m, l], is_dual)
    } else {
        select_6763([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6739([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_6740([a, b, l, m, n, j, g, c, h, k, d, i, e], !is_dual)
    } else {
        select_6752([a, b, c, e, d, f, h, g, i, j, k, m, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_6706([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_6707([a, b, i, d, e, g, j, h, c, k, l, m, n], is_dual)
    } else {
        select_6739([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6632([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_6633([a, b, c, d, f, e, g, i, h, k, j, m, l], is_dual)
    } else {
        select_6706([a, b, c, d, e, f, g, h, i, k, l, m, j, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_6782([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_299([d, b, c, f, e, g, h, i, k], is_dual)
    } else {
        select_2625([d, i, j, g, k, e, f, a, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6784([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_50([g, i, j, e, f, a, h, b], !is_dual)
    } else {
        select_300([b, e, c, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6783([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6784([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1122([e, i, j, g, f, a, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6781([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6782([b, c, d, e, g, f, a, h, i, j, k], is_dual)
    } else {
        select_6783([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6787([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_152([d, a, c, f, h, e, g, j], is_dual)
    } else {
        select_1528([e, b, a, g, d, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6786([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1803([d, e, c, g, a, f, h, j, i], is_dual)
    } else {
        select_6787([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6788([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2307([c, a, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_390([a, b, d, c, e, f, g, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6785([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6786([a, k, l, i, g, j, b, c, h, d], !is_dual)
    } else {
        select_6788([c, a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6780([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_6781([a, e, b, d, f, g, h, i, j, l, k], is_dual)
    } else {
        select_6785([a, f, j, l, g, m, h, k, e, i, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6791([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_413([h, i, e, j, k, g, b, d], !is_dual)
    } else {
        select_408([j, k, l, h, i, e, f, a, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6790([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_6791([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1898([j, k, c, e, a, l, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_6796([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_99([b, c, f, e, h, i], is_dual)
    } else {
        select_703([a, b, d, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6795([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_98([d, k, a, g, j, b], !is_dual)
    } else {
        select_6796([i, g, k, h, j, d, f, a, b, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6794([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6795([f, i, k, g, j, h, a, d, b, e, c], !is_dual)
    } else {
        select_6795([g, i, k, f, j, h, a, d, b, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6798([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_215([a, c, g, i, j, f], is_dual)
    } else {
        select_803([b, f, d, h, e, k, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6797([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6798([a, b, c, d, e, f, i, g, j, k, h], is_dual)
    } else {
        select_6798([a, b, c, d, e, f, i, h, j, k, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_6793([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6794([a, c, b, g, f, h, i, e, l, j, k], is_dual)
    } else {
        select_6797([c, b, d, a, e, g, h, i, j, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6792([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6793([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6793([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6790([b, d, c, e, g, f, h, a, i, j, k, l], is_dual)
    } else {
        select_6792([a, b, c, d, e, g, h, j, k, f, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6779([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_6780([a, d, c, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6789([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6778([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_6779([a, b, d, e, c, g, h, i, j, k, f, m, l], is_dual)
    } else {
        select_6740([a, b, c, d, e, g, f, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6777([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_6707([a, b, k, l, m, h, g, i, c, j, d, e, f], !is_dual)
    } else {
        select_6778([a, b, e, d, f, h, g, c, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6805([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2053([a, b, g, e, f, c, h, i, j], is_dual)
    } else {
        select_450([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6804([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6805([a, b, c, d, f, e, g, j, h, k], is_dual)
    } else {
        select_2252([f, i, e, k, a, j, h, b, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6803([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6804([f, a, c, b, g, e, i, k, m, h, j], is_dual)
    } else {
        select_5509([e, b, d, c, f, h, g, j, l, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6807([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1510([c, b, d, a, g, f, e, h, i, j], is_dual)
    } else {
        select_2412([a, b, d, g, f, i, h, e, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6810([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_345([d, b, c, e, f, i, g, h], is_dual)
    } else {
        select_88([i, f, j, a, g, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6809([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6810([a, c, f, d, g, e, j, h, i, k], is_dual)
    } else {
        select_1049([a, b, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6811([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_2363([a, e, d, b, f, g, i, h], is_dual)
    } else {
        select_1476([a, d, b, c, f, e, h, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6808([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6809([b, c, d, a, f, g, e, i, j, h, k], is_dual)
    } else {
        select_6811([b, a, d, g, f, h, i, e, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6806([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_6807([a, d, e, c, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_6808([a, d, e, b, f, c, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6802([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6803([a, b, c, d, e, f, h, g, i, j, l, k, m], is_dual)
    } else {
        select_6806([e, j, h, k, m, a, l, f, i, g, b, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6801([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6802([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6802([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_6815([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3042([j, k, l, a, e, g, b, h, c], !is_dual)
    } else {
        select_2654([a, e, b, d, g, f, i, k, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6817([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2352([b, d, c, e, f, h, g, i], is_dual)
    } else {
        select_3164([i, j, h, f, e, b, a, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6816([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4775([b, a, c, g, h, e, f, j, k, i], is_dual)
    } else {
        select_6817([a, b, f, d, e, h, g, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6814([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6815([a, b, d, c, f, g, i, h, j, e, k, l], is_dual)
    } else {
        select_6816([a, b, c, d, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6813([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3600([e, h, l, m, a, k, j, i, g, f, b, d], !is_dual)
    } else {
        select_6814([e, h, l, m, a, j, k, i, f, g, b, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6812([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6813([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6813([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6800([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6801([a, b, d, c, e, h, g, i, j, f, k, l, m], is_dual)
    } else {
        select_6812([a, b, c, e, d, h, f, i, j, g, l, m, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_6823([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_67([a, c, d, e, f, g], is_dual)
    } else {
        select_422([a, g, h, b, e, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6822([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_59([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6823([a, g, i, k, b, j, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6824([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_881([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_791([a, c, g, e, f, b, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6821([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6822([a, i, l, j, k, m, f, h, g, e, d], !is_dual)
    } else {
        select_6824([a, j, k, l, i, m, f, g, h, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6827([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_385([a, b, c, f, e, h, i, j, k], is_dual)
    } else {
        select_84([a, c, e, d, g, f, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2640([a, b, d, c, e, f, h, g, i, k], is_dual)
    } else {
        select_6827([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6825([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6826([a, k, l, i, j, h, g, b, c, f, e], !is_dual)
    } else {
        select_1794([a, i, j, l, b, h, f, d, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6820([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_6821([a, c, e, d, f, g, h, i, j, b, k, l, m], is_dual)
    } else {
        select_6825([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6830([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_151([a, b, j, h, i, f, c, g], !is_dual)
    } else {
        select_1874([a, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6831([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_151([a, e, c, b, f, g, i, h], is_dual)
    } else {
        select_5602([a, b, d, f, e, h, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_6829([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_6830([a, e, i, j, k, b, h, f, g, c], !is_dual)
    } else {
        select_6831([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1998([a, b, k, i, j, g, c, e, h], !is_dual)
    } else {
        select_1874([a, b, d, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6828([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6829([a, b, k, l, c, i, j, h, g, d, f], !is_dual)
    } else {
        select_6832([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6819([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_6820([a, b, d, e, c, g, i, f, j, h, k, l, m], is_dual)
    } else {
        select_6828([a, b, h, m, l, k, i, j, c, g, e, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6836([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2039([b, a, c, e, d, f, g, i, h, k], is_dual)
    } else {
        select_6068([g, d, k, j, e, i, h, a, b, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6835([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6836([e, i, k, a, f, j, b, g, h, c, d], !is_dual)
    } else {
        select_6836([f, i, k, b, e, j, a, g, h, c, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_6838([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4922([b, d, a, c, e, f, g, h, j, i], is_dual)
    } else {
        select_3559([a, d, b, c, g, f, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6837([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_6838([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_5332([h, i, f, l, b, a, k, c, j, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6834([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6835([f, h, j, l, a, b, g, k, c, i, e], !is_dual)
    } else {
        select_6837([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6834([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_6834([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6818([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_6819([a, b, c, d, e, g, h, i, f, j, l, k, m], is_dual)
    } else {
        select_6833([a, b, i, k, m, l, c, g, j, f, h, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6799([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_6800([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_6818([a, b, g, k, m, h, i, l, c, j, d, e, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6776([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6777([a, b, c, d, i, e, g, k, l, h, j, m, n], is_dual)
    } else {
        select_6799([a, b, c, d, h, f, j, g, k, i, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6631([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_6632([a, b, c, f, g, d, h, i, e, j, k, l, n, m], is_dual)
    } else {
        select_6776([a, b, c, f, g, e, h, i, d, j, l, k, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_6847([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_560([a, b, c, d, g, h, i, f], is_dual)
    } else {
        select_84([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6846([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6847([a, b, c, e, f, j, h, g, i], is_dual)
    } else {
        select_830([a, b, g, d, i, j, f, k, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_6848([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1291([a, c, d, b, e, g, f, i, h], is_dual)
    } else {
        select_6252([a, e, d, f, b, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6845([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6846([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_6848([a, j, i, k, f, b, h, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6851([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1772([b, d, a, e, f, h, g, j], is_dual)
    } else {
        select_2789([a, b, c, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6853([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_453([c, d, b, e, f, g, h], is_dual)
    } else {
        select_2474([h, j, k, f, a, i, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6852([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_565([a, b, d, e, h, g, j, i], is_dual)
    } else {
        select_6853([h, j, k, l, a, f, i, c, g, d, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6850([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6851([a, h, k, j, l, b, f, i, c, g], !is_dual)
    } else {
        select_6852([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6849([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2384([a, f, k, l, i, b, c, j], !is_dual)
    } else {
        select_6850([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6844([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_6845([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6849([a, b, c, d, e, f, h, i, j, k, l, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_6858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_186([g, b, c, e, f, h], is_dual)
    } else {
        select_128([g, k, j, d, i, h, e, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6857([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6858([i, h, k, d, g, j, a, f, e, c, b], !is_dual)
    } else {
        select_1230([i, g, k, d, h, j, a, e, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6859([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_736([b, a, c, f, e, h, i, g], is_dual)
    } else {
        select_4822([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6856([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6857([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_6859([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6861([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4880([b, a, c, d, f, h, i, j, k], is_dual)
    } else {
        select_84([a, c, b, e, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6860([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4881([b, c, e, g, f, a, h, j, i, k], is_dual)
    } else {
        select_6861([a, b, c, e, d, f, i, g, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6855([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6856([a, j, i, l, g, f, k, b, c, h, d], !is_dual)
    } else {
        select_6860([a, b, c, e, d, f, g, j, i, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6864([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_110([a, i, h, j, b, f, c], !is_dual)
    } else {
        select_560([a, b, d, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6863([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1874([a, i, k, f, l, b, j, c], !is_dual)
    } else {
        select_6864([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6866([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2092([e, a, b, c, d, f, g, h, i, j], is_dual)
    } else {
        select_110([a, b, f, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6868([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_820([i, j, l, e, k, a, f, b], !is_dual)
    } else {
        select_1266([a, c, d, e, h, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6867([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6868([a, d, b, c, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_5403([b, c, g, d, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_6865([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6866([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_6867([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6862([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6863([a, b, d, c, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_6865([a, i, j, k, m, f, l, g, b, c, h, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6854([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6855([a, c, e, b, d, f, h, g, j, k, i, m], is_dual)
    } else {
        select_6862([a, b, d, c, e, f, h, i, j, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6843([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_6844([a, j, k, l, m, f, h, i, b, c, d, g], !is_dual)
    } else {
        select_6854([a, k, j, m, l, f, h, i, g, b, c, d, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6874([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2769([a, g, d, e, f, h, j, k], is_dual)
    } else {
        select_772([b, c, f, d, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6873([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2344([b, c, g, e, a, f, h, i, j], is_dual)
    } else {
        select_6874([b, c, e, a, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_6875([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1070([b, e, c, d, f, h, g], is_dual)
    } else {
        select_70([d, a, b, f, g, i, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_6872([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6873([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6875([f, j, k, a, i, b, h, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6871([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_5457([b, a, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_6872([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6877([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, d, e, b, g, h], is_dual)
    } else {
        select_5549([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6880([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_314([b, c, d, e, g, f, h], is_dual)
    } else {
        select_922([g, h, j, k, e, i, a, b, c, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6881([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_640([b, c, d, e, g, f, i], is_dual)
    } else {
        select_922([g, i, j, k, e, h, a, b, c, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6879([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6880([g, i, k, j, e, h, a, b, f, c, d], !is_dual)
    } else {
        select_6881([g, i, k, h, e, j, a, f, b, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6878([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5693([g, i, a, j, k, f, b, h, c, d], !is_dual)
    } else {
        select_6879([g, i, j, k, f, h, b, a, c, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6876([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6877([a, h, f, j, k, g, b, i, d, c], !is_dual)
    } else {
        select_6878([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6870([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6871([a, j, k, i, m, l, g, f, b, c, h], !is_dual)
    } else {
        select_6876([a, b, d, e, f, g, i, l, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6886([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_167([b, c, d, f, e, g, i, h], is_dual)
    } else {
        select_1979([b, a, d, c, e, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6885([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2912([h, i, j, a, e, g, f, b, c], !is_dual)
    } else {
        select_6886([b, a, c, d, e, g, f, j, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6884([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3042([i, j, k, a, f, h, b, c, d], !is_dual)
    } else {
        select_6885([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6883([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6884([c, a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_834([a, c, d, i, f, b, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_6889([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_81([a, f, h, g, e, c], !is_dual)
    } else {
        select_1448([g, i, f, h, a, d, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6888([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_6889([a, c, b, f, e, g, d, h, i], is_dual)
    } else {
        select_5087([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6887([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6888([f, h, k, a, g, i, b, d, e], !is_dual)
    } else {
        select_2477([f, j, k, g, i, h, b, a, e, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6882([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6883([b, c, a, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6887([a, j, k, l, i, b, c, h, f, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6869([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6870([a, b, c, e, d, f, h, i, j, k, l, g, m], is_dual)
    } else {
        select_6882([a, k, l, m, j, h, f, g, i, c, e, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6842([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6843([a, f, b, c, d, j, h, g, k, l, i, n, m], is_dual)
    } else {
        select_6869([a, l, j, n, m, i, h, f, k, g, b, c, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6894([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_59([a, c, d, e, f, g, b, h, i, k], is_dual)
    } else {
        select_59([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6893([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_79([a, i, j, k, b, c, d, h], !is_dual)
    } else {
        select_6894([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6898([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_65([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_236([a, b, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6899([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_65([b, c, d, e, a, f, g, h, j], is_dual)
    } else {
        select_65([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6897([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6898([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6899([a, g, c, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6900([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_227([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_229([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6896([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_6897([b, c, d, e, f, g, a, h, j, k, i], is_dual)
    } else {
        select_6900([b, a, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6903([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_65([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_700([b, g, e, a, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6902([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_74([a, g, c, d, e, h, j], is_dual)
    } else {
        select_6903([a, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6901([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_6356([b, a, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_6902([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6895([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_6896([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_6901([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6892([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6893([a, f, j, k, i, l, m, h, b, d, g], !is_dual)
    } else {
        select_6895([a, f, i, l, j, k, m, g, c, e, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6907([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2194([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_422([g, h, j, b, a, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6906([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6907([f, i, k, h, j, g, a, d, b, e], !is_dual)
    } else {
        select_422([a, c, g, i, h, e, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_6909([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_444([a, f, h, j, k], is_dual)
    } else {
        select_2798([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6908([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1914([f, a, g, d, h, b, k], is_dual)
    } else {
        select_6909([a, c, b, d, e, f, i, g, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6905([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6906([g, k, j, i, h, a, e, b, c, f, d], !is_dual)
    } else {
        select_6908([b, c, d, e, f, g, h, a, i, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6912([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_561([g, k, f, h, i, d, c, a], !is_dual)
    } else {
        select_561([f, j, g, i, h, e, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6914([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_68([b, h, e, a, j], is_dual)
    } else {
        select_972([b, c, d, a, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6913([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_67([a, b, e, f, i, k], is_dual)
    } else {
        select_6914([a, b, c, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6911([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6912([j, k, l, g, i, a, b, h, f, c, d], !is_dual)
    } else {
        select_6913([b, d, a, c, e, f, g, i, h, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6917([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_685([a, b, g, h], is_dual)
    } else {
        select_485([c, a, b, d, e, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6918([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_685([a, b, g, h], is_dual)
    } else {
        select_5480([c, a, b, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6916([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6917([a, b, c, d, f, e, h, i, g, j], is_dual)
    } else {
        select_6918([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_6920([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_68([f, a, h, c, i], is_dual)
    } else {
        select_719([c, b, e, d, g, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6919([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_699([c, b, e, d, g, h, f, j, i], is_dual)
    } else {
        select_6920([d, a, f, c, i, e, k, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6915([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_6916([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_6919([c, b, e, d, g, a, h, i, f, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6910([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6911([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_6915([b, c, d, h, f, g, i, a, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6904([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_6905([a, k, j, l, i, h, b, c, g, f, d], !is_dual)
    } else {
        select_6910([a, b, c, d, e, g, h, f, i, k, l, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_6891([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6892([a, k, n, l, m, h, j, i, b, c, d, g, f], !is_dual)
    } else {
        select_6904([a, c, d, b, e, h, i, j, g, l, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_6925([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_623([g, i, j, f, h, b, c, d, e], !is_dual)
    } else {
        select_5318([g, j, i, h, f, a, d, c, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_6926([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4376([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_344([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6924([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6925([i, f, j, k, g, h, e, d, a, b], !is_dual)
    } else {
        select_6926([a, d, c, f, g, e, i, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6928([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2183([k, i, j, h, e, f, c, a, d], !is_dual)
    } else {
        select_3934([a, c, b, e, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6927([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6928([c, a, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_6928([c, b, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6923([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6924([f, k, l, i, j, a, b, h, c, g, d], !is_dual)
    } else {
        select_6927([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_6931([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_70([d, e, c, a, f, h, i], is_dual)
    } else {
        select_2772([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6930([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1210([a, c, d, b, e, f, g, h, j, i], is_dual)
    } else {
        select_6931([g, j, k, a, b, i, c, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6933([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_74([a, g, c, d, e, h, j], is_dual)
    } else {
        select_1611([i, j, k, g, f, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_6356([b, a, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_6933([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6929([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6930([i, j, h, m, k, l, a, f, e, g, d], !is_dual)
    } else {
        select_6932([h, k, l, i, j, m, a, g, b, c, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6922([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6923([j, k, i, m, l, a, g, f, h, e, c, d], !is_dual)
    } else {
        select_6929([a, b, c, d, e, g, h, i, j, k, f, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_6939([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_32([a, d, b, e, h, i], is_dual)
    } else {
        select_129([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_6938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_38([b, g, e, d, f, h, i], is_dual)
    } else {
        select_6939([a, b, e, c, h, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6937([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_878([f, b, d, e, a, g, h, i, j], is_dual)
    } else {
        select_6938([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_6940([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_257([c, d, e, b, h, f, g], is_dual)
    } else {
        select_1611([a, b, c, d, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6936([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_6937([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_6940([c, b, e, a, f, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6935([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_588([a, b, e, g, f, c, h, j], is_dual)
    } else {
        select_6936([a, b, d, e, c, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_6934([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6935([a, d, e, c, f, b, h, g, i, j], is_dual)
    } else {
        select_5954([a, b, c, d, e, f, h, i, k, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6921([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6922([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_6934([f, a, l, j, k, m, g, h, i, e, b, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6890([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6891([a, b, c, d, f, e, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_6921([a, n, m, l, j, h, b, i, k, c, d, g, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6841([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6842([a, c, d, f, e, g, h, i, j, b, k, l, m, n], is_dual)
    } else {
        select_6890([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_6947([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_376([a, c, d, f, g, i, j, h], is_dual)
    } else {
        select_5897([b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6946([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6947([b, c, a, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_6811([a, b, f, d, h, g, e, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6949([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_710([e, a, c, d, g, f, h, j], is_dual)
    } else {
        select_5140([e, h, k, j, i, g, f, a, b, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6948([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6949([i, j, g, k, a, f, h, c, e, d, b], !is_dual)
    } else {
        select_3185([i, j, f, k, a, g, h, e, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6945([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_6946([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_6948([a, c, b, g, f, h, i, j, k, e, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6951([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_119([a, b, f, d, e, h, g, i], is_dual)
    } else {
        select_3593([e, i, j, a, f, h, g, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6950([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_5956([a, b, d, e, c, f, h, g, i, k, j, l], is_dual)
    } else {
        select_6951([a, d, e, g, f, h, c, j, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6944([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6945([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_6950([e, j, k, l, m, a, b, h, f, i, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6943([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6944([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6944([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6956([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3442([f, i, m, e, h, l, c, d, g], !is_dual)
    } else {
        select_1309([f, k, j, l, i, g, e, a, b, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6958([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1136([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6340([i, j, e, h, a, g, f, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6957([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2194([g, a, c, e, f, i, h, j], is_dual)
    } else {
        select_6958([g, k, l, m, d, h, i, f, b, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6955([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_6956([k, j, l, m, e, a, h, i, f, b, c, g, d], !is_dual)
    } else {
        select_6957([c, b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_6960([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1364([d, b, c, e, f, g, h, i, k], is_dual)
    } else {
        select_529([a, c, e, d, g, i, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_6961([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5193([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_1984([b, c, f, e, a, h, i, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_6959([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6960([b, d, c, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_6961([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_6954([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6955([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_6959([a, k, l, i, e, j, h, b, f, c, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6965([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_453([e, c, d, a, f, g, h], is_dual)
    } else {
        select_1617([b, d, a, c, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6964([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_736([h, g, a, j, e, i, b, f], !is_dual)
    } else {
        select_6965([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6963([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_559([a, b, c, h, e, k, f, j], is_dual)
    } else {
        select_6964([a, b, f, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6967([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1562([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_380([i, j, g, d, h, a, e, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_6969([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_98([a, c, d, g, f, i], is_dual)
    } else {
        select_99([b, c, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6968([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_5911([a, b, d, c, g, f, e, h, j, i, k], is_dual)
    } else {
        select_6969([e, c, d, b, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6966([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6967([b, f, d, e, h, g, a, j, i, k], is_dual)
    } else {
        select_6968([b, a, d, c, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6962([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_6963([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_6966([a, b, d, c, e, g, f, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6953([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6954([a, h, k, m, f, j, l, i, g, c, b, d, e], !is_dual)
    } else {
        select_6962([a, f, k, m, h, j, l, i, g, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6971([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_4198([a, b, e, f, d, c, g, h, i, j], is_dual)
    } else {
        select_3389([a, b, f, e, c, g, d, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6974([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_4911([h, k, a, b, i, d, e], !is_dual)
    } else {
        select_5064([a, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6973([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6974([a, b, e, c, d, f, g, h, j, k, l], is_dual)
    } else {
        select_1325([c, e, a, d, f, b, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6977([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_22([a, c, d, e, g, i, k], is_dual)
    } else {
        select_2661([a, b, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6976([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_103([g, b, a, e, k, h, l], is_dual)
    } else {
        select_6977([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6975([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6976([b, c, d, a, e, f, h, j, g, i, k, l], is_dual)
    } else {
        select_4911([g, d, a, i, f, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6972([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6973([a, i, k, l, j, m, h, g, b, f, e, d], !is_dual)
    } else {
        select_6975([a, b, d, c, f, e, h, g, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6970([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6971([a, b, i, k, l, m, h, g, f, d], !is_dual)
    } else {
        select_6972([a, b, d, c, f, e, h, g, j, i, k, m, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6952([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6953([a, j, k, m, l, c, h, b, i, f, d, g, e], !is_dual)
    } else {
        select_6970([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6942([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6943([a, b, c, d, e, h, f, i, g, j, k, l, m], is_dual)
    } else {
        select_6952([a, b, c, d, e, h, g, i, f, j, l, m, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_6983([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_280([b, f, c, d, e, g, h, i], is_dual)
    } else {
        select_259([h, i, f, j, k, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6982([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6983([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_1879([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_6981([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6982([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6982([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6980([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_243([a, b, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_6981([a, b, c, d, e, g, i, j, k, h, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_6988([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1165([a, b, h, c, f, g, i, j], is_dual)
    } else {
        select_40([c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_6987([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6988([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_237([f, c, d, e, a, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6986([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([a, f, c, d, g, i, h], is_dual)
    } else {
        select_6987([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_6991([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4953([a, c, d, g, e, f, h, i, j, k, l], is_dual)
    } else {
        select_2664([g, k, l, h, a, j, f, b, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6990([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_761([c, e, d, b, f, g, h, i], is_dual)
    } else {
        select_6991([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6989([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4670([e, i, k, l, h, a, j, b, g, f, d], !is_dual)
    } else {
        select_6990([a, b, d, c, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_6985([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6986([c, b, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_6989([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6994([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_21([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_39([a, h, j, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6993([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3001([a, h, f, j, e, i, b, g], !is_dual)
    } else {
        select_6994([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_6997([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_51([a, g, j, k, i, f], !is_dual)
    } else {
        select_436([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_6996([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1290([f, a, i, k, e, j, h, b, g], !is_dual)
    } else {
        select_6997([f, i, k, e, h, j, a, b, g, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_6995([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6996([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6996([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_6992([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_6993([a, i, k, l, f, b, j, c, g, d], !is_dual)
    } else {
        select_6995([a, i, k, l, f, b, j, c, g, h, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_6984([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_6985([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_6992([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_6979([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6980([a, b, i, k, l, m, g, c, d, j, e, h], !is_dual)
    } else {
        select_6984([a, b, c, e, d, f, g, h, i, j, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_7002([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5340([j, k, h, i, f, a, c, b, g], !is_dual)
    } else {
        select_2858([a, c, f, d, e, h, i, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_7004([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_68([a, c, d, f, h], is_dual)
    } else {
        select_88([g, f, h, d, e, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7003([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_378([a, b, c, d, e, f, g, h, j, k, l], is_dual)
    } else {
        select_7004([b, a, h, f, e, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_7001([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_7002([i, k, l, g, m, e, j, a, f, b, h], !is_dual)
    } else {
        select_7003([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7005([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_373([b, a, c, d, e, f, g, h, j, k, l], is_dual)
    } else {
        select_4163([a, c, h, b, f, j, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7000([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7001([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_7005([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7009([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_368([a, f, c, d, e, g, h, i, k, l], is_dual)
    } else {
        select_342([b, e, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7010([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_368([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_2664([e, c, d, a, g, f, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7008([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_7009([a, b, c, d, e, f, h, g, i, j, k, m], is_dual)
    } else {
        select_7010([a, f, c, d, g, h, e, i, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_7011([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2659([a, b, f, d, g, e, i, h, j, k], is_dual)
    } else {
        select_1056([a, e, c, d, g, h, f, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_7007([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_7008([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_7011([i, k, g, m, e, j, l, a, f, b, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7006([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7005([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7007([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_6999([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7000([a, j, i, l, m, f, h, k, c, g, d, b, e], !is_dual)
    } else {
        select_7006([a, j, h, l, m, f, i, k, c, b, d, g, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7015([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4238([c, d, b, e, f, a, g, h, j, i], is_dual)
    } else {
        select_725([c, d, a, e, f, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7014([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1620([b, a, c, d, g, f, i, h, j, k], is_dual)
    } else {
        select_7015([a, b, f, c, e, h, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_7016([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_963([a, b, d, c, e, g, f, h, i], is_dual)
    } else {
        select_2079([b, d, a, f, h, c, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_7013([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7014([a, b, c, e, d, f, g, h, i, k, j], is_dual)
    } else {
        select_7016([a, c, d, b, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7012([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4000([a, b, d, c, f, e, h, g, i, j, k], is_dual)
    } else {
        select_7013([b, c, d, f, e, g, h, a, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_6998([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6999([a, j, k, l, m, g, i, c, b, d, h, e, f], !is_dual)
    } else {
        select_7012([a, j, k, b, l, m, g, c, i, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_6978([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_6979([a, b, i, j, l, m, g, h, c, k, d, e, f], !is_dual)
    } else {
        select_6998([a, b, i, j, l, m, g, k, h, d, e, f, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6941([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_6942([a, b, f, c, d, h, g, j, k, l, n, m, i], is_dual)
    } else {
        select_6978([a, b, l, n, m, k, i, f, h, g, j, c, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6840([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_6841([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6941([a, b, d, f, e, g, h, i, j, k, c, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_7025([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_381([b, d, c, e, f, h, g, i], is_dual)
    } else {
        select_215([a, b, d, e, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_7024([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2394([a, e, b, d, g, f, h], is_dual)
    } else {
        select_7025([b, d, a, c, g, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7023([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_7024([b, c, h, d, a, f, g, i, j], is_dual)
    } else {
        select_6419([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7022([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7023([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_1707([a, j, k, l, f, g, b, i, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7027([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_602([a, g, k, l, b, j, i, f, h, c], !is_dual)
    } else {
        select_1988([a, b, f, d, e, g, h, j, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7026([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_7027([a, f, k, l, m, i, b, j, g, h, d, e], !is_dual)
    } else {
        select_2448([a, f, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7021([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7022([a, g, k, j, m, b, h, l, i, f, c, d], !is_dual)
    } else {
        select_7026([a, g, k, h, m, b, j, l, f, i, e, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_7030([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_476([a, f, e, i, g, h, b, c], !is_dual)
    } else {
        select_709([a, c, d, b, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7029([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_588([b, c, d, e, a, g, f, h], is_dual)
    } else {
        select_7030([g, f, i, j, a, b, c, h, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7031([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4901([g, a, i, k, b, j, c, h], !is_dual)
    } else {
        select_1299([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7028([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_7029([g, a, i, k, l, b, c, j, d, h], !is_dual)
    } else {
        select_7031([c, b, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7020([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_7021([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_7028([a, g, h, m, j, l, b, i, c, k, d, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1101([a, e, j, k, i, h, f, b, g, c], !is_dual)
    } else {
        select_3284([a, h, k, b, e, i, f, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7033([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_7034([a, f, k, l, b, i, j, c, h, g, e], !is_dual)
    } else {
        select_137([a, b, d, c, e, f, h, i, g, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_7037([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6542([a, e, c, d, f, h, i, j, g, k], is_dual)
    } else {
        select_4619([a, i, g, b, e, j, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7039([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1024([c, b, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_3478([c, a, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7038([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_7039([a, b, c, g, f, i, h, e, j, l], is_dual)
    } else {
        select_3662([b, c, a, d, f, e, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7036([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_7037([h, m, e, l, k, b, a, i, j, f, g], !is_dual)
    } else {
        select_7038([a, b, c, d, e, f, g, h, i, k, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7035([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4726([g, a, h, k, m, b, l, i, j, e, f, d], !is_dual)
    } else {
        select_7036([g, h, k, m, b, i, l, a, j, e, f, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7032([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_7033([a, i, g, h, m, b, k, l, j, e, f, c], !is_dual)
    } else {
        select_7035([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7019([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_7020([a, b, d, c, e, g, h, j, f, i, k, l, m], is_dual)
    } else {
        select_7032([a, b, e, d, g, f, h, j, i, c, l, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_7044([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_868([c, d, e, f, a, b, g, h, i, j], is_dual)
    } else {
        select_327([a, b, g, e, f, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7043([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_7044([a, b, c, d, f, g, e, h, j, i], is_dual)
    } else {
        select_2848([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7042([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5984([e, g, b, f, c, d, a, i, j, h], is_dual)
    } else {
        select_7043([a, b, e, f, g, c, d, h, i, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_7048([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_495([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_3152([b, d, a, e, c, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_7047([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1298([a, b, c, e, g, i, f, h, j], is_dual)
    } else {
        select_7048([b, a, c, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7046([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2266([b, c, f, e, h, a, g, i, j], is_dual)
    } else {
        select_7047([b, c, a, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7052([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3080([g, a, d, f, e, i, j, k], is_dual)
    } else {
        select_702([e, d, b, c, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7051([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_7052([b, a, c, d, f, g, e, i, h, j, k], is_dual)
    } else {
        select_1381([b, e, d, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7053([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4169([h, j, g, i, e, a, f, b, c], !is_dual)
    } else {
        select_4169([g, j, h, i, f, a, e, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7050([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_7051([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_7053([a, b, c, g, f, h, i, e, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_7054([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3850([a, c, b, d, g, e, h, f, j, i], is_dual)
    } else {
        select_6020([a, b, f, c, g, h, e, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7049([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_7050([c, b, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_7054([c, a, e, d, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7045([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_7046([a, c, d, b, f, e, g, h, i, j], is_dual)
    } else {
        select_7049([a, c, d, e, f, b, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7041([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_7042([a, d, c, e, f, g, b, i, h, j, k], is_dual)
    } else {
        select_7045([a, c, e, d, g, f, h, i, b, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_7058([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3541([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_3541([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7061([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_205([i, j, k, a, b, h], !is_dual)
    } else {
        select_63([c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_7062([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_238([a, b, c, d, f, g, h], is_dual)
    } else {
        select_238([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7060([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7061([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7062([g, c, d, e, f, b, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7059([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4008([g, i, j, k, a, b, c, h], !is_dual)
    } else {
        select_7060([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7057([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7058([d, e, b, f, a, c, g, h, i, l], is_dual)
    } else {
        select_7059([a, b, c, d, e, f, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7066([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_100([c, b, e, f, h, g, j, i], is_dual)
    } else {
        select_626([a, c, g, d, i, h, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7065([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_7066([a, c, d, b, e, f, h, g, i, k, l], is_dual)
    } else {
        select_547([a, b, h, d, i, j, g, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_7068([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1979([i, g, k, j, f, h, d, a, e, b], !is_dual)
    } else {
        select_52([a, c, f, g, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7069([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_313([a, c, f, g, e, i], is_dual)
    } else {
        select_1979([j, g, k, i, f, h, d, a, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7067([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_7068([i, k, g, h, j, e, a, f, c, b, d], !is_dual)
    } else {
        select_7069([i, k, j, h, g, e, a, f, b, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7064([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7065([b, a, d, c, e, g, f, h, i, j, l, k], is_dual)
    } else {
        select_7067([b, f, d, e, a, h, j, g, i, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_7071([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_358([a, c, b, e, f, g, d, h, i], is_dual)
    } else {
        select_914([b, a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_7072([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_3055([h, d, i, g, e, a, f, b], !is_dual)
    } else {
        select_3819([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_7070([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7071([a, d, b, e, f, c, g, h, i], is_dual)
    } else {
        select_7072([a, d, c, e, f, b, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7063([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7064([a, c, b, d, e, f, g, h, k, j, i, l], is_dual)
    } else {
        select_7070([g, k, j, f, a, i, c, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7056([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_7057([b, c, e, a, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7063([b, c, e, d, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_7076([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4241([i, j, k, f, g, e, a, h, c, b], !is_dual)
    } else {
        select_1397([b, a, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_7075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_7076([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_1328([b, c, e, f, d, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7079([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_382([b, f, d, a, g, h], is_dual)
    } else {
        select_4706([b, c, d, a, e, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7078([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_7079([b, d, c, e, a, f, g, h, i, j], is_dual)
    } else {
        select_936([b, d, a, e, c, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_7077([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2786([f, i, h, j, k, d, g, e, a, c], !is_dual)
    } else {
        select_7078([j, h, k, f, i, g, e, a, d, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7074([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_7075([i, j, h, k, f, e, a, g, b, c, d], !is_dual)
    } else {
        select_7077([c, b, d, f, e, a, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7073([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_5116([a, j, l, k, g, h, b, i, d, c, f], !is_dual)
    } else {
        select_7074([a, k, j, l, h, g, i, c, d, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7055([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7056([a, d, b, f, e, g, c, h, i, j, k, l], is_dual)
    } else {
        select_7073([a, d, e, c, f, g, b, h, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7040([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7041([a, c, e, d, g, b, f, h, j, i, l, k], is_dual)
    } else {
        select_7055([a, b, c, e, g, d, f, j, i, h, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7018([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_7019([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7040([a, h, j, i, b, l, m, c, f, k, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7087([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([b, d, c, e, f, h, g], is_dual)
    } else {
        select_215([i, e, j, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7086([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4448([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_7087([e, h, j, k, a, i, g, f, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7089([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_38([b, f, d, e, h, g, j], is_dual)
    } else {
        select_4115([a, c, b, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7088([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7089([a, b, c, d, e, f, h, g, j, i, l], is_dual)
    } else {
        select_7087([f, i, k, l, a, j, h, g, b, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7085([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7086([f, b, d, e, a, g, h, i, j, k, l], is_dual)
    } else {
        select_7088([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7084([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7085([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2333([a, c, g, e, b, f, i, h, j, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7083([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7084([a, b, c, e, d, f, g, i, j, k, h, m, l], is_dual)
    } else {
        select_3909([a, f, j, k, l, b, i, c, h, d, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7091([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1541([a, e, h, i, k, b, j, f, g, c], !is_dual)
    } else {
        select_1541([a, e, h, i, k, b, j, g, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7093([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1550([a, c, f, b, e, h, g, i, j], is_dual)
    } else {
        select_3359([a, b, d, c, g, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7095([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_878([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_3976([i, j, e, k, g, b, a, h, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7096([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_878([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_5706([i, j, e, a, g, b, h, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7094([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_7095([e, g, j, k, a, i, f, h, b, c, d], !is_dual)
    } else {
        select_7096([a, g, j, k, e, i, f, h, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7092([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7093([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_7094([a, k, l, h, b, i, c, j, f, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7090([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7091([a, b, d, f, e, g, h, j, l, i, k], is_dual)
    } else {
        select_7092([a, e, j, m, l, k, h, b, f, i, g, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7082([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_7083([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_7090([a, b, e, d, f, g, h, i, c, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_7099([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_7027([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_7027([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7103([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1596([a, d, e, c, g, f, i, h, j], is_dual)
    } else {
        select_612([b, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7104([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_624([e, i, j, g, h, a, f, c, d], !is_dual)
    } else {
        select_640([e, b, c, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7102([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7103([a, b, c, d, e, g, f, i, h, k], is_dual)
    } else {
        select_7104([f, c, d, e, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7101([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1924([a, f, j, l, k, i, h, g, b, c], !is_dual)
    } else {
        select_7102([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7100([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2025([a, f, j, i, m, b, k, g, h, c], !is_dual)
    } else {
        select_7101([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7098([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7099([a, f, l, j, m, k, b, i, h, c, d, g], !is_dual)
    } else {
        select_7100([a, b, e, c, d, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_7107([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2640([a, h, i, k, e, j, b, f, g, c], !is_dual)
    } else {
        select_2640([a, h, i, k, e, j, b, g, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7108([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_425([a, e, i, k, b, j, g, d], !is_dual)
    } else {
        select_3887([a, h, i, j, e, f, c, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7106([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7107([a, b, c, g, e, f, i, j, l, h, k], is_dual)
    } else {
        select_7108([a, b, f, d, e, h, g, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_7110([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3043([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_3043([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7109([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5493([a, b, d, c, e, h, f, g, i], is_dual)
    } else {
        select_7110([a, e, j, i, h, f, d, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7105([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_7106([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7109([a, e, k, l, b, h, j, i, f, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7097([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_7098([a, b, c, d, e, f, h, i, g, j, k, m, l], is_dual)
    } else {
        select_7105([a, b, e, d, f, h, g, i, c, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7081([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7082([a, b, c, e, d, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_7097([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_7115([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5999([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4964([e, f, c, d, a, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7117([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4448([a, c, b, d, e, f, g, h, j, k], is_dual)
    } else {
        select_213([a, b, g, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7116([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_559([e, f, c, d, a, h, g, i], is_dual)
    } else {
        select_7117([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7114([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_7115([i, k, j, l, a, g, h, b, c, f, e], !is_dual)
    } else {
        select_7116([j, k, l, i, a, g, f, b, d, h, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_7119([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1813([a, g, h, i, d, e, f, c], !is_dual)
    } else {
        select_3718([a, b, c, e, f, d, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7120([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1413([a, e, i, j, h, f, c, g], !is_dual)
    } else {
        select_845([a, e, b, d, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7118([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_7119([a, d, g, e, f, b, j, i, h], is_dual)
    } else {
        select_7120([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_7114([a, d, c, e, b, g, i, f, j, h, l, k], is_dual)
    } else {
        select_7118([a, d, e, f, h, b, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_7124([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2269([b, h, c, f, a, g, i, j], is_dual)
    } else {
        select_227([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7125([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_291([b, g, d, e, f, a, h, i, j], is_dual)
    } else {
        select_775([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7123([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7124([a, d, b, e, f, g, c, h, i, j], is_dual)
    } else {
        select_7125([a, d, c, e, f, g, b, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7122([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7123([d, e, a, f, b, c, g, h, i, j], is_dual)
    } else {
        select_6824([a, b, c, f, d, e, g, i, h, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_7127([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2849([c, a, e, b, d, f, g, h, j, i], is_dual)
    } else {
        select_408([a, b, c, d, g, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7126([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7127([a, d, b, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_7127([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7121([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7122([a, b, e, c, d, f, g, i, h, k, l, j], is_dual)
    } else {
        select_7126([a, c, d, b, e, f, g, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_7112([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7113([b, d, c, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_7121([b, d, a, c, e, f, h, g, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7131([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2795([a, b, g, d, e, f, i, h, k], is_dual)
    } else {
        select_3889([d, b, c, f, e, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_167([h, k, f, i, e, d, a, g], !is_dual)
    } else {
        select_88([b, f, c, h, e, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7135([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_313([b, c, f, g, e, i], is_dual)
    } else {
        select_4196([g, i, k, f, j, h, d, a, b, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7134([j, k, h, i, g, d, f, a, e, b, c], !is_dual)
    } else {
        select_7135([j, k, g, i, h, d, a, f, b, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7136([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5643([h, k, f, i, a, d, g, b, e], !is_dual)
    } else {
        select_365([a, c, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_7132([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_7133([a, b, c, e, f, g, h, d, i, k, j], is_dual)
    } else {
        select_7136([h, k, j, i, g, e, d, a, f, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7130([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_7131([b, a, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_7132([a, c, b, d, g, f, h, i, j, e, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7139([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2936([i, j, k, h, d, e, g, f, a, b], !is_dual)
    } else {
        select_3895([a, d, c, e, g, h, f, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7140([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2912([j, h, i, g, d, f, a, e, b], !is_dual)
    } else {
        select_628([h, i, k, d, e, g, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7138([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_7139([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    } else {
        select_7140([b, a, c, d, g, f, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5597([e, a, c, f, d, g, h, j, i], is_dual)
    } else {
        select_7138([b, a, c, e, d, f, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_7129([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7130([c, d, a, f, e, g, b, h, j, i, k], is_dual)
    } else {
        select_7137([c, d, b, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7143([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6215([f, i, j, a, g, b, h, c, d], !is_dual)
    } else {
        select_3261([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7142([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_7143([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_3257([a, d, b, e, f, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_7146([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4490([b, c, f, e, a, g, h, i], is_dual)
    } else {
        select_1039([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7145([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1351([b, c, d, a, e, g, f, i, h], is_dual)
    } else {
        select_7146([a, b, d, c, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7149([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_314([b, g, d, e, f, h, i], is_dual)
    } else {
        select_772([a, c, f, d, e, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7149([c, b, e, a, d, f, h, g, j, i], is_dual)
    } else {
        select_1780([b, c, g, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7148([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6215([f, j, k, a, i, b, h, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7144([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_7145([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_7147([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7141([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7142([a, b, c, e, d, g, i, j, l, h], is_dual)
    } else {
        select_7144([b, a, d, c, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7128([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_7129([j, a, k, l, b, c, h, d, i, e, g], !is_dual)
    } else {
        select_7141([c, b, d, a, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7111([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_7112([a, c, b, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_7128([a, b, c, d, e, f, h, j, i, k, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7080([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_7081([a, c, d, f, e, g, h, i, j, b, k, l, m], is_dual)
    } else {
        select_7111([a, c, d, b, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7017([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_7018([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_7080([a, b, i, j, m, l, d, g, k, c, e, h, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6839([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_6840([a, b, c, d, e, f, g, i, h, k, l, m, n, j], is_dual)
    } else {
        select_7017([a, b, c, k, m, n, g, l, i, d, j, e, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_6630([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_6631([a, b, c, e, d, f, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_6839([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_6185([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6186([a, b, c, d, f, e, h, i, j, g, k, m, l, n], is_dual)
    } else {
        select_6630([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5658([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_5659([a, b, c, d, f, g, h, j, i, k, e, l, m, n], is_dual)
    } else {
        select_6185([a, b, c, d, f, e, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_7159([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_776([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_773([c, g, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_7158([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3559([a, d, b, c, i, g, j, k, h], is_dual)
    } else {
        select_7159([b, d, a, c, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7157([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_5332([j, h, g, m, b, a, l, c, k, i, d], !is_dual)
    } else {
        select_7158([c, b, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7156([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7157([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_7157([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_7155([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_6701([a, b, k, h, m, d, c, l, e, j], !is_dual)
    } else {
        select_7156([a, b, d, e, c, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_7164([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_452([a, c, b, f, h, g, e, i], is_dual)
    } else {
        select_1254([b, c, d, a, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_7163([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7164([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_7164([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_7162([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_7163([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1818([a, b, f, c, e, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_7166([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_191([a, b, h, i, f, c, g], !is_dual)
    } else {
        select_845([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7165([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_7166([a, b, h, j, g, c, i, d, f], !is_dual)
    } else {
        select_1366([a, b, d, e, c, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7161([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_7162([a, b, j, k, i, h, c, f, d], !is_dual)
    } else {
        select_7165([a, b, i, j, k, h, c, f, g, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7161([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_5862([a, b, d, c, e, f, h, i, g, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7154([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_7155([a, b, d, c, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_7160([a, b, h, c, m, d, j, l, k, e, i], !is_dual)
    }
}
/// n = 9, i = 3
fn select_7172([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_67([g, b, c, e, f, h], is_dual)
    } else {
        select_4095([h, a, b, d, e, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_7173([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_565([f, d, h, i, e, g, b, c], !is_dual)
    } else {
        select_252([d, h, e, i, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_7172([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_7173([a, b, f, h, e, g, i, d, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_7175([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_120([f, b, c, d, g, h], is_dual)
    } else {
        select_975([a, c, d, g, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_7174([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_7175([a, b, c, i, g, h, f, j, k], is_dual)
    } else {
        select_3418([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7170([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_7171([b, c, i, f, g, j, h, a, k, l], is_dual)
    } else {
        select_7174([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7180([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_22([a, b, c, f, g, j, k], is_dual)
    } else {
        select_54([b, c, d, e, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_7179([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_65([a, b, c, h, f, g, j, k, l], is_dual)
    } else {
        select_7180([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7178([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7179([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6727([h, a, d, e, f, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7177([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_7178([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_1860([a, f, d, e, g, b, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7176([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4909([f, h, a, k, m, g, l, b, j, i], !is_dual)
    } else {
        select_7177([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7169([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_7170([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7176([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_7184([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2250([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_1538([c, b, d, f, e, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7185([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1984([i, j, h, g, a, b, e, c, f], !is_dual)
    } else {
        select_994([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7183([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_7184([b, a, c, d, e, g, h, f, j], is_dual)
    } else {
        select_7185([a, c, b, d, f, g, h, e, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7183([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_7183([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1461([a, b, c, e, f, g, h, i, k, j], is_dual)
    } else {
        select_7182([a, b, c, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7168([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_7169([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7181([a, j, f, h, m, n, b, g, l, k, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7167([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7168([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7168([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7153([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_7154([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7167([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_7189([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1462([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1542([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7192([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1156([a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_4434([f, j, k, a, g, i, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7191([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7192([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_7192([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_7195([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_487([a, b, c, g, j], is_dual)
    } else {
        select_228([b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7196([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_21([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_82([a, i, b, f, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_7194([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7195([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_7196([a, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7193([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7194([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_7194([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7190([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_7191([a, b, h, e, f, g, c, i, k, j, l], is_dual)
    } else {
        select_7193([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7188([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7189([a, b, k, h, m, c, l, d, j, i], !is_dual)
    } else {
        select_7190([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_7199([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_389([a, d, e, f, b, c, g], is_dual)
    } else {
        select_1194([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7201([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_224([f, a, b, c, e, g, i, j], is_dual)
    } else {
        select_259([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_7202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_192([b, c, d, e, h, g], is_dual)
    } else {
        select_5187([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7200([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_7201([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_7202([b, c, d, f, a, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7198([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7199([a, b, h, c, d, e, g, i, j], is_dual)
    } else {
        select_7200([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_7205([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1580([a, b, c, e, f, g, h, i], is_dual)
    } else {
        select_2855([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_7206([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_74([a, b, c, d, e, g, h], is_dual)
    } else {
        select_516([c, d, e, a, b, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_7204([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7205([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_7206([a, g, b, c, d, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_7207([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1694([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_1694([a, b, d, e, f, g, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_7203([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_7204([b, c, d, e, i, h, a, j, k], is_dual)
    } else {
        select_7207([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_7197([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_7198([a, c, d, e, f, i, h, b, j, k], is_dual)
    } else {
        select_7203([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7187([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7188([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_7197([a, b, d, e, f, g, c, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7186([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7187([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_7187([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7152([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_7153([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_7186([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_7214([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1550([a, e, j, g, l, f, k, b, i], !is_dual)
    } else {
        select_2718([a, e, f, c, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7215([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_299([a, b, c, j, f, k, g, i, l], is_dual)
    } else {
        select_2718([a, f, g, d, e, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7213([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_7214([a, g, d, e, h, b, f, i, j, k, l, m], is_dual)
    } else {
        select_7215([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7212([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7213([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7213([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_7220([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_38([a, b, c, d, g, h, f], is_dual)
    } else {
        select_38([a, b, c, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_7219([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7220([a, b, c, d, g, h, f, i], is_dual)
    } else {
        select_259([a, b, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_7218([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7219([b, c, d, e, a, g, f, h, i], is_dual)
    } else {
        select_664([a, d, b, c, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7217([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7218([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_7218([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7216([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6054([a, b, e, d, g, i, h, c, j, k, l], is_dual)
    } else {
        select_7217([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7211([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7212([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_7216([a, b, c, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_7224([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1413([a, e, j, k, g, f, b, i], !is_dual)
    } else {
        select_2718([a, e, f, c, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7223([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7215([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_7224([a, g, d, e, h, b, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7222([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7223([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_7223([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_7228([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_886([b, c, d, e, f, g, h], is_dual)
    } else {
        select_452([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7227([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2875([c, b, d, a, e, g, f, i, h], is_dual)
    } else {
        select_7228([a, c, d, b, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7226([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7227([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_7227([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7225([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_410([a, b, g, i, d, c, h, j, k], is_dual)
    } else {
        select_7226([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7221([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7222([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_7225([a, b, c, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7210([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_7211([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_7221([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7233([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_439([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_439([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_7234([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_425([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_1908([a, c, f, e, g, b, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7232([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_7233([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_7234([a, b, c, j, g, i, h, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_7231([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_414([a, b, c, d, e, i, j, h, k, l], is_dual)
    } else {
        select_7232([a, b, c, f, g, h, k, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7230([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_1817([a, b, c, d, e, i, j, l, h], is_dual)
    } else {
        select_7231([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7229([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_7230([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_7230([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7209([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_7210([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_7229([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7240([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1827([a, j, k, l, b, h, c, d, i], !is_dual)
    } else {
        select_2561([a, b, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7239([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1907([a, b, c, d, i, j, k, h], is_dual)
    } else {
        select_7240([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7243([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_2830([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_61([a, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7242([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6668([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_7243([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_7245([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_303([a, b, d, c, e, g, f, h], is_dual)
    } else {
        select_39([b, e, f, c], is_dual)
    }
}
/// n = 9, i = 4
fn select_7244([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4665([e, i, h, f, g, b, a, c, d], !is_dual)
    } else {
        select_7245([e, a, h, i, f, b, g, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_7241([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7242([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_7244([a, k, l, h, b, j, g, c, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_7238([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_7239([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7241([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7237([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7197([a, b, d, e, f, g, c, i, h, j, k], is_dual)
    } else {
        select_7238([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7236([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7237([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_7237([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_7249([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1193([a, b, c, g, e, f, h, i, j], is_dual)
    } else {
        select_2099([a, b, c, d, i, g, j, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_7250([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2630([a, b, c, g, d, i, f, h], is_dual)
    } else {
        select_1195([a, b, c, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_7248([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_7249([a, b, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_7250([a, b, c, e, h, g, d, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7247([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_7248([a, b, d, f, c, g, h, i, e, j], is_dual)
    } else {
        select_1213([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7246([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7247([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_7247([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7235([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7236([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_7246([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7208([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_7209([a, b, c, d, f, g, h, i, j, e, k, l, m], is_dual)
    } else {
        select_7235([a, b, c, d, f, e, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7151([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_7152([a, b, c, d, e, f, g, h, i, j, l, m, n, k], is_dual)
    } else {
        select_7208([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_7258([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, b, d, e, f, g, h], is_dual)
    } else {
        select_408([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_7257([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_866([a, b, d, e, c, f, g, h, j], is_dual)
    } else {
        select_7258([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6877([a, g, b, d, e, h, f, i, k, l], is_dual)
    } else {
        select_6877([a, f, c, d, e, h, g, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7256([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_7257([a, g, h, d, e, b, f, i, k, l], is_dual)
    } else {
        select_7259([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_7262([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_80([b, e, a, f, g, c, h], is_dual)
    } else {
        select_723([b, a, e, d, c, g, f, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7261([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7262([a, c, d, b, e, g, h, f, i], is_dual)
    } else {
        select_7262([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_7260([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7261([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_7261([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7255([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7256([a, b, e, c, d, g, f, h, j, k, i, l], is_dual)
    } else {
        select_7260([a, h, b, c, d, f, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_7267([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_67([d, b, c, e, f, g], is_dual)
    } else {
        select_445([g, d, h, i, a, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7266([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7267([e, h, j, a, f, i, b, d, g], !is_dual)
    } else {
        select_1813([a, b, c, f, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7265([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3573([j, k, l, i, h, d, g, a, e, b], !is_dual)
    } else {
        select_7266([i, l, j, k, g, d, h, a, f, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_7271([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_141([b, e, c, d, g, f], is_dual)
    } else {
        select_89([e, g, h, a, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_7270([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_7271([g, d, h, i, a, e, f, b], !is_dual)
    } else {
        select_252([a, e, c, d, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_7269([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1545([a, b, e, d, h, i, f, j, g], is_dual)
    } else {
        select_7270([a, d, c, f, g, e, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7268([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3573([j, k, g, l, i, d, h, a, e, b], !is_dual)
    } else {
        select_7269([d, b, c, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7264([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_7265([a, b, c, e, f, g, d, i, h, j, k, l], is_dual)
    } else {
        select_7268([a, b, c, e, d, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7274([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_222([a, b, c, f, e, h, g, i], is_dual)
    } else {
        select_3887([a, b, d, g, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7273([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_298([h, e, f, j, k, g, a, i, c, b], !is_dual)
    } else {
        select_7274([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_7278([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_382([a, c, d, f, e, g], is_dual)
    } else {
        select_1238([b, c, e, f, d, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5762([b, c, d, a, e, g, f, h, i], is_dual)
    } else {
        select_7278([b, f, d, a, e, i, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7276([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7277([e, h, j, k, f, i, a, b, c, g], !is_dual)
    } else {
        select_1813([a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3573([a, b, d, c, e, f, g, i, h, j], is_dual)
    } else {
        select_7276([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7272([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_7273([i, j, l, k, a, g, f, b, h, d, e], !is_dual)
    } else {
        select_7275([j, k, l, i, a, f, g, e, b, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7263([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_7264([b, c, d, e, f, g, h, i, j, a, k, l], is_dual)
    } else {
        select_7272([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7254([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_7255([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_7263([a, c, e, d, f, g, h, i, j, b, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7283([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_6215([b, a, g, d, f, i, e, j, h], is_dual)
    } else {
        select_222([d, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7282([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_7283([j, e, k, a, f, h, i, b, c, g], !is_dual)
    } else {
        select_4501([j, h, k, a, f, e, i, b, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7286([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1532([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_171([a, e, c, d, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7287([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4099([b, c, a, f, d, h, e, j, g, i], is_dual)
    } else {
        select_1401([a, e, c, g, f, d, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7285([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7286([b, c, a, d, f, e, h, g, i, j], is_dual)
    } else {
        select_7287([b, c, d, e, f, g, h, a, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7284([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1794([e, i, j, k, a, f, g, d, h], !is_dual)
    } else {
        select_7285([e, k, l, i, f, j, h, a, c, b, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7281([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7282([i, e, k, m, f, a, j, b, h, g, d], !is_dual)
    } else {
        select_7284([b, c, a, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_7290([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_881([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_1179([a, b, g, e, f, c, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7289([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5469([b, a, e, f, c, d, g, h, i, k, j], is_dual)
    } else {
        select_7290([a, c, d, b, e, h, g, j, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7292([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_947([g, i, j, l, a, b, k, c, h], !is_dual)
    } else {
        select_4601([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7291([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7292([d, h, j, k, l, m, e, i, b, f, g, c], !is_dual)
    } else {
        select_7290([d, k, l, j, h, m, e, f, i, a], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7288([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_7289([c, d, a, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7291([l, i, n, a, g, j, m, b, k, d, c, e, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7280([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_7281([i, a, m, n, b, g, j, l, c, k, e, d, h], !is_dual)
    } else {
        select_7288([b, c, a, e, d, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_7297([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2078([a, b, h, c, f, g, e, i, j], is_dual)
    } else {
        select_259([a, f, c, d, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7299([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_65([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_65([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_157([e, f, h, j, a, i, b, g], !is_dual)
    } else {
        select_7299([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7296([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7297([b, c, a, d, e, g, f, h, i, k], is_dual)
    } else {
        select_7298([a, c, b, h, e, g, i, f, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7300([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1084([d, j, k, i, l, e, g, a, h, b], !is_dual)
    } else {
        select_1000([d, e, g, c, i, f, h, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7295([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7296([e, a, c, d, f, i, g, h, k, m, j, n], is_dual)
    } else {
        select_7300([l, i, n, f, e, m, j, k, g, a, b, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_7303([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6618([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_6618([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7302([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_728([g, h, b, f, d, k, j], is_dual)
    } else {
        select_7303([d, a, c, i, e, f, g, h, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_7306([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_38([a, b, d, g, f, i, k], is_dual)
    } else {
        select_26([c, h, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7305([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1137([a, g, d, i, f, e, h, k], is_dual)
    } else {
        select_7306([b, c, d, a, f, e, h, g, k, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7304([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3586([g, c, d, i, e, f, h, k, j, m], is_dual)
    } else {
        select_7305([e, a, b, d, h, f, g, j, i, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7301([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_7302([b, c, d, f, e, g, h, a, i, j, k, l], is_dual)
    } else {
        select_7304([a, b, c, d, f, g, e, i, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7294([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_7295([b, d, c, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7301([b, d, a, e, f, c, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_7308([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6386([h, k, l, g, e, j, f, a, b, i, c], !is_dual)
    } else {
        select_298([e, a, c, f, d, h, g, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_7311([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_67([g, d, h, a, f, b], !is_dual)
    } else {
        select_121([d, h, g, a, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7311([d, b, f, h, a, g, e, j], is_dual)
    } else {
        select_5872([b, c, a, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7312([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2753([a, b, c, d, e, g, f, i, h, j], is_dual)
    } else {
        select_6215([e, i, j, a, h, b, g, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7309([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7310([b, a, c, i, e, f, g, j, k, h], is_dual)
    } else {
        select_7312([a, b, f, d, e, i, h, j, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7307([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_7308([b, c, d, a, g, e, f, i, h, j, k, l], is_dual)
    } else {
        select_7309([i, k, l, m, e, f, g, a, j, b, c, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7293([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_7294([b, a, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_7307([i, a, m, n, g, f, j, l, b, k, c, d, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7279([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7280([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_7293([a, c, e, d, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7253([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_7254([a, b, g, m, n, k, c, h, l, d, j, e], !is_dual)
    } else {
        select_7279([a, b, d, c, e, f, g, h, i, k, j, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7252([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7253([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7253([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_7319([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_807([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_807([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7321([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_74([a, b, d, e, g, h, j], is_dual)
    } else {
        select_3861([a, b, h, c, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_19([c, d, e, a, b, f, h, g, i], is_dual)
    } else {
        select_7321([a, b, e, c, d, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7318([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7319([b, c, d, e, f, g, h, a, i, j], is_dual)
    } else {
        select_7320([b, c, a, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7323([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_43([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_2517([e, f, a, b, c, d, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7322([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7323([a, d, e, f, b, c, g, i, h, j], is_dual)
    } else {
        select_7320([b, c, e, f, d, g, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7317([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_7318([a, c, d, e, f, g, h, i, b, j], is_dual)
    } else {
        select_7322([a, c, d, e, b, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7326([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, f, d, c, e, h, g, i], is_dual)
    } else {
        select_2970([a, k, h, l, f, j, b, c, i, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7327([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_463([a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2655([a, f, j, l, k, b, c, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7325([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7326([a, b, d, e, f, c, g, h, i, k, j, l], is_dual)
    } else {
        select_7327([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_7330([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3892([h, f, k, i, j, d, g, a, b, e], !is_dual)
    } else {
        select_4630([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7329([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_7330([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_7330([i, h, k, e, j, a, g, b, c, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7333([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_803([a, b, c, e, h, i, g, k], is_dual)
    } else {
        select_379([b, d, a, c, e, f, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_7332([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_7333([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2413([i, g, l, e, a, k, b, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7335([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_453([d, b, c, f, e, g, h], is_dual)
    } else {
        select_153([e, a, h, d, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7334([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1059([a, b, h, d, g, e, j, k, l], is_dual)
    } else {
        select_7335([a, e, c, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7331([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_7332([a, b, c, d, f, g, e, h, j, i, k, l], is_dual)
    } else {
        select_7334([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7328([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_7329([a, f, b, d, h, g, i, e, j, k, l], is_dual)
    } else {
        select_7331([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7324([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_7325([a, h, e, j, i, m, l, f, k, b, g, d], !is_dual)
    } else {
        select_7328([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7316([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_7317([a, i, h, k, e, m, b, l, f, j], !is_dual)
    } else {
        select_7324([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7315([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7316([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7316([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_7341([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3171([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_250([a, h, i, k, f, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7342([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_385([e, h, i, j, f, g, b, c, d], !is_dual)
    } else {
        select_812([e, i, j, k, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7340([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7341([a, i, j, k, f, g, h, c, d, b, e], !is_dual)
    } else {
        select_7342([f, i, j, k, a, g, h, b, c, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7344([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1059([j, h, i, g, a, e, c, f, d], !is_dual)
    } else {
        select_4263([g, h, i, a, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_67([g, b, c, e, f, h], is_dual)
    } else {
        select_719([a, c, d, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7343([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_7344([a, b, c, d, f, g, e, i, j, h], is_dual)
    } else {
        select_7345([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7339([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7340([a, g, j, k, l, b, h, i, c, f, d], !is_dual)
    } else {
        select_7343([a, b, c, e, g, i, f, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7348([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4370([f, j, i, k, l, a, g, b, d, h], !is_dual)
    } else {
        select_846([a, c, e, g, f, i, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7350([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_65([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_117([e, b, c, d, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7349([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7350([j, i, k, l, f, a, g, b, d, h], !is_dual)
    } else {
        select_846([a, c, e, g, f, i, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7347([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_7348([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_7349([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7346([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2942([a, c, e, b, d, i, g, j, h], is_dual)
    } else {
        select_7347([a, b, e, c, f, d, i, h, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7338([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_7339([a, b, e, f, d, g, h, c, i, k, l, j], is_dual)
    } else {
        select_7346([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7337([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1507([a, d, c, e, f, b, h, g, i, j], is_dual)
    } else {
        select_7338([a, c, b, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7336([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7337([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_7337([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7314([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_7315([a, b, c, e, d, g, f, j, i, h, l, k, m], is_dual)
    } else {
        select_7336([a, b, c, j, m, i, l, k, g, f, d, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7356([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_282([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_1000([a, b, f, j, c, i, h, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7355([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7356([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_7356([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7354([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_7355([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_7355([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7353([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7354([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_7354([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7359([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1499([a, i, f, j, k, g, b, c, h], !is_dual)
    } else {
        select_844([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7358([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7359([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_7359([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7357([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7358([a, b, c, g, j, k, h, i, d, e, f], !is_dual)
    } else {
        select_7358([a, b, c, h, j, k, g, i, d, f, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7352([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_7353([a, b, c, h, j, k, g, d, i, e], !is_dual)
    } else {
        select_7357([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7365([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_280([a, e, c, d, f, g, j, k], is_dual)
    } else {
        select_2806([e, h, i, j, k, a, f, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7364([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6524([a, h, b, e, i, f, j, k, g], is_dual)
    } else {
        select_7365([f, a, c, d, e, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7368([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1271([h, i, k, l, f, j, a, b, g, d, e], !is_dual)
    } else {
        select_874([b, c, d, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_7369([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1265([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1265([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7367([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7368([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_7369([f, k, l, a, g, j, h, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7370([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_491([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_4562([h, j, k, e, a, i, b, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7366([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7367([a, c, d, b, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_7370([a, c, d, g, f, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7363([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7364([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7366([e, i, j, k, m, a, l, f, g, h, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7362([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7363([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7363([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_7371([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6487([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2017([a, b, c, d, e, f, h, g, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7361([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_7362([a, b, m, k, l, h, i, j, c, d, e, g, f], !is_dual)
    } else {
        select_7371([a, b, c, k, l, m, i, h, j, g, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7360([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_7353([a, b, c, i, k, l, h, d, j, e], !is_dual)
    } else {
        select_7361([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7351([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7352([a, b, c, d, e, g, j, i, h, k, l], is_dual)
    } else {
        select_7360([a, b, c, d, f, e, h, j, k, g, i, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7313([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_7314([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    } else {
        select_7351([a, b, c, j, m, l, g, k, d, h, i, e, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7251([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_7252([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_7313([a, b, c, d, f, i, h, j, k, e, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7150([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_7151([a, b, c, d, e, g, h, f, i, j, l, k, m, n], is_dual)
    } else {
        select_7251([a, b, c, d, e, g, h, i, j, f, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_5657([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_5658([a, b, c, d, e, f, g, h, i, k, j, m, n, l], is_dual)
    } else {
        select_7150([a, b, c, d, e, f, h, g, k, i, l, n, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_3941([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3942([a, b, c, d, e, h, g, i, f, j, k, l, m, n], is_dual)
    } else {
        select_5657([a, b, c, d, e, h, f, i, g, k, l, j, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_7384([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_845([a, e, c, d, f, h, g, i, k], is_dual)
    } else {
        select_2625([e, i, j, h, k, a, f, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7386([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_614([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_4929([a, b, g, c, f, e, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7385([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1162([a, c, e, f, d, h, g, i], is_dual)
    } else {
        select_7386([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7383([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_7384([a, c, b, h, f, g, i, j, k, e, l], is_dual)
    } else {
        select_7385([b, c, a, d, f, g, e, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_7389([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_192([c, e, d, f, g, h], is_dual)
    } else {
        select_2002([a, b, c, g, e, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7390([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_84([e, b, g, d, h, f, k], is_dual)
    } else {
        select_816([a, c, b, f, e, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_7389([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_7390([b, c, a, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7391([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_425([a, f, j, l, b, k, g, d], !is_dual)
    } else {
        select_1279([a, f, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7387([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7388([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_7391([f, e, j, m, l, a, k, i, g, c, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7382([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7383([a, b, c, d, e, f, i, g, h, k, j, l], is_dual)
    } else {
        select_7387([a, c, d, b, e, f, i, h, g, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_7394([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_233([a, c, d, b, e, f, g, i, h], is_dual)
    } else {
        select_845([a, f, j, g, k, b, h, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7393([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2942([a, i, j, f, k, g, b, c, h], !is_dual)
    } else {
        select_7394([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_7397([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1751([a, b, g, c, e, f, i, j], is_dual)
    } else {
        select_1254([b, a, f, d, e, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7398([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2216([b, a, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_1730([e, j, k, l, h, a, i, b, f, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7396([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7397([b, c, d, a, e, h, f, i, g, j], is_dual)
    } else {
        select_7398([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7395([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7396([a, b, c, d, f, e, g, h, j, i, k, l], is_dual)
    } else {
        select_1733([f, e, k, l, a, i, g, j, b, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7392([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7393([f, e, k, j, l, a, i, g, b, d, h], !is_dual)
    } else {
        select_7395([a, c, d, b, e, f, i, g, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7381([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7382([f, l, m, i, a, b, h, j, k, c, d, g, e], !is_dual)
    } else {
        select_7392([f, l, m, h, a, b, j, k, i, c, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7404([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_213([b, c, d, g, i, f, h], is_dual)
    } else {
        select_91([h, a, b, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5237([c, b, d, e, g, f, h, k, i, j], is_dual)
    } else {
        select_7404([c, a, b, f, e, i, h, j, k, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_7406([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_292([b, c, d, e, g, h, f], is_dual)
    } else {
        select_62([d, i, a, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_7407([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1533([f, g, h, i, d, e, a, b], !is_dual)
    } else {
        select_91([f, b, c, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_7405([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_7406([c, b, a, f, d, e, h, i, g], is_dual)
    } else {
        select_7407([a, c, b, e, f, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7402([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_7403([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_7405([h, b, c, j, a, e, g, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7410([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_205([e, i, j, h, a, b], !is_dual)
    } else {
        select_4156([g, h, i, j, e, a, f, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7409([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5694([e, b, c, f, h, g], is_dual)
    } else {
        select_7410([a, d, b, c, e, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7409([b, d, e, f, a, i, h, g, j, k], is_dual)
    } else {
        select_4747([d, e, b, c, a, g, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_7402([a, c, e, d, g, f, h, b, j, i, k], is_dual)
    } else {
        select_7408([a, c, e, b, d, g, h, f, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7413([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_250([e, a, i, j, b, h], !is_dual)
    } else {
        select_187([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7414([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2352([g, j, e, i, b, a, h, f], !is_dual)
    } else {
        select_3152([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_7412([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7413([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_7414([b, a, c, d, e, f, g, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7415([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4365([i, g, j, l, a, k, b, h, d, f, e], !is_dual)
    } else {
        select_7413([g, j, i, l, a, k, b, f, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7411([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_7412([j, i, h, l, a, k, b, f, c, d, g], !is_dual)
    } else {
        select_7415([a, b, d, e, c, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7400([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_7401([j, k, i, g, m, e, l, a, h, b, c], !is_dual)
    } else {
        select_7411([g, i, j, k, m, h, l, a, e, b, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7419([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_185([a, e, c, d, g, f, i, j, k], is_dual)
    } else {
        select_527([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7420([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_192([b, c, e, f, g, h], is_dual)
    } else {
        select_237([a, d, b, c, g, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7418([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_7419([b, c, e, g, h, f, a, i, j, k, l], is_dual)
    } else {
        select_7420([b, a, c, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7422([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1610([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_1397([a, b, f, c, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_7423([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([h, i, a, b, c], !is_dual)
    } else {
        select_874([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_7421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_7422([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_7423([g, h, i, a, k, j, b, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7417([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_7418([a, b, d, c, e, g, h, f, i, k, j, l], is_dual)
    } else {
        select_7421([a, b, f, e, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7427([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_111([a, c, g, f, i, e, j], is_dual)
    } else {
        select_4156([a, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7426([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_7427([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_365([b, a, c, g, h, f, e, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7425([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6738([g, j, k, f, e, i, a, b, h, c], !is_dual)
    } else {
        select_7426([a, b, d, c, e, g, f, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7424([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7425([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_7425([c, b, d, e, a, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_7416([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_7417([a, c, d, b, e, f, g, h, i, l, j, k], is_dual)
    } else {
        select_7424([a, b, c, d, g, h, i, j, k, m, f], is_dual)
    }
}
/// n = 13, i = 6
fn select_7399([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_7400([i, j, m, l, g, k, b, f, c, d, a, h, e], !is_dual)
    } else {
        select_7416([a, b, c, d, e, g, h, i, j, k, l, m, f], is_dual)
    }
}
/// n = 13, i = 6
fn select_7380([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_7381([a, b, d, c, e, f, h, i, j, l, k, m, g], is_dual)
    } else {
        select_7399([a, b, c, d, e, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7379([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7380([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7380([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7378([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7379([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_7379([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_7434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1496([a, b, e, f, c, g, d, h, i, j], is_dual)
    } else {
        select_1496([a, b, e, f, d, g, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7433([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_884([a, c, d, e, g, h, b, i], is_dual)
    } else {
        select_7434([a, c, d, e, b, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7432([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_903([a, c, e, f, g, b, h, d, i], is_dual)
    } else {
        select_7433([a, c, e, f, g, d, b, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7436([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1669([h, j, k, g, l, a, b, i, c, d], !is_dual)
    } else {
        select_1141([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7435([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_7436([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_1140([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7431([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7432([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_7435([a, c, b, d, e, f, g, i, j, k, l, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_7430([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7431([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_7431([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_7440([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_58([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_6479([a, c, b, e, f, g, d, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_7442([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_80([a, b, d, e, c, f, g], is_dual)
    } else {
        select_80([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_7441([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_7442([a, b, c, e, h, d, i], is_dual)
    } else {
        select_2119([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7440([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_7441([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7445([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_222([a, j, k, g, c, b, i, h], !is_dual)
    } else {
        select_390([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7444([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7445([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_7445([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7444([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_7444([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_7438([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_7439([a, b, i, j, c, l, m, d, k, h], !is_dual)
    } else {
        select_7443([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7437([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7438([a, b, c, j, l, m, n, k, d, e, i, g, h], !is_dual)
    } else {
        select_1130([a, b, c, j, l, m, n, h, k, d, e, f, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7429([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_7430([a, b, c, j, d, l, m, n, h, k, e, i], !is_dual)
    } else {
        select_7437([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 6
fn select_7447([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1076([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1076([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_7454([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_95([a, c, b, i, h, g, k], is_dual)
    } else {
        select_551([c, d, g, e, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_7453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7454([b, c, a, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_851([b, e, f, c, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7452([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_255([a, f, d, e, b, g, h, i, j], is_dual)
    } else {
        select_7453([a, c, b, d, e, g, h, f, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7451([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7452([a, c, b, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_7452([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7450([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7451([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_7451([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_7459([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1289([a, b, c, d, e, f, g, i], is_dual)
    } else {
        select_69([a, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7460([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_21([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_68([a, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7458([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_7459([a, b, h, e, g, f, i, j, k], is_dual)
    } else {
        select_7460([a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7461([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_257([c, d, e, b, f, g, h], is_dual)
    } else {
        select_33([a, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7457([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7458([a, c, b, g, e, f, h, j, i, k, l], is_dual)
    } else {
        select_7461([a, b, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7462([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2514([b, c, d, e, f, i, g, h, j, l], is_dual)
    } else {
        select_2791([a, b, c, d, f, j, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7456([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7457([b, d, c, e, g, f, h, i, a, j, k, l], is_dual)
    } else {
        select_7462([a, b, c, d, e, g, h, i, f, j, l, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7464([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1216([c, d, e, a, b, f, g, i, h, j], is_dual)
    } else {
        select_7321([a, b, d, c, g, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7463([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7464([b, c, e, d, f, g, h, i, a, j, k], is_dual)
    } else {
        select_2516([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7455([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_7456([a, c, d, e, f, h, g, i, b, j, k, l], is_dual)
    } else {
        select_7463([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7449([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_7450([a, b, c, d, f, e, h, i, g, j, k], is_dual)
    } else {
        select_7455([a, b, c, e, d, f, h, g, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_7467([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_225([a, b, c, d, e, i, g, h, j, k], is_dual)
    } else {
        select_225([a, b, c, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7469([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_845([a, g, k, i, j, b, h, d, e], !is_dual)
    } else {
        select_5544([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7470([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_881([a, c, b, d, e, f, g, h, j, k], is_dual)
    } else {
        select_310([a, b, d, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7468([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_7469([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_7470([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7466([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_7467([a, b, d, e, c, f, h, g, i, j, k], is_dual)
    } else {
        select_7468([a, b, c, d, e, i, h, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7465([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7466([a, b, c, e, d, f, g, h, i, k, l, j], is_dual)
    } else {
        select_7450([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7448([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7449([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_7465([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7446([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_7447([a, b, c, e, f, i, h, j, k, d, l, m, n], is_dual)
    } else {
        select_7448([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7428([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_7429([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_7446([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7377([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_7378([a, b, c, d, i, e, f, k, l, m, n, h, j], is_dual)
    } else {
        select_7428([a, b, c, d, f, g, e, i, h, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_7480([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([f, b, c, h, e, g], is_dual)
    } else {
        select_626([i, h, j, f, e, d, g, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_7481([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_382([b, d, c, e, f, h], is_dual)
    } else {
        select_3119([a, b, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7479([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_7480([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_7481([g, i, j, e, d, f, h, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7482([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_440([a, e, c, d, g, f, h, i], is_dual)
    } else {
        select_710([d, i, j, g, e, a, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7478([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7479([b, a, d, e, g, f, h, i, l, j], is_dual)
    } else {
        select_7482([a, c, d, e, g, f, h, j, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_7477([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_7478([a, c, b, d, e, f, g, i, h, j, l, k], is_dual)
    } else {
        select_5636([e, i, k, l, m, a, g, j, h, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_7485([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_5643([f, i, g, h, a, e, d, b, c], !is_dual)
    } else {
        select_1452([f, h, d, a, g, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7486([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2912([b, e, a, h, g, d, j, i, f], is_dual)
    } else {
        select_3892([b, c, a, e, d, h, f, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_7484([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_7485([h, g, j, i, e, a, d, f, c], !is_dual)
    } else {
        select_7486([a, b, c, e, f, g, h, i, d, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7483([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6638([h, d, j, k, e, a, i, b, g, f], !is_dual)
    } else {
        select_7484([b, a, c, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_7476([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7477([a, c, b, d, e, f, g, h, i, k, m, l, j], is_dual)
    } else {
        select_7483([a, b, d, e, g, f, h, i, j, m, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7489([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3042([i, g, k, d, f, h, e, b, c], !is_dual)
    } else {
        select_5166([g, i, j, k, d, e, f, h, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7491([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_639([g, h, j, d, e, a, i, f], !is_dual)
    } else {
        select_3478([b, a, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7490([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_7491([a, c, b, e, f, d, g, i, h, j], is_dual)
    } else {
        select_6094([g, j, k, i, e, d, f, a, h, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7488([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_7489([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_7490([a, b, c, e, f, g, h, i, d, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_7494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1418([a, b, f, g, e, i, j], is_dual)
    } else {
        select_550([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7493([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7494([c, a, b, d, f, e, g, h, i, j], is_dual)
    } else {
        select_6698([a, b, c, g, f, i, h, e, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7497([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_98([f, c, a, h, e, g], is_dual)
    } else {
        select_3604([c, b, a, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4099([b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_7497([a, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7495([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2939([a, b, e, d, g, f, i, h, j], is_dual)
    } else {
        select_7496([b, c, d, a, g, f, h, e, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7492([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7493([c, d, a, e, f, b, g, h, i, k, j], is_dual)
    } else {
        select_7495([d, c, b, e, a, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7487([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_7488([k, f, l, b, a, i, h, c, j, d, g], !is_dual)
    } else {
        select_7492([c, b, d, a, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_7475([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_7476([a, b, c, d, e, g, f, i, h, j, k, l, m], is_dual)
    } else {
        select_7487([e, h, j, m, l, a, k, i, b, g, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7503([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_292([a, b, f, h, e, i, j], is_dual)
    } else {
        select_1224([b, e, c, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7504([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_88([i, e, j, a, h, f, b], !is_dual)
    } else {
        select_314([a, e, c, d, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_7502([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_7503([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_7504([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_7506([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_453([b, a, c, e, f, h, i], is_dual)
    } else {
        select_266([a, b, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7505([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1417([e, a, c, d, f, h, g, j], is_dual)
    } else {
        select_7506([e, i, j, k, f, h, a, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7501([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_7502([e, i, j, k, f, a, g, h, b, d], !is_dual)
    } else {
        select_7505([f, i, j, k, a, e, g, h, b, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7509([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_499([a, c, d, e, g, i, h, k], is_dual)
    } else {
        select_154([a, b, c, e, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_7509([a, b, d, c, f, g, e, h, i, j, k], is_dual)
    } else {
        select_5897([a, b, c, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7507([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7508([b, d, a, c, e, f, g, i, j, h, k], is_dual)
    } else {
        select_4134([a, d, c, f, e, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_7500([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_7501([a, b, g, d, e, h, i, j, f, l, m], is_dual)
    } else {
        select_7507([b, c, d, a, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_7512([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_74([a, f, c, d, e, h, g], is_dual)
    } else {
        select_1459([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7513([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3690([a, c, b, d, f, e, g, i, j, h], is_dual)
    } else {
        select_1812([i, g, j, d, h, e, a, f, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7511([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_7512([b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_7513([k, l, j, g, i, f, b, a, c, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_7516([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_68([i, e, b, a, g], !is_dual)
    } else {
        select_6939([b, a, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_7515([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1772([a, c, b, e, f, g, h, i], is_dual)
    } else {
        select_7516([a, c, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7514([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3541([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_7515([b, c, d, h, a, f, g, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7510([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7511([a, b, c, d, h, g, f, j, k, l, i, m], is_dual)
    } else {
        select_7514([b, a, f, d, e, g, i, h, l, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_7499([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_7500([i, f, n, m, a, g, l, b, k, j, c, d, h], !is_dual)
    } else {
        select_7510([a, b, c, d, e, g, f, h, i, j, l, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_7519([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_155([e, i, j, h, a, g, b, d], !is_dual)
    } else {
        select_6470([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7518([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4893([a, c, d, f, e, i, g, h, j, k], is_dual)
    } else {
        select_7519([a, b, c, h, e, g, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7522([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_316([a, g, c, d, h, f, i], is_dual)
    } else {
        select_5827([g, l, h, k, j, a, e, b, i, c, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7521([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_5828([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_7522([h, k, e, m, i, l, a, b, j, f, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7523([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_614([b, d, a, e, f, g, h, i], is_dual)
    } else {
        select_445([a, c, b, g, e, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7520([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_7521([b, a, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_7523([j, h, e, m, a, l, k, i, b, f, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7517([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_7518([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_7520([e, i, k, m, a, f, l, b, g, c, j, h, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7498([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_7499([a, b, d, c, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_7517([f, i, m, n, a, g, l, k, b, c, d, j, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7474([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_7475([b, c, d, h, f, g, j, i, k, a, l, n, m], is_dual)
    } else {
        select_7498([b, c, a, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7473([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7474([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7474([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_7529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_330([a, b, d, e, f, c, g, h, i, k], is_dual)
    } else {
        select_1828([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7528([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7529([a, b, c, f, d, e, g, h, k, i, l], is_dual)
    } else {
        select_4272([a, b, d, e, c, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7531([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_467([a, b, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7530([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6063([a, b, c, f, e, h, g, j, i, l], is_dual)
    } else {
        select_7531([a, b, d, c, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7527([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_7528([a, b, d, c, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_7530([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7533([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_866([a, b, e, g, c, f, h, j, k], is_dual)
    } else {
        select_5438([a, b, d, f, e, h, g, i, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_7537([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_71([c, h, i, d, a, g], !is_dual)
    } else {
        select_186([c, d, b, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_7536([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6036([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_7537([e, j, a, g, i, f, h, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7536([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_7536([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7534([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_478([a, i, k, g, j, b, e, c], !is_dual)
    } else {
        select_7535([a, g, i, k, l, j, b, h, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7532([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7533([a, b, d, c, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_7534([a, b, d, c, f, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7526([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_7527([a, h, e, b, k, m, i, l, j, f, g, c], !is_dual)
    } else {
        select_7532([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_580([a, j, i, h, g, b, e, f, c], !is_dual)
    } else {
        select_51([a, b, d, g, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7540([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1924([a, b, i, j, k, g, h, e, f, c], !is_dual)
    } else {
        select_7541([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7539([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_7540([a, b, c, f, e, i, h, j, k, l, g], is_dual)
    } else {
        select_2669([a, b, e, d, g, h, f, i, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7538([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_7539([a, b, c, d, f, i, g, h, j, k, l, m], is_dual)
    } else {
        select_7539([a, b, c, e, f, i, g, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7525([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_7526([a, b, g, d, c, j, f, h, k, i, l, m, n], is_dual)
    } else {
        select_7538([a, b, d, c, e, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_7546([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1298([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2079([b, a, c, g, e, h, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_7545([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_5232([a, c, b, g, e, f, i, j, k, h, l], is_dual)
    } else {
        select_7546([a, b, f, d, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7549([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_501([h, j, i, l, a, g, e, d], !is_dual)
    } else {
        select_560([a, k, h, l, i, f, b, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_7551([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_970([a, b, d, f, e, g, h, j, k, i, l], is_dual)
    } else {
        select_313([a, c, i, e, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7550([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_3481([b, d, a, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_7551([b, d, c, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7548([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_7549([a, b, c, e, g, i, h, j, k, f, l, m], is_dual)
    } else {
        select_7550([b, a, c, e, d, f, g, h, k, i, j, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_7552([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_425([f, a, e, c, d, g, h, i], is_dual)
    } else {
        select_6460([d, e, j, k, a, f, i, h, b, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7547([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_7548([a, c, d, b, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_7552([a, h, e, f, j, b, g, i, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7544([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_7545([f, m, n, j, a, k, h, b, c, l, d, i], !is_dual)
    } else {
        select_7547([a, b, d, c, e, f, g, h, i, j, k, n, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_7554([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6638([b, a, c, d, f, e, g, i, j, h], is_dual)
    } else {
        select_4778([i, j, e, g, a, f, h, b, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7555([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3029([b, a, c, d, e, f, g, i, h, j, l, k], is_dual)
    } else {
        select_5636([e, l, k, i, m, a, j, g, h, b, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7553([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_7554([e, m, l, g, a, k, j, b, c, h], !is_dual)
    } else {
        select_7555([a, b, c, d, e, f, g, h, i, k, l, m, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_7543([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_7544([b, a, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_7553([b, c, d, g, f, i, h, k, j, a, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7542([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7543([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7543([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7524([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_7525([a, b, c, e, f, g, h, i, d, j, k, m, l, n], is_dual)
    } else {
        select_7542([a, b, c, e, d, f, h, g, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7472([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_7473([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_7524([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_7564([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_96([b, c, d, e, g, h, i], is_dual)
    } else {
        select_612([a, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7563([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2053([i, f, l, a, g, k, j, b, h], !is_dual)
    } else {
        select_7564([b, a, e, c, d, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_7565([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_152([d, h, i, a, g, e, f, b], !is_dual)
    } else {
        select_152([d, h, i, a, g, f, e, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_7562([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_7563([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_7565([a, c, i, f, g, b, k, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7561([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7562([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_7562([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_834([e, k, l, f, j, a, b, i], !is_dual)
    } else {
        select_187([b, c, f, d, e, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6648([b, c, a, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_376([a, b, g, f, i, h, j, e], is_dual)
    }
}
/// n = 13, i = 6
fn select_7567([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_7568([j, h, e, m, a, i, l, b, k, f, g, c], !is_dual)
    } else {
        select_7569([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7566([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7567([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7567([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7560([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_7561([a, b, d, c, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_7566([a, b, g, l, n, k, m, c, i, d, j, h, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7575([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_52([e, i, j, a, h, b], !is_dual)
    } else {
        select_55([b, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_7574([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1265([a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_7575([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2089([a, b, i, e, f, j, k], is_dual)
    } else {
        select_7574([a, f, c, d, e, h, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_7577([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_453([g, c, b, a, f, i, h], is_dual)
    } else {
        select_228([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_7576([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1654([a, i, b, e, g, f, k, l], is_dual)
    } else {
        select_7577([e, b, f, c, d, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_7572([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_7573([a, g, c, d, e, h, i, f, j, k, l], is_dual)
    } else {
        select_7576([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7579([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_37([b, c, f, d, e, g, h, i, j], is_dual)
    } else {
        select_4822([a, b, c, i, f, j, h, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7578([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7579([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7579([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7571([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_7572([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_7578([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_7581([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1102([a, b, c, i, j, k, f], is_dual)
    } else {
        select_1448([a, f, d, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_7582([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_728([a, b, h, c, i, g, f], is_dual)
    } else {
        select_224([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_7580([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7581([a, b, g, d, e, f, i, h, j, k, l], is_dual)
    } else {
        select_7582([a, c, f, d, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7570([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_7571([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_7580([a, b, d, e, f, c, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7559([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7560([a, b, d, c, f, e, g, h, i, k, l, n, j, m], is_dual)
    } else {
        select_7570([a, b, d, e, c, f, g, h, i, j, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_7586([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1970([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_285([a, i, e, k, f, b, j, h, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7585([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7586([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_7586([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7584([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7585([a, b, f, d, c, g, i, h, j, k, l], is_dual)
    } else {
        select_3666([a, b, f, j, l, g, k, i, c, h, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3422([a, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_729([a, i, j, f, e, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7591([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_250([a, b, i, j, c, h], !is_dual)
    } else {
        select_350([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7589([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_7590([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_7591([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7588([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7589([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1542([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7587([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2666([a, b, h, i, k, e, j, g, f, d], !is_dual)
    } else {
        select_7588([a, b, i, h, k, e, j, f, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7583([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_7584([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7587([a, b, i, e, g, c, h, f, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7558([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_7559([a, b, c, d, f, e, g, i, h, j, k, m, l, n], is_dual)
    } else {
        select_7583([a, b, d, f, h, g, j, e, i, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_7597([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_311([a, b, c, d, f, e, g], is_dual)
    } else {
        select_186([a, e, d, b, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_7596([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2651([a, b, c, e, g, h, f, j, i, l], is_dual)
    } else {
        select_7597([a, c, d, f, g, i, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7595([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2150([a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_7596([a, b, c, g, e, h, f, j, i, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_7594([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7595([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_7595([a, b, d, c, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_7601([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_491([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_237([e, k, g, j, a, i, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7602([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_491([g, h, k, l, a, j, b, i, d, f], !is_dual)
    } else {
        select_1518([a, c, e, b, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7600([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7601([f, b, d, e, a, g, h, i, j, k, l], is_dual)
    } else {
        select_7602([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7603([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_330([a, b, e, d, g, f, h, i, j, l], is_dual)
    } else {
        select_1828([a, b, c, d, h, f, g, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7599([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_7600([a, b, c, h, d, f, g, j, k, l, i, n], is_dual)
    } else {
        select_7603([a, c, e, b, d, f, h, g, j, i, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_7606([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1290([f, b, c, e, a, g, h, i, j], is_dual)
    } else {
        select_2068([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7607([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1605([b, d, a, e, c, f, g, h, j, i], is_dual)
    } else {
        select_6088([b, d, c, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7605([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7606([c, b, d, a, e, f, g, h, i, k], is_dual)
    } else {
        select_7607([b, a, d, c, g, h, i, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7609([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_950([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_5695([e, i, j, g, a, h, f, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7608([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1813([a, b, c, f, e, g, i, h], is_dual)
    } else {
        select_7609([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7604([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_7605([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7608([b, c, d, g, f, i, a, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7598([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7599([a, b, c, d, e, f, h, i, g, j, l, m, k, n], is_dual)
    } else {
        select_7604([a, c, d, g, e, f, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7593([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_7594([a, c, b, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_7598([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_7612([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3175([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_3175([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7615([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2889([e, a, b, d, h, f, g, i], is_dual)
    } else {
        select_639([f, e, i, j, a, g, h, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7614([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4608([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_7615([h, j, e, k, a, b, f, i, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7613([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7614([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_7614([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7611([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7612([a, b, h, c, d, f, i, g, j, k], is_dual)
    } else {
        select_7613([a, b, j, i, l, f, k, c, h, g, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7619([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_751([b, c, d, a, f, e, g, h], is_dual)
    } else {
        select_312([f, j, e, i, g, a, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7618([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_7619([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_1485([j, e, i, k, g, f, a, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7617([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7618([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_7618([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7620([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_474([a, b, i, j, f, c, h, g], !is_dual)
    } else {
        select_1158([a, b, c, d, e, f, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7616([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_7617([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_7620([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7610([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_7611([a, b, d, e, c, g, h, f, i, j, k, l], is_dual)
    } else {
        select_7616([a, b, c, d, h, g, j, k, l, f, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7592([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_7593([a, b, c, e, d, f, h, g, i, j, l, k, m, n], is_dual)
    } else {
        select_7610([a, b, l, g, n, h, j, m, c, d, k, e, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7557([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_7558([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_7592([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_7628([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_235([d, i, j, k, a, e, b, g], !is_dual)
    } else {
        select_2664([h, j, k, d, a, g, f, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7627([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7628([h, j, l, e, g, k, i, a, b, c, f], !is_dual)
    } else {
        select_235([e, b, d, g, h, f, j, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_7630([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_103([a, b, d, i, k, l, f], is_dual)
    } else {
        select_3937([d, b, c, f, e, g, h, j, k, i, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_7631([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1423([a, c, h, i, e, g, k], is_dual)
    } else {
        select_719([a, b, j, d, l, f, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7629([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7630([b, a, c, d, e, g, h, f, j, i, k, l, m], is_dual)
    } else {
        select_7631([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7626([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7627([a, c, f, d, e, g, i, j, k, h, l, n], is_dual)
    } else {
        select_7629([i, m, n, j, l, e, h, k, a, f, c, b, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_7633([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1870([a, c, b, h, f, i, j, g], is_dual)
    } else {
        select_251([a, c, d, e, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_7634([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5940([i, m, l, k, j, f, g, b, a, c, h], !is_dual)
    } else {
        select_3418([b, c, d, e, f, g, i, h, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7632([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7633([a, c, e, d, f, g, i, j, k, h], is_dual)
    } else {
        select_7634([b, c, d, a, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7625([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7626([b, e, d, c, f, h, g, a, i, j, l, m, k, n], is_dual)
    } else {
        select_7632([c, b, e, d, a, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_7638([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_436([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_128([a, b, f, d, e, i, h, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_7639([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_499([a, f, b, d, e, g, h, i], is_dual)
    } else {
        select_55([b, c, g, e, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_7637([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7638([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_7639([a, b, f, d, e, i, g, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_7636([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_7637([a, c, b, e, g, d, h, i, f, j], is_dual)
    } else {
        select_807([a, b, c, e, f, g, h, d, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_7642([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_77([b, d, c, e, g, f, h], is_dual)
    } else {
        select_62([d, i, a, e, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_7641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7638([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_7642([a, b, f, d, e, i, g, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_7640([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4811([e, a, c, h, d, f, g, j, i], is_dual)
    } else {
        select_7641([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7635([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7636([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_7640([c, b, d, f, a, g, h, e, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_7624([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_7625([a, c, d, b, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_7635([d, a, e, f, g, h, i, j, b, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7645([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_977([b, d, c, e, a, f, h, g, j, i, k], is_dual)
    } else {
        select_3656([b, c, g, e, f, a, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7648([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1979([a, b, h, c, g, f, i, j, k, l], is_dual)
    } else {
        select_392([b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7647([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_76([i, h, n, b, a, l, j, d, f], !is_dual)
    } else {
        select_7648([c, b, e, a, d, f, g, h, i, k, j, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_7651([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_62([f, h, a, e, c], !is_dual)
    } else {
        select_34([g, d, i, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7650([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_68([b, c, h, e, i], is_dual)
    } else {
        select_7651([a, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7649([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7066([b, c, d, a, e, g, h, f, i, k, j], is_dual)
    } else {
        select_7650([c, b, f, e, a, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7646([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7647([b, a, d, e, c, h, g, i, f, k, l, m, j, n], is_dual)
    } else {
        select_7649([c, f, b, d, e, h, g, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7644([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7645([a, b, d, c, h, f, g, j, l, i, m, n], is_dual)
    } else {
        select_7646([b, a, c, e, d, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_7654([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_834([e, a, b, i, f, j, h, g], is_dual)
    } else {
        select_300([a, g, c, d, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7655([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_110([a, f, h, j, g, e, d], !is_dual)
    } else {
        select_1241([a, b, c, e, h, f, i, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_7653([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7654([b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_7655([f, a, i, d, g, k, e, h, l, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_7657([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_67([d, g, b, i, e, h], is_dual)
    } else {
        select_5589([a, e, c, d, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7659([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_198([a, b, f, e, g, h, d, i], is_dual)
    } else {
        select_266([d, b, c, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_7658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_834([d, b, c, g, f, e, h, i], is_dual)
    } else {
        select_7659([a, b, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7656([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_7657([b, c, d, g, f, i, e, j, h], is_dual)
    } else {
        select_7658([a, e, c, g, h, f, d, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7652([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7653([b, c, a, d, e, f, h, i, g, k, j, l], is_dual)
    } else {
        select_7656([b, g, d, e, a, h, j, f, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7643([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_7644([a, b, d, c, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_7652([d, b, e, a, g, h, i, f, c, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7623([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_7624([a, c, b, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_7643([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7622([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7623([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7623([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_7664([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1372([a, g, h, j, e, i, b, c], !is_dual)
    } else {
        select_70([a, c, d, h, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7663([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5434([a, c, d, b, e, f, g, i, h, j], is_dual)
    } else {
        select_7664([a, c, d, g, f, h, b, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7665([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_3550([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6729([a, b, k, h, n, m, c, l, d, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7662([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7663([a, b, d, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_7665([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_7668([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_139([a, f, e, b, d, g, h, i, j], is_dual)
    } else {
        select_3359([a, b, c, d, g, f, i, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_7669([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_476([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_6256([a, h, i, e, b, c, g, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7667([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_7668([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7669([a, f, h, e, b, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7666([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7667([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_6230([a, b, c, d, g, i, f, j, h, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7661([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_7662([a, b, c, d, e, f, h, g, j, k, i, l, m, n], is_dual)
    } else {
        select_7666([a, b, g, e, f, d, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_7671([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2215([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3024([b, c, g, e, f, i, h, a, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7670([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7671([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_7671([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_7660([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7661([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7670([a, b, d, f, g, h, i, j, e, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7621([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_7622([a, b, c, e, d, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7660([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7556([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_7557([a, b, e, d, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7621([a, b, e, c, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7471([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_7472([a, b, c, e, f, g, h, i, j, k, l, d, m, n], is_dual)
    } else {
        select_7556([a, b, c, e, f, d, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7376([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_7377([a, b, c, d, f, e, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_7471([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_7681([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4067([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1524([a, c, b, d, e, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7680([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2026([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_7681([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7683([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_257([c, d, f, a, e, g, h], is_dual)
    } else {
        select_1448([e, b, a, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7682([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7683([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_5544([e, b, a, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7679([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_7680([f, e, j, k, l, a, h, g, i, d], !is_dual)
    } else {
        select_7682([b, d, a, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7685([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_151([a, h, g, j, e, i, b, c], !is_dual)
    } else {
        select_1464([a, g, h, i, b, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7684([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7685([f, b, g, d, a, h, e, i, j, k], is_dual)
    } else {
        select_4320([b, a, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7678([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_7679([a, b, g, c, e, i, f, j, k, l, h, m], is_dual)
    } else {
        select_7684([a, b, f, d, e, j, h, g, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7687([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3750([f, e, j, h, l, m, a, k, g, i, c], !is_dual)
    } else {
        select_7682([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7688([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6355([a, d, b, e, f, g, c, h, j, i], is_dual)
    } else {
        select_2556([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7686([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_7687([a, c, b, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_7688([f, e, k, l, h, m, a, g, b, j, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7677([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_7678([a, c, b, d, e, f, g, h, j, i, k, m, l], is_dual)
    } else {
        select_7686([a, b, c, g, e, j, f, h, k, l, m, n, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_7676([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7677([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7677([b, c, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_7694([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1039([a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_386([i, j, h, a, f, b, c], !is_dual)
    }
}
/// n = 11, i = 3
fn select_7695([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2297([b, g, d, e, f, a, h, j, i, k], is_dual)
    } else {
        select_668([d, e, b, a, c, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7693([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_7694([a, b, g, d, e, h, i, f, j, k], is_dual)
    } else {
        select_7695([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7692([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_7693([b, c, e, a, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1149([f, h, l, i, n, a, m, k, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7697([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1988([a, b, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7696([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7697([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_7697([a, b, c, e, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7691([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_7692([b, c, a, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7696([h, j, l, f, n, i, a, m, b, k, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7690([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7691([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7691([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_7698([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2407([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2407([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7689([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_7690([a, b, c, e, d, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_7698([a, b, h, n, m, j, l, i, c, d, k], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7675([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_7676([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_7689([a, b, c, d, e, f, h, j, g, i, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_7704([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_673([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1902([e, h, i, j, k, a, g, f, c, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_7703([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7704([a, c, b, i, f, g, j, k, h, l, m], is_dual)
    } else {
        select_6419([a, b, g, d, e, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_7702([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7703([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7703([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_7701([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_7702([a, b, e, d, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_1313([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_7708([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_303([b, d, c, e, a, f, g, h], is_dual)
    } else {
        select_1611([d, b, e, a, c, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_7707([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_249([a, c, d, e, f, g, h], is_dual)
    } else {
        select_7708([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_7709([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_444([a, f, g, b, c], !is_dual)
    } else {
        select_1898([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7706([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7707([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_7709([a, d, e, c, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_7710([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1446([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1988([a, b, d, e, f, c, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7705([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_7706([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_7710([a, b, g, c, j, k, i, d, h, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7700([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_7701([a, b, c, d, e, f, g, h, i, j, l, k, n], is_dual)
    } else {
        select_7705([a, b, c, l, m, h, d, k, j, e, i], !is_dual)
    }
}
/// n = 11, i = 3
fn select_7712([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1192([a, b, c, d, e, h, g, j, i, k], is_dual)
    } else {
        select_1192([a, b, c, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7711([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_7712([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_7712([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7699([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_7700([a, b, c, d, e, f, g, h, j, k, l, m, n, i], is_dual)
    } else {
        select_7711([a, b, c, e, f, g, d, h, j, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7674([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_7675([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    } else {
        select_7699([a, b, c, e, f, d, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_7719([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2271([a, b, c, d, f, h, i, g, j], is_dual)
    } else {
        select_4134([b, a, c, e, f, g, i, j, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_7721([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_519([b, a, d, e, c, f, h, g, i], is_dual)
    } else {
        select_48([a, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7720([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_947([a, b, c, d, h, f, i, g, j], is_dual)
    } else {
        select_7721([c, b, e, a, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7718([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_7719([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_7720([b, d, a, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_7724([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_197([f, b, d, e, a, g, h, i, j], is_dual)
    } else {
        select_3532([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7726([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_38([b, e, c, d, f, g, h], is_dual)
    } else {
        select_212([a, c, b, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7725([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_878([a, c, e, d, b, f, g, h, j], is_dual)
    } else {
        select_7726([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7723([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7724([a, c, b, f, e, h, g, j, i, k], is_dual)
    } else {
        select_7725([a, b, c, g, d, i, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_7728([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_70([a, c, d, f, e, g, h], is_dual)
    } else {
        select_331([a, f, g, i, h, b, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7727([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_7728([a, b, c, h, i, g, f, j, l], is_dual)
    } else {
        select_233([a, c, f, d, e, g, h, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7722([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_7723([a, c, d, b, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_7727([a, h, k, m, n, b, c, l, j, g, i, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7717([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7718([a, b, d, e, c, g, h, k, j, i], is_dual)
    } else {
        select_7722([a, b, c, d, f, e, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_7734([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([a, b, c, i, f, j], is_dual)
    } else {
        select_55([c, d, e, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_7733([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_7734([b, c, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_188([b, h, c, a, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7732([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_250([a, b, k, l, c, j], !is_dual)
    } else {
        select_7733([c, a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7735([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3422([f, a, c, d, h, g, i, j, l], is_dual)
    } else {
        select_1903([k, m, f, l, a, j, e, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7731([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7732([a, i, f, l, m, g, k, j, b, h, c, e], !is_dual)
    } else {
        select_7735([f, i, l, m, g, a, k, b, j, h, c, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7730([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_5438([a, d, f, e, g, h, c, i, j], is_dual)
    } else {
        select_7731([a, b, d, c, e, h, f, i, g, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_7739([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_685([b, c, d, i], is_dual)
    } else {
        select_972([a, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_7740([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_685([a, b, c, h], is_dual)
    } else {
        select_874([a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_7738([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7739([a, b, c, d, g, f, h, i, j, k, l], is_dual)
    } else {
        select_7740([b, c, d, e, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_7743([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_69([a, h, i], is_dual)
    } else {
        select_2661([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7742([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_685([b, c, d, g], is_dual)
    } else {
        select_7743([g, j, f, i, e, h, a, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7741([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7739([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7742([a, b, c, d, g, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7737([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7738([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_7741([a, b, c, d, g, f, i, j, h, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_7746([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1345([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_644([b, g, c, f, a, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7745([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_76([f, k, l, b, a, j, i, c, g], !is_dual)
    } else {
        select_7746([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_7747([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_565([a, g, c, d, e, h, i, j], is_dual)
    } else {
        select_127([a, c, b, e, h, f, i, g, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_7744([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_7745([j, g, i, m, n, e, l, a, k, f, h, b], !is_dual)
    } else {
        select_7747([e, b, c, d, g, f, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7736([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_7737([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_7744([b, e, c, d, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7729([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_7730([a, b, c, d, g, f, h, j, k, i, l, m, n], is_dual)
    } else {
        select_7736([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7716([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7717([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_7729([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_7750([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2016([a, b, c, d, e, f, g, h, j, i, l], is_dual)
    } else {
        select_6273([e, k, g, a, j, f, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7749([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7750([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7750([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7748([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_5199([a, b, l, f, i, c, k, j], !is_dual)
    } else {
        select_7749([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7715([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_7716([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_7748([a, b, g, m, n, c, i, l, k, j, d, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7714([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7715([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7715([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_7756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_132([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_122([f, j, h, a, b, i], !is_dual)
    }
}
/// n = 9, i = 3
fn select_7757([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_618([a, b, c, g, f, e, h, i], is_dual)
    } else {
        select_1448([a, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7755([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_7756([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_7757([c, a, g, e, f, d, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7759([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2421([a, b, e, c, g, f, i, k, l], is_dual)
    } else {
        select_2001([c, f, d, a, b, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7758([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7759([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_7759([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7754([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7755([d, e, b, c, a, g, h, f, i, j, k], is_dual)
    } else {
        select_7758([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1265([a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_685([a, b, i, j], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7765([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2596([a, d, e, f, j, k, l], is_dual)
    } else {
        select_874([b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7763([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_7764([f, i, k, l, h, j, a, g, b, c], !is_dual)
    } else {
        select_7765([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7762([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_7763([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_7765([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_385([a, f, i, j, g, h, b, c, d], !is_dual)
    } else {
        select_385([a, g, i, j, f, h, b, c, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7766([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7767([a, c, g, d, e, h, f, i, k, l], is_dual)
    } else {
        select_5303([a, b, c, f, d, g, i, h, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7761([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_7762([a, h, f, k, l, m, j, g, b, i, c, d], !is_dual)
    } else {
        select_7766([a, b, c, e, d, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_7769([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_287([a, d, b, c, g, f, e, h], is_dual)
    } else {
        select_287([a, d, c, b, g, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7768([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5427([a, c, d, b, e, f, h, g, i], is_dual)
    } else {
        select_7769([a, c, d, g, f, h, b, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_7760([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7761([a, b, c, d, e, f, g, i, j, k, l, h, m], is_dual)
    } else {
        select_7768([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_7753([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_7754([a, h, j, f, l, m, b, k, g, c, i, d], !is_dual)
    } else {
        select_7760([a, c, d, b, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_7774([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_332([a, c, d, e, f, g, h], is_dual)
    } else {
        select_4888([f, j, k, a, i, b, g, h, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7773([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_330([b, a, d, e, f, c, g, h, i, k], is_dual)
    } else {
        select_7774([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7772([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7773([a, i, j, h, l, m, f, k, e, g, b], !is_dual)
    } else {
        select_75([a, c, d, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_7777([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_20([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_5832([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7776([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_564([a, f, b, d, e, g, h, j, i, k], is_dual)
    } else {
        select_7777([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7775([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2565([a, d, b, e, f, g, c, h, i, j], is_dual)
    } else {
        select_7776([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7771([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_7772([a, d, b, c, e, f, g, j, h, i, k, l, m], is_dual)
    } else {
        select_7775([a, j, l, m, h, i, f, g, b, k, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7781([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3327([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_3327([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7782([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_250([h, j, k, d, a, i], !is_dual)
    } else {
        select_3530([d, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7780([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_7781([i, k, l, g, a, b, j, c, h, d, f], !is_dual)
    } else {
        select_7782([i, k, l, g, a, b, j, c, h, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7785([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_52([e, b, c, g, f, h], is_dual)
    } else {
        select_39([i, j, d, a], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7784([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_685([a, i, j, k], !is_dual)
    } else {
        select_7785([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7784([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7784([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7779([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_7780([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7783([b, c, d, e, g, h, i, j, a, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_7788([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_102([a, c, g, e, h, f, j], is_dual)
    } else {
        select_3230([e, k, h, j, i, g, a, b, d, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7790([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_294([a, c, f, d, e, g, h, j], is_dual)
    } else {
        select_294([b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7789([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_618([a, c, g, e, i, h, f, k], is_dual)
    } else {
        select_7790([a, c, b, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7787([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7788([f, b, c, d, a, h, g, i, j, k, l], is_dual)
    } else {
        select_7789([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7786([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_79([a, c, d, g, f, i, j, h], is_dual)
    } else {
        select_7787([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7778([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_7779([a, i, j, f, l, m, g, k, b, h, c, d], !is_dual)
    } else {
        select_7786([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7770([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_7771([a, c, e, d, g, b, h, i, j, f, k, l, m], is_dual)
    } else {
        select_7778([a, c, d, b, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7752([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_7753([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_7770([a, g, j, l, m, c, k, h, b, d, i, e, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7751([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7752([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_7752([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7713([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7714([a, b, c, d, f, g, e, h, j, k, i, l, m, n], is_dual)
    } else {
        select_7751([a, b, c, d, j, m, n, h, l, e, k, f, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7673([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_7674([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_7713([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_7799([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_450([h, i, k, l, a, e, j, f, b, c], !is_dual)
    } else {
        select_316([a, h, c, d, f, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7798([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_7799([b, c, d, e, a, g, h, f, i, j, k, l], is_dual)
    } else {
        select_7297([b, a, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7797([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7798([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_7798([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7800([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1818([a, b, c, h, j, i, d, g], !is_dual)
    } else {
        select_2560([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7796([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_7797([a, b, c, e, d, f, g, h, k, i, j, l], is_dual)
    } else {
        select_7800([a, b, c, d, e, h, i, j, g, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7802([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2797([b, c, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3848([i, a, j, g, b, c, h, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7801([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7802([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_7802([a, b, h, j, k, i, g, f, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7795([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_7796([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_7801([a, b, e, d, h, g, i, k, j, c, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_7805([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_588([a, h, j, k, f, c, b, i], !is_dual)
    } else {
        select_448([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7806([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3515([a, g, i, f, k, b, j, c, h], !is_dual)
    } else {
        select_844([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7804([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7805([a, f, g, j, k, b, i, d, h, e, c], !is_dual)
    } else {
        select_7806([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_7803([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7804([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_7804([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7794([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_7795([a, b, c, d, e, f, g, h, j, i, k, m], is_dual)
    } else {
        select_7803([a, b, c, g, k, l, d, i, j, e, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7812([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_385([a, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1022([a, c, d, e, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_7811([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_559([a, f, i, j, g, b, h, c], !is_dual)
    } else {
        select_7812([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7810([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6732([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7811([a, g, c, e, f, b, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7809([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1494([a, c, d, b, e, g, f, h, i, j], is_dual)
    } else {
        select_7810([a, g, k, m, f, l, i, b, j, c, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7817([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_499([a, c, d, h, f, g, j, k], is_dual)
    } else {
        select_5929([a, b, d, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7816([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_7817([f, d, a, c, h, g, e, j, i, k, l], is_dual)
    } else {
        select_7817([e, c, b, d, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7815([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7816([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4378([a, g, b, d, i, f, h, e, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_7819([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1056([a, e, c, d, g, h, f, i], is_dual)
    } else {
        select_1501([a, d, b, f, g, i, e, h, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_7821([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_453([a, b, d, h, f, g, i], is_dual)
    } else {
        select_453([b, a, c, i, e, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_7820([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1497([c, b, f, d, g, h, i, e, j, k], is_dual)
    } else {
        select_7821([a, e, c, d, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_7818([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_7819([a, g, c, d, i, f, h, e, j, k], is_dual)
    } else {
        select_7820([c, a, d, b, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7814([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_7815([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_7818([c, d, a, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7824([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2542([a, h, d, e, g, f, i, j, k], is_dual)
    } else {
        select_535([a, d, e, b, c, f, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7823([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_7124([a, c, h, e, f, g, b, i, j, k], is_dual)
    } else {
        select_7824([c, b, d, e, f, a, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_7822([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7823([a, b, c, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_777([b, c, d, e, a, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_7813([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_7814([b, c, d, e, f, g, h, i, a, j, k, l], is_dual)
    } else {
        select_7822([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_7808([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_7809([a, j, l, g, n, c, b, m, h, k, d, i, e], !is_dual)
    } else {
        select_7813([a, c, d, e, b, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7807([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7808([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7808([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7793([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_7794([a, b, c, d, l, n, j, m, h, k, e, f, i], !is_dual)
    } else {
        select_7807([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_7832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_820([a, b, d, e, h, i, g, k], is_dual)
    } else {
        select_2495([a, c, b, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7831([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7832([a, b, d, g, e, h, f, k, j, i, l], is_dual)
    } else {
        select_3485([a, c, f, d, e, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7830([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7831([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_2515([b, c, d, i, f, g, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7835([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_820([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_39([a, b, j, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7836([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_82([a, b, i, j, k], is_dual)
    } else {
        select_53([c, e, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7834([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_7835([a, b, c, d, h, g, i, f, j, k], is_dual)
    } else {
        select_7836([a, b, d, e, c, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7837([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_293([c, d, e, a, b, f, h, g, i, j], is_dual)
    } else {
        select_157([a, b, d, f, h, i, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_7834([a, b, d, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_7837([a, b, d, c, h, g, i, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7829([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7830([b, c, d, e, f, g, h, i, a, j, k, l], is_dual)
    } else {
        select_7833([a, b, c, d, e, g, h, i, f, k, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_7840([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5466([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_435([a, f, c, d, i, g, h, e, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_7839([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7840([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_7840([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7838([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7839([a, b, e, c, d, h, f, g, i, k, l], is_dual)
    } else {
        select_1171([a, c, d, b, h, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7828([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_7829([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7838([a, b, d, e, c, h, i, g, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7827([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7828([a, b, e, c, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_7828([a, b, e, d, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_7826([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7827([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_7827([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_7844([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_404([b, c, d, e, a, f, h, g, i], is_dual)
    } else {
        select_748([b, c, d, g, e, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7843([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1687([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7844([a, g, b, j, l, m, k, c, i, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7845([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1462([a, b, g, j, l, c, k, i, d], !is_dual)
    } else {
        select_2582([a, b, g, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7842([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_7843([a, b, g, j, l, m, c, k, i, d, h, e, f], !is_dual)
    } else {
        select_7845([a, b, c, j, l, m, g, k, i, d, h, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7841([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_7842([a, b, c, e, g, f, i, h, j, k, l, m, n], is_dual)
    } else {
        select_3795([a, b, c, k, i, m, n, l, g, d, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7825([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_7826([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7841([a, b, c, f, e, g, h, i, j, k, d, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7792([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_7793([a, b, c, d, e, g, f, h, i, j, l, m, k, n], is_dual)
    } else {
        select_7825([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_7848([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1065([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1065([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7855([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_451([a, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_719([i, k, f, j, a, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7854([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_376([a, b, e, f, h, i, j, g], is_dual)
    } else {
        select_7855([b, c, d, a, e, f, g, i, k, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7856([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_4442([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_820([a, b, f, e, c, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7853([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_7854([a, c, d, e, b, g, f, h, j, k, i], is_dual)
    } else {
        select_7856([c, d, e, f, g, b, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7859([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_205([e, k, l, a, g, i], !is_dual)
    } else {
        select_31([b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7858([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7859([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    } else {
        select_3970([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7860([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5735([i, j, e, a, g, h, b, f], !is_dual)
    } else {
        select_1123([a, e, c, d, g, f, j, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_7857([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7858([a, b, c, d, e, f, g, h, j, k, i, m], is_dual)
    } else {
        select_7860([h, e, l, m, a, k, i, f, b, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7852([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_7853([h, a, k, l, m, e, j, i, b, g, f], !is_dual)
    } else {
        select_7857([h, k, l, m, e, j, i, a, f, b, g, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7864([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_21([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3498([i, j, k, e, a, g, f, h, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7863([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7864([a, d, b, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_812([a, b, c, g, e, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7862([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2395([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_7863([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_7867([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_98([e, a, h, i, d, g], is_dual)
    } else {
        select_453([d, c, b, f, e, g, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_7866([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_185([d, l, m, a, g, k, e, h, b], !is_dual)
    } else {
        select_7867([c, b, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7868([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2232([l, k, g, h, j, d, e, i, a, f], !is_dual)
    } else {
        select_606([g, h, b, c, d, f, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7865([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_7866([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_7868([j, l, m, h, d, k, a, g, i, f, e, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7861([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_7862([h, a, k, m, e, l, f, i, j, b, g], !is_dual)
    } else {
        select_7865([h, k, m, e, j, l, a, f, i, b, g, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7851([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7852([a, b, c, d, e, f, g, h, j, k, m, i, l], is_dual)
    } else {
        select_7861([a, b, c, d, e, f, g, h, i, k, m, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_7871([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1087([e, h, i, a, f, b, g, c, d], !is_dual)
    } else {
        select_6875([f, h, i, a, e, c, g, b, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_7874([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_205([e, c, d, a, f, h], is_dual)
    } else {
        select_314([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_7873([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_70([f, e, i, g, h, a, d], !is_dual)
    } else {
        select_7874([e, a, b, c, h, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7872([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7873([a, b, g, c, e, f, i, h, k], is_dual)
    } else {
        select_816([a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7870([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7871([a, g, b, f, i, e, j, k, h], is_dual)
    } else {
        select_7872([a, c, b, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_7877([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_834([a, d, e, g, f, i, j, h], is_dual)
    } else {
        select_1337([a, b, c, d, h, j, k, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_7878([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_580([a, i, j, e, h, f, g, b, d], !is_dual)
    } else {
        select_580([a, i, j, f, h, e, g, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7876([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7877([d, j, k, h, m, l, i, e, f, g, a], !is_dual)
    } else {
        select_7878([d, b, e, c, f, h, g, l, i, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7879([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_184([d, b, f, c, e, h, g, j, i, l], is_dual)
    } else {
        select_4682([d, m, h, l, k, j, e, i, f, a, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7875([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7876([a, b, c, d, f, e, g, h, j, i, k, l, m], is_dual)
    } else {
        select_7879([a, b, c, d, e, f, g, h, i, l, j, m, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7869([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_7870([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_7875([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7850([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_7851([a, c, d, e, b, g, h, f, i, j, k, m, l], is_dual)
    } else {
        select_7869([a, b, d, e, f, g, c, h, i, j, m, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7849([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_7850([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7850([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7847([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_7848([a, b, c, i, d, l, m, j, g, k, h], !is_dual)
    } else {
        select_7849([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_7887([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_820([g, h, k, d, i, a, f, c], !is_dual)
    } else {
        select_186([g, b, c, e, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7886([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_7887([h, k, l, e, i, j, a, b, g, f, d], !is_dual)
    } else {
        select_1254([b, e, c, d, h, g, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_7889([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([a, b, c, d, e, f, g], is_dual)
    } else {
        select_52([f, e, h, a, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_7888([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_7889([b, e, c, d, f, h, g, i], is_dual)
    } else {
        select_948([h, i, k, f, j, e, b, a, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7885([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7886([a, c, b, d, e, f, g, h, j, i, m, l], is_dual)
    } else {
        select_7888([a, b, c, g, e, h, i, j, k, f, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_7891([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5507([f, h, j, i, e, b, g, c, d], !is_dual)
    } else {
        select_48([h, k, f, j, i, e, b, a], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7890([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_7891([a, b, c, g, e, h, i, j, f, k, m], is_dual)
    } else {
        select_7886([a, c, b, d, e, f, g, h, j, i, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7884([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_7885([g, j, k, m, e, h, l, a, i, f, b, d, c], !is_dual)
    } else {
        select_7890([e, j, k, m, g, h, l, a, i, f, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7893([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_565([a, f, b, c, e, h, g, j], is_dual)
    } else {
        select_240([a, d, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2514([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_7893([a, c, g, b, e, f, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7883([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7884([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_7892([e, j, k, m, a, h, l, f, i, g, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7898([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_382([b, e, d, g, h, i], is_dual)
    } else {
        select_644([a, b, c, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7897([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_7898([g, i, j, k, d, h, e, f, a, c], !is_dual)
    } else {
        select_7480([a, b, c, d, f, g, h, e, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_7900([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_111([f, h, i, d, a, e, c], !is_dual)
    } else {
        select_803([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7899([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7900([j, k, i, f, g, a, b, d, h], !is_dual)
    } else {
        select_97([a, c, e, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7896([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7897([k, i, l, f, a, j, b, h, c, g, e], !is_dual)
    } else {
        select_7899([b, c, d, e, a, f, h, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_7902([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_76([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_812([d, h, i, e, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7903([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_76([e, g, j, a, b, i, h, c, f], !is_dual)
    } else {
        select_237([a, d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7901([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7902([e, h, j, a, b, i, f, c, g], !is_dual)
    } else {
        select_7903([a, b, d, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7895([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_7896([a, b, d, e, c, f, h, g, i, j, k, l], is_dual)
    } else {
        select_7901([b, a, e, g, f, h, c, i, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_7906([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4392([f, i, h, d, e, g, a, c, b], !is_dual)
    } else {
        select_241([f, g, i, d, h, e, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_7907([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5635([f, i, g, d, h, a, b, e, c], !is_dual)
    } else {
        select_380([b, a, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7905([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_7906([h, j, i, f, g, a, c, b, e], !is_dual)
    } else {
        select_7907([h, i, j, f, g, a, c, d, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7904([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5241([c, d, b, e, f, g, i, h, j], is_dual)
    } else {
        select_7905([c, d, b, a, h, g, f, j, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7894([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_7895([a, b, d, c, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_7904([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7882([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_7883([a, b, d, c, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_7894([e, f, j, k, m, a, b, i, l, h, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_7881([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7882([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7882([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7880([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7881([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7881([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7846([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_7847([a, b, c, d, k, m, j, l, e, h, i, g, f], !is_dual)
    } else {
        select_7880([a, b, c, d, j, m, k, l, h, f, e, i, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7791([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_7792([a, b, c, d, f, e, g, i, h, j, l, k, m, n], is_dual)
    } else {
        select_7846([a, b, c, d, m, n, j, l, h, i, e, k, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_7672([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_7673([a, b, c, d, f, h, e, i, g, j, k, l, m, n], is_dual)
    } else {
        select_7791([a, b, c, d, f, h, g, i, e, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7375([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_7376([a, b, c, d, f, g, h, i, j, k, e, l, m, n], is_dual)
    } else {
        select_7672([a, b, c, d, f, g, e, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_7918([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_385([d, e, b, c, f, g, h, j, k], is_dual)
    } else {
        select_156([g, a, h, i, d, e, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_7920([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_38([g, h, i, d, e, f, a], !is_dual)
    } else {
        select_141([d, e, b, c, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_7919([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2973([e, c, d, g, j, k, f, h], is_dual)
    } else {
        select_7920([f, a, b, h, i, e, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7917([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_7918([e, c, d, f, a, i, g, h, k, l, j], is_dual)
    } else {
        select_7919([c, d, a, b, g, e, h, f, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_7923([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([a, c, d, e, f, h, g], is_dual)
    } else {
        select_213([h, i, f, a, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7924([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_61([h, a, b, i, e], is_dual)
    } else {
        select_1103([g, c, d, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7922([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7923([b, c, f, d, e, h, g, i, j], is_dual)
    } else {
        select_7924([j, h, k, l, f, i, a, b, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7926([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_111([a, b, h, j, k, e, l], is_dual)
    } else {
        select_1271([a, e, c, d, g, f, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7925([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3383([e, a, c, d, g, f, i, k, j, h], is_dual)
    } else {
        select_7926([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7921([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_7922([i, k, j, g, m, h, l, a, f, e, c, d], !is_dual)
    } else {
        select_7925([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7916([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_7917([b, a, c, d, e, g, h, i, f, k, j, l], is_dual)
    } else {
        select_7921([a, b, c, d, f, h, i, e, g, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_7928([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3989([a, g, b, h, e, f, j, k], is_dual)
    } else {
        select_5430([e, a, f, c, d, i, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_7931([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_141([e, f, c, d, i, g], is_dual)
    } else {
        select_88([g, a, b, h, e, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_7930([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4028([h, f, e, j, k, a, g, i, b], !is_dual)
    } else {
        select_7931([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_339([b, a, c, d, f, e, g, h, j, i], is_dual)
    } else {
        select_365([a, b, g, f, i, j, h, e, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7929([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_7930([a, f, c, d, e, h, g, j, k, i, l], is_dual)
    } else {
        select_7932([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_7927([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7928([b, a, c, d, e, f, h, i, g, j, l, k], is_dual)
    } else {
        select_7929([a, b, c, d, e, g, h, f, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_7915([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_7916([b, c, d, e, a, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_7927([a, c, d, e, f, b, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_7935([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_5230([a, c, b, e, f, g, d, h, i, j], is_dual)
    } else {
        select_5960([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7934([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7935([a, d, e, f, b, c, g, h, j, i], is_dual)
    } else {
        select_6932([a, b, c, d, e, f, g, i, k, l, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1337([a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_70([a, b, e, g, h, j, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_7939([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2089([f, g, h, a, b, c, e], !is_dual)
    } else {
        select_640([a, d, b, c, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_7937([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_7938([a, c, d, e, b, f, h, i, g, j], is_dual)
    } else {
        select_7939([a, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7941([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_344([a, c, b, g, h, i, f, j], is_dual)
    } else {
        select_6459([b, c, a, d, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_7942([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2458([a, b, c, e, f, g, h, i, j], is_dual)
    } else {
        select_2855([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7941([a, b, e, c, d, f, g, h, j, k], is_dual)
    } else {
        select_7942([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7936([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_7937([a, b, g, c, d, h, f, j, i, k], is_dual)
    } else {
        select_7940([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7933([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_7934([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7936([a, d, e, f, c, g, h, b, i, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_7914([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_7915([f, g, k, l, m, b, i, j, a, c, d, h, e], !is_dual)
    } else {
        select_7933([f, g, k, a, l, m, b, i, j, h, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_7947([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_385([e, g, b, c, i, f, j, k, l], is_dual)
    } else {
        select_1528([f, a, d, h, e, j, g, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7946([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_7947([a, c, d, f, g, h, e, i, j, l, m, k], is_dual)
    } else {
        select_7947([b, c, d, e, g, h, f, i, j, k, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7945([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_7946([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_7929([a, f, c, d, g, h, i, e, j, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_7950([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_660([a, g, b, i, e, f, j, k], is_dual)
    } else {
        select_5285([a, c, d, e, f, g, h, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_7951([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2046([g, b, a, i, f, e, l, k, j, h, m], is_dual)
    } else {
        select_3191([f, e, c, d, h, j, g, k, m, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_7949([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_7950([e, d, b, c, f, h, g, k, j, i, l, m], is_dual)
    } else {
        select_7951([a, d, b, c, e, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7948([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_7921([a, f, c, d, g, h, j, e, i, k, l, m, n], is_dual)
    } else {
        select_7949([a, c, d, b, e, f, h, i, j, k, g, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7944([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7945([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7948([b, c, d, e, a, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_7955([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_618([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_700([e, h, f, g, a, c, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_7954([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6356([b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_7955([j, h, k, l, a, b, g, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_7953([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7935([a, c, d, e, b, g, h, i, l, j], is_dual)
    } else {
        select_7954([a, b, f, c, d, e, g, h, j, k, m, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_7952([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_7953([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_7936([a, c, d, e, g, h, i, b, j, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7943([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_7944([b, c, f, d, e, g, h, i, j, a, k, l, m, n], is_dual)
    } else {
        select_7952([b, c, a, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7913([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_7914([a, b, k, l, n, g, c, m, i, j, h, d, e], !is_dual)
    } else {
        select_7943([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_7961([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_87([a, e, f, d, h, i, j], is_dual)
    } else {
        select_3478([a, c, b, d, f, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_7960([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_119([g, i, k, d, e, a, j, f], !is_dual)
    } else {
        select_7961([b, a, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_7963([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_5164([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4368([a, b, e, g, h, f, d], is_dual)
    }
}
/// n = 11, i = 4
fn select_7964([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1956([a, b, d, e, g, h, i, j], is_dual)
    } else {
        select_4178([a, b, c, e, f, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7962([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_7963([e, k, l, f, j, h, a, b, c], !is_dual)
    } else {
        select_7964([b, c, a, d, f, e, g, i, h, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_7959([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7960([j, i, l, f, h, k, e, a, b, g, c], !is_dual)
    } else {
        select_7962([a, b, d, c, f, e, g, i, j, k, h, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_7967([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5589([c, f, d, e, a, g, h], is_dual)
    } else {
        select_2928([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_7966([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_732([e, a, b, c, h, f, g, j, k, i], is_dual)
    } else {
        select_7967([a, b, d, g, e, f, h, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_7970([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([a, b, f, d, e, g, i], is_dual)
    } else {
        select_55([c, d, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7969([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_203([a, b, c, f, g, e, d, i, h], is_dual)
    } else {
        select_7970([b, c, a, f, g, d, e, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_7968([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6351([c, d, a, e, f, g, b, h, i], is_dual)
    } else {
        select_7969([c, b, d, e, g, a, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7965([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7966([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7968([a, b, d, g, e, i, h, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_7958([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_7959([b, c, e, d, a, g, h, f, i, j, k, l], is_dual)
    } else {
        select_7965([b, c, e, a, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_7974([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_610([b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_2034([a, c, h, g, f, e, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7973([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6351([b, d, f, h, g, e, a, j, i], is_dual)
    } else {
        select_7974([b, c, d, a, e, g, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7972([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7966([a, b, f, d, i, e, j, g, h, k, l], is_dual)
    } else {
        select_7973([a, d, c, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_7977([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2046([j, l, k, h, i, g, a, b, f, e, c], !is_dual)
    } else {
        select_650([b, a, d, g, i, e, k, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_7979([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_381([h, f, i, d, g, a, b, e], !is_dual)
    } else {
        select_34([d, c, f, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_7980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_294([a, e, d, c, g, f, j, i], is_dual)
    } else {
        select_212([h, i, j, e, g, f, a, d, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7978([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7979([e, a, c, h, f, i, j, g, k], is_dual)
    } else {
        select_7980([a, f, b, d, g, e, j, i, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7976([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_7977([e, a, d, b, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_7978([a, f, d, c, h, g, i, e, k, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_7975([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7960([l, h, m, i, j, k, e, g, a, f, b], !is_dual)
    } else {
        select_7976([a, d, c, b, e, g, f, i, h, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_7971([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_7972([b, d, e, a, f, g, c, i, h, j, k, l], is_dual)
    } else {
        select_7975([b, d, c, e, a, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_7957([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7958([f, h, b, c, d, a, j, g, i, l, k, m], is_dual)
    } else {
        select_7971([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_7983([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6427([a, b, c, d, i, g, h, j, k], is_dual)
    } else {
        select_2864([g, c, a, b, e, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_7982([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7983([c, d, e, f, a, b, g, h, i, k, j], is_dual)
    } else {
        select_5984([e, h, a, b, c, d, g, j, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_7987([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1772([c, a, b, e, g, f, i, h], is_dual)
    } else {
        select_5140([a, c, b, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_7986([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1122([a, b, d, f, e, g, i, h], is_dual)
    } else {
        select_7987([a, c, b, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_7990([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_98([j, i, a, h, e, b], !is_dual)
    } else {
        select_235([a, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_7991([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_98([i, h, a, f, d, b], !is_dual)
    } else {
        select_122([g, h, f, a, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_7989([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_7990([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_7991([a, c, f, e, b, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7988([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_249([b, a, d, g, e, i, h], is_dual)
    } else {
        select_7989([a, b, c, d, f, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7985([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7986([b, c, d, g, a, f, h, i, j, k], is_dual)
    } else {
        select_7988([b, c, d, a, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_7995([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_128([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_128([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_7994([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7995([a, c, b, e, f, i, h, g, j], is_dual)
    } else {
        select_1254([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_7996([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, d, c, e, g, f, i], is_dual)
    } else {
        select_700([i, j, d, h, a, e, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_7993([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7994([b, c, d, a, e, g, h, f, i, k], is_dual)
    } else {
        select_7996([b, f, d, e, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_7998([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_629([a, b, c, g, e, f, i, j], is_dual)
    } else {
        select_629([a, b, d, f, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_7997([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2271([a, c, f, d, e, h, g, i, j], is_dual)
    } else {
        select_7998([g, c, a, b, e, i, f, k, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_7992([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_7993([b, d, a, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_7997([b, d, c, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_7984([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_7985([a, d, b, f, e, g, c, h, i, j, k], is_dual)
    } else {
        select_7992([a, b, d, f, c, g, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_7981([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_7982([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7984([g, b, c, d, e, h, j, a, i, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_7956([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_7957([a, d, e, c, f, g, h, i, b, j, k, l, m], is_dual)
    } else {
        select_7981([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7912([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_7913([a, b, c, d, e, f, h, i, k, j, g, l, m, n], is_dual)
    } else {
        select_7956([a, b, c, d, e, f, h, g, i, k, j, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_7911([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_7912([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_7912([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 6
fn select_8000([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5344([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    } else {
        select_5344([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8007([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_120([e, a, b, g, i, f], is_dual)
    } else {
        select_1208([a, c, f, d, e, h, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_8008([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_736([a, b, e, d, g, f, i, h], is_dual)
    } else {
        select_974([a, f, b, c, h, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8006([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_8007([a, b, c, d, g, f, h, e, i, j], is_dual)
    } else {
        select_8008([b, c, d, a, g, e, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8009([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1183([a, c, b, d, e, f, h, g, j], is_dual)
    } else {
        select_1766([b, c, g, a, h, e, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8005([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8006([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_8009([c, a, d, e, f, b, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8004([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3149([a, c, b, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_8005([a, f, e, k, l, b, j, g, c, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8013([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_452([b, c, d, g, e, f, h, i], is_dual)
    } else {
        select_326([h, g, j, b, a, i, e, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_8014([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2677([a, c, d, e, h, f, g, i, j], is_dual)
    } else {
        select_987([a, b, c, g, f, h, e, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8012([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_8013([a, b, c, g, f, i, h, e, j, l], is_dual)
    } else {
        select_8014([a, c, b, d, f, e, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8011([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_8012([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_2107([b, d, e, f, h, c, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_8018([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_186([d, b, f, e, h, j], is_dual)
    } else {
        select_325([a, c, e, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8019([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_499([a, d, b, e, f, i, h, j], is_dual)
    } else {
        select_128([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8017([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_8018([e, k, l, a, h, j, f, i, b, g], !is_dual)
    } else {
        select_8019([a, b, d, c, e, f, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8016([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2670([a, e, c, d, g, h, f, i, j, l], is_dual)
    } else {
        select_8017([d, l, g, m, a, h, k, e, j, i, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8021([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_76([a, g, d, e, i, f, h, j, k], is_dual)
    } else {
        select_1082([a, b, c, h, e, j, g, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_8023([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_626([a, b, c, f, g, e, h, i], is_dual)
    } else {
        select_640([a, c, d, e, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8022([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_8023([b, a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_831([g, i, e, j, a, h, b, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8020([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8021([e, i, k, m, a, l, f, j, b, c, h], !is_dual)
    } else {
        select_8022([a, c, f, d, e, g, i, h, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_8015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8016([e, k, m, a, g, l, b, f, j, i, h, c, d], !is_dual)
    } else {
        select_8020([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_8010([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_8011([e, h, a, m, b, f, k, l, j, i, c, g], !is_dual)
    } else {
        select_8015([e, h, k, m, b, a, f, l, j, i, c, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8003([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8004([a, f, g, m, b, c, j, l, k, i, d, h], !is_dual)
    } else {
        select_8010([a, f, j, m, b, g, l, c, k, i, d, h, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8002([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8003([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_8003([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8029([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2250([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_2960([c, b, d, f, e, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1777([a, b, c, d, f, e, h, i, g, j], is_dual)
    } else {
        select_8029([a, c, b, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8027([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_284([e, a, b, f, d, h, g, i, j, k], is_dual)
    } else {
        select_8028([e, j, h, l, k, f, a, b, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8033([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_3604([b, a, d, f, e, h, g, j, i, k], is_dual)
    } else {
        select_717([b, c, g, f, d, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8032([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2960([e, c, a, d, f, h, i, j, g, k], is_dual)
    } else {
        select_8033([c, a, b, e, f, d, h, g, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8034([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_339([d, c, a, b, f, e, h, i, j, g], is_dual)
    } else {
        select_782([a, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8031([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8032([c, d, b, e, g, f, h, a, i, j, k], is_dual)
    } else {
        select_8034([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_8030([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_284([a, h, i, e, m, b, l, k, f, g], !is_dual)
    } else {
        select_8031([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8026([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_8027([j, i, e, m, a, h, l, b, k, g, f, d], !is_dual)
    } else {
        select_8030([b, a, d, c, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_8025([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8026([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_8026([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_8039([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_81([a, b, c, d, e, f], is_dual)
    } else {
        select_51([a, b, c, g, f, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8038([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_151([a, b, g, j, e, i, h, c], !is_dual)
    } else {
        select_8039([a, b, g, d, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8037([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_6055([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_8038([a, b, d, e, c, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8036([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_8037([a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_417([a, b, g, d, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8041([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_588([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_4516([a, j, h, l, f, k, b, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8045([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_772([f, b, c, d, e, h, g, i], is_dual)
    } else {
        select_4156([f, i, j, k, a, g, h, d, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8044([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6417([a, c, d, e, f, b, g, h, j, k], is_dual)
    } else {
        select_8045([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8043([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_282([a, h, c, b, f, i, g, j], is_dual)
    } else {
        select_8044([a, b, d, e, c, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8042([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2010([a, b, d, g, f, c, h, i, j, k, l, m], is_dual)
    } else {
        select_8043([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8040([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_8041([a, c, g, d, f, i, h, b, j, k, l, m], is_dual)
    } else {
        select_8042([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8035([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8036([a, b, c, d, g, f, i, h, k, j, l], is_dual)
    } else {
        select_8040([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8024([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_8025([a, b, d, e, h, j, g, i, c, k, l, m, n], is_dual)
    } else {
        select_8035([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8001([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_8002([a, b, c, g, h, f, d, i, j, k, l, m, n], is_dual)
    } else {
        select_8024([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7999([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8000([a, b, c, d, g, i, e, k, h, l, j, m, n], is_dual)
    } else {
        select_8001([a, b, c, d, f, e, g, i, h, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7910([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_7911([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_7999([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_8052([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_284([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_222([a, i, f, j, b, c, d, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8053([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_278([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2582([a, b, f, i, j, k, g, h, c, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8051([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8052([a, f, i, k, l, b, j, g, c, h], !is_dual)
    } else {
        select_8053([a, f, i, k, l, b, j, h, d, e, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8057([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_580([a, i, g, f, h, b, e, d, c], !is_dual)
    } else {
        select_580([a, i, h, f, g, b, e, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8056([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5669([a, d, c, b, g, e, h, f, i], is_dual)
    } else {
        select_8057([a, h, i, j, e, g, b, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8059([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_921([g, b, d, e, a, f, h, i, j, k], is_dual)
    } else {
        select_293([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_8058([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_299([a, k, h, m, b, f, i, d, g], !is_dual)
    } else {
        select_8059([a, c, e, b, d, f, g, h, j, l, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_8055([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_8056([a, l, f, m, g, j, k, b, c, h], !is_dual)
    } else {
        select_8058([a, i, l, j, m, g, k, f, h, b, d, c, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8054([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8055([a, i, k, l, m, f, g, j, b, c, h, d, e], !is_dual)
    } else {
        select_6781([a, f, l, m, b, i, g, j, c, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8050([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_8051([a, i, f, l, m, b, j, k, c, g, h, d], !is_dual)
    } else {
        select_8054([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8064([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2889([a, h, i, j, f, b, g, c], !is_dual)
    } else {
        select_4152([a, b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8065([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4545([b, f, c, g, e, a, h, i, j], is_dual)
    } else {
        select_948([a, b, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8063([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_8064([a, h, j, k, g, e, i, b, f, c], !is_dual)
    } else {
        select_8065([a, b, d, c, f, e, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8066([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_728([a, c, f, e, b, g, h], is_dual)
    } else {
        select_1725([a, c, e, b, d, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8062([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8063([a, j, i, l, f, k, b, c, g, h, e], !is_dual)
    } else {
        select_8066([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8070([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_141([a, f, c, d, i, g], is_dual)
    } else {
        select_1224([h, i, f, j, a, g, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8069([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_468([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_8070([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8068([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_222([a, c, b, e, h, g, f, i], is_dual)
    } else {
        select_8069([a, i, g, j, k, e, h, c, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8071([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_728([a, j, e, k, h, i, b], !is_dual)
    } else {
        select_6827([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8067([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8068([a, l, k, i, f, j, b, g, c, e, h], !is_dual)
    } else {
        select_8071([a, i, k, l, f, j, b, c, h, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8061([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8062([a, b, e, f, c, g, d, h, i, j, k, l], is_dual)
    } else {
        select_8067([a, b, e, f, d, g, c, h, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3070([a, b, c, g, h, i, f, j, k], is_dual)
    } else {
        select_1595([b, c, d, e, a, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8076([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_97([a, c, d, e, f, i, h, k], is_dual)
    } else {
        select_1953([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8074([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8075([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_8076([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8078([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_50([g, i, f, j, a, b, h, c], !is_dual)
    } else {
        select_161([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8077([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8078([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_8078([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8073([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_8074([a, b, d, e, c, f, g, h, i, k, j], is_dual)
    } else {
        select_8077([a, b, c, e, f, g, i, j, l, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_8080([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_95([a, b, c, d, e, f, g], is_dual)
    } else {
        select_32([a, h, g, e, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8079([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_728([a, h, i, e, g, f, b], !is_dual)
    } else {
        select_8080([a, b, c, d, e, g, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8072([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_8073([a, b, c, f, e, d, g, h, j, k, i, l], is_dual)
    } else {
        select_8079([a, i, j, k, b, g, d, f, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8060([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8061([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8072([a, b, c, e, d, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8049([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8050([a, b, c, e, d, f, h, g, i, k, j, l, m], is_dual)
    } else {
        select_8060([a, f, k, m, l, i, b, g, h, d, j, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8086([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2288([e, k, h, j, f, a, i, b, g], !is_dual)
    } else {
        select_144([e, c, b, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8085([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8086([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_5467([a, c, d, e, b, f, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8087([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4365([f, b, c, e, a, g, h, i, j, l, k], is_dual)
    } else {
        select_3411([a, b, d, c, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8084([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8085([a, j, i, l, m, g, k, b, f, h, d], !is_dual)
    } else {
        select_8087([a, i, j, l, m, g, k, b, h, c, f, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8089([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_202([a, c, b, e, i, g, f, j, h], is_dual)
    } else {
        select_732([a, b, f, c, d, h, i, g, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8091([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_660([a, d, c, e, f, g, h, i], is_dual)
    } else {
        select_1484([g, h, j, a, i, b, e, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8093([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_700([h, i, d, f, a, b, e], !is_dual)
    } else {
        select_32([b, d, c, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8092([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_618([a, b, e, d, f, h, g, j], is_dual)
    } else {
        select_8093([a, b, c, g, e, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8090([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8091([a, b, c, d, f, e, g, h, i, k], is_dual)
    } else {
        select_8092([a, h, k, j, i, e, g, f, b, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8088([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8089([a, c, d, b, e, f, h, i, g, j, k], is_dual)
    } else {
        select_8090([a, h, k, l, i, j, b, c, f, g, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8083([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_8084([a, b, d, e, c, g, h, f, j, i, k, m, l], is_dual)
    } else {
        select_8088([a, i, j, l, m, h, k, b, c, g, f, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8097([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_491([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_812([e, i, j, g, a, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8096([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7601([a, b, d, c, e, f, h, g, i, j, k], is_dual)
    } else {
        select_8097([e, h, j, k, a, i, b, f, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8099([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1418([j, g, d, k, h, i, a], !is_dual)
    } else {
        select_1798([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8100([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_185([g, h, k, e, d, i, f, b, c], !is_dual)
    } else {
        select_725([g, j, k, d, e, i, h, a, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8098([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8099([h, k, l, g, j, a, b, f, i, c, e], !is_dual)
    } else {
        select_8100([g, k, l, a, h, j, b, f, i, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8095([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8096([f, b, c, e, a, g, i, h, j, k, l], is_dual)
    } else {
        select_8098([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8101([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1942([a, b, c, f, e, g, h, j, k, i], is_dual)
    } else {
        select_836([a, b, k, h, l, j, i, c, f, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8094([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_8095([a, i, l, m, h, b, j, c, k, f, g, d], !is_dual)
    } else {
        select_8101([a, b, c, e, d, g, f, i, h, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8082([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_8083([a, c, b, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_8094([a, b, c, d, e, f, g, i, j, l, k, m, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_8081([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8050([a, b, c, d, g, h, f, i, k, m, j, n, l], is_dual)
    } else {
        select_8082([a, b, f, c, e, j, g, h, l, m, n, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_8048([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_8049([a, f, c, h, d, b, i, g, k, j, m, n, l], is_dual)
    } else {
        select_8081([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_8107([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_876([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_86([a, i, f, j, b, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8110([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_51([a, g, d, e, j, l], is_dual)
    } else {
        select_940([a, b, c, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8109([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2772([c, g, e, a, f, i, h, j], is_dual)
    } else {
        select_8110([b, c, e, a, d, f, h, g, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8112([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_141([a, b, e, h, j, k], is_dual)
    } else {
        select_252([c, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8111([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8112([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_1073([d, e, g, f, a, i, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_8108([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_8109([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_8111([h, i, k, a, l, m, g, j, b, c, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8106([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8107([a, j, k, i, m, g, f, c, b, h], !is_dual)
    } else {
        select_8108([a, c, d, e, b, f, g, i, j, h, l, m, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_8116([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_68([a, b, g, h, i], is_dual)
    } else {
        select_719([a, c, e, d, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8115([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1333([a, b, d, f, h, j, g, k], is_dual)
    } else {
        select_8116([a, g, c, e, i, l, h, f, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8118([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_213([i, j, f, a, g, d, b], !is_dual)
    } else {
        select_213([h, j, g, a, f, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8117([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8118([a, b, c, g, e, i, f, k, j, l], is_dual)
    } else {
        select_629([f, a, b, d, h, g, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8114([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8115([a, b, c, d, e, f, g, h, j, k, l, i], is_dual)
    } else {
        select_8117([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8120([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1605([a, b, d, c, f, h, i, j, k, l], is_dual)
    } else {
        select_84([b, c, a, e, g, h, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_8121([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_120([a, c, e, d, g, f], is_dual)
    } else {
        select_5337([e, g, h, a, b, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8119([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_8120([a, b, d, e, c, f, h, g, i, j, k, l], is_dual)
    } else {
        select_8121([b, a, d, g, h, c, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_8114([b, c, e, d, f, g, h, i, a, j, k, l], is_dual)
    } else {
        select_8119([b, a, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8105([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8106([a, b, d, c, e, f, i, h, j, l, k, m, g], is_dual)
    } else {
        select_8113([a, c, d, e, b, f, g, i, j, l, h, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8124([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5154([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_66([f, j, g, c, a, b, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8126([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1605([b, c, a, e, f, h, i, k, g, l], is_dual)
    } else {
        select_5805([j, k, h, l, m, f, g, i, a, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8127([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_166([i, h, j, f, g, a, c, e, d], !is_dual)
    } else {
        select_376([b, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_8125([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8126([b, c, d, e, a, f, g, i, h, k, j, l, m], is_dual)
    } else {
        select_8127([i, j, l, m, g, f, a, b, c, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8123([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_8124([i, k, l, m, f, a, g, b, d, h], !is_dual)
    } else {
        select_8125([i, j, k, l, m, f, g, h, a, c, d, b, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_8131([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([e, c, d, f, h, g], is_dual)
    } else {
        select_71([e, a, b, g, i, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_8130([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_170([i, h, k, a, f, d, e], !is_dual)
    } else {
        select_8131([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_8132([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_110([d, e, f, i, a, g, b], !is_dual)
    } else {
        select_2007([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_8129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8130([c, a, b, e, f, d, g, h, j, k, i], is_dual)
    } else {
        select_8132([k, l, g, a, b, h, i, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8135([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1265([a, c, d, e, g, f, i, j, k], is_dual)
    } else {
        select_235([h, e, j, k, a, i, f, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8134([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8135([a, c, b, e, f, i, g, j, k, l, m], is_dual)
    } else {
        select_3088([b, f, d, g, h, e, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8136([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_451([a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_39([a, b, l, j], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8133([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8134([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_8136([h, i, j, l, m, f, k, a, b, g, c, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8128([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8129([i, j, l, k, f, m, g, h, e, a, b, c], !is_dual)
    } else {
        select_8133([a, b, d, c, e, g, f, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_8122([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8123([i, j, l, k, m, g, f, h, a, b, c, d, e], !is_dual)
    } else {
        select_8128([b, d, c, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_8104([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_8105([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_8122([a, j, k, l, m, h, g, i, b, c, d, e, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8140([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_646([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_6694([e, i, j, a, b, f, h, c, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8142([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2183([b, a, c, f, d, g, h, e, i], is_dual)
    } else {
        select_634([d, h, i, e, f, g, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8141([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2343([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8142([f, j, k, a, b, h, i, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8139([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_8140([a, b, c, d, f, h, i, g, j, k], is_dual)
    } else {
        select_8141([a, b, c, e, d, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8138([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8139([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_8139([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8147([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_700([i, j, g, h, a, b, c], !is_dual)
    } else {
        select_640([b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8146([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4376([i, j, l, f, h, a, c, d, g], !is_dual)
    } else {
        select_8147([b, d, c, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8148([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_68([e, j, a, c, h], !is_dual)
    } else {
        select_562([b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8145([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8146([a, b, d, e, c, f, g, h, i, k, l, j], is_dual)
    } else {
        select_8148([a, b, c, d, f, h, k, j, l, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_8151([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_803([a, c, b, e, f, h, i, j], is_dual)
    } else {
        select_487([b, a, d, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8150([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4137([i, h, j, f, e, g, a, b, c], !is_dual)
    } else {
        select_8151([b, c, a, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8152([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_97([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_710([e, i, j, h, f, a, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8149([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8150([b, d, e, a, f, g, h, j, l, i], is_dual)
    } else {
        select_8152([a, c, e, d, f, g, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8144([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8145([a, c, d, f, e, b, g, i, j, k, h, l], is_dual)
    } else {
        select_8149([b, c, d, f, e, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8156([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1212([a, g, c, d, e, f, h, k, j], is_dual)
    } else {
        select_1212([b, f, c, d, e, g, h, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8155([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8156([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_393([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8154([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8155([a, b, e, c, d, f, g, i, h, l, k], is_dual)
    } else {
        select_2635([c, d, e, a, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8158([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_67([a, b, f, g, c, j], is_dual)
    } else {
        select_701([a, b, d, c, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_71([a, c, f, d, h, g], is_dual)
    } else {
        select_702([h, k, f, j, i, a, e, b, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8159([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8160([i, k, l, h, j, a, f, b, g, d, c], !is_dual)
    } else {
        select_8160([h, k, l, i, j, a, g, b, f, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8157([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8158([a, c, b, d, g, h, j, k, l, f], is_dual)
    } else {
        select_8159([a, c, d, b, e, f, g, i, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_8153([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_8154([h, k, a, l, j, m, f, g, i, d, c, b], !is_dual)
    } else {
        select_8157([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8143([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8144([a, b, d, c, f, e, g, h, i, j, l, k], is_dual)
    } else {
        select_8153([a, d, e, c, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_8137([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_8138([a, b, j, m, k, l, g, i, c, h, e], !is_dual)
    } else {
        select_8143([a, b, e, d, c, f, g, i, h, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8103([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8104([a, b, c, h, d, e, i, g, j, l, k, m, n], is_dual)
    } else {
        select_8137([a, b, k, n, m, l, j, i, h, c, d, g, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8102([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8103([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    } else {
        select_8103([a, b, c, e, d, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8047([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_8048([a, b, d, f, e, h, j, i, c, k, g, m, l, n], is_dual)
    } else {
        select_8102([a, b, d, c, e, f, g, h, j, k, i, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8046([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8047([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_8047([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7909([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_7910([a, b, c, d, e, g, f, h, j, i, k, n, l, m], is_dual)
    } else {
        select_8046([a, b, c, d, e, f, g, h, i, j, l, n, m, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8167([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1906([a, b, g, c, h, i, j, f], is_dual)
    } else {
        select_2030([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8170([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_5354([a, d, g, e, f, b, h, j, k, l], is_dual)
    } else {
        select_7724([a, c, d, b, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1416([a, e, h, f, j, i, b, g], !is_dual)
    } else {
        select_661([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8169([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8170([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_8171([a, j, k, l, b, f, g, c, i, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_8173([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_311([a, c, d, e, g, f, h], is_dual)
    } else {
        select_110([a, f, g, i, h, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8172([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1914([a, i, j, g, h, e, b], !is_dual)
    } else {
        select_8173([a, b, c, d, e, g, f, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8168([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_8169([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8172([a, b, k, l, j, f, g, i, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8166([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_8167([a, b, d, c, f, g, e, h, i, j], is_dual)
    } else {
        select_8168([a, b, d, e, f, c, g, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_8177([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6983([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6983([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8176([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_8177([a, b, g, i, j, k, h, d, e, c, f], !is_dual)
    } else {
        select_281([a, b, i, j, k, g, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8178([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1878([a, c, d, e, b, g, f, h, i], is_dual)
    } else {
        select_2631([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8175([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_8176([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_8178([a, b, g, i, j, k, c, d, h, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8174([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8175([a, b, c, d, e, h, i, j, g, k, l], is_dual)
    } else {
        select_6984([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8165([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_8166([a, b, d, c, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_8174([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_3738([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_865([a, b, d, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8184([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1874([a, e, j, f, k, b, h, g], !is_dual)
    } else {
        select_4514([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8183([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2342([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_8184([a, j, f, l, b, g, k, i, d, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8182([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8183([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_8183([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8180([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8181([a, b, c, f, d, g, e, h, i, j, k], is_dual)
    } else {
        select_8182([a, b, c, f, e, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_8187([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1842([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1842([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8186([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8187([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_2420([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8185([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_8186([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_2426([a, b, c, h, i, d, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_8179([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8180([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_8185([a, b, c, f, d, h, j, i, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_8164([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8165([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_8179([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8193([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_222([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_5115([a, c, b, g, f, e, j, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8194([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_384([a, c, b, g, f, i, e, h, j], is_dual)
    } else {
        select_222([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8192([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_8193([a, d, c, e, f, b, g, h, j, i], is_dual)
    } else {
        select_8194([a, d, b, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_8196([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_559([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_561([a, b, d, e, c, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_8195([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_478([a, b, c, e, f, h, g, i], is_dual)
    } else {
        select_8196([a, b, c, d, g, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8191([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8192([a, b, c, e, d, g, h, i, f, j], is_dual)
    } else {
        select_8195([a, c, d, e, b, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8190([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8191([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_8191([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8200([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3720([b, c, d, f, e, i, g, h, j], is_dual)
    } else {
        select_3751([j, k, i, g, f, c, b, a, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_8202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2472([a, b, c, d, f, h, i, j, g], is_dual)
    } else {
        select_1344([b, c, e, a, d, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_8203([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_452([g, i, h, a, f, e, d, c], !is_dual)
    } else {
        select_2007([h, i, g, a, f, d, e, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8201([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8202([b, c, d, e, a, f, g, i, h, j], is_dual)
    } else {
        select_8203([j, k, i, g, f, a, b, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8199([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8200([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_8201([a, c, b, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8198([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8199([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_8199([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8205([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1593([a, c, b, d, e, f, g, i, j, h], is_dual)
    } else {
        select_1598([a, b, d, c, f, i, h, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_8204([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8205([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_8205([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8197([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_8198([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_8204([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8189([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_8190([a, b, c, e, f, h, d, i, j, k], is_dual)
    } else {
        select_8197([a, b, c, e, f, d, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_8210([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2109([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_2109([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_8211([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_86([a, e, f, g, b, c, d], !is_dual)
    } else {
        select_1114([a, e, b, g, f, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_8209([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_8210([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_8211([a, b, d, g, c, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1192([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8209([a, b, c, d, e, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_233([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4842([a, f, c, d, e, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_8215([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_589([b, c, h, d, f, a, g, i], is_dual)
    } else {
        select_6419([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8213([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_8214([a, f, j, k, l, b, g, c, i, d, h], !is_dual)
    } else {
        select_8215([a, c, d, b, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8212([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8213([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_8213([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8207([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8208([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8212([a, b, c, e, d, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8217([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2342([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_7394([a, j, f, k, l, b, g, i, d, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8216([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8217([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_8217([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8206([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8207([a, b, c, f, d, g, e, h, i, j, k, l], is_dual)
    } else {
        select_8216([a, b, c, f, e, g, d, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8188([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_8189([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_8206([a, b, c, e, d, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8163([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_8164([a, b, c, i, k, d, m, l, e, f, j, h], !is_dual)
    } else {
        select_8188([a, b, c, e, f, d, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_8225([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6734([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_96([b, g, d, e, f, a, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8224([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8225([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_845([f, g, j, h, k, a, i, b, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8223([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8224([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1375([g, h, j, f, l, m, a, k, b, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8222([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_320([g, f, h, j, l, m, a, k, b, c, i], !is_dual)
    } else {
        select_8223([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_8229([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4328([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_1088([a, f, h, e, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8228([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1295([g, i, l, f, m, e, a, j, h], !is_dual)
    } else {
        select_8229([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_167([b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_1231([h, j, k, d, g, a, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8233([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_167([b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_763([a, e, c, f, d, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8231([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_8232([a, b, c, e, g, f, d, j, h, k, i], is_dual)
    } else {
        select_8233([b, a, c, g, e, d, f, j, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_8235([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4706([a, b, c, i, f, h, g, j, l, k], is_dual)
    } else {
        select_230([a, c, d, e, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8234([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4640([l, m, g, h, f, a, j, b, i], !is_dual)
    } else {
        select_8235([b, c, a, d, e, f, h, g, i, k, m, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8230([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8231([l, m, g, f, h, j, k, a, b, c, i], !is_dual)
    } else {
        select_8234([a, c, b, d, e, f, h, g, i, k, l, m, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_8227([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8228([g, b, d, e, f, a, h, i, k, l, j, m, n], is_dual)
    } else {
        select_8230([a, b, c, d, e, f, h, g, i, j, l, k, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_8237([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1084([a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3024([i, k, l, a, g, j, b, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8239([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1290([i, g, j, l, e, k, f, a, b], !is_dual)
    } else {
        select_560([g, a, c, d, e, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8241([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_238([b, d, e, f, g, h, i], is_dual)
    } else {
        select_626([a, b, h, c, i, g, f, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_8242([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, c, a, e, f, g, i], is_dual)
    } else {
        select_487([a, d, e, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_8240([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8241([f, b, a, d, e, i, g, h, k, l], is_dual)
    } else {
        select_8242([a, c, h, b, f, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8238([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8239([g, c, d, e, a, f, i, h, j, k, l, m], is_dual)
    } else {
        select_8240([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8236([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8237([a, f, h, c, d, e, g, i, j, l, k, m], is_dual)
    } else {
        select_8238([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8226([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_8227([b, c, d, e, f, a, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_8236([b, a, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8221([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8222([g, m, n, k, l, a, b, h, i, d, j, c, f], !is_dual)
    } else {
        select_8226([a, b, c, e, d, f, g, h, i, k, l, j, n, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_8247([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2137([d, b, c, f, h, k, i], is_dual)
    } else {
        select_1241([a, d, i, e, g, j, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8246([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3559([a, b, c, d, e, i, j, l, h], is_dual)
    } else {
        select_8247([b, a, c, e, f, d, g, i, h, k, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8245([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8246([c, a, f, e, d, b, h, i, g, k, l, j], is_dual)
    } else {
        select_8246([c, b, e, f, d, a, g, i, h, j, l, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8250([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1143([a, c, d, e, h, g, i, k], is_dual)
    } else {
        select_736([i, j, k, h, e, f, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8252([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_368([e, b, c, d, f, g, h, j, i, l], is_dual)
    } else {
        select_5787([f, a, c, d, e, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8251([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8252([b, a, c, d, f, e, g, h, j, k, i, l], is_dual)
    } else {
        select_6050([k, e, l, f, i, j, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8249([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8250([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_8251([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8255([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_186([a, c, d, i, j, k], is_dual)
    } else {
        select_48([b, e, a, d, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_8256([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_98([b, c, e, g, f, h], is_dual)
    } else {
        select_820([g, i, k, d, j, a, f, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_8254([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_8255([f, b, c, d, e, g, h, j, i, k, l], is_dual)
    } else {
        select_8256([j, m, l, f, i, k, h, a, b, g, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8258([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_626([a, b, g, c, i, h, f, k], is_dual)
    } else {
        select_1224([b, d, e, f, h, j, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8260([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_30([c, d, e, g], is_dual)
    } else {
        select_89([a, b, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8259([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_345([g, b, c, a, f, i, j, h], is_dual)
    } else {
        select_8260([b, c, a, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8257([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8258([a, b, g, d, c, f, h, j, i, k, l], is_dual)
    } else {
        select_8259([b, c, d, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8253([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8254([b, c, d, e, f, a, g, h, j, i, k, l, m], is_dual)
    } else {
        select_8257([a, c, e, d, f, b, g, h, i, j, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8248([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_8249([a, b, f, c, d, h, i, j, l, g, m, k], is_dual)
    } else {
        select_8253([a, c, d, f, e, b, g, h, j, k, i, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8244([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8245([a, b, c, e, d, f, g, h, j, i, k, l], is_dual)
    } else {
        select_8248([a, b, c, f, d, e, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_8263([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_249([a, c, d, e, f, h, g], is_dual)
    } else {
        select_120([a, b, c, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8266([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_61([a, h, b, i, e], is_dual)
    } else {
        select_235([a, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_8265([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_531([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_8266([a, f, c, d, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8267([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2344([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_561([f, i, e, j, g, h, b, a], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8264([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8265([a, d, b, c, e, f, g, h, i, k], is_dual)
    } else {
        select_8267([a, b, f, c, e, g, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8262([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_8263([g, e, l, i, k, a, h, j, b], !is_dual)
    } else {
        select_8264([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8261([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_6066([a, b, c, d, e, f, h, g, i, j, k, m], is_dual)
    } else {
        select_8262([a, b, d, c, e, f, g, h, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8243([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_8244([a, b, c, e, d, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_8261([g, m, l, n, a, k, h, j, c, b, d, f, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8220([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_8221([a, b, d, c, f, e, g, i, j, k, h, l, n, m], is_dual)
    } else {
        select_8243([a, b, d, c, f, e, g, h, i, k, j, m, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8219([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8220([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_8220([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8218([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8219([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_8219([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8162([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_8163([a, b, c, d, m, l, n, j, i, e, f, k, g], !is_dual)
    } else {
        select_8218([a, b, c, d, f, g, e, h, i, j, k, n, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_8276([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_81([a, h, i, k, j, b], !is_dual)
    } else {
        select_3697([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_191([b, h, c, d, e, g, i], is_dual)
    } else {
        select_8276([h, i, k, l, f, j, a, b, c, g, e], !is_dual)
    }
}
/// n = 7, i = 2
fn select_8278([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_98([e, b, a, g, d, f], is_dual)
    } else {
        select_22([b, a, c, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8277([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_74([b, g, c, d, e, h, i], is_dual)
    } else {
        select_8278([i, g, k, f, j, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8275([a, c, d, e, b, f, g, h, k, i, j, l], is_dual)
    } else {
        select_8277([a, b, c, d, e, f, h, i, j, g, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_8282([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_453([g, c, d, h, f, e, j], is_dual)
    } else {
        select_2898([d, e, a, b, f, i, g, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_8281([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8282([c, d, b, a, e, f, h, i, g, j], is_dual)
    } else {
        select_48([a, e, c, d, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8280([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_8281([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_382([a, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8285([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_238([a, c, d, g, e, h, j], is_dual)
    } else {
        select_993([a, h, b, e, f, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8284([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8285([b, a, c, d, f, e, g, h, k, i, j], is_dual)
    } else {
        select_376([j, k, g, f, e, b, a, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8283([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8284([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_8284([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8279([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8280([a, b, c, d, e, f, g, h, i, k, l], is_dual)
    } else {
        select_8283([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8273([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8274([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8279([b, c, d, e, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8288([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2088([a, g, h, j, c, d, e], !is_dual)
    } else {
        select_806([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8287([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_8288([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_7199([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8286([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8287([a, f, c, d, e, g, h, i, j, l], is_dual)
    } else {
        select_371([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8272([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_8273([a, c, d, e, f, b, h, g, i, j, k, l], is_dual)
    } else {
        select_8286([a, b, d, e, f, g, c, h, i, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8294([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1265([a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_7575([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8295([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_122([a, h, b, e, f, j], is_dual)
    } else {
        select_48([e, b, c, d, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_8294([a, f, b, c, e, g, i, j, h, k], is_dual)
    } else {
        select_8295([a, d, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8292([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3042([g, a, b, h, f, i, e, k, l], is_dual)
    } else {
        select_8293([a, c, d, b, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_382([i, e, j, a, f, h], !is_dual)
    } else {
        select_31([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8297([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_8298([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_356([a, g, f, e, b, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8297([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_121([e, j, a, b, f, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8291([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8292([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_8296([a, e, c, d, g, j, h, f, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8301([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1513([h, a, b, i, e, f, g, j], is_dual)
    } else {
        select_3378([e, f, g, c, d, h, j, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_8303([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_216([a, d, b, c, f, g, e], is_dual)
    } else {
        select_26([d, e, g, b], is_dual)
    }
}
/// n = 8, i = 3
fn select_8302([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_67([b, a, d, e, g, h], is_dual)
    } else {
        select_8303([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_8301([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8302([g, i, e, k, a, h, j, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4490([h, f, j, e, i, a, b, g], !is_dual)
    } else {
        select_95([b, e, c, d, f, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8299([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8300([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_8304([f, g, c, d, a, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8290([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_8291([b, c, d, e, a, g, f, h, i, j, k, l], is_dual)
    } else {
        select_8299([b, a, d, e, g, f, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8307([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_980([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_5233([f, i, e, j, k, a, g, b, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8308([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_97([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_3115([e, j, h, a, i, f, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8306([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8307([e, i, k, l, a, f, h, j, g, c, d], !is_dual)
    } else {
        select_8308([e, f, k, l, a, i, j, h, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8311([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_234([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_251([f, h, a, j, k, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8310([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_564([f, e, j, i, k, a, g, h, c, d], !is_dual)
    } else {
        select_8311([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8312([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1701([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1879([b, a, d, c, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8309([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_8310([a, f, c, d, e, g, j, h, k, i, l], is_dual)
    } else {
        select_8312([e, i, l, g, k, a, j, f, h, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8305([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8306([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_8309([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8289([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_8290([b, a, d, e, f, g, c, h, i, j, l, k], is_dual)
    } else {
        select_8305([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8271([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8272([a, f, j, i, l, m, b, g, k, c, h, d], !is_dual)
    } else {
        select_8289([a, f, i, j, l, m, b, k, c, h, g, e], !is_dual)
    }
}
/// n = 11, i = 3
fn select_8317([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_765([a, c, e, d, h, f, g, i, j], is_dual)
    } else {
        select_1166([a, f, b, g, i, e, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8319([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2414([a, f, b, d, g, h, e, j, k, i], is_dual)
    } else {
        select_2414([a, e, c, d, g, h, f, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8318([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7051([a, f, c, d, e, h, g, j, i, k, l], is_dual)
    } else {
        select_8319([a, c, g, b, e, i, f, k, j, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8316([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_8317([b, d, e, a, f, g, c, h, i, j, k], is_dual)
    } else {
        select_8318([b, d, c, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_8322([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1257([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_998([b, a, e, d, c, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_8321([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8322([a, b, c, i, d, g, j, h, k], is_dual)
    } else {
        select_778([a, b, c, e, f, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_8320([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2614([a, h, b, d, c, e, j, l, i, m], is_dual)
    } else {
        select_8321([a, c, e, f, b, d, g, h, i, k, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_8315([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_8316([d, a, e, f, c, h, g, i, b, k, j, m], is_dual)
    } else {
        select_8320([a, c, d, b, e, f, h, i, g, k, j, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_8326([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2567([a, e, b, c, h, i, g, j], is_dual)
    } else {
        select_152([a, b, d, f, g, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8325([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1803([a, e, d, g, b, f, i, j, h], is_dual)
    } else {
        select_8326([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8324([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8325([a, b, e, d, g, f, i, j, k, h], is_dual)
    } else {
        select_8325([b, a, f, c, h, e, j, i, k, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_8330([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_304([j, k, l, a, g, i, b], !is_dual)
    } else {
        select_63([c, d, e, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_8329([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1156([h, c, d, e, f, a, i, k, l], is_dual)
    } else {
        select_8330([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8328([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4665([a, i, c, b, g, j, h, k, l], is_dual)
    } else {
        select_8329([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8327([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8328([a, c, e, b, d, f, g, h, i, k, l, j], is_dual)
    } else {
        select_2614([a, h, b, d, c, f, j, m, i, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8323([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_8324([a, d, c, f, i, g, b, h, j, k, l], is_dual)
    } else {
        select_8327([a, c, d, b, f, e, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8314([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8315([b, c, a, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_8323([a, c, b, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_8335([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6471([b, f, c, e, a, h, g, j, k], is_dual)
    } else {
        select_816([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8334([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8335([a, b, f, c, h, e, j, i, k, g, l], is_dual)
    } else {
        select_1683([a, b, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_8337([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_501([a, f, g, i, d, h, e, c], !is_dual)
    } else {
        select_3845([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_8339([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([a, e, c, d, f, h, g], is_dual)
    } else {
        select_88([a, g, b, h, e, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_8338([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_70([g, h, b, a, e, f, j], is_dual)
    } else {
        select_8339([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8336([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8337([d, h, k, g, i, e, a, f, c], !is_dual)
    } else {
        select_8338([d, k, g, j, i, a, e, h, b, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8333([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_8334([e, i, l, m, j, k, a, g, f, h, b, d], !is_dual)
    } else {
        select_8336([i, j, m, a, f, k, e, g, h, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8342([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_440([a, c, d, b, e, f, g, i], is_dual)
    } else {
        select_185([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8341([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1874([a, b, c, e, g, j, h, i], is_dual)
    } else {
        select_8342([a, b, h, d, i, f, g, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_8344([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1812([a, b, c, e, d, g, h, f, i], is_dual)
    } else {
        select_3102([h, d, i, e, f, g, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8343([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_3001([e, g, d, i, f, h, a, b], !is_dual)
    } else {
        select_8344([a, b, c, e, d, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8340([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8341([a, b, d, e, c, f, h, g, i, k, j], is_dual)
    } else {
        select_8343([k, l, g, h, a, c, d, j, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8332([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_8333([a, c, b, d, f, e, g, i, j, h, l, k, m], is_dual)
    } else {
        select_8340([f, j, e, k, m, l, h, g, a, i, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8347([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3001([a, b, c, g, e, i, k, l], is_dual)
    } else {
        select_833([a, b, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_8349([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_250([a, h, i, e, b, g], !is_dual)
    } else {
        select_250([a, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_8350([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_81([d, e, a, c, f, g], is_dual)
    } else {
        select_3530([b, a, c, d, e, g, h, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_8348([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8349([a, b, d, e, h, j, g, i, k], is_dual)
    } else {
        select_8350([k, l, h, a, i, b, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8346([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_8347([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_8348([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5832([c, b, d, e, a, f, g, h, i, k], is_dual)
    } else {
        select_1385([c, a, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8352([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([b, g, c, d, a, i, h], is_dual)
    } else {
        select_8353([a, b, e, c, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8355([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2413([g, d, k, e, h, i, a, b, f], !is_dual)
    } else {
        select_4377([b, a, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8357([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_212([i, j, g, h, f, a, e, b, d], !is_dual)
    } else {
        select_213([f, a, c, g, e, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8356([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8357([a, b, e, d, f, h, i, j, g, l], is_dual)
    } else {
        select_4377([d, a, c, h, g, e, i, f, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8354([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_8355([e, b, d, a, f, h, g, i, k, j, m], is_dual)
    } else {
        select_8356([a, c, b, d, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8351([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_8352([g, i, e, l, m, j, a, k, f, h, b], !is_dual)
    } else {
        select_8354([a, c, b, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8345([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8346([e, j, k, g, m, f, l, h, i, a, b, c], !is_dual)
    } else {
        select_8351([a, c, b, d, e, f, g, i, j, h, l, m, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8331([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_8332([b, a, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_8345([b, c, d, e, g, a, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8313([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_8314([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_8331([b, c, d, h, e, g, i, j, k, a, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8270([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8271([a, g, j, m, n, b, k, l, c, d, i, e, h], !is_dual)
    } else {
        select_8313([a, b, c, d, f, e, g, i, j, k, h, m, l, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_8363([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_770([a, c, e, f, b, d, g, i, h, j], is_dual)
    } else {
        select_408([a, b, c, d, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8364([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1351([a, c, d, b, e, g, f, i, h], is_dual)
    } else {
        select_8065([a, b, c, d, h, g, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8362([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8363([a, b, c, d, e, f, h, g, i, j, l], is_dual)
    } else {
        select_8364([a, g, c, f, e, b, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_8365([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1174([a, b, d, f, c, e, g, h, i, k, j], is_dual)
    } else {
        select_566([a, b, c, e, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_8361([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_8362([a, b, e, d, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_8365([a, b, e, c, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8368([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2865([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_512([c, d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8155([a, b, c, d, e, f, g, i, h, k, j], is_dual)
    } else {
        select_512([c, d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8367([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8368([a, d, b, e, f, g, c, h, i, j], is_dual)
    } else {
        select_8369([a, d, c, e, f, g, b, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8366([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8367([b, c, d, e, a, f, g, i, h, j, k], is_dual)
    } else {
        select_6362([b, c, d, e, f, h, i, a, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8360([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8361([a, b, c, e, d, f, g, h, i, k, j, m], is_dual)
    } else {
        select_8366([a, e, b, d, f, c, h, j, k, l, i], is_dual)
    }
}
/// n = 7, i = 1
fn select_8374([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2592([a, c, d, e, f, g], is_dual)
    } else {
        select_251([a, b, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_8373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_249([a, d, b, c, i, j, h], is_dual)
    } else {
        select_8374([a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_8372([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_8373([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_244([a, e, c, d, i, b, j, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8377([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_234([g, b, d, e, a, f, h, i, j], is_dual)
    } else {
        select_773([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8376([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([a, f, b, c, g, i, h], is_dual)
    } else {
        select_8377([a, d, e, b, c, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8380([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([a, b, f, d, e, g, i], is_dual)
    } else {
        select_487([d, c, e, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_8379([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_20([c, b, a, d, f, e, h, g, i], is_dual)
    } else {
        select_8380([g, b, c, a, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8378([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8379([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_8379([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8375([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_8376([a, d, e, c, f, b, g, h, i, j], is_dual)
    } else {
        select_8378([a, d, e, f, b, g, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_8371([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_8372([a, b, d, e, f, c, g, i, h, j, k], is_dual)
    } else {
        select_8375([a, b, f, d, e, h, c, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2307([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_226([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_8385([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1870([a, c, b, d, e, f, h, g], is_dual)
    } else {
        select_629([f, h, e, i, a, g, c, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8384([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4039([b, c, a, d, f, e, h, g], is_dual)
    } else {
        select_8385([f, e, h, i, a, b, g, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8382([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8383([b, c, d, a, e, f, g, i, h, j], is_dual)
    } else {
        select_8384([b, c, h, d, i, a, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8381([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8382([a, b, e, c, f, g, d, h, i, j, k], is_dual)
    } else {
        select_8382([a, b, e, d, f, g, c, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8370([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8371([a, d, c, b, e, f, g, h, i, k, j], is_dual)
    } else {
        select_8381([a, c, b, d, e, f, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8359([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8360([a, b, c, d, e, f, g, i, j, h, l, k, m], is_dual)
    } else {
        select_8370([a, d, b, e, f, g, c, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_8391([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_812([b, c, d, f, i, g, j], is_dual)
    } else {
        select_734([a, c, d, b, e, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8393([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_71([a, b, h, c, j, f], is_dual)
    } else {
        select_942([a, b, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8392([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_565([a, b, e, f, i, h, l, j], is_dual)
    } else {
        select_8393([a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8390([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8391([c, b, d, e, f, a, g, h, j, i, k], is_dual)
    } else {
        select_8392([b, a, c, f, d, e, h, i, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8396([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_141([a, b, c, h, j, f], is_dual)
    } else {
        select_118([a, f, d, e, i, g, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8395([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_565([a, b, e, f, i, h, k, j], is_dual)
    } else {
        select_8396([a, c, d, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8394([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8391([c, b, d, e, f, a, g, h, j, i, l], is_dual)
    } else {
        select_8395([b, a, c, f, d, e, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8389([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8390([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_8394([a, c, d, e, f, g, b, h, i, j, l, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_8400([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1224([d, i, g, h, e, a, f, c], !is_dual)
    } else {
        select_304([e, g, h, d, f, b, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_8401([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_205([b, c, d, e, f, g], is_dual)
    } else {
        select_88([f, g, h, a, e, c, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8399([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_8400([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_8401([d, e, h, i, g, a, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8398([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8399([j, k, i, a, b, g, c, e, h], !is_dual)
    } else {
        select_310([a, b, d, f, g, i, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_8402([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_80([a, f, c, e, b, h, g], is_dual)
    } else {
        select_1367([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_8398([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_8402([a, b, e, g, f, d, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_8388([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_8389([a, c, d, f, b, e, g, i, h, k, j, m], is_dual)
    } else {
        select_8397([a, b, f, e, c, d, i, j, k, l, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8406([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3580([b, a, c, e, h, g, i, j, f], is_dual)
    } else {
        select_156([g, j, a, f, e, h, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_8408([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_68([i, f, e, a, b], !is_dual)
    } else {
        select_644([b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5178([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_8408([a, b, c, f, e, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8406([a, b, f, c, e, i, h, j, k, g], is_dual)
    } else {
        select_8407([a, c, b, d, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8404([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_7075([b, a, c, e, i, f, h, g, k, j, l], is_dual)
    } else {
        select_8405([b, c, d, a, f, g, h, i, j, e, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8411([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4167([b, c, a, e, h, g, i, f, j], is_dual)
    } else {
        select_1622([a, e, c, d, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_8410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_728([b, d, e, a, f, g, i], is_dual)
    } else {
        select_8411([a, c, b, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8413([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_834([g, b, c, e, f, h, i, j], is_dual)
    } else {
        select_6208([h, g, i, l, k, d, j, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_213([a, e, g, f, d, j, k], is_dual)
    } else {
        select_892([b, c, d, f, e, h, i, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_8416([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_803([g, b, c, e, f, i, j, h], is_dual)
    } else {
        select_940([a, e, f, d, h, i, k, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8414([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8415([a, f, b, d, e, h, i, g, j, k, l], is_dual)
    } else {
        select_8416([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8412([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_8413([b, d, a, e, f, c, g, h, j, i, k, l], is_dual)
    } else {
        select_8414([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8409([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8410([b, a, c, g, e, h, j, f, k, i, l], is_dual)
    } else {
        select_8412([b, c, d, a, e, f, h, i, g, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8403([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8404([c, d, e, b, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8409([c, d, e, a, f, g, b, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8387([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8388([b, c, a, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_8403([b, c, f, e, d, i, j, a, h, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_8422([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_685([a, g, h, i], !is_dual)
    } else {
        select_1536([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8423([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_292([b, a, f, e, h, i, j], is_dual)
    } else {
        select_23([c, d, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_8421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_8422([h, j, i, f, g, b, c, d, e], !is_dual)
    } else {
        select_8423([b, a, c, d, f, g, h, e, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8425([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_111([h, e, j, f, a, i, b], !is_dual)
    } else {
        select_815([c, d, a, b, f, e, h, g, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_8424([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6226([f, a, c, d, e, h, i, g, k, j, m], is_dual)
    } else {
        select_8425([e, b, c, d, f, g, i, j, h, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8420([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8421([f, a, b, c, g, e, i, j, l, h, m], is_dual)
    } else {
        select_8424([a, d, b, c, e, f, h, i, j, k, l, m, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_8428([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_98([b, c, e, g, f, h], is_dual)
    } else {
        select_562([h, i, j, g, d, e, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8429([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2348([a, b, f, c, e, g, i, j, h, k], is_dual)
    } else {
        select_128([b, c, d, g, e, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8427([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_8428([j, i, l, g, e, k, a, c, b, h], !is_dual)
    } else {
        select_8429([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8431([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_167([a, c, h, f, g, e, i, j], is_dual)
    } else {
        select_764([b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8430([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6333([a, c, d, e, f, i, h, g, k], is_dual)
    } else {
        select_8431([b, a, d, c, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8426([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_8427([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8430([b, a, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8419([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8420([b, a, c, d, e, f, g, i, h, k, j, l, m], is_dual)
    } else {
        select_8426([g, k, l, m, j, i, e, a, f, b, h, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_8433([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_7175([b, c, d, a, e, h, g, f, i], is_dual)
    } else {
        select_1095([b, c, f, e, a, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_8435([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_444([e, g, d, a, h], !is_dual)
    } else {
        select_4815([b, c, a, e, f, d, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_8434([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8435([a, d, c, b, e, f, g, i, h], is_dual)
    } else {
        select_1015([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8432([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8433([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_8434([a, b, d, c, e, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_8418([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8419([a, b, c, d, e, f, g, h, j, k, l, m, i], is_dual)
    } else {
        select_8432([g, m, k, e, i, j, f, a, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_74([a, c, d, e, f, g, j], is_dual)
    } else {
        select_1956([h, i, j, a, f, c, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8438([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1517([a, c, d, f, b, e, h, g, i], is_dual)
    } else {
        select_8439([a, c, b, d, e, h, i, g, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_8441([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_495([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_83([b, h, g, a, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_8440([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_8441([b, c, e, a, f, d, g, h], is_dual)
    } else {
        select_7164([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8437([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8438([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_8440([a, g, c, d, f, b, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8445([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1536([a, b, f, d, g, h, e, i], is_dual)
    } else {
        select_993([h, j, i, d, g, a, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8444([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2634([e, a, c, d, f, h, i, g, j], is_dual)
    } else {
        select_8445([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8443([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8155([b, d, c, a, e, f, g, h, j, i, k], is_dual)
    } else {
        select_8444([i, k, l, g, a, j, b, c, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8442([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8443([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_329([a, c, e, f, b, d, g, h, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8436([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_8437([i, j, k, f, l, m, d, h, e, g, b], !is_dual)
    } else {
        select_8442([f, k, l, m, i, j, d, h, g, a, e, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8417([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8418([a, b, c, d, e, f, g, i, k, h, j, l, m], is_dual)
    } else {
        select_8436([b, d, c, e, f, g, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8386([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8387([a, c, e, b, f, d, g, j, h, i, k, l, m], is_dual)
    } else {
        select_8417([a, k, m, n, b, l, c, i, j, d, e, h, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8358([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_8359([a, c, b, e, d, f, g, h, i, k, j, l, n], is_dual)
    } else {
        select_8386([a, b, d, c, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8269([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_8270([a, c, d, e, f, g, h, j, i, b, k, l, m, n], is_dual)
    } else {
        select_8358([a, c, d, e, b, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8268([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8269([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_8269([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8161([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_8162([a, b, c, d, f, g, e, h, j, k, l, i, m, n], is_dual)
    } else {
        select_8268([a, b, c, d, f, e, h, g, j, i, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7908([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_7909([a, b, c, d, f, g, h, i, j, k, e, l, n, m], is_dual)
    } else {
        select_8161([a, b, c, d, f, e, g, h, i, k, j, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_7374([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7375([a, b, c, d, e, h, g, i, f, k, j, l, m, n], is_dual)
    } else {
        select_7908([a, b, c, d, e, h, f, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_8458([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_355([b, c, d, e, a, f, g, i, h, j], is_dual)
    } else {
        select_304([h, b, c, a, f, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8457([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_8458([a, c, d, b, e, g, f, h, i, j, k], is_dual)
    } else {
        select_1932([a, f, c, d, b, h, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8456([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8457([a, d, b, c, e, g, h, i, f, j, k], is_dual)
    } else {
        select_6581([a, b, c, d, e, f, g, i, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_8460([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_257([a, c, d, b, e, f, g], is_dual)
    } else {
        select_51([a, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8459([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2215([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8460([a, b, f, d, e, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8456([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_8459([a, d, c, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8462([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5497([b, a, c, d, g, e, f, h, j, i], is_dual)
    } else {
        select_6232([j, e, k, f, a, g, i, b, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8461([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1473([a, d, c, e, f, b, g, h, i, j, l], is_dual)
    } else {
        select_8462([a, d, b, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8454([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8455([a, c, d, e, b, f, h, g, i, k, j], is_dual)
    } else {
        select_8461([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_8467([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_626([a, f, b, c, g, e, h, i], is_dual)
    } else {
        select_626([a, e, b, d, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8466([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5449([c, d, e, b, f, a, g, i, h], is_dual)
    } else {
        select_8467([c, d, a, e, b, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8465([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4803([k, l, h, a, g, f, b, i], !is_dual)
    } else {
        select_8466([c, a, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8470([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_803([j, k, i, e, d, a, b, g], !is_dual)
    } else {
        select_993([a, d, c, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8469([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3934([i, j, g, e, h, a, d, f, c], !is_dual)
    } else {
        select_8470([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8468([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8469([c, a, d, b, e, f, g, h, j, i, k], is_dual)
    } else {
        select_8469([c, b, d, a, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8464([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8465([b, c, d, a, e, f, g, i, h, l, j, k], is_dual)
    } else {
        select_8468([b, g, c, d, f, h, a, j, k, l, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8473([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_642([j, k, h, g, f, a, b, i], !is_dual)
    } else {
        select_5065([b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_8475([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_111([a, c, d, e, g, f, h], is_dual)
    } else {
        select_803([h, i, g, e, d, a, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8474([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_121([e, h, f, a, d, g, c], !is_dual)
    } else {
        select_8475([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8472([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8473([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    } else {
        select_8474([b, c, h, g, f, a, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8471([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8472([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6067([a, c, g, d, f, b, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8464([a, c, b, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_8471([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8453([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8454([a, c, d, e, b, f, h, i, g, j, l, k], is_dual)
    } else {
        select_8463([a, c, b, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_8480([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5507([d, a, c, e, g, h, f, i, k], is_dual)
    } else {
        select_1953([g, j, h, k, d, i, e, a, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8481([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_81([a, f, h, i, b, g], !is_dual)
    } else {
        select_5045([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8479([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8480([k, l, j, e, i, h, a, b, f, c, g], !is_dual)
    } else {
        select_8481([e, j, i, k, a, b, g, d, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8483([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2951([h, j, k, g, d, e, i, a, f, b], !is_dual)
    } else {
        select_3690([a, c, b, d, f, e, g, h, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8482([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8483([j, l, k, e, i, h, a, b, f, c, g], !is_dual)
    } else {
        select_4126([a, b, d, h, e, k, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8478([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8479([b, c, d, a, e, h, g, i, f, k, l, j], is_dual)
    } else {
        select_8482([a, b, d, c, e, h, f, i, g, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8486([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_710([a, b, d, e, h, f, j, g], is_dual)
    } else {
        select_152([a, c, b, f, e, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_8487([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_6003([e, c, d, a, f, g, h], is_dual)
    } else {
        select_4428([b, c, d, a, g, e, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8485([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_8486([a, b, c, g, f, j, e, h, i, k], is_dual)
    } else {
        select_8487([a, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8489([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1605([a, c, b, d, e, f, h, i, g, j], is_dual)
    } else {
        select_4167([a, c, b, g, h, e, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8488([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2476([a, c, b, g, f, h, j, e, k, i], is_dual)
    } else {
        select_8489([a, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8484([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8485([a, b, d, c, e, h, g, i, j, f, l], is_dual)
    } else {
        select_8488([c, b, d, a, e, h, f, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8477([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8478([c, b, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8484([c, d, a, e, f, g, b, h, i, j, l, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_8493([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1417([d, e, h, i, f, g, a, b], !is_dual)
    } else {
        select_1417([d, f, h, i, e, g, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8492([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_732([d, h, j, g, k, i, e, b, a, f], !is_dual)
    } else {
        select_8493([b, c, e, h, d, g, f, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8491([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8492([i, k, l, a, f, j, b, c, g, d, h], !is_dual)
    } else {
        select_3146([a, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_642([j, k, h, f, e, a, b, i], !is_dual)
    } else {
        select_1751([b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8495([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_8474([b, c, h, f, e, a, j, k, i], is_dual)
    } else {
        select_8496([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8498([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4312([b, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_1094([i, k, l, e, g, j, a, b, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8499([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3748([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_356([a, b, g, d, h, j, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_8497([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_8498([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_8499([a, f, d, e, b, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8494([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_8495([c, b, a, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_8497([b, c, d, e, f, a, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8490([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8491([a, b, d, c, e, f, g, h, j, i, l, k], is_dual)
    } else {
        select_8494([a, b, d, c, e, f, h, i, j, k, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8476([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8477([a, b, d, c, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_8490([b, a, d, c, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8452([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_8453([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8476([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_8504([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4922([b, c, a, g, e, f, h, i, k, j], is_dual)
    } else {
        select_4922([a, c, b, h, d, f, g, j, k, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_8503([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_5061([i, f, l, m, b, a, j, c, k, g, h], !is_dual)
    } else {
        select_8504([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8505([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1910([a, c, b, d, e, f, g, i, h], is_dual)
    } else {
        select_2032([e, i, f, k, a, b, j, c, h, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_8502([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_8503([a, b, c, e, d, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_8505([a, b, c, d, f, i, k, g, l, j, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_8509([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2405([g, j, k, l, e, h, i, a, b, c], !is_dual)
    } else {
        select_84([g, b, c, d, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8511([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_685([b, c, g, h], is_dual)
    } else {
        select_3931([a, d, b, c, e, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8512([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_719([a, f, e, i, h, j, k], is_dual)
    } else {
        select_53([g, d, b, c, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8510([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_8511([g, j, k, l, e, i, a, h, f, d], !is_dual)
    } else {
        select_8512([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8508([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8509([a, b, f, d, e, g, h, i, k, l, m, j], is_dual)
    } else {
        select_8510([a, b, g, c, e, f, h, j, k, l, m, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8513([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_249([h, d, j, k, e, a, i], !is_dual)
    } else {
        select_2576([d, e, b, c, g, f, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_8507([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_8508([a, c, d, b, e, g, f, h, j, i, k, l, m], is_dual)
    } else {
        select_8513([a, b, c, j, e, k, h, l, f, i, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_8516([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_250([j, g, l, f, a, b], !is_dual)
    } else {
        select_802([b, c, d, f, e, g, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8517([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2492([a, b, f, e, h, j, i, l, g], is_dual)
    } else {
        select_933([e, c, g, d, f, i, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8515([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_8516([a, b, c, d, f, h, g, i, e, j, k, l], is_dual)
    } else {
        select_8517([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_8520([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_453([b, d, a, e, g, f, i], is_dual)
    } else {
        select_487([a, c, f, e, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8519([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_886([a, f, d, g, e, j, h], is_dual)
    } else {
        select_8520([a, b, e, c, h, f, i, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8522([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2348([b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_91([a, b, c, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8521([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_8522([a, b, c, e, d, f, h, i, j, g, k], is_dual)
    } else {
        select_5157([a, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8518([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8519([d, b, c, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_8521([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8514([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8515([a, g, c, d, e, h, i, f, j, l, k, m], is_dual)
    } else {
        select_8518([e, f, b, c, d, h, g, k, j, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8506([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8507([b, c, d, e, a, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_8514([a, c, d, e, f, b, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8501([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8502([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_8506([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_8526([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4516([a, d, e, c, f, g, h, j, i], is_dual)
    } else {
        select_3025([a, b, c, d, h, i, k, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8529([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1596([a, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_803([e, k, l, f, j, a, b, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8528([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8529([a, b, c, d, e, f, g, h, j, k, l, m], is_dual)
    } else {
        select_1073([c, f, d, e, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_212([g, h, j, e, i, a, b, c, f], !is_dual)
    } else {
        select_314([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_8530([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_933([e, k, f, m, l, a, b, h], !is_dual)
    } else {
        select_8531([a, c, f, d, e, g, i, j, h, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8527([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_8528([e, k, l, m, h, g, j, i, b, a, f, c, d], !is_dual)
    } else {
        select_8530([g, k, l, m, e, h, j, i, a, b, c, f, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8525([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8526([e, f, b, c, d, h, g, k, j, i, l, n], is_dual)
    } else {
        select_8527([g, a, c, d, e, h, i, f, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8524([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8507([a, c, d, e, b, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_8525([b, c, d, e, f, a, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_8535([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_886([b, c, a, e, d, g, f], is_dual)
    } else {
        select_102([a, e, b, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8536([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1381([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_358([a, b, f, h, e, g, d, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_8535([d, i, j, a, h, e, f, g, c], !is_dual)
    } else {
        select_8536([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8533([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_8012([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_8534([h, e, l, b, a, j, k, i, f, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8532([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_8533([i, f, n, m, a, l, j, b, g, c, k, d], !is_dual)
    } else {
        select_8503([b, a, c, e, d, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8523([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8524([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_8532([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8500([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_8501([c, a, b, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_8523([a, c, d, e, f, g, h, b, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8451([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_8452([k, h, l, g, n, b, c, a, m, d, e, j], !is_dual)
    } else {
        select_8500([b, c, d, e, a, f, h, g, i, k, j, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_8543([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6648([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_289([a, j, k, e, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8542([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_80([a, k, l, e, i, b, j], !is_dual)
    } else {
        select_8543([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8546([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_292([g, a, b, e, d, i, j], is_dual)
    } else {
        select_940([a, d, c, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8545([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2930([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_8546([b, f, d, a, e, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8544([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_222([a, k, l, e, i, b, j, f], !is_dual)
    } else {
        select_8545([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8541([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8542([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_8544([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_8547([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_8028([a, c, b, d, f, e, g, h, i, j], is_dual)
    } else {
        select_1794([a, b, c, f, g, h, j, k, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_8540([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_8541([a, b, c, d, e, f, g, i, j, l, h, k], is_dual)
    } else {
        select_8547([a, b, c, g, e, h, j, k, i, f, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8539([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8540([a, d, b, e, f, c, g, h, i, j, l, k], is_dual)
    } else {
        select_8540([a, d, c, e, f, b, g, h, i, k, l, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8551([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5009([a, b, c, g, f, e, h, i, j], is_dual)
    } else {
        select_1448([a, c, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_8552([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_5009([a, b, d, c, f, e, g, h, i], is_dual)
    } else {
        select_186([a, d, e, f, c, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8550([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_8551([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8552([a, b, c, g, e, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8555([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_933([a, h, b, c, g, f, i, j], is_dual)
    } else {
        select_6459([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_8554([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8555([a, c, e, b, g, f, h, i, k, j], is_dual)
    } else {
        select_8555([a, b, d, c, h, f, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_8553([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8554([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_8554([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8549([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_8550([j, l, m, i, a, b, g, c, k, d], !is_dual)
    } else {
        select_8553([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8560([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_167([a, b, d, e, h, f, i, g], is_dual)
    } else {
        select_2755([a, c, b, f, g, i, e, j, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_8561([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_700([b, c, d, e, f, g, h], is_dual)
    } else {
        select_61([f, a, c, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8559([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_8560([b, c, d, a, g, f, e, h, i, j], is_dual)
    } else {
        select_8561([b, d, e, g, a, h, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_4186([b, c, d, f, e, a, g, h, i, j], is_dual)
    } else {
        select_8559([a, b, c, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8557([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_8558([a, c, d, b, f, g, e, i, h, j], is_dual)
    } else {
        select_1442([a, h, j, i, g, f, b, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8556([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_8557([a, b, c, d, g, f, h, i, e, j], is_dual)
    } else {
        select_8557([a, c, b, d, g, e, h, i, f, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8548([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_8549([b, c, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_8556([j, l, m, i, b, c, g, a, d, k], !is_dual)
    }
}
/// n = 13, i = 5
fn select_8538([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_8539([a, c, d, e, h, g, i, b, j, l, m, k], is_dual)
    } else {
        select_8548([a, c, d, e, b, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_8568([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2755([a, e, c, d, f, h, g, j, k], is_dual)
    } else {
        select_213([a, b, g, d, i, e, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_497([b, a, c, d, f, g, e, h, i, l, j], is_dual)
    } else {
        select_8568([e, b, d, a, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8566([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_222([e, c, b, g, h, i, f, j], is_dual)
    } else {
        select_8567([e, i, l, m, j, g, k, a, h, c, f, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8565([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_8542([e, i, l, m, h, j, k, a, b, g, f, c], !is_dual)
    } else {
        select_8566([a, c, b, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_8572([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_213([f, a, c, h, d, g, k], is_dual)
    } else {
        select_1029([i, k, j, h, f, g, a, d, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8571([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7497([a, c, b, e, d, h, f, i, g, j], is_dual)
    } else {
        select_8572([a, c, b, d, e, h, g, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8570([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8571([h, k, j, g, i, a, f, e, b, d, c], !is_dual)
    } else {
        select_6447([h, e, j, k, g, f, a, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8569([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8570([a, b, d, g, e, f, j, k, h, i, l], is_dual)
    } else {
        select_1794([e, i, j, k, a, f, g, c, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8564([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8565([a, c, b, d, e, h, g, i, j, f, l, k, m], is_dual)
    } else {
        select_8569([b, a, c, d, e, h, f, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8563([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_8540([e, k, f, m, j, i, l, g, a, b, c, h], !is_dual)
    } else {
        select_8564([a, c, b, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8562([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_8563([j, l, k, n, a, c, b, m, d, g, e, i, h], !is_dual)
    } else {
        select_8548([a, c, d, e, b, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8537([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8538([d, b, c, e, a, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_8562([a, b, c, e, d, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8450([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_8451([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_8537([b, c, d, a, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_8581([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_304([e, i, j, f, h, a, d], !is_dual)
    } else {
        select_4156([e, d, b, c, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8580([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8581([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_176([f, h, i, j, a, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8579([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3043([e, b, d, a, f, g, h, i, j], is_dual)
    } else {
        select_8580([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8583([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_8429([a, b, c, d, f, g, e, h, j, i, k], is_dual)
    } else {
        select_5053([e, d, c, a, g, f, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8584([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1744([d, a, c, b, e, f, h, i, g], is_dual)
    } else {
        select_2411([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8582([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_8583([a, b, d, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_8584([a, b, f, d, h, g, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8578([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_8579([h, k, j, l, a, e, f, b, c, i], !is_dual)
    } else {
        select_8582([a, b, d, c, e, g, f, h, j, i, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_8588([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_235([h, d, j, k, f, g, a, c], !is_dual)
    } else {
        select_702([i, h, j, k, f, d, g, a, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8589([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1596([b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_304([e, k, l, a, g, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8587([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8588([a, b, d, h, f, g, e, i, j, k, l], is_dual)
    } else {
        select_8589([i, j, l, m, g, h, k, d, f, b, c, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8586([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8587([k, n, m, j, i, l, f, e, a, b, g, h, c], !is_dual)
    } else {
        select_565([a, e, d, i, f, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8591([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_939([h, j, i, l, k, a, e, g, c, d], !is_dual)
    } else {
        select_152([a, b, d, h, f, g, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8593([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_215([a, c, d, f, g, h], is_dual)
    } else {
        select_1781([b, c, d, e, h, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8592([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1772([i, j, g, h, a, e, f, b], !is_dual)
    } else {
        select_8593([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_8590([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8591([a, b, c, d, e, f, g, h, j, i, l, m], is_dual)
    } else {
        select_8592([b, c, a, g, e, i, h, j, f, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_8585([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8586([b, a, d, c, e, f, h, g, j, i, l, m, k, n], is_dual)
    } else {
        select_8590([a, b, g, d, i, f, h, e, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8577([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_8578([e, l, m, n, i, j, f, a, k, b, g, h], !is_dual)
    } else {
        select_8585([b, a, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_8596([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_980([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_66([f, b, h, e, i, a, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_8597([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_4665([g, j, i, e, h, f, d, a, c], !is_dual)
    } else {
        select_3960([i, g, d, j, k, e, h, f, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8595([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8596([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_8597([c, b, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8600([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_20([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_1385([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8599([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8600([c, d, e, a, b, f, h, g, i, k], is_dual)
    } else {
        select_2327([a, b, e, c, d, f, h, i, g, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8603([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3604([a, b, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_22([a, c, h, d, g, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8602([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8603([a, c, b, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_6118([a, e, c, d, h, f, i, g, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_8605([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_88([d, j, k, a, e, g, b], !is_dual)
    } else {
        select_892([b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8606([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_382([h, a, f, d, j, k], is_dual)
    } else {
        select_5322([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8604([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8605([a, f, c, d, h, e, i, g, j, k, l], is_dual)
    } else {
        select_8606([c, a, b, e, d, f, i, g, k, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8601([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8602([a, d, b, e, f, c, g, h, i, k, j, l], is_dual)
    } else {
        select_8604([a, d, c, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8598([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8599([a, b, c, d, e, g, f, h, i, k, j, l], is_dual)
    } else {
        select_8601([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8594([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_8595([a, f, k, l, b, h, j, i, c, g, d], !is_dual)
    } else {
        select_8598([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8576([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8577([a, b, d, c, e, g, i, h, j, f, l, m, k, n], is_dual)
    } else {
        select_8594([e, a, c, f, d, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_8610([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8583([a, b, d, c, e, g, f, h, j, i, k], is_dual)
    } else {
        select_988([a, b, c, h, e, i, f, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_8611([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4484([d, i, k, g, j, e, b, a, h], !is_dual)
    } else {
        select_6273([b, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8609([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_8610([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_8611([e, i, l, a, h, k, f, j, b, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8614([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1730([j, i, k, l, g, e, h, a, f, d, b], !is_dual)
    } else {
        select_3998([a, f, c, d, g, e, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8613([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_947([h, a, b, d, e, i, g, k, j], is_dual)
    } else {
        select_8614([b, c, a, g, e, f, h, j, k, l, i, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8615([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_249([c, e, a, d, f, g, h], is_dual)
    } else {
        select_876([a, b, c, d, g, f, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8612([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_8613([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_8615([k, e, i, m, l, a, h, j, f, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8608([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_8609([i, m, n, k, h, e, j, a, b, l, g, d], !is_dual)
    } else {
        select_8612([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8618([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1634([e, c, a, b, f, g, i, j, h, k], is_dual)
    } else {
        select_510([g, a, b, h, d, e, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8617([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8618([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6249([e, c, b, f, i, g, a, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_8622([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_38([a, b, c, h, e, g, j], is_dual)
    } else {
        select_453([c, g, d, e, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_8621([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8622([b, c, a, d, e, f, g, h, j, i], is_dual)
    } else {
        select_5157([b, c, a, f, h, g, i, j, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_8620([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8621([a, b, c, d, e, f, i, g, h, j], is_dual)
    } else {
        select_8621([a, b, c, d, e, f, i, h, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_8624([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5683([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_99([c, g, f, a, i, d], is_dual)
    }
}
/// n = 10, i = 3
fn select_8623([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8624([a, b, f, d, e, i, g, j, h], is_dual)
    } else {
        select_2079([g, a, h, c, d, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8619([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8620([b, a, c, d, e, g, h, i, f, j], is_dual)
    } else {
        select_8623([b, d, c, e, g, f, h, i, a, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8616([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_8617([a, b, d, c, f, g, h, i, j, e, k, l], is_dual)
    } else {
        select_8619([b, c, a, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_8607([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_8608([a, b, d, c, f, h, g, j, k, e, i, l, m, n], is_dual)
    } else {
        select_8616([a, c, e, d, f, i, h, k, j, g, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8575([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8576([c, a, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_8607([c, b, d, e, a, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_8630([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2747([a, b, c, d, f, h, i, j, g, k], is_dual)
    } else {
        select_2747([a, b, c, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8629([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8630([a, b, d, c, e, f, g, h, i, k, l], is_dual)
    } else {
        select_1115([a, b, c, e, g, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8628([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_8629([e, a, b, c, f, g, j, h, k, i, l, m], is_dual)
    } else {
        select_1121([a, b, d, h, j, e, i, f, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_8632([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1813([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_2253([e, f, i, g, a, b, h, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8635([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_215([a, d, e, h, g, f], is_dual)
    } else {
        select_1238([b, c, f, h, i, j, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_8634([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8635([b, a, e, c, h, f, j, k, i, l], is_dual)
    } else {
        select_2772([a, f, d, g, e, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8633([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_8634([e, b, d, c, f, h, j, g, l, i, k, m], is_dual)
    } else {
        select_1579([g, a, b, d, i, e, h, m, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8631([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_8632([i, e, m, k, g, j, a, h, b], !is_dual)
    } else {
        select_8633([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8627([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8628([b, c, d, a, f, e, g, h, j, k, i, l, m], is_dual)
    } else {
        select_8631([a, b, d, c, f, g, h, i, j, k, e, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8639([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5694([a, b, c, f, h, g], is_dual)
    } else {
        select_3230([a, d, b, c, e, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8638([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1914([f, i, g, a, b, j, c], !is_dual)
    } else {
        select_8639([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8640([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_167([i, g, j, f, a, h, c, b], !is_dual)
    } else {
        select_820([b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8637([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_8638([a, b, d, c, f, g, h, i, e, j], is_dual)
    } else {
        select_8640([b, d, c, a, e, h, i, f, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8642([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_728([a, b, g, d, h, i, e], is_dual)
    } else {
        select_701([a, b, c, e, f, i, j, g, k, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_8641([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8642([a, c, d, e, g, f, h, j, l, i, k], is_dual)
    } else {
        select_8633([b, a, d, c, e, f, h, i, j, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_8637([j, m, g, l, h, e, k, i, b, a], !is_dual)
    } else {
        select_8641([b, a, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8626([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8627([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_8636([b, c, d, e, a, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_8649([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_52([b, c, d, g, f, i], is_dual)
    } else {
        select_129([i, k, j, e, h, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8648([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_453([e, j, k, h, i, a, b], !is_dual)
    } else {
        select_8649([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8647([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4562([h, i, k, e, a, g, c, d, f], !is_dual)
    } else {
        select_8648([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8650([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1532([b, a, c, d, f, e, g, i, j, h], is_dual)
    } else {
        select_1452([a, b, g, f, h, j, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_8646([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_8647([h, g, j, k, f, e, i, a, b, d, c], !is_dual)
    } else {
        select_8650([h, e, j, k, f, g, i, b, a, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_8645([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8646([a, b, c, i, f, g, k, l, h, j, m], is_dual)
    } else {
        select_7811([f, a, d, e, h, g, j, i, m, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8644([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8645([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_8645([b, c, d, e, f, g, a, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_8653([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_143([f, c, d, e, a, g, h, i], is_dual)
    } else {
        select_2625([g, a, b, c, d, f, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_8655([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_192([c, d, a, e, f, g], is_dual)
    } else {
        select_445([a, b, c, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_8654([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_512([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8655([a, b, c, d, i, h, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_8652([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_8653([a, c, d, e, h, g, b, i, j, k], is_dual)
    } else {
        select_8654([a, c, d, e, b, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_8656([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1171([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1171([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_8651([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8652([b, a, d, c, e, f, g, h, i, k, l], is_dual)
    } else {
        select_8656([a, c, g, f, e, b, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8643([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8644([a, b, d, e, c, f, h, i, j, l, g, k, m], is_dual)
    } else {
        select_8651([b, d, c, e, f, a, h, g, i, l, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8625([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_8626([a, c, e, f, d, g, i, b, j, h, k, l, m], is_dual)
    } else {
        select_8643([a, c, e, d, b, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8574([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_8575([a, b, d, f, e, g, h, j, i, c, k, m, l, n], is_dual)
    } else {
        select_8625([a, d, b, f, e, c, g, h, j, i, l, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_8663([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5432([a, b, f, d, e, h, g, k, j], is_dual)
    } else {
        select_2898([a, c, d, e, g, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8664([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_61([a, b, h, j, k], is_dual)
    } else {
        select_40([e, c, d, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8662([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_8663([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_8664([b, c, e, f, a, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_8666([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1008([a, b, c, d, h, f, i, g, j, k], is_dual)
    } else {
        select_1008([a, b, c, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_8668([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_38([a, b, d, i, g, h, k], is_dual)
    } else {
        select_612([c, d, e, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_8667([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2092([e, a, g, b, c, h, f, i, j, k], is_dual)
    } else {
        select_8668([b, c, a, e, d, f, h, i, g, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_8665([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_8666([b, c, d, a, f, g, e, h, i, j, k], is_dual)
    } else {
        select_8667([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8661([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8662([a, b, d, c, e, h, i, j, k, g, l], is_dual)
    } else {
        select_8665([c, a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8672([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_21([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_345([b, a, g, f, e, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8671([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8672([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6969([b, c, g, e, f, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8673([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_819([a, b, c, e, g, h, j, k, i, l], is_dual)
    } else {
        select_2414([a, b, c, d, f, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8670([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_8671([c, f, d, e, b, g, h, i, j, k], is_dual)
    } else {
        select_8673([a, c, b, d, e, g, h, f, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8675([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3088([c, g, e, b, h, f, i], is_dual)
    } else {
        select_8255([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8674([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2884([f, b, c, e, a, g, h, i, j, k], is_dual)
    } else {
        select_8675([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8669([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8670([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_8674([a, b, c, g, e, i, h, f, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8660([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8661([a, c, d, b, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_8669([a, d, e, c, f, g, h, i, b, j, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_8679([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1364([d, j, k, e, i, a, f, b, g], !is_dual)
    } else {
        select_1483([a, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8680([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_6222([b, a, c, e, d, f, g, i, j, k, h], is_dual)
    } else {
        select_914([j, d, k, h, e, a, g, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8678([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8679([a, d, c, e, h, g, f, k, i, l, j], is_dual)
    } else {
        select_8680([a, b, c, e, h, f, i, j, k, g, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8682([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2046([k, l, m, f, i, j, a, b, g, h, c], !is_dual)
    } else {
        select_392([b, c, d, e, f, g, i, h, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8681([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_373([b, c, f, d, e, g, h, i, j, l, k], is_dual)
    } else {
        select_8682([b, a, c, d, e, g, h, i, f, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8677([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_8678([k, f, m, n, g, l, a, j, h, c, b, i], !is_dual)
    } else {
        select_8681([b, a, c, d, e, g, f, h, i, k, l, j, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8685([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_67([f, d, c, h, e, i], is_dual)
    } else {
        select_1484([a, b, e, d, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8684([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8685([j, k, i, d, h, e, g, a, f, c], !is_dual)
    } else {
        select_8680([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8683([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_8684([k, f, m, g, j, l, a, h, c, b, i], !is_dual)
    } else {
        select_8681([b, a, c, d, e, g, f, h, i, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8676([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_8677([b, c, d, e, f, g, a, h, i, k, j, l, n, m], is_dual)
    } else {
        select_8683([b, a, d, e, f, g, c, h, i, j, k, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8659([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_8660([c, a, d, e, f, b, g, i, h, j, l, k, m], is_dual)
    } else {
        select_8676([a, c, b, d, e, f, g, i, j, k, h, m, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_8689([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1183([a, b, d, c, e, g, f, h, i], is_dual)
    } else {
        select_152([a, f, d, e, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8688([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_8689([a, h, c, b, e, g, i, f, j], is_dual)
    } else {
        select_884([g, a, b, f, d, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8690([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_4974([a, c, d, e, b, f, g, h, i, k], is_dual)
    } else {
        select_2640([a, b, d, e, c, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8687([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8688([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_8690([f, a, b, g, d, e, h, j, k, i, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8694([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3304([j, g, k, h, e, a, b, i], !is_dual)
    } else {
        select_136([a, c, e, d, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_8693([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8694([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_441([e, f, c, d, a, g, h, i, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_67([a, c, d, g, f, h], is_dual)
    } else {
        select_718([h, g, j, e, i, a, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8695([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_515([b, f, c, e, d, g, i, h], is_dual)
    } else {
        select_8696([g, a, b, c, f, h, i, e, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8692([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_8693([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_8695([b, c, a, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8699([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_227([b, a, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1423([i, k, a, h, j, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8698([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3252([a, c, h, f, g, b, i, j], is_dual)
    } else {
        select_8699([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8701([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4241([a, b, c, g, f, e, h, j, i, k], is_dual)
    } else {
        select_8339([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8700([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4785([a, g, b, c, h, f, e, i, j, k], is_dual)
    } else {
        select_8701([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8697([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_8698([i, k, h, l, m, e, a, f, b, j, g], !is_dual)
    } else {
        select_8700([b, a, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8691([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_8692([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_8697([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8686([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8687([g, k, l, n, a, b, j, m, c, h, e, i], !is_dual)
    } else {
        select_8691([g, l, k, n, b, a, j, m, c, i, d, f, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8658([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_8659([b, a, c, d, e, f, h, g, i, j, l, k, m, n], is_dual)
    } else {
        select_8686([b, a, c, e, d, f, h, i, j, k, l, g, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_8707([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_491([e, i, j, k, a, h, f, g, c, d], !is_dual)
    } else {
        select_1448([e, b, c, d, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8706([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_7086([a, b, c, h, e, f, g, i, j, k, l], is_dual)
    } else {
        select_8707([a, c, d, g, e, f, h, j, i, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_8709([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5531([b, a, c, d, g, f, e, h, i], is_dual)
    } else {
        select_176([f, g, h, i, a, d, e, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8710([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_886([a, c, b, f, d, g, e], is_dual)
    } else {
        select_1364([a, c, b, f, e, g, d, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_8708([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_8709([f, g, i, e, h, b, a, c, d], !is_dual)
    } else {
        select_8710([f, e, i, a, g, h, b, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8705([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8706([a, b, c, d, e, g, f, h, j, i, l, k], is_dual)
    } else {
        select_8708([e, j, f, k, a, g, b, i, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8712([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1468([g, f, i, j, a, b, h, c, d], !is_dual)
    } else {
        select_143([b, c, d, e, a, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8711([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2032([a, b, c, d, f, h, i, j, g, k], is_dual)
    } else {
        select_8712([a, b, d, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8704([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_8705([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_8711([e, j, l, m, f, a, i, b, k, g, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8703([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8704([a, b, h, c, e, f, j, g, k, m, i, n, l], is_dual)
    } else {
        select_8704([a, b, g, d, e, f, i, h, k, l, j, n, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_8718([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1136([h, i, j, k, d, f, g, e, a, c], !is_dual)
    } else {
        select_2843([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8717([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2183([a, e, b, d, g, i, h, j, f], is_dual)
    } else {
        select_8718([a, b, c, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8720([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_188([h, g, j, f, d, e, c], !is_dual)
    } else {
        select_4522([a, e, b, d, g, h, i, j, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_8719([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1418([j, f, d, k, g, i, a], !is_dual)
    } else {
        select_8720([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_8716([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8717([i, k, l, h, j, e, f, a, g, b, c], !is_dual)
    } else {
        select_8719([h, k, l, i, j, a, f, e, g, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8723([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_624([a, b, c, f, h, i, j, g, k], is_dual)
    } else {
        select_95([a, c, d, e, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8722([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8723([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_122([a, g, k, i, h, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8721([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8722([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_311([a, d, e, g, b, i, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_8715([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_8716([j, m, k, n, f, h, l, b, a, g, i, d], !is_dual)
    } else {
        select_8721([b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_8726([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_20([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_4595([a, b, h, c, f, g, i, e, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8725([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_8726([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_6032([a, c, f, h, g, i, j, e, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_8729([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_379([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_22([b, c, d, f, i, h, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_8728([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5911([a, f, d, b, h, g, e, j, i, k, l], is_dual)
    } else {
        select_8729([b, d, c, e, g, h, f, k, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8727([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2502([a, b, i, d, e, g, f, k, j], is_dual)
    } else {
        select_8728([a, c, d, b, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8724([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_8725([a, c, e, b, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_8727([a, c, e, d, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8714([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_8715([a, b, c, e, d, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_8724([a, c, b, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8732([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1084([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_223([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8731([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5276([i, k, l, a, e, f, j, g, b, h, c], !is_dual)
    } else {
        select_8732([a, g, b, f, d, e, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8736([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_95([a, c, d, e, g, i, h], is_dual)
    } else {
        select_198([a, b, c, f, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_8735([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_468([a, f, b, d, e, g, h, j], is_dual)
    } else {
        select_8736([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8734([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_80([f, b, c, h, g, a, i], is_dual)
    } else {
        select_8735([b, c, d, a, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6805([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_1827([e, a, c, d, f, h, g, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8733([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8734([b, a, c, d, e, g, f, h, j, i], is_dual)
    } else {
        select_8737([j, f, k, l, a, h, g, i, b, d, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8730([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_8731([a, c, b, d, f, g, e, h, i, j, l, k], is_dual)
    } else {
        select_8733([i, k, e, l, m, a, f, g, j, b, h, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8713([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_8714([a, b, c, d, e, g, f, h, i, j, k, l, m, n], is_dual)
    } else {
        select_8730([g, f, m, n, a, i, k, l, b, j, c, h, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8702([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_8703([a, c, d, e, f, g, h, i, b, j, l, k, m, n], is_dual)
    } else {
        select_8713([a, c, d, b, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8657([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_8658([a, b, d, f, e, c, g, h, j, i, l, k, m, n], is_dual)
    } else {
        select_8702([a, b, d, f, e, g, h, j, i, c, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8573([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_8574([b, c, d, a, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_8657([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8449([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_8450([a, b, d, e, c, f, g, h, j, k, m, n, i, l], is_dual)
    } else {
        select_8573([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8448([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8449([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_8449([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8447([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8448([a, b, c, d, f, g, e, h, j, k, l, i, m, n], is_dual)
    } else {
        select_8448([a, b, c, e, f, g, d, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8446([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8447([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    } else {
        select_8447([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7373([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_7374([a, b, c, d, e, f, h, g, i, j, k, l, n, m], is_dual)
    } else {
        select_8446([a, b, c, d, e, f, h, g, i, j, k, m, n, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8749([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_877([a, b, d, e, c, f, h, g, j], is_dual)
    } else {
        select_6507([d, a, c, b, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_8748([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8749([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_8749([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8751([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2865([c, d, e, a, b, f, g, h, j, i], is_dual)
    } else {
        select_2635([a, b, e, c, d, f, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8750([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8751([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_8751([d, e, b, c, g, a, f, i, h, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8747([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8748([d, a, b, c, e, i, k, h, m, j], is_dual)
    } else {
        select_8750([h, a, b, f, g, d, c, j, i, l, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8753([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2864([g, f, b, c, a, d, e, i, k, h], is_dual)
    } else {
        select_2864([g, f, d, e, a, b, c, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_8752([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8748([a, b, c, g, d, i, k, h, m, j], is_dual)
    } else {
        select_8753([h, b, c, e, f, g, a, j, i, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8746([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_8747([c, d, a, b, g, e, f, h, i, l, j, m, k], is_dual)
    } else {
        select_8752([a, c, d, g, e, f, b, h, i, l, k, m, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8757([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_59([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_6477([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_8758([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_81([a, b, d, c, e, f], is_dual)
    } else {
        select_110([a, b, e, g, c, f, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_8756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_8757([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_8758([a, b, i, j, c, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8755([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_8756([i, j, d, l, f, g, m, e, a, k], !is_dual)
    } else {
        select_2716([d, f, g, i, j, l, m, k, e, h, b, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_8761([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4901([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_4901([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8760([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1152([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_8761([a, b, c, i, k, j, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8759([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2716([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_8760([a, b, c, f, d, e, g, i, k, h, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8754([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8755([l, m, n, a, j, b, c, k, d, e, i, f, h], !is_dual)
    } else {
        select_8759([a, b, c, d, e, g, i, h, k, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8745([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_8746([a, d, e, f, b, c, g, i, j, k, h, l, m], is_dual)
    } else {
        select_8754([a, b, c, e, f, g, d, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_8766([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1413([a, b, f, e, c, h, g, j], is_dual)
    } else {
        select_2625([a, c, d, b, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8765([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_3814([d, a, e, c, g, f, h, b, i], is_dual)
    } else {
        select_8766([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_8764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8765([a, c, b, d, e, g, h, i, f, j], is_dual)
    } else {
        select_8765([b, c, a, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_8769([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_723([b, c, a, d, f, g, i, h, j], is_dual)
    } else {
        select_723([a, c, b, d, e, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_8771([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5589([a, b, c, d, e, f, g], is_dual)
    } else {
        select_4396([d, h, i, a, e, g, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8770([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4732([d, i, g, a, e, h, b, f, c], !is_dual)
    } else {
        select_8771([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8768([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8769([b, c, d, e, f, a, h, g, i, j], is_dual)
    } else {
        select_8770([h, g, k, b, a, j, c, d, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_8773([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7994([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1860([a, c, b, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_8774([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1863([b, c, e, d, f, g, i, h], is_dual)
    } else {
        select_643([a, c, b, f, e, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_8772([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8773([c, d, a, e, f, b, g, h, i, j], is_dual)
    } else {
        select_8774([c, d, b, e, f, a, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8767([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_8768([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_8772([b, d, a, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8763([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_8764([a, b, c, e, h, g, i, d, j, k], is_dual)
    } else {
        select_8767([a, b, c, e, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8778([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_559([a, c, d, e, f, i, g, h], is_dual)
    } else {
        select_605([h, j, i, a, f, e, b, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8777([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2480([b, d, e, c, f, a, g, h, i, j], is_dual)
    } else {
        select_8778([b, d, a, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_8782([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_314([a, f, c, d, e, g, i], is_dual)
    } else {
        select_314([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8781([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8782([a, c, d, g, e, h, f, i, k], is_dual)
    } else {
        select_804([a, c, b, f, e, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8780([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8781([c, a, b, d, f, g, e, h, j, k, i], is_dual)
    } else {
        select_2268([g, a, c, h, f, i, k, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_8784([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2078([a, c, d, b, f, e, g, h, i], is_dual)
    } else {
        select_2007([b, c, a, f, g, h, e, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_8785([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_81([e, f, b, d, h, g], is_dual)
    } else {
        select_234([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_8784([a, b, d, h, f, g, i, e, k, j], is_dual)
    } else {
        select_8785([b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8779([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_8780([c, d, b, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_8783([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8776([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_8777([a, c, g, b, d, i, h, j, f, k], is_dual)
    } else {
        select_8779([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4379([b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3164([k, l, g, h, e, f, a, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8789([a, c, b, d, e, f, i, j, g, k, h, l], is_dual)
    } else {
        select_3771([h, i, l, e, j, a, f, b, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8790([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_3864([h, l, f, m, a, e, k, b], !is_dual)
    } else {
        select_7390([c, b, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8787([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8788([i, k, l, m, h, e, j, b, f, a, c, g], !is_dual)
    } else {
        select_8790([i, k, l, m, e, h, j, b, f, c, g, d, a], !is_dual)
    }
}
/// n = 13, i = 5
fn select_8793([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3171([a, b, d, e, f, h, i, l, j, m], is_dual)
    } else {
        select_2997([b, c, e, d, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8792([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8793([a, c, d, e, f, b, h, g, i, j, k, l, m], is_dual)
    } else {
        select_8793([b, c, d, e, f, a, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_8796([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_51([a, f, c, d, j, k], is_dual)
    } else {
        select_2188([h, i, k, j, g, e, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8795([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_250([a, d, h, e, i, g], is_dual)
    } else {
        select_8796([i, k, h, l, j, a, f, b, c, g, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8798([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_71([d, g, h, e, a, f], !is_dual)
    } else {
        select_141([b, d, c, e, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8797([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_84([a, c, e, d, f, g, k], is_dual)
    } else {
        select_8798([b, a, c, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8794([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_8795([a, c, d, e, b, g, f, h, j, i, k, l], is_dual)
    } else {
        select_8797([h, k, l, j, i, a, b, g, c, d, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8791([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8792([a, b, d, e, c, f, g, h, k, i, j, m, n], is_dual)
    } else {
        select_8794([d, c, a, b, e, h, i, j, k, g, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8786([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_8787([c, d, b, e, g, i, h, a, j, k, l, m, n], is_dual)
    } else {
        select_8791([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8775([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_8776([c, a, d, f, h, g, e, i, j, k, l], is_dual)
    } else {
        select_8786([a, b, c, d, f, e, g, i, h, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8762([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8763([c, a, d, e, f, h, g, j, k, i, l], is_dual)
    } else {
        select_8775([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8744([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8745([b, a, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_8762([b, c, d, e, f, g, i, h, j, a, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_8805([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5762([b, c, d, a, e, g, f, h, i], is_dual)
    } else {
        select_7004([b, f, d, e, a, i, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_8804([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8805([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_5634([f, b, c, a, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_8807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5683([h, b, c, a, f, g, j, k, i], is_dual)
    } else {
        select_2826([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8806([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1634([a, b, d, e, i, f, h, k, l, m], is_dual)
    } else {
        select_8807([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8803([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8804([a, b, c, h, f, i, g, k, l, j], is_dual)
    } else {
        select_8806([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8810([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_70([d, j, h, f, e, a, g], !is_dual)
    } else {
        select_5183([b, e, c, d, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_8811([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8672([f, a, c, d, g, e, h, j, l, k], is_dual)
    } else {
        select_2831([a, h, b, i, e, f, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8809([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_8810([a, h, b, i, f, e, k, l, j, g], is_dual)
    } else {
        select_8811([a, b, c, d, f, e, g, h, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8813([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_367([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3383([e, a, c, d, h, f, i, k, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8815([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_342([a, f, c, d, e, g, i, h, k], is_dual)
    } else {
        select_342([b, e, c, d, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8814([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_8815([a, b, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_561([i, a, b, c, j, g, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8812([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8813([b, f, d, e, a, h, i, g, k, j, l], is_dual)
    } else {
        select_8814([b, c, a, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8808([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8809([c, b, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_8812([a, b, c, d, e, g, f, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8802([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_8803([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_8808([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8819([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_736([i, a, b, c, f, g, k, l], is_dual)
    } else {
        select_342([b, c, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8818([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_8819([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1619([f, l, a, j, i, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8821([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_618([e, b, c, d, f, g, j, h], is_dual)
    } else {
        select_955([i, j, g, f, e, h, a, b, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_8822([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6032([f, b, d, e, g, j, h, k, l], is_dual)
    } else {
        select_1780([a, b, h, c, f, i, g, k, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8820([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_8821([f, j, m, l, k, i, a, g, b, h], !is_dual)
    } else {
        select_8822([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8817([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8818([a, c, d, e, f, b, g, h, i, k, j, m], is_dual)
    } else {
        select_8820([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_8824([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1766([a, d, c, b, i, f, h, k], is_dual)
    } else {
        select_1485([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8827([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_803([j, l, k, i, f, a, b, c], !is_dual)
    } else {
        select_5787([b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_8829([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_32([a, b, c, i, j, k], is_dual)
    } else {
        select_22([c, d, e, g, h, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8828([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2664([f, d, e, a, h, g, i, k, l], is_dual)
    } else {
        select_8829([a, b, c, d, e, g, f, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_8826([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_8827([i, h, k, l, m, e, j, f, g, a, b, d], !is_dual)
    } else {
        select_8828([h, k, i, l, m, f, j, e, g, a, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8830([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_642([i, k, e, f, h, a, b, g], !is_dual)
    } else {
        select_3363([b, a, c, d, f, e, g, i, k, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_8825([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_8826([b, c, a, d, f, e, g, i, h, j, k, l, m], is_dual)
    } else {
        select_8830([e, i, l, m, h, f, j, a, b, g, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8823([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8824([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_8825([b, c, e, d, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8816([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8817([a, c, d, b, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_8823([a, k, l, m, n, b, i, j, c, h, g, e, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8801([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8802([a, b, d, c, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_8816([a, b, c, d, e, f, h, i, g, j, k, m, n, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_8835([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_120([d, g, i, e, a, h], !is_dual)
    } else {
        select_87([b, c, e, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_8834([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_735([d, h, i, g, f, a, e, c], !is_dual)
    } else {
        select_8835([c, b, a, d, f, i, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_8833([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_8834([g, e, i, a, f, h, c, b, d], !is_dual)
    } else {
        select_8834([g, f, i, b, e, h, c, a, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8838([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1070([b, f, c, d, g, e, i], is_dual)
    } else {
        select_2772([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8840([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1536([i, j, h, f, e, b, a, g], !is_dual)
    } else {
        select_1617([b, a, d, c, e, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_8841([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1596([b, c, d, a, f, e, h, g, i], is_dual)
    } else {
        select_1617([h, i, k, j, e, f, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8839([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8840([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_8841([h, j, f, k, e, g, i, b, a, d, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8837([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_8838([e, c, d, g, f, a, h, i, j], is_dual)
    } else {
        select_8839([c, b, a, d, f, g, e, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8844([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_111([g, f, j, e, a, h, d], !is_dual)
    } else {
        select_236([b, c, a, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8843([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_8840([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_8844([b, a, d, c, e, g, h, i, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_8842([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_8838([e, c, d, g, f, a, i, j, h], is_dual)
    } else {
        select_8843([c, b, a, d, f, g, e, j, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8836([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_8837([i, h, j, k, e, f, b, a, c, g, d], !is_dual)
    } else {
        select_8842([i, e, j, k, h, f, a, g, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8833([b, f, h, c, e, a, i, g, j], is_dual)
    } else {
        select_8836([b, a, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8831([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_8832([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_3812([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_8800([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_8801([a, b, d, c, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_8831([a, j, k, m, h, b, c, g, l, d, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_8848([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_108([a, d, b, e, f, g, c, h, i, j], is_dual)
    } else {
        select_108([a, d, c, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_8850([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_728([b, d, a, e, c, g, f], is_dual)
    } else {
        select_2768([b, d, e, c, a, g, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_8851([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1153([a, b, d, e, f, g, c, h], is_dual)
    } else {
        select_2591([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_8849([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8850([a, b, c, d, i, h, j, k], is_dual)
    } else {
        select_8851([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8847([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_8848([b, c, d, e, i, h, a, j, k, l], is_dual)
    } else {
        select_8849([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8854([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1413([g, a, b, d, c, i, h, k], is_dual)
    } else {
        select_1383([b, c, e, a, d, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8855([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4399([a, b, f, c, h, e, j, i, k, g], is_dual)
    } else {
        select_1683([a, b, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8853([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8854([a, b, c, d, e, g, h, f, j, i, k], is_dual)
    } else {
        select_8855([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8859([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_71([f, i, j, k, a, h], !is_dual)
    } else {
        select_63([b, c, d, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8859([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_8859([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_8861([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_382([a, i, b, j, g, k], is_dual)
    } else {
        select_63([c, d, e, f, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_8860([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_67([j, k, m, a, l, b], !is_dual)
    } else {
        select_8861([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_8857([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8858([g, c, d, e, f, a, h, i, j, k, m], is_dual)
    } else {
        select_8860([b, a, c, d, e, f, g, h, i, j, k, l, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_8862([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4601([c, b, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_755([j, k, h, m, a, l, b, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8856([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_8857([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_8862([a, c, b, d, e, f, g, h, i, j, k, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8852([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_8853([a, j, k, l, n, h, m, b, c, d, i], !is_dual)
    } else {
        select_8856([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8846([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8847([a, d, e, f, g, b, c, h, i, k, j, l], is_dual)
    } else {
        select_8852([a, b, d, c, e, f, g, h, j, m, l, n, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8867([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3639([a, b, i, c, k], is_dual)
    } else {
        select_5238([b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8869([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_167([a, b, c, h, i, f, j, k], is_dual)
    } else {
        select_252([b, g, d, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8868([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_8869([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_39([b, g, i, c], is_dual)
    }
}
/// n = 11, i = 4
fn select_8866([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8867([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_8868([b, d, e, c, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_8870([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_143([a, c, d, f, b, i, h, j], is_dual)
    } else {
        select_3523([a, b, e, c, d, g, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_8865([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8866([a, b, h, d, e, f, g, j, i, k, l], is_dual)
    } else {
        select_8870([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_8871([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1193([a, b, c, f, d, e, g, h, i], is_dual)
    } else {
        select_1178([a, b, c, d, e, g, i, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_8864([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_8865([a, b, e, c, d, f, g, h, i, j, l, m], is_dual)
    } else {
        select_8871([a, c, d, f, g, e, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8876([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_98([c, d, e, h, f, j], is_dual)
    } else {
        select_2188([a, b, d, f, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8877([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_381([c, g, d, e, f, i, j, h], is_dual)
    } else {
        select_71([e, a, b, h, k, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8875([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_8876([c, d, a, e, b, f, g, i, h, k, j], is_dual)
    } else {
        select_8877([c, d, b, e, a, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8874([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8875([f, b, a, c, d, g, i, j, k, l, h], is_dual)
    } else {
        select_5410([a, c, b, e, h, j, f, i, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_8880([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_188([g, f, k, a, e, h, d], !is_dual)
    } else {
        select_922([b, c, a, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8879([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_8880([a, e, b, d, f, h, i, g, k, l, j], is_dual)
    } else {
        select_4169([j, l, i, h, e, a, g, f, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8882([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_803([a, b, d, e, g, i, k, h], is_dual)
    } else {
        select_942([e, c, a, d, f, h, i, j, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8881([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8882([b, d, c, a, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_4009([b, d, g, e, a, j, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_8878([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8879([a, c, d, b, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_8881([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8873([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8874([b, a, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_8878([b, c, g, e, f, h, a, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_8886([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_764([a, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_2836([j, k, g, h, a, i, b, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8885([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_699([b, c, h, f, a, i, j, g, k], is_dual)
    } else {
        select_8886([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8884([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3108([a, b, d, i, h, k, f, j], is_dual)
    } else {
        select_8885([a, b, c, e, f, g, h, j, l, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8883([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8884([a, c, d, e, b, f, g, i, h, k, j, l], is_dual)
    } else {
        select_3366([a, c, e, h, i, f, b, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8872([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_8873([a, c, e, f, d, b, g, h, i, j, l, k, m], is_dual)
    } else {
        select_8883([a, c, e, f, b, d, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8863([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8864([a, c, d, e, b, f, h, g, j, k, i, l, m], is_dual)
    } else {
        select_8872([a, b, d, e, f, c, h, i, j, k, g, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8845([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8846([a, c, b, d, e, f, g, i, h, k, j, l, m, n], is_dual)
    } else {
        select_8863([a, d, c, e, f, g, i, h, b, j, k, m, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_8799([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_8800([a, c, d, e, f, g, i, h, j, b, l, m, n, k], is_dual)
    } else {
        select_8845([a, c, d, e, f, g, b, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8743([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_8744([a, c, d, e, f, g, b, i, j, h, l, k, m, n], is_dual)
    } else {
        select_8799([a, c, b, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8742([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8743([a, b, c, f, d, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_8743([a, b, c, f, e, g, h, i, j, d, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8741([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_8742([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_8742([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8740([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8741([a, b, c, d, f, g, e, h, i, k, l, j, m, n], is_dual)
    } else {
        select_8741([a, b, c, e, f, g, d, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8739([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8740([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_8740([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_8897([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3283([c, d, b, e, f, g, a, h, i, k, j, m], is_dual)
    } else {
        select_3283([d, c, a, e, f, h, b, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8896([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8897([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_329([b, d, e, f, a, g, h, j, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8898([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_403([b, a, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_7769([a, g, l, m, c, b, k, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8895([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_8896([b, d, c, e, a, f, g, h, i, j, k, n, l], is_dual)
    } else {
        select_8898([b, a, c, d, f, e, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_8901([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1416([a, c, b, d, h, i, j, g], is_dual)
    } else {
        select_881([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8902([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3024([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1413([a, g, h, i, k, j, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8900([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8901([c, a, d, f, b, e, g, h, j, i], is_dual)
    } else {
        select_8902([g, j, l, a, h, k, b, c, e, i, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8903([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8237([d, g, k, l, j, m, e, h, a, i, c, f], !is_dual)
    } else {
        select_407([d, g, j, k, m, e, i, f, h, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8899([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8900([a, b, d, e, f, g, j, i, h, l, k, m], is_dual)
    } else {
        select_8903([j, n, l, a, i, m, b, g, k, c, d, f, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8894([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8895([c, b, a, d, e, f, g, i, j, h, k, m, n, l], is_dual)
    } else {
        select_8899([a, c, b, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_8908([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_878([e, a, d, c, g, f, h, i, j], is_dual)
    } else {
        select_4396([a, b, f, h, e, i, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_8907([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4318([f, b, d, a, e, g, h, i, j], is_dual)
    } else {
        select_8908([a, b, d, c, e, g, h, f, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8906([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6452([e, a, b, g, h, f, j, k, i, l, m], is_dual)
    } else {
        select_8907([a, c, f, d, e, i, g, h, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8910([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, b, c, e, f, g, h, i], is_dual)
    } else {
        select_2287([a, b, d, c, g, f, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_255([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_285([e, g, c, d, a, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_8909([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8910([e, a, g, b, d, f, h, i, k, l, j], is_dual)
    } else {
        select_8911([a, c, f, d, e, i, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8905([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_8906([b, d, c, e, a, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_8909([b, d, a, e, f, g, c, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8915([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_316([a, i, d, e, f, g, k], is_dual)
    } else {
        select_1422([a, b, c, d, f, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_8914([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_8915([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_7297([a, f, d, e, i, b, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8913([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_8914([a, c, d, b, e, g, f, h, i, k, j, l], is_dual)
    } else {
        select_407([a, g, b, c, h, i, j, l, f, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_8917([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1564([i, g, j, l, a, k, b, f, c], !is_dual)
    } else {
        select_299([g, j, i, k, a, b, h, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_8916([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8917([e, k, l, j, m, g, a, h, b, c, i, f], !is_dual)
    } else {
        select_407([e, g, j, k, m, a, i, f, h, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8912([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_8913([b, a, c, d, e, f, g, h, i, k, j, l, n], is_dual)
    } else {
        select_8916([i, f, m, n, a, l, g, j, k, b, c, d, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8904([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8905([a, c, d, e, b, f, h, g, j, i, k, l, m], is_dual)
    } else {
        select_8912([a, b, c, e, d, f, h, i, j, g, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8893([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8894([b, c, a, d, e, f, g, h, j, i, l, k, m, n], is_dual)
    } else {
        select_8904([b, c, d, e, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_8923([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1475([a, b, f, d, g, h, e, i, j, k], is_dual)
    } else {
        select_647([a, d, c, e, h, g, f, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_8922([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_8923([a, f, c, d, h, e, g, i, k, j, l], is_dual)
    } else {
        select_2412([a, e, g, b, j, f, k, i, h, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_8926([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_85([a, b, h, g, f, j], is_dual)
    } else {
        select_96([c, f, d, e, g, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_8925([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8926([b, c, a, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1385([c, f, d, e, a, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_8924([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_191([a, i, b, c, f, k, h], is_dual)
    } else {
        select_8925([a, d, e, b, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8921([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8922([b, c, d, e, g, f, h, a, i, j, k, l], is_dual)
    } else {
        select_8924([b, a, c, d, e, g, h, f, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_8927([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3504([b, c, d, e, g, f, h, a, i, j, k], is_dual)
    } else {
        select_8924([b, a, c, d, e, g, h, f, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8920([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8921([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_8927([a, c, b, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_8931([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1208([a, b, h, c, f, i, g, j], is_dual)
    } else {
        select_251([a, f, d, e, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_8930([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([a, g, c, d, f, i, h], is_dual)
    } else {
        select_8931([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8929([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4189([b, d, e, c, g, f, h, a, j, i], is_dual)
    } else {
        select_8930([b, d, a, c, e, g, h, f, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_8934([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_650([a, b, d, e, g, f, i, h], is_dual)
    } else {
        select_3221([g, j, i, a, h, e, b, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8933([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_8934([a, b, f, d, h, e, i, j, g, k], is_dual)
    } else {
        select_2412([a, e, b, c, g, f, j, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8930([b, d, a, c, e, g, h, f, j, i], is_dual)
    } else {
        select_8933([b, d, c, e, g, f, h, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8928([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8929([a, c, b, d, e, f, h, i, g, j], is_dual)
    } else {
        select_8932([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_8919([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_8920([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_8928([a, b, c, d, i, f, g, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_8939([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_642([b, c, d, e, g, h, j, i], is_dual)
    } else {
        select_4871([e, h, l, f, k, a, i, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8941([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1596([b, d, e, c, f, g, h, j, k], is_dual)
    } else {
        select_88([e, i, l, a, g, h, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_8940([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_979([b, a, c, g, e, f, h, i, l, j, m], is_dual)
    } else {
        select_8941([a, b, d, c, h, f, g, j, k, l, m, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_8938([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8939([b, d, g, e, a, f, h, i, k, j, m, n], is_dual)
    } else {
        select_8940([c, b, d, e, a, f, h, g, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8937([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8938([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6704([c, i, e, a, d, g, h, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8944([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_81([c, f, g, b, e, h], is_dual)
    } else {
        select_3048([a, e, c, d, h, f, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_8945([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_501([a, b, d, f, e, g, h, j], is_dual)
    } else {
        select_3154([i, j, a, e, h, b, f, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_8943([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_8944([k, l, a, h, j, b, c, i, f, d], !is_dual)
    } else {
        select_8945([a, c, d, e, h, f, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_8948([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_51([a, b, d, h, i, k], is_dual)
    } else {
        select_75([c, e, f, g, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_8947([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8948([a, b, d, g, e, f, h, i, k, j, m], is_dual)
    } else {
        select_1285([c, d, h, e, f, g, i, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8950([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_154([a, c, d, g, e, f, i, h], is_dual)
    } else {
        select_1423([g, j, a, b, h, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_8951([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_235([d, e, h, i, a, g, b, f], !is_dual)
    } else {
        select_252([b, d, c, e, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_8949([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_8950([f, g, j, k, i, c, d, h, a, e], !is_dual)
    } else {
        select_8951([d, c, b, f, g, e, h, i, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_8946([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_8947([b, c, d, e, a, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_8949([j, n, a, h, l, b, c, k, g, d, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8942([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_8943([a, b, c, d, h, g, f, i, k, l, j, n], is_dual)
    } else {
        select_8946([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8936([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8937([b, c, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_8942([b, a, c, d, f, e, h, i, g, j, k, m, l, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_8955([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1326([b, a, c, f, d, e, h, g, i, j], is_dual)
    } else {
        select_1014([b, c, d, e, g, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_8954([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_963([c, a, d, h, f, g, j, i, l], is_dual)
    } else {
        select_8955([a, b, d, e, g, f, i, h, j, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8953([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5241([c, d, e, a, h, g, k, j, i], is_dual)
    } else {
        select_8954([a, b, c, d, f, e, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_8957([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_605([h, f, j, a, g, i, b, e, c], !is_dual)
    } else {
        select_3771([h, g, j, f, i, a, b, e, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8960([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_68([a, c, i, f, j], is_dual)
    } else {
        select_100([a, b, d, e, g, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_8959([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_8960([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1014([b, f, d, e, g, a, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_8962([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_88([a, b, g, d, i, f, j], is_dual)
    } else {
        select_186([d, f, c, h, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8961([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_81([e, h, c, d, f, i], is_dual)
    } else {
        select_8962([a, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_8958([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_8959([e, i, k, l, m, j, a, g, b, c, h, f], !is_dual)
    } else {
        select_8961([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_8956([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_8957([a, c, i, e, g, j, h, k, f, l], is_dual)
    } else {
        select_8958([h, j, k, n, a, m, i, l, b, g, e, d, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_8952([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_8953([b, c, d, a, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_8956([b, c, d, f, e, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8935([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8936([a, c, b, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_8952([a, b, c, d, f, e, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8918([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_8919([a, b, e, f, c, g, i, j, h, d, k, l], is_dual)
    } else {
        select_8935([a, b, c, e, d, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8892([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_8893([a, b, d, e, g, f, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_8918([a, b, d, e, g, c, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8891([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_8892([g, d, e, f, b, c, a, i, k, h, j, l, m, n], is_dual)
    } else {
        select_8892([g, d, f, e, b, c, a, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_8969([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1367([i, g, j, f, k, a, e, b], !is_dual)
    } else {
        select_308([b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_8970([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1843([a, c, b, e, h, f, i, g], is_dual)
    } else {
        select_1843([a, b, c, d, h, g, i, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_8968([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8969([a, e, c, d, f, i, g, h, j, k, l], is_dual)
    } else {
        select_8970([j, g, k, i, l, a, f, e, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_8973([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3186([a, d, b, e, h, f, j, g, i], is_dual)
    } else {
        select_1528([g, d, c, i, f, e, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8972([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8973([a, b, d, c, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1122([e, a, b, h, f, j, k, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_8975([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_5643([e, a, f, d, g, i, c, j, h], is_dual)
    } else {
        select_1484([d, c, b, g, e, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_8976([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_501([h, j, i, k, d, g, e, c], !is_dual)
    } else {
        select_422([i, a, b, d, k, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_8974([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8975([c, a, d, h, e, f, j, k, g, i], is_dual)
    } else {
        select_8976([c, b, a, d, e, h, g, j, i, k, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_8971([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_8972([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_8974([b, c, d, f, e, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8967([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_8968([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    } else {
        select_8971([b, a, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_8982([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_52([e, c, d, f, h, i], is_dual)
    } else {
        select_52([e, a, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8981([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8982([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_83([a, h, g, b, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8981([b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_4505([c, b, a, g, h, j, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8979([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_637([a, c, b, e, g, h, f, j, i], is_dual)
    } else {
        select_8980([a, b, c, e, d, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_8985([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_626([b, a, d, f, h, e, i, g], is_dual)
    } else {
        select_216([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_8984([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_8985([a, b, d, c, e, f, h, g, i], is_dual)
    } else {
        select_122([a, f, g, e, c, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8983([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1512([a, c, d, b, f, g, h, e, i], is_dual)
    } else {
        select_8984([a, c, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_8978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8979([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_8983([a, c, d, g, f, h, b, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_8988([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_87([f, h, i, a, b, c, g], !is_dual)
    } else {
        select_251([b, c, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_8987([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2849([a, c, e, b, d, f, g, h, i, j], is_dual)
    } else {
        select_8988([a, b, g, c, d, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8986([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8987([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_5093([a, b, c, g, d, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_8977([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8978([a, c, d, e, b, f, g, i, j, h], is_dual)
    } else {
        select_8986([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8966([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_8967([b, c, d, e, f, g, h, i, j, a, k, l], is_dual)
    } else {
        select_8977([c, b, a, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_8991([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1803([e, j, i, a, h, g, b, f, d], !is_dual)
    } else {
        select_6273([a, c, b, e, h, g, i, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_8993([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4392([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1898([e, a, c, g, d, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_8992([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4732([f, h, j, d, g, i, a, e, c], !is_dual)
    } else {
        select_8993([f, g, j, d, h, i, a, b, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8990([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_8991([h, f, k, g, d, i, e, j, a, b], !is_dual)
    } else {
        select_8992([b, c, a, d, e, h, i, f, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_8996([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_76([a, e, c, d, g, f, h, i, k], is_dual)
    } else {
        select_1039([i, j, g, k, d, a, e, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_8995([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8996([a, b, c, d, e, f, g, i, j, k, h], is_dual)
    } else {
        select_1597([a, c, e, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_8994([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8995([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_8995([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_8989([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_8990([i, j, k, f, e, a, b, c, g, h, d], !is_dual)
    } else {
        select_8994([c, b, d, f, e, g, h, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_8965([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_8966([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_8989([a, g, c, e, b, h, i, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9001([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_7902([a, j, b, k, l, e, f, h, i], is_dual)
    } else {
        select_1000([h, i, k, l, a, j, g, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_9003([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2269([b, c, a, e, f, d, h, g], is_dual)
    } else {
        select_638([e, h, d, i, a, f, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9005([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_51([a, h, d, e, g, k], is_dual)
    } else {
        select_235([i, j, h, k, a, f, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9004([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_974([i, k, l, f, a, b, j, c], !is_dual)
    } else {
        select_9005([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9002([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_9003([a, i, b, k, l, f, e, m, h], is_dual)
    } else {
        select_9004([a, f, e, c, d, h, g, j, k, i, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9000([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_9001([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_9002([a, b, c, d, f, e, h, g, j, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9007([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3046([b, a, c, d, e, h, g, f, i, j], is_dual)
    } else {
        select_4569([d, f, b, a, e, i, h, g, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_9011([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_89([a, b, c, e, f, g], is_dual)
    } else {
        select_89([a, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_9010([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_141([a, e, h, i, f, b], !is_dual)
    } else {
        select_9011([b, c, a, d, e, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_9012([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([e, d, b, c, f, g, h], is_dual)
    } else {
        select_361([e, h, i, a, g, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9009([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9010([e, i, g, j, a, h, b, c, f], !is_dual)
    } else {
        select_9012([b, a, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9008([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9009([i, g, k, l, a, j, b, f, h, c], !is_dual)
    } else {
        select_251([b, f, d, e, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_9006([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_9007([a, h, b, e, j, f, k, l, i, g], is_dual)
    } else {
        select_9008([e, a, f, c, d, g, i, h, k, j, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_8999([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_9000([b, c, d, e, g, a, f, h, i, j, k, l, m], is_dual)
    } else {
        select_9006([b, a, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_9016([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_639([d, h, e, i, a, b, g, f], !is_dual)
    } else {
        select_452([b, a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_9018([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_235([a, h, d, e, j, g, l, m], is_dual)
    } else {
        select_266([b, a, c, i, f, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9019([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_451([j, h, k, l, i, f, a, e, g, b], !is_dual)
    } else {
        select_117([a, c, d, f, h, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9017([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9018([b, a, c, d, e, f, h, g, j, i, k, l, m], is_dual)
    } else {
        select_9019([b, f, d, e, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_9016([i, b, c, a, k, f, g, l, m], is_dual)
    } else {
        select_9017([b, a, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9014([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_9015([a, b, c, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_1802([a, i, b, c, l, k, f, m, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_9023([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_499([a, f, b, d, e, h, i, g], is_dual)
    } else {
        select_128([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9024([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_252([b, f, c, d, g], is_dual)
    } else {
        select_612([f, k, i, j, e, h, a, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9022([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9023([a, h, b, e, i, f, k, j, g], is_dual)
    } else {
        select_9024([a, g, c, d, e, j, h, i, l, m, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9021([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_9022([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_5872([b, h, a, i, e, f, l, k, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_9027([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_21([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_940([i, h, k, e, j, a, f, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9026([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9027([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4517([e, b, c, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4570([a, c, f, e, g, i, d, j, h], is_dual)
    } else {
        select_1546([b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9025([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_9026([b, f, c, d, e, g, i, h, l, j, k], is_dual)
    } else {
        select_9028([b, a, h, e, j, f, k, l, i, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_9020([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_9021([b, c, d, e, a, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_9025([c, a, d, e, b, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9013([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9014([a, b, c, d, e, g, f, h, j, i, k, l, m], is_dual)
    } else {
        select_9020([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8998([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8999([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_9013([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_9033([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_21([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_453([g, a, b, i, f, e, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_9034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_38([a, i, e, d, f, g, k], is_dual)
    } else {
        select_379([a, e, b, c, g, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9032([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_9033([f, c, d, e, a, g, h, j, i], is_dual)
    } else {
        select_9034([b, d, e, a, c, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9031([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_9032([c, a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6507([a, b, i, c, f, k, g, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9036([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_339([e, b, c, d, g, f, h, j, i, k], is_dual)
    } else {
        select_763([a, i, b, f, e, k, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9038([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_700([f, l, e, j, b, a, h], !is_dual)
    } else {
        select_942([a, e, c, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_9039([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_213([f, h, d, a, b, g, e], !is_dual)
    } else {
        select_88([a, d, c, f, e, i, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_9037([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9038([e, a, c, d, f, g, h, j, k, i, m, l], is_dual)
    } else {
        select_9039([e, l, m, j, g, i, f, a, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9035([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9036([c, a, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_9037([c, b, d, e, a, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9030([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9031([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_9035([a, c, b, d, e, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9042([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_76([e, i, j, a, f, h, g, c, d], !is_dual)
    } else {
        select_55([b, c, d, f, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_9041([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1803([f, l, i, a, k, g, b, c, j], !is_dual)
    } else {
        select_9042([a, g, d, e, f, i, h, j, m, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9043([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3024([a, b, i, e, f, j, g, k, h], is_dual)
    } else {
        select_1701([a, g, h, c, d, e, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9040([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_9041([a, c, b, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_9043([a, c, d, e, f, g, b, h, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9029([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_9030([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9040([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_8997([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_8998([b, d, c, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_9029([b, d, a, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_8964([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_8965([a, g, k, h, n, b, c, j, l, m, d, i], !is_dual)
    } else {
        select_8997([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_9051([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_48([h, a, d, e, f, i, g, j], is_dual)
    } else {
        select_1177([f, d, e, b, c, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9050([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9051([b, a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_1385([b, f, d, e, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9049([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2839([a, c, h, d, b, f, g, i, j, k], is_dual)
    } else {
        select_9050([a, c, d, b, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_9053([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_81([a, b, c, d, g, i], is_dual)
    } else {
        select_4717([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_9054([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3639([a, b, f, c, h], is_dual)
    } else {
        select_213([g, f, h, b, c, e, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9052([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9053([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_9054([a, b, c, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_9048([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_9049([a, b, d, c, e, f, g, h, i, k, j], is_dual)
    } else {
        select_9052([a, b, c, g, h, i, j, k, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_9056([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_115([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_115([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_9055([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2603([b, c, e, f, a, d, g, h, i, j], is_dual)
    } else {
        select_9056([a, g, d, b, c, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9047([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_9048([c, d, e, a, f, g, h, i, b, j, k], is_dual)
    } else {
        select_9055([a, c, d, b, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_9059([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2271([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4039([g, b, a, c, e, h, i, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_9060([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_947([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2002([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_9058([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_9059([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_9060([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_9064([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_314([e, f, c, d, i, h, g], is_dual)
    } else {
        select_314([e, g, a, b, j, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_9063([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9064([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_1736([b, f, d, e, a, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9065([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7923([a, b, f, d, e, h, g, i, j], is_dual)
    } else {
        select_632([a, b, c, g, i, j, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_9062([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9063([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_9065([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9068([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1289([b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_942([a, b, c, d, e, g, f, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9067([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9068([h, j, k, l, g, f, i, b, c, d, e], !is_dual)
    } else {
        select_2908([a, b, d, e, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9066([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4369([f, b, a, d, e, g, h, i, k, l], is_dual)
    } else {
        select_9067([a, c, b, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9061([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9062([c, d, a, e, f, g, b, h, j, i], is_dual)
    } else {
        select_9066([c, b, d, e, f, g, a, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9057([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_9058([b, a, c, e, h, g, d, i, j], is_dual)
    } else {
        select_9061([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9046([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_9047([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_9057([a, b, c, d, e, i, h, j, g, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_9072([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_226([a, b, d, e, f, h, g, i, k], is_dual)
    } else {
        select_2943([a, b, c, d, i, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9071([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9072([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_777([a, d, e, f, c, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_9073([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3266([a, b, c, f, d, e, h, g, i, j, k], is_dual)
    } else {
        select_777([a, c, d, e, b, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_9070([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9071([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_9073([a, b, d, e, f, c, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9069([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9070([a, b, e, c, f, g, h, i, d, j, k], is_dual)
    } else {
        select_9070([a, b, e, d, f, g, h, i, c, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9045([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_9046([b, c, d, e, f, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_9069([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 1
fn select_9078([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_778([a, b, c, e, f, g, h], is_dual)
    } else {
        select_389([a, b, c, d, e, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_9079([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_750([b, c, d, e, f, a, g, h], is_dual)
    } else {
        select_259([b, c, a, e, f, d, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_9077([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_9078([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_9079([a, b, c, d, e, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9080([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2138([a, h, b, c, d, e, g, i, j], is_dual)
    } else {
        select_2138([a, g, b, c, d, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9076([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_9077([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_9080([a, c, d, e, f, i, h, b, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_9083([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1162([a, d, e, b, c, g, h, f], is_dual)
    } else {
        select_1162([a, d, e, c, b, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_9082([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4289([g, i, j, k, l, b, c, h, d, e, f], !is_dual)
    } else {
        select_9083([i, g, j, k, l, a, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9081([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9082([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_9082([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9075([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9076([a, c, d, e, f, g, b, i, h, j, k], is_dual)
    } else {
        select_9081([a, i, b, c, d, e, f, j, k, h, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_9088([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5155([c, a, f, d, g, i, e, j, h], is_dual)
    } else {
        select_987([d, e, c, b, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9087([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9088([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_9088([c, b, d, e, f, a, g, h, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_9091([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_453([b, a, c, e, d, f, g], is_dual)
    } else {
        select_215([e, c, f, d, a, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_9090([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_560([d, e, b, c, f, g, h, j], is_dual)
    } else {
        select_9091([d, k, j, e, h, i, a, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9089([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9090([b, c, d, e, f, g, h, i, j, k, m], is_dual)
    } else {
        select_1935([e, g, i, j, l, k, a, h, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9086([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_9087([e, j, m, g, k, l, f, b, a, i], !is_dual)
    } else {
        select_9089([b, a, c, d, e, f, g, h, k, l, i, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9085([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9086([e, j, l, m, a, f, b, k, g, c, h, i, d], !is_dual)
    } else {
        select_9086([f, j, l, m, b, e, a, k, g, c, h, i, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9084([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9085([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9085([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9074([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_9075([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9084([a, i, h, k, n, b, c, l, m, d, j, e, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9044([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_9045([a, b, d, e, f, g, c, h, j, i, k, l, m], is_dual)
    } else {
        select_9074([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8963([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_8964([g, d, e, c, a, b, h, i, k, f, j, l, m, n], is_dual)
    } else {
        select_9044([g, d, e, c, a, b, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8890([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_8891([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_8963([b, c, a, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_9100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4829([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1693([a, b, c, f, h, g, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9099([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_947([c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_9100([a, b, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_9102([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_771([c, b, d, e, f, a, g, i, h, j], is_dual)
    } else {
        select_1518([a, c, g, e, f, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9101([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1568([a, b, c, d, g, i, j, k, h], is_dual)
    } else {
        select_9102([c, d, e, f, a, b, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9098([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_9099([b, c, d, g, f, a, h, i, j, l, k], is_dual)
    } else {
        select_9101([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9097([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_8748([c, a, b, d, g, h, k, j, l, i], is_dual)
    } else {
        select_9098([c, a, b, d, e, f, g, h, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9105([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6568([a, b, e, c, d, f, g, h, k, i, l], is_dual)
    } else {
        select_1568([c, d, a, b, g, f, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9107([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_491([h, i, k, l, a, j, b, g, d, e], !is_dual)
    } else {
        select_3230([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_9108([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_265([a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_3340([a, b, e, d, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_9106([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9107([g, h, m, j, k, l, i, e, d, f, b, c], !is_dual)
    } else {
        select_9108([j, k, g, h, m, d, l, e, i, a], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9104([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_9105([d, h, j, k, m, e, l, i, f, a, g, c], !is_dual)
    } else {
        select_9106([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9103([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_8748([e, j, k, h, d, l, f, a, b, i], !is_dual)
    } else {
        select_9104([b, a, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9096([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_9097([c, d, a, e, f, b, h, g, i, k, j, l], is_dual)
    } else {
        select_9103([l, k, n, a, h, g, m, b, i, c, d, j, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9112([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2849([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_408([g, a, b, c, e, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9111([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9112([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9112([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7823([d, a, e, f, b, c, g, h, i, j, l], is_dual)
    } else {
        select_7290([a, b, c, e, d, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9110([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_9111([a, b, d, c, e, h, g, j, k, l, i], is_dual)
    } else {
        select_9113([c, a, b, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9117([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_324([b, d, c, e, g, f, h], is_dual)
    } else {
        select_1484([a, f, b, d, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9118([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_886([b, c, d, h, f, g, i], is_dual)
    } else {
        select_2920([a, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9116([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_9117([b, f, d, e, a, g, h, i, j, k], is_dual)
    } else {
        select_9118([b, a, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9115([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5742([b, d, c, e, f, a, g, i, j, h, k], is_dual)
    } else {
        select_9116([b, d, a, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9121([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3707([d, a, b, f, e, h, g, j, k, i], is_dual)
    } else {
        select_1479([c, d, b, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9120([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9121([c, d, a, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9121([d, c, b, e, f, a, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9119([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2342([b, c, e, a, f, i, h, g, k, j], is_dual)
    } else {
        select_9120([a, b, d, e, c, g, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9114([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_9115([a, c, d, g, f, b, h, i, k, j, l], is_dual)
    } else {
        select_9119([a, c, d, b, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9109([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9110([a, b, c, e, f, d, i, g, j, h, k, l], is_dual)
    } else {
        select_9114([a, b, c, d, f, e, i, h, j, g, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9095([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_9096([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    } else {
        select_9109([c, d, e, a, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9127([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_565([a, b, c, f, e, h, i, j], is_dual)
    } else {
        select_192([c, e, b, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_9128([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_736([d, i, g, j, h, e, a, b], !is_dual)
    } else {
        select_110([d, g, h, j, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9126([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9127([b, a, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_9128([c, b, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_239([c, b, d, a, i, f, g, h, j], is_dual)
    } else {
        select_1279([f, a, c, b, e, h, i, g, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9125([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_9126([d, e, b, c, g, h, f, j, l, i, m], is_dual)
    } else {
        select_9129([g, l, k, m, h, d, e, j, i, a, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9131([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4901([b, a, c, g, h, i, f, k], is_dual)
    } else {
        select_2343([a, d, b, e, c, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_9134([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_292([e, g, h, f, a, b, c], !is_dual)
    } else {
        select_292([e, g, h, f, a, b, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9133([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9134([a, f, c, d, e, g, h, i], is_dual)
    } else {
        select_999([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_9136([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_98([b, c, d, f, e, g], is_dual)
    } else {
        select_52([f, h, i, a, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9135([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2352([e, b, c, d, f, g, h, j], is_dual)
    } else {
        select_9136([e, i, j, g, h, f, a, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9132([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9133([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_9135([c, b, d, e, f, a, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9130([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9131([b, a, c, d, g, f, h, j, i, k, l], is_dual)
    } else {
        select_9132([a, b, c, e, i, f, g, j, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9124([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_9125([l, i, n, f, j, m, a, g, h, k, c, b, d], !is_dual)
    } else {
        select_9130([a, b, d, c, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9138([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4256([b, c, f, e, h, g, a, i, j], is_dual)
    } else {
        select_1600([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_307([a, e, i, k, b, h, g, d, f], !is_dual)
    } else {
        select_9138([a, e, j, k, i, h, b, f, c, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9123([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_9124([a, c, d, e, b, f, g, h, i, k, j, m, l, n], is_dual)
    } else {
        select_9137([f, i, k, n, a, g, l, b, h, d, j], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9142([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5549([a, j, k, i, m, e, g, b, h, c], !is_dual)
    } else {
        select_2244([e, i, l, j, m, a, h, f, g, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_9144([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_67([b, a, d, f, g, e], is_dual)
    } else {
        select_710([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9143([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9144([e, b, d, a, f, i, g, h], is_dual)
    } else {
        select_5634([a, c, b, g, e, h, i, j, f], is_dual)
    }
}
/// n = 14, i = 6
fn select_9141([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9142([h, k, l, n, f, m, i, j, a, c, d, g, e], !is_dual)
    } else {
        select_9143([c, b, d, i, f, j, k, g, l, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_9146([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4154([a, f, c, b, h, e, i, j, k, g], is_dual)
    } else {
        select_3388([e, b, a, d, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9148([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2228([a, c, g, f, i, e, j], is_dual)
    } else {
        select_50([a, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9147([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_9148([a, b, d, c, e, g, h, i, j, f], is_dual)
    } else {
        select_1122([e, b, c, a, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_9145([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_9146([b, c, d, a, g, e, i, h, f, k, j], is_dual)
    } else {
        select_9147([b, a, f, d, g, i, j, e, k, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_9140([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_9141([a, c, d, e, b, f, h, i, g, k, j, l, m, n], is_dual)
    } else {
        select_9145([c, d, e, g, h, f, b, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9153([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_167([a, b, h, e, g, d, j, k], is_dual)
    } else {
        select_3604([b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9152([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1009([b, a, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_9153([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9154([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_303([a, c, d, f, e, g, h, j], is_dual)
    } else {
        select_1456([a, b, d, g, e, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9151([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9152([a, b, d, c, e, g, f, i, j, h, k, l], is_dual)
    } else {
        select_9154([a, d, c, e, h, g, f, j, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9150([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9151([e, l, m, i, j, k, h, a, f, b, c, g], !is_dual)
    } else {
        select_1794([e, i, j, k, a, f, g, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9149([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_9150([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_3495([k, m, e, h, l, f, b, c, j, a], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9139([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_9140([b, c, d, a, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_9149([i, l, k, n, f, a, m, g, b, h, d, j, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9122([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9123([b, a, c, d, e, h, f, i, j, k, g, m, l, n], is_dual)
    } else {
        select_9139([a, b, c, d, e, h, g, i, j, k, f, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9094([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_9095([b, c, a, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9122([b, c, e, d, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_9161([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3047([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_1797([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9160([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4741([b, a, c, d, e, g, f, i, h, j, k, l], is_dual)
    } else {
        select_9161([e, f, c, d, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9159([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_6622([e, f, j, l, g, k, a, b, i, h, d], !is_dual)
    } else {
        select_9160([b, a, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_9164([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_642([h, j, k, f, i, b, a, g], !is_dual)
    } else {
        select_450([a, b, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9163([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1608([f, i, e, k, h, j, a, b, g], !is_dual)
    } else {
        select_9164([a, b, c, d, f, e, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9162([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1878([e, b, c, f, d, g, h, i, j], is_dual)
    } else {
        select_9163([a, b, c, h, e, g, i, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9158([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9159([a, b, c, d, e, f, g, h, j, l, i, k], is_dual)
    } else {
        select_9162([a, c, b, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9168([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4042([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_356([b, c, g, h, a, j, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_9167([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5562([a, g, b, d, i, h, e, k], is_dual)
    } else {
        select_9168([a, e, b, c, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9166([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_9167([b, a, d, c, f, g, h, e, i, j, k], is_dual)
    } else {
        select_1380([d, b, c, f, g, e, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9170([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6277([c, b, e, d, a, f, h, g, j, i], is_dual)
    } else {
        select_4779([c, e, b, f, g, h, a, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8158([b, a, c, d, e, g, i, f, h, j], is_dual)
    } else {
        select_6340([b, d, f, e, a, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9169([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9170([b, d, c, e, a, g, h, f, j, i], is_dual)
    } else {
        select_9171([b, d, e, c, f, h, a, j, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_9165([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_9166([a, c, d, b, f, h, e, i, g, k, j], is_dual)
    } else {
        select_9169([a, h, c, b, g, f, j, e, k, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_9157([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_9158([c, b, a, d, f, g, e, h, j, i, l, k], is_dual)
    } else {
        select_9165([f, l, e, m, j, a, g, k, b, c, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9174([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2909([e, g, i, j, f, a, b, h, c], !is_dual)
    } else {
        select_7384([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_307([a, b, i, j, c, h, f, d, g], !is_dual)
    } else {
        select_1000([a, b, i, j, c, h, g, e, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9173([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9174([a, c, b, g, e, i, f, j, k, l, h], is_dual)
    } else {
        select_9175([a, e, b, f, d, h, g, i, j, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_9179([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4448([a, b, d, g, e, h, f, j, k, l], is_dual)
    } else {
        select_4448([a, c, d, f, e, h, g, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9178([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9179([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_4199([a, c, d, f, e, h, g, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_9180([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_559([a, c, b, g, e, i, f, h], is_dual)
    } else {
        select_222([a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9177([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9178([b, c, a, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_9180([e, c, f, d, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_9183([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_501([a, f, h, i, d, g, e, c], !is_dual)
    } else {
        select_561([a, f, h, i, d, g, b, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_9182([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2618([a, e, h, i, b, c, g, f, d], !is_dual)
    } else {
        select_9183([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9181([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_307([a, b, i, j, c, h, f, d, g], !is_dual)
    } else {
        select_9182([a, b, i, j, c, h, g, e, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9176([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9177([g, k, m, j, a, h, l, i, e, d, f, c], !is_dual)
    } else {
        select_9181([a, g, j, h, m, d, l, e, i, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9172([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_9173([a, b, c, d, f, g, h, i, j, k, l, e, m], is_dual)
    } else {
        select_9176([f, m, l, i, j, k, b, g, e, a, c, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9156([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_9157([a, b, c, d, e, f, g, h, j, l, k, m, i], is_dual)
    } else {
        select_9172([a, b, c, d, e, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9188([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_463([b, a, d, f, e, g, h, i, j], is_dual)
    } else {
        select_86([a, j, f, k, c, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9187([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9188([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_9188([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9191([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_812([a, c, d, e, h, g, i], is_dual)
    } else {
        select_7537([h, k, a, f, j, b, i, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9190([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9191([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_9191([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_9193([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_324([a, b, c, d, e, f, g], is_dual)
    } else {
        select_324([a, b, c, d, e, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_9192([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_9193([e, f, j, a, b, h, i], !is_dual)
    } else {
        select_443([f, a, c, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9189([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_9190([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9192([a, b, d, h, f, g, i, c, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9186([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9187([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_9189([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9197([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_878([b, a, d, c, f, e, g, h, i], is_dual)
    } else {
        select_2596([a, c, f, g, h, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9196([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9197([j, i, e, k, f, g, h, c, d, a], !is_dual)
    } else {
        select_1951([i, j, f, k, g, e, h, d, c, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9198([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_132([c, a, d, f, e, g, i, h, j, l], is_dual)
    } else {
        select_3531([a, b, c, h, e, g, i, f, k, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9195([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_9196([m, l, k, f, h, a, g, j, c, b, i], !is_dual)
    } else {
        select_9198([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9201([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_120([a, b, d, g, f, i], is_dual)
    } else {
        select_5735([a, c, f, d, e, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9202([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1143([j, h, i, e, f, g, a, b], !is_dual)
    } else {
        select_316([h, i, f, k, d, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9200([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_9201([a, b, c, f, e, d, g, h, j, i], is_dual)
    } else {
        select_9202([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9204([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_97([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_3304([i, f, j, h, e, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9203([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1545([d, a, c, h, f, e, i, g, k], is_dual)
    } else {
        select_9204([d, j, i, k, g, e, h, f, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9199([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9200([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_9203([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9194([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_9195([b, c, a, d, e, g, f, h, i, k, j, m, l], is_dual)
    } else {
        select_9199([l, f, m, a, g, k, b, c, j, h, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9185([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9186([a, b, c, d, h, f, g, j, k, i, l], is_dual)
    } else {
        select_9194([a, b, c, e, d, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_9207([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_3273([a, b, d, h, f, g, c, i, j, k], is_dual)
    } else {
        select_4966([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9210([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1855([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_808([b, a, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9209([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9210([e, i, k, f, h, j, a, b, c, g, d], !is_dual)
    } else {
        select_9210([f, i, k, e, h, j, a, c, b, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9212([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2414([a, c, b, d, f, g, e, h, j, i], is_dual)
    } else {
        select_718([a, e, d, b, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9211([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_9212([g, i, d, k, h, j, e, a, f, b], !is_dual)
    } else {
        select_2453([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9208([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9209([e, a, f, c, d, h, g, i, j, k, l], is_dual)
    } else {
        select_9211([a, g, b, d, i, f, j, h, e, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9206([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_9207([j, d, l, m, h, i, f, e, a, k, b], !is_dual)
    } else {
        select_9208([b, a, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9215([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6416([a, b, e, c, g, f, h, i, l, j], is_dual)
    } else {
        select_5960([a, c, d, b, h, f, g, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9214([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2214([a, c, g, e, f, i, h, b, j, k], is_dual)
    } else {
        select_9215([a, c, b, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9219([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_53([h, c, d, e, g, j], is_dual)
    } else {
        select_266([a, g, b, i, f, k, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_9220([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_685([a, b, h, i], is_dual)
    } else {
        select_48([c, d, a, b, e, f, i, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_9218([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9219([b, c, a, d, e, g, f, i, h, k, j], is_dual)
    } else {
        select_9220([a, h, b, c, g, f, j, i, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_9222([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_252([a, f, d, g, e], is_dual)
    } else {
        select_314([a, e, b, c, h, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_9221([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2895([a, b, f, d, g, e, h, i, j], is_dual)
    } else {
        select_9222([b, c, e, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_9217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9218([b, c, e, a, d, f, h, g, i, j, k], is_dual)
    } else {
        select_9221([b, c, g, e, f, a, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_9224([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_250([a, b, h, e, j, g], is_dual)
    } else {
        select_948([a, c, b, d, g, f, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_9223([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_6135([a, d, f, e, b, g, h, i, j, k], is_dual)
    } else {
        select_9224([a, c, d, e, b, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9216([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_9217([b, a, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_9223([a, b, g, c, e, i, h, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9213([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9214([a, b, c, e, d, f, i, h, j, g, l, k], is_dual)
    } else {
        select_9216([a, b, d, e, c, f, i, g, j, h, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9205([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_9206([l, f, n, a, j, g, m, h, i, b, k, c, d], !is_dual)
    } else {
        select_9213([b, c, a, d, e, i, f, g, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9184([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_9185([a, c, d, b, f, g, i, h, e, j, l, k, m], is_dual)
    } else {
        select_9205([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9155([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_9156([g, a, l, n, b, c, j, m, h, i, d, k, e], !is_dual)
    } else {
        select_9184([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9093([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_9094([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_9155([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_9232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_846([a, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_846([a, b, d, h, f, j, g, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9231([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_9232([a, b, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1142([g, j, k, l, a, i, c, d, f], !is_dual)
    }
}
/// n = 12, i = 4
fn select_9230([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5241([a, b, d, e, h, g, j, k, i], is_dual)
    } else {
        select_9231([a, c, b, e, f, d, g, h, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9235([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_121([a, d, c, i, j, f, h], is_dual)
    } else {
        select_4730([k, i, j, a, h, g, d, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9234([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9235([a, d, b, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_9235([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9237([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_699([i, j, g, h, a, b, f, e, c], !is_dual)
    } else {
        select_1124([g, j, a, b, h, d, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_9237([a, b, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_5094([c, e, b, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9233([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9234([a, c, d, b, f, e, h, i, g, j, k], is_dual)
    } else {
        select_9236([c, d, b, f, a, e, g, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9229([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9230([a, c, b, d, f, e, g, i, j, h, k, l], is_dual)
    } else {
        select_9233([a, c, b, h, f, e, g, j, i, l, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9241([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_84([f, a, d, e, i, g, j], is_dual)
    } else {
        select_2928([a, b, d, c, f, j, h, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9242([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_560([e, f, c, d, h, g, j, k], is_dual)
    } else {
        select_1528([g, a, b, i, e, j, f, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9240([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9241([a, b, d, e, c, f, g, h, j, i, k], is_dual)
    } else {
        select_9242([b, d, a, c, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_9243([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_308([e, b, c, f, d, g, h, j, i], is_dual)
    } else {
        select_2262([d, f, j, g, k, e, i, h, a, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9239([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9240([b, c, a, e, d, g, f, i, h, k, j, l], is_dual)
    } else {
        select_9243([h, c, e, g, a, f, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_9245([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1803([e, f, i, a, g, h, b, c, d], !is_dual)
    } else {
        select_1803([e, g, i, a, f, h, b, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9244([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5241([b, c, d, a, e, f, h, g, i], is_dual)
    } else {
        select_9245([b, c, d, g, f, h, a, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9238([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9239([a, b, d, c, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_9244([g, a, b, c, i, f, j, l, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9228([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_9229([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9238([b, c, e, d, f, g, h, i, j, a, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9249([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1298([c, a, b, d, f, e, g, h, i], is_dual)
    } else {
        select_6823([a, b, c, g, f, h, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9251([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_70([d, f, c, h, e, i, g], is_dual)
    } else {
        select_710([i, d, f, k, j, a, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9250([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5357([d, g, i, k, a, j, h, e, f, c], !is_dual)
    } else {
        select_9251([a, b, c, d, f, e, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9248([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9249([d, g, a, k, e, h, j, i, b, f], !is_dual)
    } else {
        select_9250([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_9254([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_452([a, g, b, i, j, e, h, f], is_dual)
    } else {
        select_364([a, e, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9253([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9254([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_3566([e, c, d, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_9256([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_280([a, g, c, d, e, h, i, j], is_dual)
    } else {
        select_51([a, i, g, j, f, b], !is_dual)
    }
}
/// n = 11, i = 3
fn select_9255([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9256([a, c, b, d, g, f, h, j, k, i], is_dual)
    } else {
        select_282([a, h, b, d, e, i, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9252([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_9253([a, c, b, d, g, i, h, j, f, k, l], is_dual)
    } else {
        select_9255([a, b, c, e, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9247([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_9248([a, i, e, j, b, g, f, k, h, l, m], is_dual)
    } else {
        select_9252([a, c, e, b, d, f, g, h, k, i, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_9259([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_444([a, b, g, h, i], is_dual)
    } else {
        select_2194([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9258([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2534([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9259([a, f, j, b, i, g, h, d, e], !is_dual)
    }
}
/// n = 12, i = 4
fn select_9260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5457([a, b, c, e, g, f, h, i, k, j], is_dual)
    } else {
        select_2870([a, b, c, d, h, f, g, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9257([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9258([a, b, c, d, i, f, j, g, k, l], is_dual)
    } else {
        select_9260([a, b, c, e, d, f, h, g, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9246([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9247([a, b, c, d, e, f, h, j, i, g, k, l, m], is_dual)
    } else {
        select_9257([a, b, d, c, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9227([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_9228([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9246([a, b, e, f, d, g, h, i, j, c, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_9264([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7123([d, e, a, f, b, c, g, h, i, j], is_dual)
    } else {
        select_7290([a, b, c, f, d, e, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9266([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_637([a, c, d, f, g, h, i, e, j], is_dual)
    } else {
        select_2834([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9267([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2271([a, c, g, d, e, h, f, i, j], is_dual)
    } else {
        select_1531([f, c, b, a, e, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_9265([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_9266([b, d, e, a, f, g, c, h, i, j, k], is_dual)
    } else {
        select_9267([b, d, e, c, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9263([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9264([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_9265([b, d, e, c, f, h, g, a, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_9271([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_288([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_288([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_9270([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9271([a, b, c, d, h, g, i, j], is_dual)
    } else {
        select_1194([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9269([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_9270([a, d, e, f, b, c, g, h, j, i], is_dual)
    } else {
        select_4272([g, a, b, c, d, e, i, k, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_9274([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4268([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_6024([c, d, e, b, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9276([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_451([b, a, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_24([i, j], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9276([e, h, j, k, g, i, a, f, c, d, b], !is_dual)
    } else {
        select_874([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_9273([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_9274([e, i, f, j, k, g, a, h, b], !is_dual)
    } else {
        select_9275([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9272([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1907([f, e, h, i, j, a, b, g], !is_dual)
    } else {
        select_9273([b, c, a, d, e, f, j, g, k, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9268([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9269([b, d, e, a, c, f, g, i, h, k, j], is_dual)
    } else {
        select_9272([a, j, k, l, b, g, i, d, e, h, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9262([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9263([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_9268([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9261([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_2436([a, f, j, m, l, c, g, k, b, i, d, h, e], !is_dual)
    } else {
        select_9262([a, f, j, b, l, m, c, g, i, k, d, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9226([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_9227([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9261([a, h, g, k, n, b, c, m, l, d, i, e, j], !is_dual)
    }
}
/// n = 10, i = 3
fn select_9283([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_81([a, i, j, g, f, b], !is_dual)
    } else {
        select_280([a, g, c, d, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9282([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_6017([a, c, h, f, b, g, i, j], is_dual)
    } else {
        select_9283([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9281([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_6355([a, c, b, e, f, g, d, h, i, j], is_dual)
    } else {
        select_9282([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9280([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9281([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3297([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9279([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_319([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_9280([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9287([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4071([a, b, c, d, f, h, i, j, g, k], is_dual)
    } else {
        select_5410([c, a, b, e, g, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9289([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4794([e, i, j, a, h, g, f, b, d], !is_dual)
    } else {
        select_2997([b, a, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9288([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_3619([a, d, f, e, g, c, h, i], is_dual)
    } else {
        select_9289([a, b, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9286([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_9287([a, b, c, e, d, f, h, i, g, j, k], is_dual)
    } else {
        select_9288([a, b, c, g, h, f, d, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9292([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2897([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_1772([a, h, b, g, e, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9293([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1621([a, c, f, e, i, d, h, j, g], is_dual)
    } else {
        select_975([a, b, d, g, e, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9291([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9292([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_9293([b, c, g, a, e, f, h, j, k, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_9295([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_886([b, d, c, f, e, g, h], is_dual)
    } else {
        select_9091([a, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_9296([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_67([c, a, d, f, e, g], is_dual)
    } else {
        select_5816([f, h, a, b, c, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9294([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9295([b, a, d, c, f, e, g, h, i], is_dual)
    } else {
        select_9296([b, f, a, c, e, h, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_9290([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9291([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9294([a, b, d, f, g, i, h, e, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9285([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9286([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_9290([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_9300([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1290([c, a, b, d, e, f, g, i, h], is_dual)
    } else {
        select_736([a, c, b, f, e, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_9299([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_9300([b, c, a, d, e, f, g, i, h], is_dual)
    } else {
        select_4772([b, a, c, f, h, g, i, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_9298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3585([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_9299([b, a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9297([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3583([a, b, d, e, c, f, h, g, i, j], is_dual)
    } else {
        select_9298([a, b, e, d, f, h, g, c, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9284([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_9285([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9297([a, c, b, d, h, i, g, j, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9278([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_9279([a, c, d, e, b, f, g, h, j, i, k], is_dual)
    } else {
        select_9284([a, c, d, e, f, g, h, i, j, b, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9303([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9187([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9187([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8036([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_9303([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_9308([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_47([b, c, a, d, f, e, g, i, h], is_dual)
    } else {
        select_948([a, b, g, c, h, f, e, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9307([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2215([a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9308([a, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9306([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9307([a, d, c, e, b, f, i, g, j, h, k], is_dual)
    } else {
        select_8554([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9305([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9306([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9306([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_9312([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_751([g, b, c, d, a, f, h, i], is_dual)
    } else {
        select_6735([d, a, e, b, c, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_9313([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6734([b, c, d, a, e, f, h, g, i], is_dual)
    } else {
        select_2980([b, g, c, d, f, a, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_9311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9312([a, d, e, b, f, c, g, h, i], is_dual)
    } else {
        select_9313([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9310([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9311([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_299([h, g, j, k, a, b, i, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_9314([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4038([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_4038([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_9309([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_9310([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9314([g, h, a, j, k, b, c, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_9304([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_9305([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_9309([a, b, c, d, e, i, h, j, k, g, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9301([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9302([a, h, b, c, d, f, g, j, l, i, k], is_dual)
    } else {
        select_9304([a, b, c, e, f, d, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9277([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_9278([a, h, b, d, e, j, g, i, c, l, k], is_dual)
    } else {
        select_9301([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9225([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9226([a, b, c, e, d, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_9277([a, b, d, e, c, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9092([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_9093([g, d, e, a, b, c, i, j, f, h, k, l, m, n], is_dual)
    } else {
        select_9225([g, d, e, a, b, f, i, j, k, h, c, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8889([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8890([c, a, b, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_9092([d, a, b, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8888([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_8889([h, i, g, f, a, d, e, b, c, j, k, l, m, n], is_dual)
    } else {
        select_8889([h, i, g, f, c, d, e, b, a, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8887([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8888([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_8888([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_8738([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_8739([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_8887([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_7372([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_7373([a, b, c, d, e, g, h, i, j, k, l, m, f, n], is_dual)
    } else {
        select_8738([a, b, c, d, e, g, h, i, f, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3940([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_3941([a, b, c, d, e, f, h, i, j, k, l, m, g, n], is_dual)
    } else {
        select_7372([a, b, c, d, e, f, h, g, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3939([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3940([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_3940([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_3([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_4([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    } else {
        select_3939([a, b, c, d, e, f, g, h, i, j, k, m, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_2([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_9331([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6032([b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_50([i, j, h, k, a, b, f, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9330([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9331([a, c, b, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_7708([a, b, i, c, d, k, g, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_9333([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2889([g, d, i, h, e, f, a, b], !is_dual)
    } else {
        select_1088([f, g, h, d, e, a, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9332([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9333([j, g, k, a, i, f, b, h, c], !is_dual)
    } else {
        select_8439([f, a, b, d, e, g, h, j, k, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_9329([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_9330([a, c, d, b, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_9332([a, d, g, e, f, b, i, h, j, l, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_9335([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1416([d, h, c, g, i, e, f, a], !is_dual)
    } else {
        select_186([c, b, e, d, g, f], is_dual)
    }
}
/// n = 6, i = 2
fn select_9337([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_444([a, b, d, e, f], is_dual)
    } else {
        select_3639([a, b, e, c, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_9336([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1914([d, a, c, g, e, f, h], is_dual)
    } else {
        select_9337([e, h, d, g, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_9334([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_9335([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_9336([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_9328([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_9329([a, c, b, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_9334([a, g, m, b, j, k, l, c, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_9341([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2536([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_6678([a, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_9342([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4545([f, g, i, e, h, a, b, d, c], !is_dual)
    } else {
        select_452([f, e, i, a, g, h, b, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9340([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9341([b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_9342([a, b, i, f, g, h, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_9343([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_691([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_680([c, d, e, g, f, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_9339([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_9340([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9343([a, h, c, d, e, g, b, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_9346([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2404([b, a, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_374([b, g, d, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9345([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9346([a, b, d, c, h, f, g, j, k, i, l], is_dual)
    } else {
        select_282([a, g, c, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9344([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_9345([a, b, c, f, d, g, h, e, i, j, k, l], is_dual)
    } else {
        select_9345([a, b, c, f, e, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9338([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_9339([b, c, e, f, g, d, h, a, j, i, k, l, m], is_dual)
    } else {
        select_9344([c, b, e, f, g, a, h, d, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9327([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_9328([a, c, d, e, f, g, h, i, j, b, k, l, m], is_dual)
    } else {
        select_9338([a, c, d, e, b, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9352([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3604([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_826([a, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9351([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_886([a, h, c, i, f, d, g], is_dual)
    } else {
        select_9352([c, d, b, f, e, g, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9350([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9351([a, b, c, d, e, f, i, g, h, j, k], is_dual)
    } else {
        select_9351([a, b, c, d, e, f, i, h, g, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_9353([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3440([a, b, e, f, c, d, g, h, i], is_dual)
    } else {
        select_3440([a, b, e, f, d, c, g, h, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_9349([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9350([l, n, j, k, m, h, b, c, a, d, i], !is_dual)
    } else {
        select_9353([b, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9355([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_143([a, d, e, f, c, i, h, j], is_dual)
    } else {
        select_3417([a, b, c, d, e, g, i, j, k, h, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9354([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_9355([a, c, b, d, e, f, g, h, i, j, k, m], is_dual)
    } else {
        select_207([a, h, d, e, f, b, i, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9348([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_9349([a, c, d, b, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_9354([c, d, a, e, f, g, h, b, i, j, m, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_9359([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_74([a, b, d, e, f, i, j], is_dual)
    } else {
        select_224([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_807([a, b, c, e, d, f, h, g, i, j], is_dual)
    } else {
        select_9359([i, h, g, k, l, d, e, a, j, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9357([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_805([b, c, a, d, f, e, g, j, h, i, k], is_dual)
    } else {
        select_9358([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9363([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_65([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_71([e, h, i, j, a, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9362([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_565([e, h, j, k, a, f, b, g], !is_dual)
    } else {
        select_9363([i, h, j, k, e, a, g, c, d, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9364([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_174([e, g, k, a, j, c, d], !is_dual)
    } else {
        select_7920([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9361([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_9362([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_9364([i, e, j, k, a, g, h, c, d, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_9365([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1914([f, e, h, a, b, c, g], !is_dual)
    } else {
        select_1813([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_9360([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9361([a, d, b, c, e, f, g, i, j, h, k], is_dual)
    } else {
        select_9365([a, b, c, f, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9356([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9357([c, b, a, d, g, f, h, j, k, i, e, l], is_dual)
    } else {
        select_9360([d, a, e, c, h, g, j, k, f, i, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9347([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_9348([b, c, d, e, f, g, a, h, j, i, k, l, m, n], is_dual)
    } else {
        select_9356([l, j, n, h, a, k, m, b, c, d, e, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9326([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9327([a, e, b, f, g, c, d, h, i, k, l, j, m], is_dual)
    } else {
        select_9347([a, b, e, c, d, f, g, h, j, k, m, n, i, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9325([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9326([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_9326([b, a, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9324([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9325([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_9325([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9323([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9324([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_9324([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_9375([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_451([b, a, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_289([a, i, j, e, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9374([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4794([g, i, j, a, h, e, b, c, f], !is_dual)
    } else {
        select_9375([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9373([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2996([b, a, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_9374([a, c, b, e, h, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9372([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_8689([a, c, g, e, f, d, h, i, j], is_dual)
    } else {
        select_9373([a, b, c, d, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9379([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_71([f, a, j, k, b, i], !is_dual)
    } else {
        select_135([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9380([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([b, d, f, e, h, g], is_dual)
    } else {
        select_118([e, f, j, k, a, i, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9378([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9379([b, a, c, d, e, f, h, g, i, j, l], is_dual)
    } else {
        select_9380([f, j, k, l, a, g, i, b, h, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9382([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([c, d, f, e, h, g], is_dual)
    } else {
        select_88([a, b, g, e, i, f, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9381([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_9382([e, i, j, k, a, g, h, b, f, d], !is_dual)
    } else {
        select_3749([b, a, c, d, e, f, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9377([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_9378([a, b, d, c, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_9381([a, b, d, g, f, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9376([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_8689([b, c, g, e, f, d, h, i, j], is_dual)
    } else {
        select_9377([b, a, c, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9371([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9372([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9376([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_9385([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4032([a, b, g, c, e, i, f, h, j, k], is_dual)
    } else {
        select_1970([a, b, f, d, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9384([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_1920([a, b, f, g, h, i, j, k, e], is_dual)
    } else {
        select_9385([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9389([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_100([c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_51([a, b, d, e, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_9389([f, i, h, j, k, d, e, g, b, a], !is_dual)
    } else {
        select_7867([b, a, c, e, d, f, i, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_9391([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_381([b, c, a, e, g, h, i, f], is_dual)
    } else {
        select_71([e, a, f, d, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_9390([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1073([a, b, d, e, g, i, h], is_dual)
    } else {
        select_9391([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9387([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9388([c, b, d, f, h, a, g, i, j, k, l], is_dual)
    } else {
        select_9390([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9392([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_559([a, i, j, f, g, b, h, c], !is_dual)
    } else {
        select_2907([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9386([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9387([a, c, b, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_9392([a, f, j, k, l, g, h, i, b, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9383([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_9384([a, b, e, c, f, g, h, j, i, l, k], is_dual)
    } else {
        select_9386([a, b, c, g, d, f, j, k, h, l, i, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9370([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_9371([a, k, f, j, l, n, b, m, h, i, c, d], !is_dual)
    } else {
        select_9383([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9369([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9370([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9370([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_9397([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1634([a, c, b, g, f, i, j, k, h, l], is_dual)
    } else {
        select_143([a, b, h, d, e, i, g, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9396([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_9397([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6249([a, c, g, f, j, i, b, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9395([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_9396([a, b, e, c, d, h, g, i, j, k, f, l, m], is_dual)
    } else {
        select_3521([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9394([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9395([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9395([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9393([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_9394([a, b, c, f, d, g, e, h, i, j, k, l, m], is_dual)
    } else {
        select_9394([a, b, c, f, e, g, d, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9368([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_9369([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    } else {
        select_9393([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_9405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_21([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_51([a, i, j, k, f, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_9404([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7195([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_9405([a, b, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9403([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4654([a, b, d, e, h, g, k, l, m, i], is_dual)
    } else {
        select_9404([a, c, f, b, d, e, g, h, i, j, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9402([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_9365([g, l, m, i, a, b, c, j], !is_dual)
    } else {
        select_9403([a, b, d, c, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_9408([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1536([a, c, b, e, f, g, d, h], is_dual)
    } else {
        select_719([g, h, e, f, a, b, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_9407([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_559([e, d, h, i, a, f, g, b], !is_dual)
    } else {
        select_9408([a, b, c, e, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_9411([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_82([a, h, c, j, k], is_dual)
    } else {
        select_2836([a, b, d, e, g, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9410([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_9411([a, b, c, f, g, i, h, e, j, k, l], is_dual)
    } else {
        select_821([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9413([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_252([b, c, e, g, j], is_dual)
    } else {
        select_186([a, h, d, i, f, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9414([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_252([a, b, d, i, k], is_dual)
    } else {
        select_53([c, e, f, h, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9412([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9413([a, c, d, b, f, h, g, i, j, k, l], is_dual)
    } else {
        select_9414([c, d, b, f, a, e, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9409([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_9410([k, g, m, n, a, l, i, b, j, c, h, d], !is_dual)
    } else {
        select_9412([a, d, b, c, f, e, g, h, i, k, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9406([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_9407([g, m, i, a, b, c, l, d, j], !is_dual)
    } else {
        select_9409([a, b, d, e, c, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9401([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_9402([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_9406([a, b, c, e, d, f, g, h, j, i, l, k, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_9417([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_463([a, b, d, g, e, h, f, j, l], is_dual)
    } else {
        select_406([c, a, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9420([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_100([i, e, j, k, h, d, f, a], !is_dual)
    } else {
        select_5480([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9419([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_8588([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9420([c, a, b, e, f, g, h, i, d, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9418([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1126([a, g, b, d, e, h, k, i], is_dual)
    } else {
        select_9419([a, b, c, e, f, h, i, k, j, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9416([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9417([i, e, k, l, m, a, j, g, h, f, b, d], !is_dual)
    } else {
        select_9418([b, a, d, c, e, f, g, j, h, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_9423([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2997([a, b, e, c, f, d, g, h, i], is_dual)
    } else {
        select_2997([a, b, e, d, f, c, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9422([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4098([b, a, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_9423([i, d, g, j, k, a, e, h, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9425([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5762([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_975([a, b, d, g, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9427([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_61([a, b, g, h, j], is_dual)
    } else {
        select_75([c, d, e, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_9428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_21([b, a, c, d, e, f, g, i], is_dual)
    } else {
        select_252([a, f, c, d, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9426([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9427([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_9428([c, b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9424([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9425([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_9426([g, e, i, j, k, a, h, f, b, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9421([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_9422([a, b, c, e, f, h, i, j, k, l, g], is_dual)
    } else {
        select_9424([a, c, f, d, e, g, i, h, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9415([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9416([a, b, d, c, f, h, j, g, k, l, m, n, i], is_dual)
    } else {
        select_9421([a, b, c, e, f, g, i, h, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_9400([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9401([b, a, c, e, d, f, g, i, j, h, l, k, m, n], is_dual)
    } else {
        select_9415([b, c, e, d, f, g, h, i, a, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9399([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9400([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9400([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_9435([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_75([a, j, k, l, i], !is_dual)
    } else {
        select_96([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_9434([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1156([e, j, k, l, m, a, i, f, h], !is_dual)
    } else {
        select_9435([a, b, c, d, e, f, g, h, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9436([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1156([e, j, k, l, m, a, i, g, h], !is_dual)
    } else {
        select_259([e, f, b, c, d, g, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_9433([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9434([a, c, d, e, b, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_9436([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9432([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9433([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9433([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9437([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1152([a, b, i, c, k, l, m, j, g, h], !is_dual)
    } else {
        select_7044([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_9431([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_9432([a, b, c, l, m, n, j, k, i, e, f, g, h], !is_dual)
    } else {
        select_9437([a, b, c, l, m, n, j, k, d, i, e, f, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9438([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_867([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2015([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9430([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9431([a, b, c, e, d, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_9438([a, b, c, k, m, n, j, l, d, e, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9444([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_61([h, a, b, i, j], is_dual)
    } else {
        select_529([a, c, d, e, g, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9443([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1143([e, c, d, a, f, g, h, i], is_dual)
    } else {
        select_9444([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9442([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_9443([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_661([b, a, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_9447([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_63([c, d, e, f, h], is_dual)
    } else {
        select_55([a, b, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9446([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_60([a, h, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_9447([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9445([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1700([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_9446([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9441([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_9442([h, a, j, l, m, b, k, c, d, i], !is_dual)
    } else {
        select_9445([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9440([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9441([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3909([a, h, j, l, m, b, k, c, d, e, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9439([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9440([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_9440([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9429([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9430([a, b, c, d, g, e, f, h, j, l, m, i, k, n], is_dual)
    } else {
        select_9439([a, b, c, e, f, h, d, g, i, k, j, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9398([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_9399([a, b, c, e, g, f, h, i, j, d, k, l, m, n], is_dual)
    } else {
        select_9429([a, b, c, e, d, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9367([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_9368([a, b, c, d, g, h, f, i, e, j, k, m, l, n], is_dual)
    } else {
        select_9398([a, b, c, d, f, g, e, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_9455([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2078([b, a, d, e, c, f, g, h, i], is_dual)
    } else {
        select_3345([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9454([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4802([a, c, d, e, i, k, h], is_dual)
    } else {
        select_9455([a, b, c, h, f, g, j, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9453([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_9454([a, d, c, b, e, f, g, h, j, k, l, i], is_dual)
    } else {
        select_4804([a, b, d, e, c, j, i, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9452([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3503([a, d, e, c, f, g, h, b, i, j, k], is_dual)
    } else {
        select_9453([a, c, d, e, b, f, h, g, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9457([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4182([a, c, d, b, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_4180([k, j, i, c, f, b, d, a, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9456([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4175([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_9457([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9451([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_9452([c, d, b, e, a, f, g, h, j, k, i, l], is_dual)
    } else {
        select_9456([b, c, d, e, h, g, i, k, a, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9462([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_358([a, e, b, d, g, i, h, j, f], is_dual)
    } else {
        select_4672([a, d, c, f, e, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_9461([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3894([a, c, b, f, e, g, d, i, j, h], is_dual)
    } else {
        select_9462([a, c, b, f, d, g, e, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_9465([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_153([b, a, f, g, d, h, i], is_dual)
    } else {
        select_215([a, c, d, f, e, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9464([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4570([a, c, d, f, g, h, e, j, i], is_dual)
    } else {
        select_9465([b, c, e, f, g, i, d, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9464([h, k, l, i, f, j, a, c, b, d, g], !is_dual)
    } else {
        select_4179([a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9460([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9461([j, i, l, a, f, k, b, h, g, c], !is_dual)
    } else {
        select_9463([b, c, a, d, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9468([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_910([c, a, b, e, g, f, i, j, h, l], is_dual)
    } else {
        select_9465([k, l, g, j, a, b, h, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9467([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4183([a, c, f, e, d, g, h, i, j], is_dual)
    } else {
        select_9468([a, b, c, d, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9466([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9467([b, c, a, d, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_9461([j, i, l, a, f, k, b, h, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9459([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_9460([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_9466([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9458([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_9459([b, c, d, e, h, g, i, k, a, j, l, m], is_dual)
    } else {
        select_9452([b, c, d, e, a, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9450([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9451([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_9458([a, b, d, c, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_9473([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9003([b, a, c, e, d, f, g, i, h], is_dual)
    } else {
        select_1430([b, a, c, e, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_9474([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3250([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3989([h, g, j, a, b, i, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9472([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9473([i, j, h, a, b, f, d, c, g], !is_dual)
    } else {
        select_9474([a, b, d, e, c, f, i, h, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_9477([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_67([g, d, i, a, e, b], !is_dual)
    } else {
        select_5706([g, h, i, e, d, a, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9476([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1183([b, a, c, d, e, f, g, h, j], is_dual)
    } else {
        select_9477([b, g, c, e, a, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9479([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_710([a, b, d, c, g, h, j, f], is_dual)
    } else {
        select_710([a, c, e, b, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_9480([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_311([b, d, e, a, f, h, g], is_dual)
    } else {
        select_2228([h, f, i, a, b, g, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9478([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9479([a, b, c, g, d, f, h, j, i, k], is_dual)
    } else {
        select_9480([c, a, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9475([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_9476([a, b, e, g, f, h, d, k, i, j], is_dual)
    } else {
        select_9478([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9471([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_9472([b, a, c, d, h, g, i, j, k, f], is_dual)
    } else {
        select_9475([b, c, a, d, e, g, f, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9482([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5469([a, c, d, f, b, e, g, h, i, j, k], is_dual)
    } else {
        select_5944([a, b, d, e, c, h, g, j, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9481([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_9482([a, c, e, d, b, f, g, i, h, j, k, l], is_dual)
    } else {
        select_5462([a, e, d, c, f, g, h, i, b, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9470([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_9471([b, c, d, e, i, g, h, j, a, k, l], is_dual)
    } else {
        select_9481([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9486([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2313([a, f, d, e, b, g, h, j], is_dual)
    } else {
        select_5430([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_9488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_878([a, b, d, g, f, c, h, i, j], is_dual)
    } else {
        select_293([a, b, d, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9490([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_71([b, a, h, e, j, g], is_dual)
    } else {
        select_6939([b, a, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_9489([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9490([b, c, a, d, e, g, h, f, j, i], is_dual)
    } else {
        select_734([b, a, f, c, e, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_9487([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_9488([b, c, d, f, a, g, e, h, i, j], is_dual)
    } else {
        select_9489([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9485([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9486([a, b, c, d, e, h, i, j, g, k], is_dual)
    } else {
        select_9487([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9484([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_9298([a, b, e, d, g, i, h, c, j, k], is_dual)
    } else {
        select_9485([a, b, e, c, d, f, g, i, h, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_9493([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3042([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_1804([c, b, a, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_476([a, f, h, j, b, i, c, g], !is_dual)
    } else {
        select_1284([a, c, d, b, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9492([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_9493([a, h, f, j, c, b, i, d, g], !is_dual)
    } else {
        select_9494([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9491([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9492([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_9492([a, b, c, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9483([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_9484([a, b, c, e, d, f, g, i, h, k, j], is_dual)
    } else {
        select_9491([a, b, c, e, h, g, i, d, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9469([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_9470([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9483([a, b, d, c, e, i, g, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_9449([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_9450([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_9469([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9448([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9449([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_9449([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9366([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_9367([a, b, c, d, e, f, g, h, i, k, l, m, j, n], is_dual)
    } else {
        select_9448([a, b, c, d, e, g, h, f, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9322([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_9323([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9366([a, b, c, d, g, f, h, i, j, e, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_9504([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_76([e, i, j, a, b, h, f, c, g], !is_dual)
    } else {
        select_76([e, i, j, a, b, h, g, d, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_463([b, a, c, d, f, h, g, i, k], is_dual)
    } else {
        select_9504([a, b, c, e, g, i, f, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9502([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_9503([a, b, c, g, d, f, i, h, k, l, j], is_dual)
    } else {
        select_2981([b, a, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9506([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_299([e, b, d, f, g, i, h, j, l], is_dual)
    } else {
        select_3687([e, j, m, i, l, k, g, f, a, h, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9505([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1834([a, m, j, n, b, i, l, h, c, g, e], !is_dual)
    } else {
        select_9506([k, m, i, n, a, j, h, l, b, c, f, g, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9501([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9502([a, c, d, e, b, h, f, i, j, k, g, l], is_dual)
    } else {
        select_9505([a, b, c, e, d, h, g, i, k, f, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9500([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9501([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_9501([b, a, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9499([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9500([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9500([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9498([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9499([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9499([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_9513([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_834([a, b, f, e, i, h, j, g], is_dual)
    } else {
        select_84([a, g, c, d, h, f, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9512([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_602([a, h, b, d, i, g, e, j, k, l], is_dual)
    } else {
        select_9513([a, d, e, c, g, f, j, k, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_9514([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_765([a, f, c, d, e, h, g, i, j], is_dual)
    } else {
        select_755([a, e, g, b, j, f, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_9511([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_9512([a, c, e, d, b, g, f, h, j, k, i, l], is_dual)
    } else {
        select_9514([a, e, b, d, c, g, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9517([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_140([a, g, d, e, b, h, j, k], is_dual)
    } else {
        select_7577([a, c, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9516([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_282([a, b, c, e, h, g, i, j], is_dual)
    } else {
        select_9517([a, b, d, c, g, f, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9515([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_284([a, b, c, h, d, i, f, l, m, j], is_dual)
    } else {
        select_9516([b, a, c, e, d, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9510([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9511([b, a, d, c, e, f, h, i, j, k, g, l], is_dual)
    } else {
        select_9515([a, b, c, d, e, g, h, i, k, f, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9509([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9510([a, c, b, d, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_9510([b, c, a, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9508([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9509([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9509([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9507([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9508([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_9508([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9497([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_9498([a, b, c, d, e, f, g, h, i, j, k, m, n, l], is_dual)
    } else {
        select_9507([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_9523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_7811([a, i, k, f, l, g, b, j, c, h], !is_dual)
    } else {
        select_1495([a, c, b, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9522([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_9523([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_2169([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9521([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2164([a, b, d, e, c, g, f, h, i, j, k], is_dual)
    } else {
        select_9522([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9527([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1545([a, i, j, h, g, f, c, b, e], !is_dual)
    } else {
        select_3720([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9526([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5599([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_9527([a, b, i, j, k, f, g, h, d, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3108([a, b, d, f, e, h, g, i], is_dual)
    } else {
        select_467([a, e, h, j, k, f, i, b, c, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9530([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_728([a, b, d, e, g, f, h], is_dual)
    } else {
        select_8080([a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_9528([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_9529([a, h, j, k, b, f, i, c, g, d, e], !is_dual)
    } else {
        select_9530([a, b, j, k, f, h, i, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9525([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_9526([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_9528([a, b, c, d, e, f, h, i, j, k, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_9534([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_240([e, k, h, j, a, i, f, b, g], !is_dual)
    } else {
        select_846([a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9533([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9534([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_9534([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_9535([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_728([a, b, c, d, e, f, g], is_dual)
    } else {
        select_66([a, f, c, b, g, e, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_9532([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_9533([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_9535([a, b, f, k, i, j, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9531([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_4961([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_9532([a, b, i, k, l, g, j, c, d, e, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9524([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9525([a, b, g, k, l, i, c, j, d, e, h], !is_dual)
    } else {
        select_9531([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9520([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_9521([a, b, g, i, c, k, m, l, d, j, e, h], !is_dual)
    } else {
        select_9524([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_9539([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1178([a, b, c, d, f, g, i, h], is_dual)
    } else {
        select_2848([a, b, c, e, d, f, g, h, j, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_9542([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_81([a, g, b, c, h, f], is_dual)
    } else {
        select_348([a, d, e, b, c, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_9541([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_3108([a, f, d, e, b, h, g, i], is_dual)
    } else {
        select_9542([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_9540([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_9541([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_1372([a, b, d, g, f, c, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_9538([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_9539([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_9540([a, b, d, f, h, g, c, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9545([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_287([a, c, b, h, g, i, f, k], is_dual)
    } else {
        select_8059([a, c, b, d, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9544([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1920([a, b, h, c, i, g, j, k, f], is_dual)
    } else {
        select_9545([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9543([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_7142([a, g, i, j, l, f, b, k, c, h], !is_dual)
    } else {
        select_9544([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9537([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_9538([a, i, g, k, f, m, l, b, c, j], !is_dual)
    } else {
        select_9543([a, c, b, d, e, g, f, h, i, l, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9536([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9537([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9537([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9519([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9520([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9536([a, b, c, d, e, f, g, j, k, h, i, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9553([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_294([a, b, e, c, h, f, i, j], is_dual)
    } else {
        select_186([a, f, d, g, e, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9552([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_819([h, j, k, i, f, g, a, d, e, c], !is_dual)
    } else {
        select_9553([i, h, k, j, d, g, a, f, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9551([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_9552([b, a, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_699([e, c, a, f, d, h, g, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9555([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4241([j, h, i, k, e, g, a, f, d, c], !is_dual)
    } else {
        select_376([h, i, k, e, g, a, b, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3484([b, a, c, d, e, f, h, i, j, g], is_dual)
    } else {
        select_4015([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9554([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_9555([h, i, k, e, f, j, g, b, c, a, d], !is_dual)
    } else {
        select_9556([h, k, i, f, j, g, e, a, c, d, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9550([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9551([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_9554([i, h, j, k, a, e, f, b, c, g, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9549([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5892([a, b, d, c, e, g, h, i, f, k], is_dual)
    } else {
        select_9550([a, c, b, d, g, f, h, i, e, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_9560([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_2089([e, g, h, a, b, c, f], !is_dual)
    } else {
        select_111([e, g, h, a, c, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9559([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1671([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_9560([a, d, e, b, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9558([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9559([e, a, i, j, k, b, f, h, c, g], !is_dual)
    } else {
        select_2247([b, a, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9558([a, b, c, d, e, f, g, i, k, h, j], is_dual)
    } else {
        select_3005([a, e, k, j, i, f, b, c, h, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9548([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_9549([a, c, b, d, e, g, f, h, i, k, j], is_dual)
    } else {
        select_9557([a, b, c, d, e, g, h, i, j, k, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_9564([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2472([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3259([b, g, h, e, i, f, a], is_dual)
    }
}
/// n = 10, i = 4
fn select_9563([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_8288([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9564([a, c, d, e, f, g, h, b, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_9566([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2955([a, b, f, h, e, i, g, d], is_dual)
    } else {
        select_7172([b, a, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_9565([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9566([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_9566([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9562([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_9563([a, b, e, c, d, g, i, f, h, j], is_dual)
    } else {
        select_9565([a, b, e, d, g, f, i, c, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_9561([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_9562([a, i, j, k, h, f, e, c, b, g], !is_dual)
    } else {
        select_4847([a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9547([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_9548([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_9561([a, b, d, e, c, g, h, f, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_9573([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1289([e, b, c, g, a, f, h, i], is_dual)
    } else {
        select_48([a, d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_9572([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_81([a, h, b, e, f, i], is_dual)
    } else {
        select_9573([a, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9571([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_578([a, c, d, f, h, b, g, i, j, k, l], is_dual)
    } else {
        select_9572([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9570([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_7356([a, b, i, k, l, g, h, j, f, e], !is_dual)
    } else {
        select_9571([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9569([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_8037([a, b, i, k, l, g, h, f, j, e], !is_dual)
    } else {
        select_9570([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_9575([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2560([a, b, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_4971([a, b, c, h, f, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9574([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9575([a, b, e, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_278([a, b, k, l, i, f, h, j, c, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_9569([a, b, e, f, d, c, h, g, i, j, k, l], is_dual)
    } else {
        select_9574([a, b, e, f, c, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_9580([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2324([b, e, c, a, g, f, h], is_dual)
    } else {
        select_8303([a, b, d, c, e, f, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_9581([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3090([b, a, c, d, e, f], is_dual)
    } else {
        select_3090([d, a, g, b, e, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_9579([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_9580([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_9581([a, e, d, b, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9578([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1998([a, b, h, j, e, i, f, c, g], !is_dual)
    } else {
        select_9579([a, b, e, d, h, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_9582([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7902([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_7902([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9577([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9578([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_9582([a, b, f, d, h, g, i, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9576([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_472([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_9577([a, b, d, e, g, c, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_9568([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_9576([a, b, c, d, g, h, i, e, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9546([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_9547([a, b, g, d, e, i, h, j, c, k, l], is_dual)
    } else {
        select_9567([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9518([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9519([a, b, c, i, l, m, d, j, e, k, f, h, g], !is_dual)
    } else {
        select_9546([a, b, c, d, l, m, j, i, e, k, f, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9496([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_9497([a, b, c, d, f, e, g, h, i, j, k, n, l, m], is_dual)
    } else {
        select_9518([a, b, c, d, k, m, n, h, e, j, l, f, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_9591([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_878([a, e, c, d, h, g, f, j, i], is_dual)
    } else {
        select_1049([f, a, b, d, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_255([c, d, a, e, f, b, g, h, i], is_dual)
    } else {
        select_9591([c, d, b, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9589([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_9503([b, a, c, g, d, f, j, h, k, i, l], is_dual)
    } else {
        select_9590([b, c, a, f, e, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9592([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_282([b, h, c, a, e, i, g, j], is_dual)
    } else {
        select_3687([b, a, d, c, g, f, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9588([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9589([b, a, c, e, d, h, g, i, k, j, f, l], is_dual)
    } else {
        select_9592([b, a, d, e, c, h, f, i, k, g, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9597([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_91([a, b, h, i, j], is_dual)
    } else {
        select_266([c, a, d, f, e, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_9598([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_167([a, b, e, d, f, h, i, g], is_dual)
    } else {
        select_252([a, f, c, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_9596([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_9597([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_9598([c, b, d, e, f, a, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9599([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2441([i, j, l, e, h, k, a, f, b, g, d], !is_dual)
    } else {
        select_6138([a, c, d, e, g, i, h, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9595([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_9596([a, b, d, e, f, h, i, k, j, m], is_dual)
    } else {
        select_9599([b, c, d, e, f, g, h, j, i, l, k, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_9602([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_48([b, f, d, e, h, g, k, i], is_dual)
    } else {
        select_325([a, b, c, i, j, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9601([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_9602([b, a, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_22([h, d, e, i, a, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9603([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2472([a, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_532([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9600([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9601([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_9603([a, c, f, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9594([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9595([a, b, e, d, c, f, h, g, k, i, l, j, m], is_dual)
    } else {
        select_9600([c, b, e, a, d, f, h, i, k, j, g, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9606([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_565([b, a, e, f, i, j, l, h], is_dual)
    } else {
        select_7648([c, b, d, a, e, f, g, h, i, k, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9605([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7649([c, f, b, d, e, h, g, i, j, l, k], is_dual)
    } else {
        select_9606([b, a, d, c, e, h, g, i, f, k, l, m, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9604([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9605([b, a, c, e, d, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_976([a, b, c, d, h, f, g, j, l, i, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9593([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_9594([c, b, d, e, f, a, g, h, i, k, j, l, m], is_dual)
    } else {
        select_9604([c, a, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9587([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_9588([b, a, e, f, c, h, i, g, d, k, j, l], is_dual)
    } else {
        select_9593([b, a, c, e, d, f, h, i, g, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_9610([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3043([a, c, b, d, g, f, i, e, h], is_dual)
    } else {
        select_6273([d, i, h, a, g, f, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9609([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5276([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_9610([a, b, g, d, i, e, h, j, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_9613([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_618([a, c, d, b, f, e, h, g], is_dual)
    } else {
        select_1402([a, d, e, f, b, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_9612([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_9613([g, h, f, c, d, i, a, e], !is_dual)
    } else {
        select_162([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9614([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4060([a, c, b, d, e, f, h, j, i, g], is_dual)
    } else {
        select_86([f, g, a, b, d, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9611([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_9612([e, c, g, a, f, d, h, i, j], is_dual)
    } else {
        select_9614([a, b, c, d, f, h, i, e, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9608([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_9609([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_9611([a, b, d, e, c, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9619([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_68([a, g, e, i, j], is_dual)
    } else {
        select_252([b, c, d, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9618([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_67([i, k, l, a, f, b], !is_dual)
    } else {
        select_9619([b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9617([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9618([a, c, b, d, g, f, i, j, k, l, m, h], is_dual)
    } else {
        select_200([b, a, d, e, i, h, g, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9621([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_81([a, j, l, i, e, c], !is_dual)
    } else {
        select_6537([i, k, j, l, g, a, h, b, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9623([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5876([b, a, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_266([a, d, c, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9622([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_886([b, g, d, a, f, h, i], is_dual)
    } else {
        select_9623([b, c, a, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9620([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_9621([a, c, d, e, f, g, h, j, i, l, k, m], is_dual)
    } else {
        select_9622([b, c, d, e, f, g, h, k, i, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9616([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9617([b, c, a, d, e, f, h, i, g, k, l, j, m], is_dual)
    } else {
        select_9620([a, c, d, b, e, g, h, f, j, k, i, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_9625([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1968([b, d, f, a, e, g, i, h, j], is_dual)
    } else {
        select_8202([a, c, b, g, d, f, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9626([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_661([a, d, b, c, h, f, j, l, m], is_dual)
    } else {
        select_3429([b, c, e, a, f, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9624([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9625([b, c, a, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_9626([a, c, d, b, e, g, h, j, f, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9615([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_9616([c, b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_9624([c, a, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9607([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_9608([b, c, d, e, j, g, k, l, a, m, i], is_dual)
    } else {
        select_9615([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9586([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_9587([b, c, d, e, a, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_9607([b, c, a, d, e, f, h, i, j, k, l, m, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_9585([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9586([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_9586([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_9633([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6314([f, i, g, k, j, a, h, d, e, b], !is_dual)
    } else {
        select_648([a, d, c, f, g, e, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9632([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_9633([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_988([d, e, c, a, g, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9631([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_6386([a, b, c, e, d, g, f, i, h, j, k], is_dual)
    } else {
        select_9632([a, c, b, e, g, f, i, h, d, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9636([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_110([a, f, g, j, h, e, c], !is_dual)
    } else {
        select_2144([a, b, e, d, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9637([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_331([a, j, g, l, k, h, e, c], !is_dual)
    } else {
        select_3704([i, h, l, a, k, g, b, f, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9635([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_9636([a, e, d, g, f, i, h, b, j, k], is_dual)
    } else {
        select_9637([a, b, d, c, f, e, h, g, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9640([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_685([a, b, c, g], is_dual)
    } else {
        select_5616([g, i, j, f, e, h, a, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_484([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_34([h, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9639([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9640([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_9641([d, b, c, e, f, g, h, i, a, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9638([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3636([b, a, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_9639([b, c, d, f, g, a, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9634([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_9635([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_9638([b, c, a, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9630([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_9631([i, m, k, a, b, l, j, d, c, h, f], !is_dual)
    } else {
        select_9634([a, b, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_9646([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_294([d, g, i, h, f, e, a, b], !is_dual)
    } else {
        select_381([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9645([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1309([b, a, c, e, g, f, h, j, k, i], is_dual)
    } else {
        select_9646([g, k, l, a, h, i, b, d, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9644([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6967([b, c, e, g, h, f, a, i, j, k], is_dual)
    } else {
        select_9645([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9647([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_9212([a, b, c, d, f, g, e, h, j, i], is_dual)
    } else {
        select_5760([b, c, d, f, e, g, a, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9643([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_9644([a, b, c, d, e, g, h, f, i, k, j, l], is_dual)
    } else {
        select_9647([a, b, f, e, h, c, g, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9648([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2409([b, c, e, d, g, h, j, a, i, k, l], is_dual)
    } else {
        select_3517([b, c, a, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9642([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_9643([b, c, d, g, f, a, h, j, k, i, l, m], is_dual)
    } else {
        select_9648([b, d, c, e, f, a, h, g, k, i, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9629([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9630([b, a, d, c, f, e, i, h, k, g, j, l, n], is_dual)
    } else {
        select_9642([a, c, b, e, f, d, i, g, j, k, h, m, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_9654([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_186([a, c, b, j, g, k], is_dual)
    } else {
        select_228([b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9653([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2078([a, h, d, c, b, g, j, i, k], is_dual)
    } else {
        select_9654([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9652([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_9653([c, a, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1448([a, i, e, f, b, h, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9651([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_9442([a, b, d, c, e, i, k, l, m, h], is_dual)
    } else {
        select_9652([c, e, a, f, b, d, g, h, i, j, k, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_9657([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_724([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_724([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9656([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9362([a, d, b, c, h, f, i, j, k, g, l], is_dual)
    } else {
        select_9657([b, c, a, f, e, g, h, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9658([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_791([a, b, d, c, g, f, i, j, h], is_dual)
    } else {
        select_1550([f, a, c, b, e, h, g, k, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_9655([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_9656([b, a, c, d, g, f, h, j, k, l, m, i], is_dual)
    } else {
        select_9658([a, c, b, f, e, h, g, i, j, m, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9650([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9651([b, c, d, a, e, f, h, g, j, i, k, l, n, m], is_dual)
    } else {
        select_9655([d, b, e, c, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_9662([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5735([h, k, j, d, i, e, g, a], !is_dual)
    } else {
        select_1528([e, b, c, f, d, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9661([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_86([f, g, b, c, d, i, h], is_dual)
    } else {
        select_9662([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9664([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_618([a, f, e, d, b, h, g, j], is_dual)
    } else {
        select_3186([a, c, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_9665([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1452([g, f, d, a, h, c, e], !is_dual)
    } else {
        select_1770([a, b, c, e, d, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9663([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_9664([a, b, c, d, f, e, h, g, j, i], is_dual)
    } else {
        select_9665([e, j, i, f, h, g, a, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9660([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_9661([b, c, a, d, f, g, h, e, j, i, k], is_dual)
    } else {
        select_9663([g, h, k, j, d, i, a, f, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9667([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_9662([k, l, i, g, j, a, h, b, f, e, c], !is_dual)
    } else {
        select_4163([a, b, h, d, g, i, e, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9669([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_638([b, a, d, e, h, g, f, i], is_dual)
    } else {
        select_1770([h, j, g, i, e, a, b, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9668([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9669([f, a, b, d, e, g, i, h, j, k], is_dual)
    } else {
        select_9664([a, g, b, c, e, h, j, f, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9666([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_9667([a, b, c, d, g, f, i, h, e, j, l, k], is_dual)
    } else {
        select_9668([a, c, b, d, f, e, g, i, h, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9659([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9660([e, l, h, f, j, k, a, g, i, b, c], !is_dual)
    } else {
        select_9666([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9649([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_9650([b, c, d, e, a, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_9659([l, m, n, i, b, j, a, c, g, d, k, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9628([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_9629([b, d, c, e, a, f, h, g, i, j, l, k, n, m], is_dual)
    } else {
        select_9649([b, a, d, e, c, f, h, i, j, l, k, m, g, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9627([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9628([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9628([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9584([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_9585([a, b, d, f, c, e, g, h, j, i, l, k, m], is_dual)
    } else {
        select_9627([a, b, c, e, f, d, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9583([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9584([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_9584([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9495([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_9496([a, b, c, d, f, g, h, i, j, k, e, l, m, n], is_dual)
    } else {
        select_9583([a, b, c, d, f, g, e, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9321([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_9322([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_9495([a, b, c, d, e, g, h, i, j, k, f, m, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9320([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_9321([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_9321([a, b, c, d, e, g, f, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9319([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9320([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_9320([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_9681([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_7124([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1922([g, b, h, f, i, a, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9683([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_234([a, h, d, e, g, f, i, j, k], is_dual)
    } else {
        select_535([a, d, e, b, c, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9682([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9683([c, b, d, e, f, a, g, h, i, k, j], is_dual)
    } else {
        select_299([a, l, h, m, b, g, j, d, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9680([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_9681([a, d, g, e, f, h, c, i, j, k], is_dual)
    } else {
        select_9682([a, b, d, c, e, f, h, g, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9679([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_9680([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6781([a, g, l, m, b, j, h, k, c, d, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9678([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9679([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_9679([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9686([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2589([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_72([a, b, c, k, l, m, j, h, i, d], !is_dual)
    }
}
/// n = 11, i = 3
fn select_9687([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6175([a, b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2317([a, b, c, d, i, j, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9685([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_9686([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_9687([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_9689([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_7163([a, b, c, e, d, f, h, g, i], is_dual)
    } else {
        select_4598([a, b, f, c, g, d, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9688([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_6054([a, b, e, d, f, h, g, c, i, j, k], is_dual)
    } else {
        select_9689([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_9684([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9685([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9688([a, b, c, e, i, j, h, d, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9677([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_9678([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_9684([a, b, c, e, d, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9676([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9677([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_7246([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_618([i, f, h, j, a, e, g, c], !is_dual)
    } else {
        select_5211([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_9695([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9696([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_3720([a, f, i, k, j, g, e, h, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9698([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1326([b, a, c, f, d, e, h, g, i, j], is_dual)
    } else {
        select_5827([b, c, d, e, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9697([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_728([a, d, g, f, c, h, i], is_dual)
    } else {
        select_9698([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9694([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_9695([a, k, i, l, h, b, c, j, d, f, g], !is_dual)
    } else {
        select_9697([a, b, d, e, f, c, h, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_9701([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_311([a, c, e, d, f, g, h], is_dual)
    } else {
        select_84([a, i, e, k, b, j, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9702([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2107([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_3874([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9700([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9701([a, h, i, l, g, k, b, j, c, f, e], !is_dual)
    } else {
        select_9702([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9699([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1682([a, c, f, e, h, d, g, i, j], is_dual)
    } else {
        select_9700([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9693([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_9694([a, h, i, b, l, m, k, f, c, j, d, g], !is_dual)
    } else {
        select_9699([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9692([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_9693([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9693([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_9705([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1311([a, b, i, j, g, k, f, c, h], !is_dual)
    } else {
        select_1664([a, b, g, i, j, k, h, d, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_9706([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7044([a, b, d, f, c, e, g, h, j, i], is_dual)
    } else {
        select_1664([a, b, c, d, e, g, i, k, l, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9704([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9705([a, b, h, k, l, i, c, j, d, e, g], !is_dual)
    } else {
        select_9706([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 6, i = 2
fn select_9710([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_444([a, d, c, e, f], is_dual)
    } else {
        select_3639([a, e, f, b, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_9709([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1416([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_9710([a, b, h, f, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9708([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1998([a, b, h, j, f, i, c, d, g], !is_dual)
    } else {
        select_9709([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_9711([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_79([a, c, g, d, b, h, f, i], is_dual)
    } else {
        select_8402([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9707([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_9708([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_9711([a, b, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9703([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_9704([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9707([a, b, i, k, l, h, c, d, j, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9691([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_9692([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_9703([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9713([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3295([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_3295([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9712([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1817([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_9713([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_9690([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9691([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9712([a, b, c, g, k, l, d, i, j, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9675([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_9676([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_9690([a, b, c, i, l, n, d, m, e, k, f, g, j], !is_dual)
    }
}
/// n = 10, i = 3
fn select_9721([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1337([a, b, c, d, f, i, h, j], is_dual)
    } else {
        select_782([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_9722([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_565([a, b, d, e, h, g, j, i], is_dual)
    } else {
        select_4297([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9720([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9721([a, c, d, e, b, g, f, i, h, k], is_dual)
    } else {
        select_9722([a, b, e, c, d, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9719([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2214([c, a, d, e, g, f, h, b, i, j], is_dual)
    } else {
        select_9720([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9724([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3759([a, b, c, d, i, f, g, h, j, k, l], is_dual)
    } else {
        select_3759([a, b, c, e, h, f, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_9725([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2970([a, h, j, k, f, i, b, c, g, d, e], !is_dual)
    } else {
        select_3835([a, f, j, k, h, i, b, c, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9723([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9724([a, c, d, b, e, f, g, h, i, j, k, m], is_dual)
    } else {
        select_9725([g, a, b, c, i, f, j, k, h, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9718([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_9719([g, k, f, l, n, h, a, m, b, c, j], !is_dual)
    } else {
        select_9723([b, c, d, a, e, g, f, h, i, j, k, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9717([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9718([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9718([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_9729([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_258([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_542([a, b, c, g, d, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9732([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3080([e, k, l, j, a, h, f, b], !is_dual)
    } else {
        select_2495([a, b, c, d, e, f, g, i, h, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9733([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_21([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_451([i, h, k, l, e, j, a, f, g, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9731([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9732([a, b, c, d, e, f, g, h, i, k, j, m], is_dual)
    } else {
        select_9733([i, m, h, l, e, k, j, f, a, g, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9730([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_9731([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_6990([e, i, l, m, g, j, k, a, f, h, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9728([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_9729([i, e, k, m, g, l, f, a, j, b], !is_dual)
    } else {
        select_9730([a, b, c, d, e, f, g, h, i, l, j, m, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9736([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_560([a, c, b, e, f, h, i, g], is_dual)
    } else {
        select_606([a, b, d, e, f, g, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9735([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2955([f, i, j, b, a, h, g, c], !is_dual)
    } else {
        select_9736([b, a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9738([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2183([a, b, h, e, f, g, i, j, k], is_dual)
    } else {
        select_1459([f, a, c, d, g, e, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_9739([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2269([a, c, b, d, e, f, h, i], is_dual)
    } else {
        select_5387([b, c, a, e, f, d, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9738([b, a, c, d, g, e, f, h, j, i, k], is_dual)
    } else {
        select_9739([b, a, h, g, i, f, j, e, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9734([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_9735([f, i, e, k, l, a, g, j, b, h], !is_dual)
    } else {
        select_9737([b, a, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9727([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_9728([b, c, d, e, g, a, f, h, i, j, k, l, m], is_dual)
    } else {
        select_9734([b, a, d, e, g, f, c, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9726([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9727([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9727([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9716([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_9717([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9726([a, b, c, d, e, i, g, j, k, l, h, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_9745([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_592([f, a, b, c, d, g, h, i], is_dual)
    } else {
        select_350([f, e, i, a, b, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9744([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_330([a, b, h, e, f, g, c, i, j, k], is_dual)
    } else {
        select_9745([c, d, e, f, b, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9743([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2632([a, b, c, d, e, h, g, j, k, i, l], is_dual)
    } else {
        select_9744([a, b, e, f, c, d, g, h, i, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_9748([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_74([a, g, c, d, e, h, j], is_dual)
    } else {
        select_4686([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9747([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9748([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6606([a, g, k, j, l, i, b, f, c, h], !is_dual)
    }
}
/// n = 8, i = 1
fn select_9750([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_586([a, b, c, d, f, g, h, e], is_dual)
    } else {
        select_586([a, b, c, e, f, g, h, d], is_dual)
    }
}
/// n = 11, i = 3
fn select_9749([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9750([d, e, f, a, c, g, h, i], is_dual)
    } else {
        select_224([a, b, c, g, h, f, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9746([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_9747([a, b, c, d, h, g, i, j, f, l, k, m], is_dual)
    } else {
        select_9749([a, c, d, b, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9742([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_9743([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_9746([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_9753([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_559([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_81([a, e, c, f, d, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_9752([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_9753([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_576([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9751([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9752([a, b, k, j, c, i, g, d, h], !is_dual)
    } else {
        select_8187([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9741([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_9742([a, b, d, c, e, f, h, g, i, j, l, k, m], is_dual)
    } else {
        select_9751([a, b, c, d, e, i, h, j, k, l, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_9758([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_444([a, b, f, g, h], is_dual)
    } else {
        select_288([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_9757([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1914([a, b, f, e, g, c, h], is_dual)
    } else {
        select_9758([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_9759([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_6017([e, d, i, h, g, f, b, a], !is_dual)
    } else {
        select_8203([e, i, h, g, d, f, b, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_9757([e, g, h, j, f, i, b, c, d], !is_dual)
    } else {
        select_9759([a, b, d, e, h, f, i, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_9762([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_121([h, c, g, f, d, e, a], !is_dual)
    } else {
        select_121([g, d, h, e, c, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9761([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_9762([b, f, i, h, e, a, g, d], is_dual)
    } else {
        select_4798([b, a, c, d, e, g, i, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_9763([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4318([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_67([h, g, d, e, a, i], !is_dual)
    }
}
/// n = 9, i = 3
fn select_9760([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_9761([a, c, d, e, b, f, g, i, h], is_dual)
    } else {
        select_9763([a, d, b, e, f, c, i, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_9755([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_9756([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_9760([a, c, d, e, b, f, i, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_9767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5085([i, j, f, h, b, g, e, a, c], !is_dual)
    } else {
        select_1123([a, b, e, d, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9766([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_9767([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_486([c, b, h, e, g, f, i, a], is_dual)
    }
}
/// n = 12, i = 5
fn select_9768([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_614([i, l, g, k, j, a, f, b], !is_dual)
    } else {
        select_280([a, g, c, d, e, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9765([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_9766([i, g, l, k, j, a, f, b, c, h], !is_dual)
    } else {
        select_9768([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_9770([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_191([a, b, c, d, h, i, g], is_dual)
    } else {
        select_794([c, d, e, f, a, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9769([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_478([a, b, c, d, h, i, j, k], is_dual)
    } else {
        select_9770([c, d, a, b, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9764([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_9765([d, c, b, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_9769([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9754([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_9755([a, i, b, k, l, g, c, d, j, h], !is_dual)
    } else {
        select_9764([a, c, d, b, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9740([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_9741([a, b, d, c, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_9754([a, b, d, c, e, i, h, j, k, l, g, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9715([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_9716([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9740([a, b, e, c, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_9774([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2421([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_81([a, b, i, f, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9773([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_7589([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_9774([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9772([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2423([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_9773([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9776([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_2581([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_793([a, b, d, c, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9775([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_414([a, b, c, e, f, h, d, i, j, k], is_dual)
    } else {
        select_9776([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9771([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_9772([a, b, c, d, f, h, i, j, e, k], is_dual)
    } else {
        select_9775([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9714([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < d) || (is_dual && m > d) {
        select_9715([a, b, c, e, d, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9771([a, b, c, k, l, n, h, d, m, e, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9674([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_9675([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9714([a, b, c, e, f, g, h, i, j, k, d, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9673([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_9674([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_9674([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_9784([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5944([a, b, c, d, e, h, g, j, i, k], is_dual)
    } else {
        select_1215([c, a, e, f, b, d, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9784([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_9784([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9782([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_7248([a, b, d, f, c, g, h, i, e, j], is_dual)
    } else {
        select_9783([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9789([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_535([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1211([b, h, d, e, f, g, a, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9789([a, b, f, c, d, e, g, h, i, k, l], is_dual)
    } else {
        select_389([a, c, d, e, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9791([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_595([b, c, d, e, f, a, g, h, j], is_dual)
    } else {
        select_595([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9790([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9791([a, b, f, c, d, e, g, i, j, k], is_dual)
    } else {
        select_389([a, c, d, e, b, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_9787([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9788([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_9790([a, b, c, d, e, h, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9794([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2288([a, b, c, h, f, i, j, l, m], is_dual)
    } else {
        select_1176([b, a, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_9796([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_65([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_61([i, a, b, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9795([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9796([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_374([i, h, k, l, a, f, j, b, g, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9793([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9794([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_9795([f, j, i, l, m, a, k, g, b, h, d, e], !is_dual)
    }
}
/// n = 10, i = 3
fn select_9798([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9796([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_9796([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9800([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_213([e, h, j, a, g, f, d], !is_dual)
    } else {
        select_6939([b, a, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9799([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9800([b, a, c, d, e, g, f, h, j, i], is_dual)
    } else {
        select_2413([b, f, d, e, a, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_9797([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9798([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9799([f, i, k, l, a, g, j, b, c, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9792([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9793([a, b, g, d, e, f, h, i, k, j, l, m, n], is_dual)
    } else {
        select_9797([f, k, h, m, n, a, j, l, b, g, i, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9786([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_9787([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9792([b, c, f, d, e, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_9802([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4301([b, c, d, e, i, h, a, j, k, l], is_dual)
    } else {
        select_887([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9801([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9802([g, f, a, b, c, d, e, h, j, i, l, k], is_dual)
    } else {
        select_9802([g, f, a, d, e, b, c, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9785([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_9786([a, c, d, f, g, e, h, i, b, j, k, l, m, n], is_dual)
    } else {
        select_9801([d, b, e, f, g, c, a, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9781([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_9782([a, b, d, e, f, c, g, h, i, k, j], is_dual)
    } else {
        select_9785([a, b, c, d, g, e, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_9807([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1599([a, b, c, d, g, h, i, f, j], is_dual)
    } else {
        select_1232([b, c, d, e, a, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9806([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4524([a, b, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_9807([a, b, d, c, h, i, g, f, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9809([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2282([a, f, b, c, e, h, i, g, j, k], is_dual)
    } else {
        select_5410([b, a, c, d, g, i, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9810([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_463([a, f, c, e, b, g, i, h, k], is_dual)
    } else {
        select_7039([a, b, d, c, f, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9808([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9809([a, b, d, e, g, f, j, i, h, k, l], is_dual)
    } else {
        select_9810([a, b, c, e, h, f, i, g, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9805([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9806([c, b, a, d, e, f, i, g, j, h, k], is_dual)
    } else {
        select_9808([a, c, b, d, e, g, h, i, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9804([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9805([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_9805([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_9814([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6416([a, b, d, c, h, f, g, j, k, i], is_dual)
    } else {
        select_6419([a, c, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_9815([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_264([a, b, e, d, f, h, g, j, i], is_dual)
    } else {
        select_2026([a, b, c, e, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9813([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9814([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_9815([a, c, d, b, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9812([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_9813([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_7451([a, b, c, e, d, f, g, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9811([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9812([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9812([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9803([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_9804([a, b, d, e, g, f, c, h, i, j, k, l], is_dual)
    } else {
        select_9811([a, b, d, e, g, c, h, i, f, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9780([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_9781([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_9803([a, b, d, c, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_9823([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_77([b, e, c, d, g, f, i], is_dual)
    } else {
        select_581([d, a, f, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9822([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_20([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_9823([b, g, c, a, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9821([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5543([a, b, c, d, g, f, h, j, i, l], is_dual)
    } else {
        select_9822([a, c, b, e, f, i, g, j, h, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_9826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4953([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2474([d, j, k, g, a, i, f, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9827([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4953([h, l, m, e, i, j, a, f, g, c, d], !is_dual)
    } else {
        select_5787([e, b, c, d, f, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9825([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_9826([e, l, m, g, i, j, a, f, h, c, d], !is_dual)
    } else {
        select_9827([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_9828([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_291([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_203([j, k, l, f, i, g, a, b, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9824([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9825([i, j, l, m, e, h, a, k, f, g, b, d, c], !is_dual)
    } else {
        select_9828([a, i, j, l, m, e, h, k, f, g, b, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_9820([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_9821([a, c, d, b, e, f, h, i, g, j, l, k], is_dual)
    } else {
        select_9824([a, g, e, d, b, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_9830([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2651([a, b, c, e, g, i, f, h, j, k], is_dual)
    } else {
        select_463([a, b, c, d, f, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_291([b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1137([i, g, k, a, j, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9834([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([e, i, j, h, a, g], !is_dual)
    } else {
        select_30([b, c, d, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_9833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6686([g, i, k, l, j, e, f, a, b, h], !is_dual)
    } else {
        select_9834([a, c, d, f, e, g, h, j, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9831([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9832([a, b, c, d, e, g, f, h, i, j, l], is_dual)
    } else {
        select_9833([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9829([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_9830([a, i, k, f, m, l, b, g, j, h, c], !is_dual)
    } else {
        select_9831([a, b, c, d, e, f, g, h, i, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9819([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_9820([a, b, d, e, c, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_9829([a, j, i, m, n, b, k, l, g, f, c, h, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9838([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_257([c, d, e, a, f, g, h], is_dual)
    } else {
        select_560([a, b, f, g, e, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9837([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_9838([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1703([a, e, c, d, h, f, g, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9836([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_9837([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2640([a, b, c, g, e, i, h, f, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9835([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9836([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_9836([a, b, d, c, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9818([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_9819([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9835([a, g, c, d, j, f, h, b, i, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_9843([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2830([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2825([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9842([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_9843([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_2830([b, a, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9844([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_7277([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1838([e, b, c, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9841([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_9842([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9844([a, c, d, i, b, g, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9840([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9841([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1705([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9847([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1874([a, b, c, d, i, k, h, j], is_dual)
    } else {
        select_3440([a, b, f, h, e, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9846([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_3438([a, b, g, e, f, c, h, i, j, k], is_dual)
    } else {
        select_9847([a, b, d, c, f, e, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9845([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9846([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2099([a, b, c, f, i, h, e, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9839([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_9840([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9845([a, b, c, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_9817([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_9818([a, b, d, f, e, h, g, i, j, c, k, l, m, n], is_dual)
    } else {
        select_9839([a, b, c, d, f, e, h, i, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_9854([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_685([a, i, j, k], !is_dual)
    } else {
        select_5002([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9855([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2664([i, l, m, e, a, k, f, b, c], !is_dual)
    } else {
        select_436([d, b, c, g, i, f, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9853([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9854([a, g, b, e, f, i, j, k, h, l, m], is_dual)
    } else {
        select_9855([a, c, d, b, e, g, f, h, i, k, j, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_9856([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_250([h, k, l, d, a, j], !is_dual)
    } else {
        select_527([d, b, c, g, e, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_9852([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9853([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_9856([a, b, d, i, f, g, e, h, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_9858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3418([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_516([c, d, g, b, e, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_9859([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_527([d, b, c, g, e, f, h, i, j], is_dual)
    } else {
        select_2137([h, k, l, d, m, a, j], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9857([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_9858([g, i, k, l, m, d, h, j, a, f, c], !is_dual)
    } else {
        select_9859([a, c, b, d, f, e, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9851([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9852([a, c, b, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_9857([f, c, d, a, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_9862([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5713([a, d, f, c, h, g, e, j, k, i], is_dual)
    } else {
        select_5713([b, c, e, d, g, h, f, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9861([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9862([b, c, a, d, f, g, e, h, j, k, i], is_dual)
    } else {
        select_2791([a, c, i, b, g, f, k, e, l, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_85([a, c, d, g, h, f], is_dual)
    } else {
        select_266([a, b, f, e, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9864([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9865([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_199([g, c, d, a, h, f, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9863([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1427([a, b, h, d, g, j, i, e, k], is_dual)
    } else {
        select_9864([a, d, e, c, g, f, i, k, h, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9860([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9861([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_9863([a, c, b, d, g, f, h, i, j, e, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9850([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_9851([a, d, b, c, e, f, g, h, j, k, l, m, n, i], is_dual)
    } else {
        select_9860([a, b, c, d, e, g, h, f, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_9869([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1418([c, d, e, g, f, i, h], is_dual)
    } else {
        select_4824([j, i, k, g, a, f, c, b, h], !is_dual)
    }
}
/// n = 11, i = 3
fn select_9871([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1010([a, b, c, i, f, g, h, j, k], is_dual)
    } else {
        select_42([a, b, d, e, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9870([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_8622([b, c, g, d, a, f, h, i, j, k], is_dual)
    } else {
        select_9871([b, c, d, a, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9868([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9869([a, d, c, b, g, f, i, j, k, h, l], is_dual)
    } else {
        select_9870([b, a, d, c, e, f, g, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9867([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_9868([a, b, c, d, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_7462([a, c, d, e, b, g, f, i, j, h, l, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9874([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_785([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_527([i, b, c, a, f, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9873([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_299([h, l, i, m, b, a, k, c, g], !is_dual)
    } else {
        select_9874([a, d, e, b, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9872([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_9873([a, b, c, d, e, f, g, h, i, j, k, l, n], is_dual)
    } else {
        select_4841([b, h, a, c, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9866([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_9867([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9872([a, b, d, c, e, g, h, i, j, k, l, m, n, f], is_dual)
    }
}
/// n = 14, i = 6
fn select_9849([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_9850([b, d, e, c, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_9866([b, a, d, c, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9848([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9849([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9849([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9816([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_9817([a, b, c, f, d, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9848([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9779([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9780([a, b, c, e, f, d, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_9816([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_9878([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4587([a, b, c, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_2127([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9879([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5353([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_5353([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9877([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9878([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9879([a, b, c, i, e, d, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9876([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_6180([a, b, c, d, f, i, h, e, j, k, l, m], is_dual)
    } else {
        select_9877([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9875([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_9498([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9876([a, b, c, d, e, f, g, h, i, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_9778([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_9779([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9875([a, b, c, d, f, g, h, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_9888([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4829([a, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_4565([a, b, c, e, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9887([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_494([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_9888([a, c, b, e, f, d, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_9889([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1914([g, i, h, b, a, e, c], !is_dual)
    } else {
        select_4619([a, e, b, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_9886([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9887([b, c, d, a, e, f, g, i, h, j], is_dual)
    } else {
        select_9889([b, c, d, g, f, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9885([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_4275([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9886([a, d, c, b, f, e, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_9893([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_203([b, c, i, f, a, g, h, j, k], is_dual)
    } else {
        select_787([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9892([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_19([b, c, e, a, f, g, h, j, i], is_dual)
    } else {
        select_9893([a, e, d, b, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9894([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1742([a, b, g, c, e, i, f, j, h, k], is_dual)
    } else {
        select_1742([a, b, f, d, e, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9891([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9892([b, a, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_9894([b, d, c, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9890([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_9073([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9891([a, c, d, f, e, g, h, i, b, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9884([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_9885([a, b, c, d, i, e, h, j, k, g, l], is_dual)
    } else {
        select_9890([a, b, d, c, e, f, i, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9899([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2469([a, c, g, d, f, b, h, i, j, k], is_dual)
    } else {
        select_7746([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9898([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1599([a, c, d, b, g, h, i, j, f], is_dual)
    } else {
        select_9899([a, b, d, e, c, g, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9897([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_9898([a, b, c, d, h, i, g, f, k, j, l], is_dual)
    } else {
        select_4524([a, c, d, f, e, g, j, i, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9896([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9897([a, b, c, d, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_9897([b, a, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9895([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9896([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_9896([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9883([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9884([a, b, c, d, g, f, h, i, e, j, k, l], is_dual)
    } else {
        select_9895([a, b, c, d, g, e, h, i, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9882([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9883([a, b, c, f, g, d, e, h, j, k, i, l], is_dual)
    } else {
        select_9883([a, b, c, f, g, e, d, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9881([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9882([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_9882([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9906([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_233([f, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_2849([f, i, k, l, m, a, g, j, c, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9905([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9906([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9906([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_9910([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_304([e, j, k, h, f, a, b], !is_dual)
    } else {
        select_942([e, b, c, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9909([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9033([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_9910([b, c, d, e, a, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_9911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_7195([b, c, f, a, d, e, g, h, i, j], is_dual)
    } else {
        select_1254([b, h, f, c, a, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9908([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_9909([a, b, c, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_9911([b, c, a, e, f, d, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9907([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9908([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_9908([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9904([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_9905([a, b, j, k, m, n, c, l, d, i, h, f, g], !is_dual)
    } else {
        select_9907([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9903([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9904([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_902([a, b, d, e, f, g, c, i, h, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_9902([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_7247([a, b, c, e, f, d, g, h, i, k, j, l], is_dual)
    } else {
        select_9903([a, b, c, d, g, e, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9901([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_9902([a, b, c, d, f, g, e, h, j, k, i, l, m, n], is_dual)
    } else {
        select_9883([a, b, c, f, g, e, d, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9900([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9901([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_9901([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9880([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_9881([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_9900([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9777([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_9778([a, b, c, d, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_9880([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9672([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_9673([a, b, c, d, e, f, g, h, i, k, l, m, j, n], is_dual)
    } else {
        select_9777([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_9921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_449([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_7048([h, f, j, k, e, a, b, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_9920([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9921([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_9921([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9924([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4379([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_4379([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_9925([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_495([b, g, c, d, a, f, h, i], is_dual)
    } else {
        select_1518([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9923([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_9924([f, j, k, l, a, b, h, c, i, g], !is_dual)
    } else {
        select_9925([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_9922([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9923([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_9923([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_9919([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9920([a, b, k, l, m, c, j, d, g, e, i], !is_dual)
    } else {
        select_9922([a, b, c, d, g, f, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_9926([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8176([a, b, c, d, e, i, k, h, j, l, m], is_dual)
    } else {
        select_3666([a, b, c, h, f, j, g, i, l, m, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9918([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9919([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_9926([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9931([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_878([b, a, c, d, e, f, g, j, h], is_dual)
    } else {
        select_6471([i, j, g, a, e, b, h, c, f], !is_dual)
    }
}
/// n = 12, i = 4
fn select_9930([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_545([b, a, h, d, e, j, g, i, k], is_dual)
    } else {
        select_9931([a, b, i, c, e, f, k, h, j, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_9933([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_834([e, j, k, f, i, a, b, g], !is_dual)
    } else {
        select_50([b, c, d, f, e, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_9932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2241([a, c, b, d, f, e, h, g, i, k], is_dual)
    } else {
        select_9933([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_9929([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_9930([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9932([j, k, m, e, b, a, h, l, i, f, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_9936([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3154([g, k, a, h, j, f, i, b, d], !is_dual)
    } else {
        select_1951([a, b, c, e, g, f, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_9935([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2670([g, i, l, a, b, f, k, j, h, d], !is_dual)
    } else {
        select_9936([a, c, d, e, b, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9938([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_76([a, i, b, e, k, f, h, j, l], is_dual)
    } else {
        select_491([a, c, h, d, e, g, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9937([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_4365([a, b, h, c, e, f, k, l, m, n, i], is_dual)
    } else {
        select_9938([a, d, b, c, e, g, f, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9934([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9935([e, j, m, k, n, a, b, l, h, i, g, d], !is_dual)
    } else {
        select_9937([b, a, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9928([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_9929([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9934([b, c, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_9940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2550([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_2550([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_9941([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_284([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2421([a, f, j, b, k, c, i, h, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_9939([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9940([a, b, k, j, m, c, h, l, f, i, d], !is_dual)
    } else {
        select_9941([a, b, c, h, e, j, g, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9927([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_9928([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_9939([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9917([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_9918([a, d, c, e, b, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_9927([a, c, d, e, f, h, i, b, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9916([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9917([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9917([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_9948([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9800([a, b, g, c, e, f, h, j, i, k], is_dual)
    } else {
        select_34([b, d, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_9947([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9948([a, c, d, b, e, h, f, g, i, k, j], is_dual)
    } else {
        select_6968([a, b, d, c, e, h, g, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9950([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_376([a, c, b, f, g, h, i, e], is_dual)
    } else {
        select_1800([b, c, d, a, f, e, h, j, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9949([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9950([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_4776([g, b, c, a, f, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_9946([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_9947([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9949([a, b, c, h, f, g, i, e, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9945([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_855([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_9946([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_9953([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_602([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_5087([a, f, d, b, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_9952([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_5457([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_9953([a, c, g, e, f, b, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9951([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_9523([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_9952([a, f, j, k, m, g, b, l, c, i, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9944([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_9945([a, c, b, d, e, g, f, h, i, k, j], is_dual)
    } else {
        select_9951([a, b, c, d, e, g, h, i, j, k, f, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9943([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9944([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_9944([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_9959([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_291([b, a, c, d, f, e, g, i, h], is_dual)
    } else {
        select_831([f, i, e, j, a, h, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9958([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9959([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9959([a, b, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9957([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9958([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_9958([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_9962([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9222([a, d, e, b, c, f, g, h], is_dual)
    } else {
        select_9222([a, d, e, c, b, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_9963([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_205([g, a, b, h, e, f], is_dual)
    } else {
        select_75([e, c, d, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_9961([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9962([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_9963([d, e, b, c, g, h, f, a], is_dual)
    }
}
/// n = 10, i = 4
fn select_9960([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_9961([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_6774([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9956([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_9957([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_9960([a, b, c, e, f, d, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9965([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5429([a, f, j, k, l, b, g, i, c, d, h], !is_dual)
    } else {
        select_7514([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9964([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9965([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_9965([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9955([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_9956([a, b, c, d, e, h, i, j, g, k], is_dual)
    } else {
        select_9964([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_9968([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3015([a, c, h, d, f, b, g, i, j, k, l], is_dual)
    } else {
        select_2525([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_9969([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_872([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_3662([a, c, d, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9967([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_9968([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_9969([a, b, c, e, f, d, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_9971([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_474([a, b, i, c, j, f, h, g], !is_dual)
    } else {
        select_1371([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_9972([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3036([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_151([a, b, c, j, h, i, f, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_9970([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_9971([a, b, c, e, f, d, g, i, h, j], is_dual)
    } else {
        select_9972([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9966([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_9967([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    } else {
        select_9970([a, b, c, e, d, h, i, j, g, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_9954([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_9955([a, b, c, k, g, m, i, l, d, j, e, h], !is_dual)
    } else {
        select_9966([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_9942([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_9943([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_9954([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_9915([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_9916([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_9942([a, b, c, l, n, m, d, e, h, f, k, j, i], !is_dual)
    }
}
/// n = 9, i = 2
fn select_9979([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_264([b, c, a, d, f, e, h, i, g], is_dual)
    } else {
        select_264([b, d, a, c, f, e, g, i, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_9981([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2002([a, b, c, h, e, f, g, i], is_dual)
    } else {
        select_2002([a, b, d, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_9980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5059([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_9981([b, c, a, d, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_9978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9979([e, a, c, d, h, b, f, g, i], is_dual)
    } else {
        select_9980([e, b, c, d, h, a, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_9983([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_93([a, c, d, e, f, b, g, h, i, j, l], is_dual)
    } else {
        select_93([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9984([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_8225([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_1000([f, g, h, k, a, j, i, b, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_9982([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_9983([a, f, g, k, l, m, j, h, i, b, c, d], !is_dual)
    } else {
        select_9984([a, b, c, d, e, f, g, h, i, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_9977([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9978([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9982([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_9989([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_361([a, b, g, f, e, h, i], is_dual)
    } else {
        select_40([b, c, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_9988([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4448([a, b, c, g, e, h, f, i, j, k], is_dual)
    } else {
        select_9989([a, c, d, f, e, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_9987([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3901([a, b, g, d, e, i, f, h, j, k, l], is_dual)
    } else {
        select_9988([a, b, h, c, e, f, g, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_9991([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1811([a, b, g, c, f, e, h, i, j, k], is_dual)
    } else {
        select_5550([a, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_9990([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_9991([a, b, g, d, i, e, h, f, j, k, l], is_dual)
    } else {
        select_4563([a, d, c, f, e, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_9986([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_9987([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_9990([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_9994([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5831([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_1385([b, g, d, e, a, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9993([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_36([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_9994([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_9992([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9993([a, b, c, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_777([a, c, d, e, b, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_9985([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_9986([a, c, d, e, f, g, h, i, b, j, k, l], is_dual)
    } else {
        select_9992([a, c, d, b, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_9976([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_9977([a, l, g, m, n, b, c, j, d, k, h, i, e], !is_dual)
    } else {
        select_9985([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9975([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_9976([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9976([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9974([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_9520([a, b, c, l, m, n, d, k, e, h, f, j, i], !is_dual)
    } else {
        select_9975([a, b, c, d, e, g, f, i, h, k, j, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9973([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9974([a, b, c, d, e, f, g, i, j, k, h, l, n, m], is_dual)
    } else {
        select_9974([a, b, c, d, f, e, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9914([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_9915([a, b, c, e, d, f, g, i, j, k, l, m, n, h], is_dual)
    } else {
        select_9973([a, b, c, e, d, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9913([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_9914([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_9914([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_10001([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_473([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_473([a, b, c, e, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10002([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1906([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_8196([a, b, g, c, i, d, h, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_10000([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10001([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_10002([a, b, c, d, e, g, h, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_10005([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_9757([a, c, d, g, f, h, b, i, j], is_dual)
    } else {
        select_2025([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10007([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_287([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_3108([a, h, e, i, f, b, g, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_10009([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_618([b, a, d, c, f, e, h, g], is_dual)
    } else {
        select_1452([b, e, d, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_10008([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_287([a, b, c, e, f, h, i, g], is_dual)
    } else {
        select_10009([a, b, d, c, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_10006([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_10007([a, f, c, e, b, g, h, i, j], is_dual)
    } else {
        select_10008([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10004([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10005([a, b, f, c, e, h, g, j, k, i], is_dual)
    } else {
        select_10006([a, b, c, d, g, f, j, i, k, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10012([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2943([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3889([a, i, f, j, g, b, h, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10011([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6717([a, b, e, d, f, c, h, g, i], is_dual)
    } else {
        select_10012([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10013([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7044([a, b, d, f, c, e, g, h, i, k], is_dual)
    } else {
        select_1959([a, b, c, d, e, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10010([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10011([a, b, c, e, d, g, j, i, k, h], is_dual)
    } else {
        select_10013([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10003([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_10004([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_10010([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_9999([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_10000([a, b, c, e, i, j, d, k, g], is_dual)
    } else {
        select_10003([a, b, c, e, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10018([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_233([a, b, c, e, g, f, h, j, i], is_dual)
    } else {
        select_573([a, f, d, c, e, g, i, h, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10019([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3541([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_112([b, d, c, h, a, f, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10017([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_10018([a, f, j, m, l, b, k, g, i, c, d, h], !is_dual)
    } else {
        select_10019([a, b, c, d, e, f, g, h, i, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10016([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10017([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10017([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8216([a, b, c, d, f, e, h, g, i, j, k, l], is_dual)
    } else {
        select_10016([a, b, c, f, e, d, h, i, g, k, l, j, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10022([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5457([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_1179([a, c, b, d, g, f, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10025([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_910([b, a, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_625([b, f, c, g, e, a, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_10026([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_67([a, b, c, d, e, g], is_dual)
    } else {
        select_1402([a, b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_10024([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_10025([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_10026([a, j, e, g, i, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10023([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_10024([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_3890([a, c, b, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10021([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_10022([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_10023([a, g, c, e, b, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10029([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1741([b, a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_3966([a, b, c, d, g, f, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10028([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10029([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_3162([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_10030([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1914([a, g, i, d, e, f, b], !is_dual)
    } else {
        select_1681([a, c, b, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10027([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_10028([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_10030([a, b, k, g, i, j, c, f, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10020([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_10021([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_10027([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10014([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_10015([a, b, c, d, e, f, g, i, h, k, j, l, m], is_dual)
    } else {
        select_10020([a, b, c, d, f, e, i, g, j, k, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_9998([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_9999([a, b, c, k, l, m, i, h, d, e, j], !is_dual)
    } else {
        select_10014([a, b, c, k, m, l, h, i, j, e, d, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10034([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9971([a, b, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_4598([a, b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_10035([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2213([a, b, d, e, f, g, h, c, i, j], is_dual)
    } else {
        select_865([a, b, d, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10033([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_10034([a, b, c, e, h, i, g, d, j, k], is_dual)
    } else {
        select_10035([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10041([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_382([i, f, j, a, c, b], !is_dual)
    } else {
        select_434([b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10040([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8622([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_10041([a, c, b, f, h, g, i, j, e, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10039([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2395([a, b, d, e, c, f, h, g, i, j], is_dual)
    } else {
        select_10040([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10043([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_580([a, b, f, e, i, h, j, g, k], is_dual)
    } else {
        select_84([a, g, c, d, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10042([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2557([a, c, h, j, e, b, g, k, i], is_dual)
    } else {
        select_10043([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10038([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_10039([a, b, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_10042([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10046([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_580([a, i, j, h, f, b, g, d, c], !is_dual)
    } else {
        select_580([a, i, j, h, g, b, f, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10045([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10043([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_10046([a, g, k, i, l, b, j, e, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10044([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_10039([a, b, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_10045([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10037([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10038([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_10044([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_10050([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_102([a, b, i, e, j, f, h], is_dual)
    } else {
        select_136([a, c, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10049([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10050([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_7565([e, i, k, a, b, j, f, c, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10051([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10050([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1597([a, c, h, e, j, f, b, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10048([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10049([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_10051([a, c, b, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10047([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10048([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_10048([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10036([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_10037([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_10047([a, b, c, e, f, d, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10032([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_10033([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_10036([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10057([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3363([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_7931([i, e, j, k, h, a, f, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10056([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_432([b, a, c, d, g, e, f, h, i, j], is_dual)
    } else {
        select_10057([a, b, c, h, e, g, i, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10059([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_4410([a, h, b, e, g, j, f, i, k, l], is_dual)
    } else {
        select_3430([a, e, c, d, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_10060([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_74([a, f, d, e, i, h, k], is_dual)
    } else {
        select_187([a, b, h, c, f, g, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_10058([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10059([a, d, b, c, e, f, g, i, j, h, l, m], is_dual)
    } else {
        select_10060([b, d, e, a, c, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_10055([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10056([g, b, d, e, a, f, i, h, j, k, l, m], is_dual)
    } else {
        select_10058([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10063([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2104([a, c, b, f, e, g, i, j, k], is_dual)
    } else {
        select_84([g, b, a, d, h, f, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10064([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_250([a, b, c, h, j, g], is_dual)
    } else {
        select_1611([a, d, g, e, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10062([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_10063([b, d, c, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_10064([b, a, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10061([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4418([a, b, c, d, e, g, h, f, i, j, l], is_dual)
    } else {
        select_10062([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10054([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_10055([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10061([a, f, k, l, n, b, g, m, i, c, j, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10053([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10054([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10054([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_10070([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_294([a, b, c, e, f, h, g, i], is_dual)
    } else {
        select_34([b, d, g, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_10069([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1055([e, i, k, l, g, a, j, h, c, b, f], !is_dual)
    } else {
        select_10070([a, e, c, d, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10068([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_10069([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_758([b, e, d, a, f, c, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10072([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8672([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5198([h, e, j, l, k, a, f, i, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10074([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_111([a, b, h, e, f, j, k], is_dual)
    } else {
        select_3931([a, f, c, d, e, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10073([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_67([a, j, l, f, k, h], !is_dual)
    } else {
        select_10074([a, b, c, d, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10071([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10072([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_10073([a, c, d, e, b, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10067([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_10068([a, b, j, l, m, k, g, i, f, h, d, e], !is_dual)
    } else {
        select_10071([a, b, c, d, e, f, h, g, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10066([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5858([a, b, k, g, m, i, l, f, j, c, h], !is_dual)
    } else {
        select_10067([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10076([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_478([a, b, d, c, h, i, j, l], is_dual)
    } else {
        select_867([a, c, b, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10077([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_8910([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1196([a, b, c, f, e, h, g, j, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_10075([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_10076([a, h, b, j, l, m, f, k, c, i, d, g], !is_dual)
    } else {
        select_10077([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10065([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_10066([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_10075([a, b, i, k, m, g, l, c, j, d, h, e, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10052([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_10053([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_10065([a, b, c, l, m, n, g, i, d, k, e, j, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10031([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_10032([a, b, c, d, e, h, g, j, k, l, m, i], is_dual)
    } else {
        select_10052([a, b, c, d, e, f, g, h, i, j, k, m, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_9997([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_9998([a, b, c, d, e, h, j, i, l, k, m, g, n], is_dual)
    } else {
        select_10031([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10085([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_468([c, d, a, b, e, g, f, h], is_dual)
    } else {
        select_7920([h, i, j, a, b, g, c, d, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_10087([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_361([f, h, i, a, b, c, g], !is_dual)
    } else {
        select_1212([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10086([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2772([i, h, k, a, j, b, d, c], !is_dual)
    } else {
        select_10087([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_10084([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10085([h, i, j, m, l, f, g, e, b, c], !is_dual)
    } else {
        select_10086([j, k, m, l, h, i, e, g, f, d, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10090([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_39([g, h, b, d], is_dual)
    } else {
        select_2661([a, d, c, f, e, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10089([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_51([g, h, b, c, f, i], is_dual)
    } else {
        select_10090([a, b, d, f, e, i, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10088([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1143([e, b, c, g, h, f, i, k], is_dual)
    } else {
        select_10089([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10083([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10084([c, a, b, d, e, f, g, j, k, i, h, l, m], is_dual)
    } else {
        select_10088([c, a, b, d, e, f, j, k, h, g, l, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10093([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_642([a, b, c, d, e, f, g, i], is_dual)
    } else {
        select_2228([a, b, e, d, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10092([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_10093([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_684([d, f, h, a, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10094([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_811([a, b, c, e, f, h, g, i], is_dual)
    } else {
        select_574([a, d, b, c, g, f, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10091([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_10092([a, i, e, b, f, h, g, j, k], is_dual)
    } else {
        select_10094([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10082([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_10083([a, b, c, d, h, f, g, i, j, k, l, e, m], is_dual)
    } else {
        select_10091([k, l, j, m, i, f, h, e, g, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10097([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2884([b, a, d, c, g, h, i, f, j, l], is_dual)
    } else {
        select_9899([a, c, b, e, d, g, f, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10096([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_10097([e, l, i, m, j, f, k, g, h, c, d, a], !is_dual)
    } else {
        select_109([e, g, b, i, j, d, f, m, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_10100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_81([a, d, e, c, f, g], is_dual)
    } else {
        select_331([a, d, e, i, h, b, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10099([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_425([a, b, d, e, g, f, h, i], is_dual)
    } else {
        select_10100([a, g, j, b, c, i, h, f, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10098([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_8943([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_10099([a, b, c, e, f, i, h, g, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10095([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_10096([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10098([e, i, j, l, f, k, m, g, h, d, c, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10081([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_10082([a, b, c, e, g, h, d, i, j, f, k, l, m], is_dual)
    } else {
        select_10095([c, b, e, d, g, f, i, a, k, l, h, j, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_10105([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_70([d, h, g, a, f, b, e], !is_dual)
    } else {
        select_2228([a, c, f, d, g, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10104([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2955([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_10105([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10107([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2472([b, c, a, d, e, f, g, i, h], is_dual)
    } else {
        select_6537([a, c, b, d, e, f, h, j, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10106([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10107([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_10107([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10103([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10104([j, k, h, a, b, g, e, f, d], !is_dual)
    } else {
        select_10106([i, j, k, g, a, e, h, f, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10109([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2472([i, j, g, k, d, a, e, b, h], !is_dual)
    } else {
        select_6997([a, b, c, d, e, f, g, j, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10110([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1855([b, a, c, e, d, f, g, j, h, i], is_dual)
    } else {
        select_376([i, j, g, e, d, b, a, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10108([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10109([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_10110([b, a, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10102([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_10103([h, g, k, l, j, i, a, e, b, c, f], !is_dual)
    } else {
        select_10108([a, b, d, i, e, f, g, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10114([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_152([l, m, n, k, e, g, a, c], !is_dual)
    } else {
        select_8951([e, b, d, i, j, f, h, k, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_10115([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_820([g, a, b, j, e, l, h, m], is_dual)
    } else {
        select_529([h, c, d, i, k, f, g, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10113([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10114([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_10115([b, d, a, c, f, g, h, i, k, e, l, j, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10118([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_186([a, f, d, h, e, g], is_dual)
    } else {
        select_1238([f, i, j, b, c, a, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10117([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10118([c, b, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_2772([j, h, l, a, k, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10119([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_67([h, e, j, a, f, b], !is_dual)
    } else {
        select_5535([i, h, j, e, a, f, g, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10116([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_10117([h, j, k, m, l, i, f, g, a, d, e, c], !is_dual)
    } else {
        select_10119([l, k, h, m, i, d, g, a, f, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10112([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_10113([b, a, c, d, e, f, g, i, h, j, k, m, l, n], is_dual)
    } else {
        select_10116([b, c, f, e, h, a, g, i, k, j, l, m, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_10121([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4880([b, a, g, d, f, i, h, k, j], is_dual)
    } else {
        select_174([a, j, c, l, e, g, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_10122([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_81([b, c, a, g, i, j], is_dual)
    } else {
        select_614([a, d, b, c, e, g, f, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_10120([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_10121([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10122([b, a, g, d, f, i, h, k, m, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_10111([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_10112([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_10120([b, a, c, d, e, f, g, i, h, k, j, m, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10101([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_10102([g, n, m, j, l, h, b, a, e, k, c, i], !is_dual)
    } else {
        select_10111([b, a, c, d, e, f, g, h, i, j, l, m, n, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10080([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_10081([b, c, f, e, i, g, k, h, l, j, a, m, n], is_dual)
    } else {
        select_10101([b, a, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10125([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1205([e, f, j, g, m, k, l, h, i, d, b], !is_dual)
    } else {
        select_5988([g, k, l, e, f, j, m, i, h, c, a], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10126([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5988([h, k, l, f, m, i, j, e, g, c, a], !is_dual)
    } else {
        select_5988([f, i, j, h, m, k, l, g, e, d, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10124([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10125([a, b, c, e, f, g, i, j, d, h, k, l, m], is_dual)
    } else {
        select_10126([a, b, d, e, c, h, j, i, f, g, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10130([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1766([e, k, f, l, a, j, b, i], !is_dual)
    } else {
        select_463([e, a, c, f, d, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([f, b, c, e, h, j], is_dual)
    } else {
        select_99([j, k, d, i, a, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_98([d, k, a, g, j, h], !is_dual)
    } else {
        select_10134([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10132([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_10133([i, f, k, g, j, d, a, h, b, e, c], !is_dual)
    } else {
        select_3102([d, a, c, g, f, e, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_10135([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1227([a, d, c, f, e, h, i, g, j], is_dual)
    } else {
        select_152([i, k, f, a, j, d, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10131([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10132([i, h, k, e, j, a, d, g, b, f, c], !is_dual)
    } else {
        select_10135([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10130([a, c, b, d, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_10131([a, c, g, e, f, h, b, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_10139([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_51([a, i, j, k, d, b], !is_dual)
    } else {
        select_6340([b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_10138([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_70([a, b, c, j, k, l, f], is_dual)
    } else {
        select_10139([a, c, d, f, e, g, h, i, j, k, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10141([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_215([k, e, l, a, b, i], !is_dual)
    } else {
        select_764([b, d, c, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10140([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_969([a, c, d, b, e, f, g, i, h, k, j], is_dual)
    } else {
        select_10141([a, b, c, d, e, f, g, i, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_10137([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_10138([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_10140([a, b, c, d, e, f, h, j, g, k, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10144([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_453([b, d, c, e, f, h, g], is_dual)
    } else {
        select_88([d, i, j, a, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10143([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_4871([e, a, c, g, f, d, h, i, j], is_dual)
    } else {
        select_10144([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10142([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1803([a, b, f, d, e, h, i, j, k], is_dual)
    } else {
        select_10143([a, b, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10136([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_10137([a, c, b, d, e, g, f, h, i, j, k, m, l], is_dual)
    } else {
        select_10142([a, f, d, e, b, g, i, h, j, l, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10128([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10129([c, b, a, d, e, f, h, i, g, j, k, m], is_dual)
    } else {
        select_10136([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_10148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_121([g, a, b, h, d, f, j], is_dual)
    } else {
        select_128([i, h, k, d, g, j, e, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10149([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9023([b, a, c, d, e, f, g, j, i], is_dual)
    } else {
        select_1812([a, b, f, e, d, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10148([j, k, i, f, e, h, d, a, b, g, c], !is_dual)
    } else {
        select_10149([a, b, c, f, e, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10150([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_373([b, a, c, d, e, f, g, i, h, j, l], is_dual)
    } else {
        select_6311([a, b, d, e, g, f, h, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10146([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10147([d, a, c, f, g, i, e, j, h, l, k], is_dual)
    } else {
        select_10150([f, k, g, l, m, j, d, h, i, a, e, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10154([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3604([b, a, c, e, d, f, g, i, h, j], is_dual)
    } else {
        select_52([i, d, k, f, j, a], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10153([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5237([a, b, c, d, f, g, e, h, i, k], is_dual)
    } else {
        select_10154([h, k, j, d, i, f, e, a, b, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10152([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_10153([a, b, c, e, d, f, g, i, j, h, k], is_dual)
    } else {
        select_3690([i, d, k, e, h, j, f, a, g, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_8622([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_2396([b, c, e, a, f, d, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10158([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1979([a, e, d, b, f, h, g, i, k, j], is_dual)
    } else {
        select_626([g, a, c, d, e, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10157([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_757([c, a, e, d, b, f, h, g, i, j], is_dual)
    } else {
        select_10158([c, d, b, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10155([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10156([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_10157([a, b, c, e, d, f, i, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10151([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_10152([h, j, l, a, b, i, k, c, f, g, e], !is_dual)
    } else {
        select_10155([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10145([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_10146([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_10151([g, h, l, m, k, i, j, d, a, e, f, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10127([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_10128([d, a, e, c, g, h, i, f, j, m, l, k, n], is_dual)
    } else {
        select_10145([a, b, f, d, e, j, g, h, k, l, n, m, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_10123([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_10124([b, f, d, e, j, g, h, i, k, l, a, m, n], is_dual)
    } else {
        select_10127([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10079([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_10080([a, b, c, d, f, g, i, e, j, h, k, l, m, n], is_dual)
    } else {
        select_10123([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_10164([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1914([a, b, c, f, g, h, e], is_dual)
    } else {
        select_4163([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_10163([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1907([a, b, g, h, i, e, f, c], !is_dual)
    } else {
        select_10164([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10167([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_250([e, a, b, d, g, h], is_dual)
    } else {
        select_955([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_10168([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_84([a, d, c, e, b, f, h], is_dual)
    } else {
        select_300([a, d, b, e, c, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_10166([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10167([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_10168([a, i, e, j, k, f, g, d], !is_dual)
    }
}
/// n = 7, i = 2
fn select_10170([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_311([a, d, e, b, c, f, g], is_dual)
    } else {
        select_311([a, d, e, c, b, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_10169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1102([a, b, e, h, j, k, g], is_dual)
    } else {
        select_10170([a, c, d, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10165([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10166([a, j, k, l, b, h, i, g, c, d, f], !is_dual)
    } else {
        select_10169([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10162([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_10163([a, b, f, h, g, c, j, k, i], is_dual)
    } else {
        select_10165([a, b, d, e, f, c, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10173([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1874([a, i, k, f, l, j, e, b], !is_dual)
    } else {
        select_5544([a, e, c, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10176([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_65([e, b, c, d, f, g, h, i, k], is_dual)
    } else {
        select_103([h, a, i, e, j, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10175([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5478([j, h, k, l, i, a, f, e, g, b], !is_dual)
    } else {
        select_10176([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10174([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6974([a, j, h, k, m, l, f, i, e, g, b], !is_dual)
    } else {
        select_10175([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10172([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_10173([a, d, b, c, e, g, f, j, i, h, k, l], is_dual)
    } else {
        select_10174([a, d, b, c, e, g, h, j, f, i, l, m, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10179([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4717([h, i, j, k, f, d, g, a], !is_dual)
    } else {
        select_7920([d, b, c, e, f, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_10181([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_71([g, h, i, d, a, f], !is_dual)
    } else {
        select_205([d, b, c, e, g, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_10180([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_10181([d, b, c, e, g, f, j, h, k], is_dual)
    } else {
        select_1124([f, a, h, i, d, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10178([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10179([a, b, c, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_10180([a, b, c, e, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_10183([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_81([a, e, f, d, g, b], !is_dual)
    } else {
        select_386([a, c, b, e, d, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_10182([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3238([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_10183([a, b, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10177([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10178([d, b, c, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_10182([g, j, i, k, e, f, h, a, b, c, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10171([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10172([a, b, c, d, e, h, i, g, j, k, l, f, m], is_dual)
    } else {
        select_10177([a, b, c, e, i, f, k, h, j, g, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10161([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_10162([a, g, k, j, m, f, l, h, i, b, c, e], !is_dual)
    } else {
        select_10171([a, b, c, d, e, g, f, h, i, j, k, m, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10187([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4555([h, g, j, e, a, b, i, c, f], !is_dual)
    } else {
        select_1683([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10188([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2141([a, b, g, c, d, j, h, k], is_dual)
    } else {
        select_9374([a, c, b, e, h, f, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10186([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_10187([b, f, c, e, a, g, i, h, j, k], is_dual)
    } else {
        select_10188([b, a, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10189([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4909([a, b, c, f, e, h, g, i, j, k], is_dual)
    } else {
        select_1415([a, b, c, g, d, i, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10185([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_10186([a, b, d, e, f, c, g, i, h, j, k], is_dual)
    } else {
        select_10189([a, b, d, c, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10190([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1205([a, f, i, l, m, j, k, g, h, e, c], !is_dual)
    } else {
        select_5988([a, j, k, f, l, i, m, h, g, d, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10184([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10185([a, k, l, f, m, j, h, i, g, d, b], !is_dual)
    } else {
        select_10190([a, b, c, d, e, f, i, h, j, k, l, m, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_10160([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_10161([a, b, c, d, f, g, i, e, j, h, k, l, m], is_dual)
    } else {
        select_10184([a, c, d, e, f, h, i, b, j, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_10195([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1568([a, b, c, d, g, f, i, j, h], is_dual)
    } else {
        select_6419([c, d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10197([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1452([g, f, d, a, h, b, e], !is_dual)
    } else {
        select_4882([a, c, b, e, d, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10196([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_9212([b, c, a, d, e, f, h, i, g, j], is_dual)
    } else {
        select_10197([i, e, j, g, h, a, b, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10194([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_10195([c, d, b, a, e, f, g, h, i, j], is_dual)
    } else {
        select_10196([b, c, d, g, f, i, a, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10201([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_381([b, h, a, d, e, j, g, k], is_dual)
    } else {
        select_129([b, c, g, d, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10200([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10201([c, a, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6330([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2228([b, c, g, e, a, i, j], is_dual)
    } else {
        select_603([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10199([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_10200([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_10202([b, a, e, d, g, f, h, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10205([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_98([a, b, d, j, e, k], is_dual)
    } else {
        select_6340([b, c, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10206([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4196([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_88([i, j, k, a, d, f, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10204([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_10205([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_10206([a, e, c, g, f, h, d, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10209([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_52([a, c, d, h, g, k], is_dual)
    } else {
        select_703([a, b, i, e, j, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10208([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_10209([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3498([j, k, l, i, a, f, e, g, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10207([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6024([b, c, e, d, f, h, i, g, j], is_dual)
    } else {
        select_10208([a, d, b, c, f, h, g, i, e, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10203([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_10204([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_10207([b, a, c, d, e, g, f, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10198([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_10199([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    } else {
        select_10203([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10193([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10194([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_10198([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10210([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_6710([a, c, d, g, f, i, h, b, j, k], is_dual)
    } else {
        select_10077([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_10192([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_10193([a, b, f, c, e, h, i, g, j, l, k, m], is_dual)
    } else {
        select_10210([a, b, c, d, g, f, j, h, k, l, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_155([f, g, i, k, a, j, b, c], !is_dual)
    } else {
        select_791([f, b, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10213([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10214([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_10214([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10212([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2014([a, b, e, c, d, f, g, h, i, l, j, k], is_dual)
    } else {
        select_10213([a, g, k, m, i, l, b, h, c, j, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10216([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_7685([a, c, d, e, b, g, f, h, i, j], is_dual)
    } else {
        select_1682([a, c, b, e, f, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_10215([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_4908([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_10216([a, b, h, i, k, e, j, f, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10211([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_10212([a, b, d, c, e, g, i, f, h, j, l, k, m], is_dual)
    } else {
        select_10215([a, b, f, e, h, c, g, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10191([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_10192([a, c, b, d, e, f, g, i, h, j, k, m, l], is_dual)
    } else {
        select_10211([a, b, c, d, g, f, j, i, k, l, m, n, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_10159([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_10160([a, c, d, g, f, j, h, i, k, l, b, m, n], is_dual)
    } else {
        select_10191([a, c, b, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10078([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_10079([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_10159([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9996([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_9997([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_10078([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_10223([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_222([c, e, h, i, d, f, g, b], !is_dual)
    } else {
        select_1122([h, c, d, i, e, f, g, a], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10224([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5850([d, g, b, c, i, f, j, h, k], is_dual)
    } else {
        select_3566([a, b, h, d, e, g, k, l, m, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10222([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_10223([j, b, l, m, d, a, e, g, i], is_dual)
    } else {
        select_10224([b, a, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10228([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_803([i, h, k, f, j, a, b, c], !is_dual)
    } else {
        select_53([b, c, d, e, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_10227([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_10228([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_325([f, j, l, a, b, k, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10230([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4853([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1423([d, k, a, g, i, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10229([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10230([f, i, k, g, h, j, a, d, e, b, c], !is_dual)
    } else {
        select_10230([g, i, k, f, h, j, a, d, e, b, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10226([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10227([j, k, n, l, m, h, i, a, g, f, e, c], !is_dual)
    } else {
        select_10229([a, g, b, i, d, l, m, h, j, f, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_10232([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1288([a, g, b, d, e, i, l, j, m, h], is_dual)
    } else {
        select_326([d, h, c, j, k, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10233([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_67([f, a, g, d, b, i], is_dual)
    } else {
        select_2798([a, c, b, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10231([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < d) || (is_dual && m > d) {
        select_10232([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10233([b, a, g, e, i, l, m, h, d, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10225([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_10226([a, b, c, e, f, g, h, i, j, k, d, l, m, n], is_dual)
    } else {
        select_10231([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10221([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10222([b, a, c, d, e, g, h, j, f, k, i, l, m], is_dual)
    } else {
        select_10225([a, b, c, d, f, g, i, j, e, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10220([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10221([a, c, d, e, b, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_10221([b, c, d, f, a, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10219([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10220([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10220([b, c, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10218([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10219([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10219([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_10236([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_7712([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4589([a, b, c, g, h, i, j, k, d, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_10240([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_139([a, b, d, c, g, f, i, h, j], is_dual)
    } else {
        select_282([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_10239([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_7839([a, b, d, c, e, g, f, h, i, j, k], is_dual)
    } else {
        select_10240([a, b, c, d, h, g, j, i, f, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10243([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_595([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_309([b, c, h, f, g, a, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10242([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10243([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_1502([a, c, d, h, f, g, b, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10241([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1003([a, f, b, k, l, g, j, i, h], !is_dual)
    } else {
        select_10242([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_10238([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_10239([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10241([a, b, f, m, n, c, i, l, k, j, g, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10237([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10238([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10238([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10235([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_10236([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_10237([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_10248([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1803([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1803([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10247([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_221([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_10248([a, b, d, g, f, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10246([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_10247([a, b, c, f, k, h, j, i, d, g], !is_dual)
    } else {
        select_7585([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10245([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2584([a, b, c, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_10246([a, b, c, d, h, f, i, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10251([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2215([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4733([b, g, c, e, i, f, a, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10250([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10251([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_10251([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10249([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10250([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4598([a, b, c, d, i, j, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10244([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_10245([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_10249([a, b, c, d, f, e, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10234([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_10235([a, b, c, d, e, f, g, h, i, j, k, n, l, m], is_dual)
    } else {
        select_10244([a, b, c, d, m, n, l, i, g, e, k, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10217([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_10218([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_10234([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9995([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_9996([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10217([a, b, c, d, e, g, f, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9912([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_9913([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9995([a, b, c, d, e, g, h, i, j, k, l, m, f, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9671([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_9672([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_9912([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_10262([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_299([a, c, d, g, f, i, h, j, k], is_dual)
    } else {
        select_845([a, f, b, e, h, j, g, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10261([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2333([a, d, g, e, b, f, i, h, j, k, l], is_dual)
    } else {
        select_10262([a, d, c, b, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2332([a, b, c, d, g, f, j, k, l, h, i], is_dual)
    } else {
        select_10261([a, b, e, d, c, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_10264([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2942([a, i, j, e, k, f, b, c, h], !is_dual)
    } else {
        select_8184([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10266([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_7902([b, f, d, e, a, g, h, i, j], is_dual)
    } else {
        select_8097([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10265([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7586([a, e, k, j, b, f, i, h, c, g, d], !is_dual)
    } else {
        select_10266([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10263([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_10264([a, b, c, d, e, g, h, i, j, k, f], is_dual)
    } else {
        select_10265([a, e, k, j, b, g, i, f, h, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_10260([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_10263([a, b, g, e, f, i, c, h, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10258([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10259([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_10259([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10257([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7352([a, b, c, j, l, k, g, d, i, e, h], !is_dual)
    } else {
        select_10258([a, b, c, d, f, e, g, i, j, k, h, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_10271([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_6622([e, g, i, k, b, j, c, a, h, f, d], !is_dual)
    } else {
        select_4219([e, g, i, a, k, b, c, j, h, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10270([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10271([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10271([a, b, c, d, e, f, g, i, k, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_484([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_82([a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10274([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_7742([h, a, j, k, f, d, b, i, g, e], !is_dual)
    } else {
        select_10275([h, j, k, f, d, i, b, a, g, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_581([a, b, g, d, i, f, j], is_dual)
    } else {
        select_186([a, f, c, h, e, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_10276([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_10277([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_34([a, b, k, j], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10273([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10274([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10276([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10272([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10273([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_10273([a, b, c, d, e, f, h, i, k, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10269([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_10270([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_10272([a, b, d, e, g, c, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10268([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10269([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_10269([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10282([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_233([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_408([a, b, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10283([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1550([a, b, c, e, f, g, h, i, j], is_dual)
    } else {
        select_3359([a, c, d, b, g, f, i, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10281([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10282([a, c, d, b, g, f, j, i, k, h], is_dual)
    } else {
        select_10283([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10285([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6256([a, c, e, d, g, h, f, i], is_dual)
    } else {
        select_5115([a, c, b, f, h, e, j, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_10287([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_120([a, c, g, b, i, j], is_dual)
    } else {
        select_3642([b, a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10288([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_452([a, d, c, f, g, e, i, h], is_dual)
    } else {
        select_4169([a, b, e, d, h, f, j, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_10286([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_10287([a, b, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_10288([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10284([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10285([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_10286([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10280([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_10281([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10284([a, c, d, g, f, i, h, j, b, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_10293([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_111([a, c, e, d, g, f, i], is_dual)
    } else {
        select_529([h, g, i, d, a, e, b, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10292([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_10293([a, b, f, d, e, h, i, j, g], is_dual)
    } else {
        select_571([a, e, c, d, g, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10294([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2776([a, c, f, d, g, h, e, i, j, k], is_dual)
    } else {
        select_1479([c, b, d, e, g, f, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10291([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_10292([a, b, d, e, g, h, i, f, k, j, l], is_dual)
    } else {
        select_10294([a, b, c, d, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_650([d, a, c, e, g, f, i, h], is_dual)
    } else {
        select_10293([g, j, i, d, h, e, a, b, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_10296([b, a, c, e, d, f, g, i, h, k], is_dual)
    } else {
        select_6068([g, d, k, j, e, i, h, a, f, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10290([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10291([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_10295([e, k, l, a, h, j, f, i, g, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10289([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10290([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_10290([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10279([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_10280([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_10289([a, b, e, c, d, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5549([f, a, b, c, d, g, i, j, k, h], is_dual)
    } else {
        select_143([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_10301([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_191([a, h, c, d, e, g, i], is_dual)
    } else {
        select_1600([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10299([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_10300([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_10301([b, c, d, e, a, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_10303([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_9054([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_167([b, d, c, e, g, f, a, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7469([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_10303([a, j, k, g, f, b, i, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10298([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_10299([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10302([a, c, d, e, f, g, h, i, b, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10297([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7354([a, b, g, d, e, c, h, i, j, k], is_dual)
    } else {
        select_10298([a, b, c, f, d, e, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10278([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_10279([a, b, d, f, e, g, h, i, c, j, k, l], is_dual)
    } else {
        select_10297([a, b, d, c, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10267([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_10268([a, b, c, j, l, g, k, d, i, h, e], !is_dual)
    } else {
        select_10278([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10256([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10257([a, b, c, d, e, f, h, j, i, k, g, l], is_dual)
    } else {
        select_10267([a, b, c, e, d, f, h, j, g, k, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10311([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_8560([c, a, d, b, g, h, e, i, j, f], is_dual)
    } else {
        select_1984([a, b, c, g, f, i, h, j, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_10310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_10311([c, a, b, d, f, g, h, e, j, i], is_dual)
    } else {
        select_6875([e, c, d, g, a, i, h, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10309([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10310([a, b, d, e, c, f, g, i, h, j], is_dual)
    } else {
        select_10310([a, c, d, e, b, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10308([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5391([a, b, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_10309([a, b, c, d, g, h, j, k, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10315([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5589([c, d, b, e, f, g, i], is_dual)
    } else {
        select_3102([a, b, e, d, g, h, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10314([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4504([j, k, l, h, d, i, e, g, f, a, b], !is_dual)
    } else {
        select_10315([b, d, c, g, e, i, f, h, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10317([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_660([d, c, b, e, f, i, g, h], is_dual)
    } else {
        select_8475([e, a, b, d, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10318([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_642([i, j, h, f, e, a, b, g], !is_dual)
    } else {
        select_1418([b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_10316([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_10317([a, f, c, d, g, i, h, e, j, k], is_dual)
    } else {
        select_10318([g, a, b, e, h, d, f, k, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10313([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10314([b, c, d, a, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_10316([a, c, d, b, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10321([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5164([a, c, d, e, f, g, i, h, k], is_dual)
    } else {
        select_4167([a, b, e, g, d, h, i, j, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_10322([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_4505([h, j, k, d, e, a, i, f], !is_dual)
    } else {
        select_2452([a, b, c, e, d, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10320([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10321([d, b, c, g, f, i, e, h, k, j, l], is_dual)
    } else {
        select_10322([j, k, l, h, d, i, f, e, g, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10319([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10316([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10320([b, c, d, a, e, g, f, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10312([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10313([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_10319([a, b, c, d, e, g, f, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10307([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10308([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_10312([b, c, e, d, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_10325([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6836([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_10295([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10328([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1985([a, e, c, g, f, h, d, j, l, i], is_dual)
    } else {
        select_1985([b, d, c, g, f, h, e, i, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10330([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_154([i, j, g, d, h, f, a, b], !is_dual)
    } else {
        select_186([g, k, h, d, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10329([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6292([b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10330([k, j, l, i, h, e, a, f, c, b, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10327([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_10328([a, b, c, d, e, f, g, i, h, j, k, m], is_dual)
    } else {
        select_10329([i, k, l, m, g, d, j, h, e, a, b, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10326([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_10295([a, e, c, d, g, f, i, j, k, h, m], is_dual)
    } else {
        select_10327([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10324([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_10325([d, f, c, h, a, g, e, j, i, k, m], is_dual)
    } else {
        select_10326([a, b, c, e, f, g, d, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10323([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5382([e, j, l, m, a, f, i, k, b, g, h, c, d], !is_dual)
    } else {
        select_10324([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10306([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_10307([a, e, l, m, k, g, j, f, b, c, i, h], !is_dual)
    } else {
        select_10323([a, b, c, d, e, g, f, h, j, k, i, m, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10334([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_207([a, c, b, d, e, g, f, h, i], is_dual)
    } else {
        select_10248([a, f, c, d, g, h, b, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10333([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4109([a, b, c, d, f, e, g, h, j, i], is_dual)
    } else {
        select_10334([a, f, j, k, e, b, g, i, h, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_10339([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_685([a, b, e, f], is_dual)
    } else {
        select_529([c, a, b, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10338([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_8950([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_10339([e, i, j, g, a, b, h, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10337([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4098([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_10338([a, b, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_10336([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_10337([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_6469([a, e, j, k, g, f, b, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10335([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10336([a, h, l, k, b, i, f, j, c, d, g], !is_dual)
    } else {
        select_10334([a, b, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10332([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_10333([a, b, f, d, e, i, h, g, k, j, m], is_dual)
    } else {
        select_10335([a, i, l, h, m, e, k, b, j, f, g, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10331([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_10332([a, b, c, d, f, e, g, h, i, k, j, m, l], is_dual)
    } else {
        select_10307([a, i, l, m, h, f, k, e, b, c, j, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10305([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10306([a, k, f, m, b, g, h, l, i, j, c, d, e], !is_dual)
    } else {
        select_10331([a, k, g, m, f, h, l, b, c, i, j, d, e], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10304([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10305([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10305([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10255([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_10256([a, b, c, d, l, m, g, h, j, k, e, i], !is_dual)
    } else {
        select_10304([a, b, c, g, l, m, d, h, j, k, e, i, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10343([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_7585([a, b, c, g, d, i, f, j, h, k, l], is_dual)
    } else {
        select_7585([a, b, c, f, e, h, g, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10345([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3453([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3453([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10344([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_6487([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_10345([a, b, f, d, e, g, h, i, c, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10342([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_10343([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_10344([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_10348([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2317([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_8039([a, b, c, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10349([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_407([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_407([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10347([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_10348([a, b, c, d, j, h, i, g], !is_dual)
    } else {
        select_10349([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10350([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_7800([a, b, c, d, k, l, j, e, i, h], !is_dual)
    } else {
        select_2118([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10346([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_10347([a, b, c, d, l, m, k, j, h, e], !is_dual)
    } else {
        select_10350([a, b, c, d, h, f, g, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10341([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_10342([a, b, c, d, m, n, l, h, e, k, j, i], !is_dual)
    } else {
        select_10346([a, b, c, d, e, f, g, h, i, j, k, l, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_10354([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_221([a, b, c, d, i, g, j, h, k], is_dual)
    } else {
        select_2521([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_10353([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_10354([a, b, d, c, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3666([a, b, c, d, i, h, j, k, l, m, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_10352([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10353([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_10353([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10351([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_7353([a, b, c, d, l, m, h, e, k, j], !is_dual)
    } else {
        select_10352([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10340([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_10341([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_10351([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10254([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_10255([a, b, c, d, f, i, e, h, j, k, l, m, n], is_dual)
    } else {
        select_10340([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10363([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3016([a, c, e, b, d, g, f, h, i], is_dual)
    } else {
        select_709([a, i, j, h, c, b, g, f, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10362([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_7685([a, i, j, l, f, k, b, c, h, e], !is_dual)
    } else {
        select_10363([a, f, c, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10365([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5009([d, i, h, j, g, a, e, f, c], !is_dual)
    } else {
        select_5504([a, f, b, d, h, e, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_10364([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3814([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_10365([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10361([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10362([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_10364([a, j, f, l, b, i, k, c, g, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10360([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10361([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_10361([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10367([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_7029([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_7029([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_10367([a, b, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_417([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10359([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_10360([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_10366([a, b, c, i, j, d, l, k, g, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10371([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3389([a, g, f, j, k, b, i, c, h], !is_dual)
    } else {
        select_844([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10370([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10371([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_10371([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_10370([a, b, c, h, j, k, d, i, g, e, f], !is_dual)
    } else {
        select_9713([a, b, c, d, j, k, h, i, g, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10377([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_153([j, h, g, d, f, a, c], !is_dual)
    } else {
        select_153([c, b, h, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_10378([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_188([h, j, g, d, f, e, c], !is_dual)
    } else {
        select_892([j, k, f, d, i, a, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10376([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_10377([h, k, d, f, j, i, g, a, b, e], !is_dual)
    } else {
        select_10378([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10375([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_109([d, e, c, g, a, f, h, j, i], is_dual)
    } else {
        select_10376([b, a, c, d, f, e, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10374([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_10375([h, e, k, a, f, j, b, i, c, g, d], !is_dual)
    } else {
        select_10375([h, f, k, b, e, j, a, i, c, g, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10373([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10374([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_10374([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10372([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10373([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_10373([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10369([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10372([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10359([a, b, c, d, e, f, g, h, j, l, i, k], is_dual)
    } else {
        select_10368([a, b, c, d, e, h, i, j, k, g, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_10382([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5006([a, b, i, h, k, e, j, f, g, c], !is_dual)
    } else {
        select_454([a, b, e, d, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10383([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2023([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_2023([a, b, c, e, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10381([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_10382([a, b, i, e, c, g, h, f, j, k, l], is_dual)
    } else {
        select_10383([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10380([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10381([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_10381([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10379([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10380([a, b, c, d, l, m, j, k, g, e, i, h], !is_dual)
    } else {
        select_10359([a, b, c, d, e, f, g, h, j, l, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10357([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_10358([a, b, c, d, g, m, j, l, k, e, i, h], !is_dual)
    } else {
        select_10379([a, b, c, d, j, m, g, l, k, h, i, e, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_10389([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2794([b, c, a, e, d, g, i, f, h], is_dual)
    } else {
        select_3575([c, b, e, g, f, i, h, a, d], is_dual)
    }
}
/// n = 9, i = 4
fn select_10388([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10389([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_10389([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10393([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1513([f, d, i, a, g, h, b, e], !is_dual)
    } else {
        select_4668([f, g, i, a, d, h, e, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10394([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1418([g, b, d, e, a, i, h], is_dual)
    } else {
        select_1323([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10392([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10393([b, h, c, a, f, i, j, g, k], is_dual)
    } else {
        select_10394([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10395([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_559([a, h, i, e, f, b, g, c], !is_dual)
    } else {
        select_10009([a, c, d, b, f, e, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_10391([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10392([a, b, c, d, e, f, g, h, k, j, i], is_dual)
    } else {
        select_10395([a, k, j, g, b, i, f, h, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_10398([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_272([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_272([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1827([a, i, j, k, b, g, c, d, h], !is_dual)
    } else {
        select_10398([a, b, e, f, g, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10396([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1907([a, b, c, d, h, i, j, g], is_dual)
    } else {
        select_10397([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10390([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_10391([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_10396([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_10388([a, b, d, h, i, g, j, k, c], is_dual)
    } else {
        select_10390([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_70([e, h, d, i, f, j, g], is_dual)
    } else {
        select_917([a, b, g, c, e, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_314([a, d, c, f, i, h, g], is_dual)
    } else {
        select_940([k, i, h, j, f, a, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10406([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_111([g, h, j, f, a, e, c], !is_dual)
    } else {
        select_33([i, b, d], is_dual)
    }
}
/// n = 11, i = 4
fn select_10404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_10405([a, c, d, b, f, g, e, i, h, j, k], is_dual)
    } else {
        select_10406([a, c, e, f, b, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10402([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10403([c, d, b, e, a, f, g, h, i, k, j], is_dual)
    } else {
        select_10404([c, d, e, a, b, f, g, k, j, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_7853([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_10402([a, b, d, e, c, g, h, i, k, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10408([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2865([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_98([j, g, b, c, a, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7935([a, d, e, f, b, c, g, h, k, i], is_dual)
    } else {
        select_10408([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10400([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10401([b, d, c, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_10407([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10399([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10400([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_10400([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10386([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_10387([a, b, c, e, f, g, h, i, d, j, k], is_dual)
    } else {
        select_10399([a, b, c, e, d, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10413([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_735([a, b, c, g, f, h, e, j], is_dual)
    } else {
        select_4071([a, c, b, d, f, e, g, j, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10412([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10413([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_8834([i, e, j, a, h, f, g, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10411([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8833([b, f, h, c, e, a, i, g, j], is_dual)
    } else {
        select_10412([b, a, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2407([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10411([a, c, d, h, f, i, g, j, b, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10409([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10410([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_10410([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10385([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10386([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_10409([a, b, c, d, f, g, i, h, j, e, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10419([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3708([c, a, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2788([a, b, d, c, g, h, i, j, f, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10420([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2872([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1813([a, b, c, h, f, i, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_10418([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10419([a, c, b, d, e, f, g, i, h, k, j], is_dual)
    } else {
        select_10420([a, c, d, b, e, f, i, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10417([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10418([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_10418([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10423([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_143([a, b, c, e, g, f, h, i], is_dual)
    } else {
        select_327([a, f, d, b, c, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10422([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_10423([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_2630([a, b, c, g, e, h, f, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_10426([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1137([b, e, d, a, f, h, g, i], is_dual)
    } else {
        select_936([b, a, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10425([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2618([a, h, g, j, b, e, i, f, d], !is_dual)
    } else {
        select_10426([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10427([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1545([b, c, f, e, h, i, g, a, j], is_dual)
    } else {
        select_1599([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10424([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_10425([a, b, d, c, f, e, g, i, j, h], is_dual)
    } else {
        select_10427([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_10422([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_10424([a, f, c, d, i, g, b, h, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10416([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_10417([a, b, d, c, e, f, h, i, g, k, j], is_dual)
    } else {
        select_10421([a, b, d, e, f, h, g, c, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10430([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1959([a, b, c, e, d, f, h, g, j], is_dual)
    } else {
        select_1959([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10429([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1906([a, b, d, e, g, f, i, h], is_dual)
    } else {
        select_10430([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10433([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_8078([e, i, j, h, k, a, b, f, c, g], !is_dual)
    } else {
        select_8078([e, h, j, i, k, a, b, g, d, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10432([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10433([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_10433([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10431([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1906([a, b, d, c, g, h, j, f], is_dual)
    } else {
        select_10432([a, b, d, c, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10428([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_10429([a, b, j, i, c, k, g, h, d, e], !is_dual)
    } else {
        select_10431([a, b, j, i, k, g, h, c, d, e, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10415([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10416([a, b, c, e, d, f, g, h, j, i, k], is_dual)
    } else {
        select_10428([a, b, c, g, k, l, i, j, d, h, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10438([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_622([a, b, g, d, h, f, e, j, i, k], is_dual)
    } else {
        select_8319([a, b, d, c, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10440([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2269([b, c, h, f, g, a, i, j], is_dual)
    } else {
        select_1211([b, c, a, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_10439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_191([f, g, c, d, a, i, h], is_dual)
    } else {
        select_10440([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10437([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10438([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_10439([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10436([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3813([a, c, b, d, g, f, i, j, h], is_dual)
    } else {
        select_10437([a, c, d, b, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10435([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_10411([a, g, c, d, i, f, h, j, b, k], is_dual)
    } else {
        select_10436([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10444([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5187([a, b, d, f, e, g, i, h, j], is_dual)
    } else {
        select_808([a, c, b, e, f, h, i, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_10443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10444([b, c, d, a, f, e, h, g, i, j], is_dual)
    } else {
        select_5872([b, d, g, e, a, f, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_10446([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1381([b, c, a, d, f, e, h, g, i], is_dual)
    } else {
        select_3088([a, c, d, f, h, g, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_10445([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10446([b, d, g, f, e, a, h, j, i], is_dual)
    } else {
        select_10444([b, c, d, a, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10442([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_10443([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_10445([b, a, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10441([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10442([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_10442([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10434([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_10435([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_10441([a, b, d, c, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10414([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_10415([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_10434([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10384([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_10385([a, b, c, d, f, e, g, i, h, k, j], is_dual)
    } else {
        select_10414([a, b, c, d, e, f, g, i, k, j, h, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10356([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_10357([a, b, c, d, f, g, h, i, j, e, k, l, m], is_dual)
    } else {
        select_10384([a, b, c, d, f, e, g, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_10454([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_279([f, h, k, i, a, b, j, g, c, d, e], !is_dual)
    } else {
        select_279([f, h, k, j, a, b, i, g, c, d, e], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10453([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_9724([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_10454([a, h, b, c, i, f, j, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_10457([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2542([a, c, d, f, h, e, g, j, i], is_dual)
    } else {
        select_1514([a, c, b, g, e, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10456([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_255([c, d, a, e, f, b, g, h, i], is_dual)
    } else {
        select_10457([c, d, b, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10455([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_254([b, c, d, e, a, h, f, i, g], is_dual)
    } else {
        select_10456([a, b, c, e, d, h, g, i, f, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_10452([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_10453([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10455([f, k, m, g, n, a, b, l, h, j], !is_dual)
    }
}
/// n = 9, i = 2
fn select_10461([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_20([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_37([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10460([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_449([f, g, k, l, a, b, j, c, i, h], !is_dual)
    } else {
        select_10461([c, a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_10462([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_545([e, h, f, k, a, b, j, i, g], !is_dual)
    } else {
        select_5296([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10459([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_10460([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_10462([f, g, k, l, a, b, j, c, i, d, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10463([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10460([a, b, c, d, i, f, g, h, j, k, l, m], is_dual)
    } else {
        select_10460([a, b, c, e, h, f, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10458([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_10459([a, b, c, d, i, f, g, j, h, k, l, m], is_dual)
    } else {
        select_10463([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10451([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_10452([a, b, c, e, d, f, g, h, i, k, l, m, j, n], is_dual)
    } else {
        select_10458([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10467([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2746([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_988([a, h, e, g, b, f, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10466([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_7586([e, d, j, m, a, h, l, i, f, g, c], !is_dual)
    } else {
        select_10467([d, e, k, h, m, l, a, j, f, b, i, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10469([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1084([b, a, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_282([b, f, d, a, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10468([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10469([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_4276([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_10465([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10466([a, b, c, e, d, f, g, h, i, k, m, j, l], is_dual)
    } else {
        select_10468([e, d, l, m, h, k, f, a, b, j, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10464([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10465([c, a, d, e, g, b, h, f, i, j, k, l, m], is_dual)
    } else {
        select_10465([c, b, d, f, g, a, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10450([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_10451([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_10464([a, b, h, d, f, g, j, i, k, c, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_10474([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5354([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_143([f, i, j, k, e, b, a, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10473([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5356([e, h, j, l, a, f, k, g, i, c, b], !is_dual)
    } else {
        select_10474([h, e, j, l, f, a, k, i, b, g, d], !is_dual)
    }
}
/// n = 11, i = 3
fn select_10478([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1596([a, b, c, d, f, g, i, j, k], is_dual)
    } else {
        select_96([d, e, b, c, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_10477([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10478([b, c, d, a, e, g, f, h, i, j, k], is_dual)
    } else {
        select_376([a, b, h, g, j, i, k, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_10476([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_8203([k, l, j, g, f, a, b, c, i], !is_dual)
    } else {
        select_10477([b, c, a, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10480([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_309([b, c, d, g, e, f, h, i], is_dual)
    } else {
        select_606([g, i, j, f, e, d, a, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10479([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_10480([k, i, l, e, j, a, b, f, c, h], !is_dual)
    } else {
        select_7903([a, b, f, d, e, g, i, h, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10475([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10476([c, b, a, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_10479([b, a, c, e, g, i, h, j, f, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10472([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_10473([g, m, n, f, a, i, k, b, l, c, j, h], !is_dual)
    } else {
        select_10475([c, a, b, d, e, g, f, h, i, j, k, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10484([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4642([b, c, a, d, e, g, h, f, i], is_dual)
    } else {
        select_153([h, j, e, g, a, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10483([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3339([b, c, a, d, f, e, g, h, j, i], is_dual)
    } else {
        select_10484([a, b, c, g, f, j, i, h, e, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10482([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4219([f, a, b, c, g, e, i, h, j, k], is_dual)
    } else {
        select_10483([a, b, d, c, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10485([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1914([a, h, i, g, b, f, d], !is_dual)
    } else {
        select_486([j, h, a, i, g, b, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10481([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_10482([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10485([g, b, f, c, i, h, a, e, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10471([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_10472([a, c, b, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_10481([f, m, g, n, a, i, l, b, c, k, j], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10489([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_778([b, c, d, e, f, g, h], is_dual)
    } else {
        select_4298([g, i, k, l, a, b, j, c, d, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10488([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10489([a, b, c, d, e, h, g, j, i, k, l, m], is_dual)
    } else {
        select_1215([c, a, e, f, b, d, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10487([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10488([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_10488([a, b, c, d, f, e, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_10492([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5245([a, d, c, e, b, g, f, h, i], is_dual)
    } else {
        select_80([a, d, e, f, g, b, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_10493([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_80([b, d, a, f, g, c, h], is_dual)
    } else {
        select_5233([a, b, d, c, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_10491([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10492([b, c, a, e, d, f, h, g, i], is_dual)
    } else {
        select_10493([a, b, c, e, d, g, h, f, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10490([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_10491([g, k, l, m, i, a, c, b, j], !is_dual)
    } else {
        select_2695([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10486([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_10487([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10490([a, c, b, d, e, f, g, i, j, k, l, m, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_10470([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_10471([a, b, d, e, f, g, h, i, j, k, c, l, m, n], is_dual)
    } else {
        select_10486([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10449([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_10450([b, c, d, f, e, g, h, i, j, a, k, l, m, n], is_dual)
    } else {
        select_10470([b, c, d, a, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10448([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10449([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10449([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10447([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10448([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_10448([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10355([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_10356([a, b, c, d, e, m, n, f, l, i, g, k, j], !is_dual)
    } else {
        select_10447([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10253([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_10254([a, b, c, d, e, g, h, i, j, k, l, m, f, n], is_dual)
    } else {
        select_10355([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_10503([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_330([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_330([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10502([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_278([a, b, h, k, l, c, j, i, d, e, g], !is_dual)
    } else {
        select_10503([a, b, c, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_10501([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_430([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_10502([a, b, g, f, l, m, k, c, j, i, d, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10500([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_2612([a, b, g, l, f, m, c, k, d, j, i], !is_dual)
    } else {
        select_10501([a, b, d, c, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10499([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10500([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10500([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_10508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_282([a, b, i, f, k, c, j, h], !is_dual)
    } else {
        select_2718([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10507([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10508([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10508([a, b, c, d, e, f, g, i, k, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10506([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10507([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_10507([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_10509([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_418([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4598([a, b, c, d, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10505([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_10506([a, b, c, d, k, l, j, g, i, e, h], !is_dual)
    } else {
        select_10509([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_10504([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_10342([a, b, c, d, l, m, k, g, e, j, i, h], !is_dual)
    } else {
        select_10505([a, b, c, d, e, f, g, h, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10498([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10499([a, b, c, d, h, m, e, l, k, j, i, f, g], !is_dual)
    } else {
        select_10504([a, b, c, d, e, m, h, l, k, j, i, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10516([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4929([b, c, d, a, e, g, j, h, f, i], is_dual)
    } else {
        select_376([a, c, b, g, f, j, i, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_10515([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4775([b, a, f, d, h, e, g, j, k, i], is_dual)
    } else {
        select_10516([a, b, g, c, e, h, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10517([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6197([b, c, a, d, e, f, h, i, g, j], is_dual)
    } else {
        select_4779([f, c, b, e, g, i, a, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10514([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10515([a, b, d, c, e, f, g, i, h, j, k], is_dual)
    } else {
        select_10517([a, b, g, d, h, f, i, e, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10513([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10418([b, c, a, d, e, f, h, i, g, k, j], is_dual)
    } else {
        select_10514([b, c, d, e, f, h, g, a, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10520([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2160([e, f, c, d, a, g, h, i, j, k], is_dual)
    } else {
        select_5349([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10521([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5354([a, c, e, d, h, g, f, i, j, k], is_dual)
    } else {
        select_1550([a, h, j, g, l, e, k, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10519([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10520([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_10521([a, c, d, e, b, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10518([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10519([a, b, c, d, e, f, g, h, j, l, i, k], is_dual)
    } else {
        select_10519([a, b, d, c, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10512([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10513([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10518([a, f, g, k, m, b, l, c, i, j, h, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10511([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10512([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10512([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10526([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_7039([a, c, e, b, f, g, i, j, h, k], is_dual)
    } else {
        select_696([a, f, b, d, c, h, i, g, l, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_10528([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_170([b, e, c, a, f, g, h], is_dual)
    } else {
        select_118([b, c, a, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10527([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1803([g, i, j, a, f, h, b, e, d], !is_dual)
    } else {
        select_10528([f, a, c, b, h, g, e, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10525([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_10526([a, c, d, b, e, g, f, h, j, i, k, l], is_dual)
    } else {
        select_10527([a, d, f, e, b, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4230([f, a, d, c, e, g, i, h, j], is_dual)
    } else {
        select_808([a, b, c, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2930([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_7642([a, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_10530([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10531([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_10532([c, b, e, d, f, a, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_111([a, b, g, d, e, i, j], is_dual)
    } else {
        select_499([a, e, c, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6036([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_10535([a, d, c, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10533([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_10534([a, c, b, d, e, g, f, i, h, j], is_dual)
    } else {
        select_3575([i, j, g, e, f, a, b, h, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10530([c, d, b, e, a, f, h, g, i, j], is_dual)
    } else {
        select_10533([b, c, d, g, f, h, a, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10524([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10525([a, c, b, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_10529([b, a, d, c, e, f, h, i, g, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10524([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_10524([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_10538([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_425([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_425([a, e, b, i, c, h, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_8037([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_10538([a, b, c, g, f, h, i, d, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_10540([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_478([a, b, c, d, g, h, f, i], is_dual)
    } else {
        select_413([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10539([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_10540([a, b, c, f, e, h, g, i, j], is_dual)
    } else {
        select_9526([a, b, d, c, g, f, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10536([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_10537([a, b, f, c, e, h, g, j, l, i], is_dual)
    } else {
        select_10539([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10522([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_10523([a, b, h, c, l, m, f, j, k, i, d, g], !is_dual)
    } else {
        select_10536([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10510([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_10511([a, b, c, g, l, m, d, j, i, k, e, h, f], !is_dual)
    } else {
        select_10522([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10497([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_10498([a, b, c, d, g, h, f, j, i, k, l, m, n], is_dual)
    } else {
        select_10510([a, b, c, d, e, i, g, k, l, m, h, j, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_10548([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2107([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_2107([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_10549([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1253([b, a, c, e, f, d, g, h], is_dual)
    } else {
        select_2007([a, b, g, e, f, h, d, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_10547([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10548([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_10549([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10546([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6175([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_10547([a, b, k, l, c, d, j, i, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10545([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_10546([a, e, i, j, l, m, n, k, h, f, g, d], !is_dual)
    } else {
        select_6895([a, e, l, m, i, j, n, g, b, c, k], !is_dual)
    }
}
/// n = 8, i = 3
fn select_10552([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1914([f, g, e, b, a, h, c], !is_dual)
    } else {
        select_1376([b, c, a, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_10551([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10552([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_6152([i, a, e, h, f, g, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10554([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3935([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_5887([i, h, k, d, f, j, b, a, g, e], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10556([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_84([f, c, h, e, j, g, i], is_dual)
    } else {
        select_4145([f, l, h, m, a, b, k, d, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10557([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_565([a, b, c, g, e, j, k, l], is_dual)
    } else {
        select_614([e, d, b, c, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10555([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_10556([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_10557([a, b, d, g, f, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10553([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_10554([b, c, g, f, h, i, k, j, a, l, m], is_dual)
    } else {
        select_10555([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10550([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_10551([a, c, d, j, f, l, b, m, i], is_dual)
    } else {
        select_10553([a, c, d, b, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10544([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_10545([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    } else {
        select_10550([a, b, c, d, e, f, g, i, h, k, j, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10561([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6176([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9702([a, b, k, l, g, j, c, i, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10560([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10561([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    } else {
        select_281([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_10559([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_10560([a, g, k, l, m, n, i, b, j, h, f, d], !is_dual)
    } else {
        select_1926([a, l, m, g, n, i, b, e, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10564([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3303([a, b, c, h, g, d, i, j], is_dual)
    } else {
        select_2865([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10563([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10564([c, d, b, e, f, g, a, h, i, j], is_dual)
    } else {
        select_7058([c, d, a, e, f, g, b, h, j, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_10562([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_10546([a, d, g, h, k, l, m, j, i, f, e, c], !is_dual)
    } else {
        select_10563([a, d, k, l, m, g, h, e, b, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10558([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10559([a, b, c, d, e, f, g, i, h, k, j, l, m, n], is_dual)
    } else {
        select_10562([a, e, d, g, h, f, b, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10543([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_10544([a, b, c, d, e, f, h, g, j, i, k, l, m, n], is_dual)
    } else {
        select_10558([a, b, d, e, g, h, i, c, j, f, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_10568([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_412([a, e, d, c, g, f, h, i, j], is_dual)
    } else {
        select_1371([a, h, j, k, g, e, d, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_10568([a, i, l, g, b, k, c, d, j, e, h], !is_dual)
    } else {
        select_1361([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10570([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2614([a, b, c, e, d, g, i, k, h, l], is_dual)
    } else {
        select_1375([a, b, d, f, c, e, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10569([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_8927([a, c, d, e, b, i, g, f, j, h, k], is_dual)
    } else {
        select_10570([a, g, b, c, h, d, i, f, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10566([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_10567([a, b, g, h, c, d, j, i, f, k, l, m], is_dual)
    } else {
        select_10569([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_10576([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_141([a, e, c, d, g, f], is_dual)
    } else {
        select_62([e, g, f, a, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10575([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_710([f, j, g, l, k, a, b, h], !is_dual)
    } else {
        select_10576([c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10574([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_980([f, c, d, e, a, g, h, i, j], is_dual)
    } else {
        select_10575([b, a, c, d, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10577([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_605([j, k, i, a, f, e, b, c, h], !is_dual)
    } else {
        select_9161([a, c, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_10573([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_10574([j, i, l, e, m, f, a, b, k, c, h, g], !is_dual)
    } else {
        select_10577([c, b, a, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10581([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_38([b, f, c, d, h, g, j], is_dual)
    } else {
        select_6796([a, c, b, e, g, h, i, j, f, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10580([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4871([h, f, m, e, l, a, j, b, g], !is_dual)
    } else {
        select_10581([a, c, b, d, e, f, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10579([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_559([f, g, c, d, a, j, h, i], is_dual)
    } else {
        select_10580([b, a, c, d, e, f, h, i, g, k, j, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10585([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_22([b, c, d, g, h, f, j], is_dual)
    } else {
        select_703([a, b, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10584([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_10585([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_1423([e, l, a, g, k, j, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10583([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_10584([a, b, c, d, e, f, h, i, j, k, l, m], is_dual)
    } else {
        select_954([b, c, e, d, g, i, f, j, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_10582([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3021([e, l, m, a, h, b, k, c], !is_dual)
    } else {
        select_10583([j, h, l, m, i, k, b, c, e, a, g, f, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10578([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_10579([i, j, l, m, e, a, f, k, c, b, h, g, d], !is_dual)
    } else {
        select_10582([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10572([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_10573([f, i, j, m, a, g, l, k, b, c, h, d, e], !is_dual)
    } else {
        select_10578([a, i, j, m, f, g, l, k, c, b, h, d, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_10589([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_495([b, d, a, c, g, e, f, h], is_dual)
    } else {
        select_77([c, f, d, e, a, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_294([a, b, h, d, e, g, j, k], is_dual)
    } else {
        select_852([b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10590([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_10591([c, b, d, a, f, g, e, h, i, k, j], is_dual)
    } else {
        select_2831([c, e, d, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_10588([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_10589([a, b, i, c, j, f, e, h, l], is_dual)
    } else {
        select_10590([e, a, b, d, h, f, g, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_10592([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_425([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_1142([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10587([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_10588([b, a, c, d, f, e, g, h, i, j, k, l], is_dual)
    } else {
        select_10592([b, a, f, i, h, j, l, m, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_10595([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_886([a, e, d, c, f, h, g], is_dual)
    } else {
        select_6208([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10596([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4898([a, b, c, f, h, i, j, k, l], is_dual)
    } else {
        select_259([b, c, f, d, e, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10594([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_10595([h, g, j, l, f, k, a, b, i, c], !is_dual)
    } else {
        select_10596([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10593([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_10594([j, i, l, e, m, f, a, b, k, c, h, g], !is_dual)
    } else {
        select_10577([c, a, b, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10586([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_10587([b, a, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_10593([b, f, g, d, a, e, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10571([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_10572([a, e, k, m, n, b, i, l, f, g, j, h, d], !is_dual)
    } else {
        select_10586([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10565([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_10566([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10571([a, c, e, d, f, g, h, i, j, k, b, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10542([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_10543([a, b, c, d, e, f, h, i, j, k, l, m, g, n], is_dual)
    } else {
        select_10565([a, b, c, e, d, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10541([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10542([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10542([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10496([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_10497([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10541([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 13, i = 6
fn select_10603([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2614([a, b, i, k, j, l, h, f, g, d], !is_dual)
    } else {
        select_7529([a, b, j, m, i, k, l, g, e, h, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10602([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_10603([a, b, d, c, f, e, h, g, j, i, l, k, m], is_dual)
    } else {
        select_2613([a, b, j, l, m, i, g, h, k, e, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10601([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_10602([a, b, d, c, f, e, i, h, k, j, l, g, m], is_dual)
    } else {
        select_3651([a, b, k, m, j, i, l, h, g, e, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10608([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_67([i, b, d, e, f, h], is_dual)
    } else {
        select_1622([h, b, a, c, e, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10609([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1334([e, i, l, g, j, a, b, c, h], !is_dual)
    } else {
        select_199([b, g, d, e, i, f, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10607([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_10608([b, a, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_10609([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10606([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_10607([a, c, b, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_9259([a, c, f, g, h, i, j, b, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10612([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5619([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_703([g, c, a, f, d, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10611([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5168([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10612([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10610([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_7685([a, b, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_10611([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10605([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_10606([a, h, k, g, m, l, j, i, b, e, c, f], !is_dual)
    } else {
        select_10610([a, h, j, m, b, g, l, i, f, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10615([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_646([a, b, c, g, e, f, i, h, j, l], is_dual)
    } else {
        select_4514([f, a, b, d, e, h, g, i, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_10618([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_85([b, c, d, f, g, h], is_dual)
    } else {
        select_129([a, c, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10617([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2053([h, e, k, a, f, j, i, b, g], !is_dual)
    } else {
        select_10618([b, a, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10616([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10617([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_7565([a, c, h, e, f, b, j, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10614([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10615([a, b, c, e, f, d, g, h, i, j, l, k], is_dual)
    } else {
        select_10616([a, b, d, e, f, c, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10620([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4732([a, i, c, e, b, f, h, j, k], is_dual)
    } else {
        select_549([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10619([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10620([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_10616([a, b, d, e, f, c, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10613([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10614([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_10619([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10604([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_10605([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_10613([a, h, b, k, g, m, l, i, j, e, c, f], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10600([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_10601([a, b, c, d, f, g, i, e, j, h, k, l, m], is_dual)
    } else {
        select_10604([a, b, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10625([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3151([g, a, b, d, e, h, f, i, j, k], is_dual)
    } else {
        select_3151([f, a, c, d, e, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10624([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_10625([b, a, c, d, g, e, f, h, i, j, k], is_dual)
    } else {
        select_1495([f, j, e, l, m, g, a, k, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10627([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3440([a, b, d, f, e, h, g, j, l], is_dual)
    } else {
        select_696([a, c, b, g, e, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10626([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3880([a, l, k, j, f, c, g, b, i, h], !is_dual)
    } else {
        select_10627([a, c, b, d, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10623([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_10624([e, f, b, c, h, d, i, g, j, k, m, l, n], is_dual)
    } else {
        select_10626([d, h, k, i, n, e, l, m, f, j, a, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10630([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4290([e, h, i, j, k, a, g, c, d, f], !is_dual)
    } else {
        select_5231([e, i, j, h, k, a, f, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10629([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5241([a, c, d, e, g, f, i, h, j], is_dual)
    } else {
        select_10630([f, i, k, l, a, g, j, b, c, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10632([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3185([j, k, g, l, f, e, h, i, a, b], !is_dual)
    } else {
        select_6049([a, e, c, d, g, f, h, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10634([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_97([a, b, e, g, f, i, h, j], is_dual)
    } else {
        select_574([f, i, k, l, a, g, j, c, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10633([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_10634([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3182([a, c, g, e, f, b, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10631([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_10632([a, c, d, h, e, f, i, g, k, l, j, m], is_dual)
    } else {
        select_10633([e, a, b, d, g, i, f, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10628([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_10629([f, g, a, b, c, i, j, h, e, k, l, m], is_dual)
    } else {
        select_10631([a, c, d, b, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10622([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_10623([d, b, c, e, f, g, h, i, j, k, a, l, m, n], is_dual)
    } else {
        select_10628([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_10638([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_476([a, b, f, c, h, e, i, g], is_dual)
    } else {
        select_476([a, b, e, d, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10637([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1930([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_10638([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_10637([a, f, b, c, h, g, j, k, l, i], is_dual)
    } else {
        select_10055([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10640([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_108([a, b, c, h, e, i, g, f, j, k], is_dual)
    } else {
        select_5296([a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10642([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1564([a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1162([f, c, d, b, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_10641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_263([a, d, e, c, b, f, g, i, h], is_dual)
    } else {
        select_10642([a, b, d, e, c, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10639([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_10640([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_10641([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10635([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_10636([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    } else {
        select_10639([a, b, d, e, g, j, f, h, i, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10621([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_10622([a, d, e, c, f, g, h, i, j, b, k, l, m, n], is_dual)
    } else {
        select_10635([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10599([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_10600([a, b, d, i, g, h, k, j, l, c, f, m, n], is_dual)
    } else {
        select_10621([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10598([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10599([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10599([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_10646([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_8181([a, b, c, f, d, g, e, h, i, j, k], is_dual)
    } else {
        select_8181([a, b, c, f, e, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10649([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2686([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6063([a, b, c, f, e, h, g, j, i, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_10651([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_881([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_39([a, c, i, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_10652([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_191([a, f, c, d, b, g, h], is_dual)
    } else {
        select_2244([a, b, e, c, d, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10650([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_10651([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_10652([a, c, d, e, g, b, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10648([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_10649([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_10650([a, b, d, c, e, f, h, g, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10647([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10648([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_10648([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10645([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10646([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_10647([a, b, c, d, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_10658([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2483([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_703([a, b, f, d, g, h, e], is_dual)
    }
}
/// n = 8, i = 2
fn select_10659([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_886([f, a, c, d, g, e, h], is_dual)
    } else {
        select_729([d, e, b, c, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10657([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_10658([a, b, i, e, f, d, h, j, k], is_dual)
    } else {
        select_10659([b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_10662([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_100([g, i, j, k, d, h, a, e], !is_dual)
    } else {
        select_487([f, b, c, g, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_10663([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_820([a, b, c, f, h, i, j, k], is_dual)
    } else {
        select_53([c, b, d, e, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10661([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10662([i, k, l, f, j, a, g, h, c, d, e], !is_dual)
    } else {
        select_10663([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10660([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10661([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    } else {
        select_6581([a, d, e, c, b, f, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_10656([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_10657([b, a, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_10660([h, k, d, l, m, e, f, a, j, b, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10666([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4354([a, e, c, h, d, f, j, g, i, k, l], is_dual)
    } else {
        select_9826([d, c, b, g, f, e, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10667([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_699([i, j, g, h, a, b, f, d, c], !is_dual)
    } else {
        select_176([b, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_10666([a, b, c, e, d, f, h, g, j, i, k, l], is_dual)
    } else {
        select_10667([h, j, g, k, l, d, e, i, a, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_10669([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_81([a, f, d, e, h, g], is_dual)
    } else {
        select_2806([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10670([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1008([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_684([d, e, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10668([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10669([a, d, e, c, f, h, i, j, g], is_dual)
    } else {
        select_10670([b, d, e, a, c, f, h, g, j, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10664([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_10665([a, b, c, e, d, f, h, g, j, i, l, m], is_dual)
    } else {
        select_10668([h, g, k, l, m, d, e, j, i, a, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10655([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_10656([e, a, c, h, d, i, f, g, j, l, k, m, n], is_dual)
    } else {
        select_10664([a, b, f, d, e, j, g, h, k, l, i, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10674([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_250([e, i, j, f, a, d], !is_dual)
    } else {
        select_6471([b, d, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10675([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1073([b, c, e, a, f, i, h], is_dual)
    } else {
        select_6161([a, d, b, c, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10673([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_10674([j, k, l, i, g, e, h, a, b, c], !is_dual)
    } else {
        select_10675([e, b, c, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10677([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_7638([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_61([a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10678([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1051([a, c, d, f, g, e, h, j, i, m], is_dual)
    } else {
        select_7368([h, k, l, j, m, f, g, a, b, i, c, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10676([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_10677([a, c, d, f, g, e, i, j, h, l, k], is_dual)
    } else {
        select_10678([a, b, c, e, h, f, g, i, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_10672([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_10673([i, m, n, j, f, g, k, l, b, a, c, h], !is_dual)
    } else {
        select_10676([b, a, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_10680([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2901([a, b, c, d, f, e, g, h, j, k, l], is_dual)
    } else {
        select_684([c, d, e, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_10682([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_453([b, c, a, d, e, f, g], is_dual)
    } else {
        select_82([a, d, f, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_10681([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2458([k, l, m, h, d, e, j, a, b], !is_dual)
    } else {
        select_10682([i, k, j, d, h, g, b, f, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10679([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_10680([j, d, l, m, h, i, e, k, a, b, g, f], !is_dual)
    } else {
        select_10681([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10671([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_10672([a, b, c, d, f, e, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_10679([e, c, d, g, a, f, i, k, h, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10654([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_10655([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_10671([a, b, c, d, e, g, h, f, j, i, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_10687([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_444([a, d, f, h, i], is_dual)
    } else {
        select_634([b, a, c, d, e, f, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_10688([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2912([c, b, a, f, d, e, i, h, g], is_dual)
    } else {
        select_3259([i, e, a, f, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10686([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_10687([g, i, j, f, e, h, b, c, d], !is_dual)
    } else {
        select_10688([a, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10690([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_81([a, g, c, d, f, h], is_dual)
    } else {
        select_634([i, g, j, a, e, h, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10691([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_628([h, g, j, a, e, i, c, b, f], !is_dual)
    } else {
        select_831([a, c, e, d, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10689([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_10690([a, c, d, b, f, e, g, i, h, j], is_dual)
    } else {
        select_10691([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10685([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10686([a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10689([g, b, c, d, e, f, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10694([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1716([g, b, c, d, e, h, i], is_dual)
    } else {
        select_2137([a, d, e, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10693([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_515([c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_10694([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10697([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_100([h, i, j, k, e, g, b, a], !is_dual)
    } else {
        select_252([a, f, c, d, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10696([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10697([j, i, k, l, f, a, h, g, c, d, e], !is_dual)
    } else {
        select_1323([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10699([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_100([h, j, k, l, e, i, a, f], !is_dual)
    } else {
        select_53([g, d, b, c, f, h], is_dual)
    }
}
/// n = 13, i = 6
fn select_10698([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10699([a, b, c, d, e, f, g, h, i, k, l, m], is_dual)
    } else {
        select_10663([g, j, k, l, m, e, h, i, a, f, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10695([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10696([g, h, k, l, m, e, i, j, a, b, c, f], !is_dual)
    } else {
        select_10698([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10692([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_10693([k, g, h, i, l, m, e, a, b, j], !is_dual)
    } else {
        select_10695([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_10684([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_10685([g, k, h, l, m, a, e, i, j, b, c], !is_dual)
    } else {
        select_10692([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10704([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_626([a, b, h, d, e, g, j, k], is_dual)
    } else {
        select_852([b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10705([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_453([c, g, d, f, e, i, h], is_dual)
    } else {
        select_216([a, c, b, h, f, j, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_10703([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10704([b, a, d, e, h, g, f, i, j, l, k], is_dual)
    } else {
        select_10705([b, c, f, d, g, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_10702([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_1512([a, b, c, i, j, f, h, e, l], is_dual)
    } else {
        select_10703([a, b, c, d, f, e, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_10707([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_81([a, i, b, d, f, h], is_dual)
    } else {
        select_1137([a, b, c, h, e, j, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10710([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_99([b, c, e, f, i, j], is_dual)
    } else {
        select_2661([a, b, d, e, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_10709([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_38([a, i, d, c, f, h, k], is_dual)
    } else {
        select_10710([b, a, d, e, h, f, g, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_10711([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_77([b, g, c, d, h, f, i], is_dual)
    } else {
        select_32([d, i, a, e, j, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_10708([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_10709([b, c, a, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_10711([c, e, d, a, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10706([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_10707([a, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_10708([a, b, d, c, f, g, e, i, j, h, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_10701([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10702([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    } else {
        select_10706([b, a, c, d, f, e, g, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_10714([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_331([e, b, g, d, f, i, h, k], is_dual)
    } else {
        select_3230([e, k, l, m, g, j, a, b, c, h], !is_dual)
    }
}
/// n = 9, i = 4
fn select_10716([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_95([g, h, d, i, e, f, a], !is_dual)
    } else {
        select_141([d, e, b, c, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_10715([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_84([h, i, f, k, a, e, b], !is_dual)
    } else {
        select_10716([b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_10713([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10714([e, a, b, d, g, f, j, h, k, l, i, m, n], is_dual)
    } else {
        select_10715([g, j, m, n, i, e, l, a, b, c, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10719([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_111([a, c, d, g, h, f, j], is_dual)
    } else {
        select_325([i, h, k, a, e, j, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10718([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10719([f, k, l, m, g, j, a, c, b, h, e], !is_dual)
    } else {
        select_127([b, c, d, f, g, e, i, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10720([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3191([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3055([i, f, j, h, e, a, g, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10717([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_10718([a, c, b, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_10720([f, g, l, m, j, a, k, b, c, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10712([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10713([b, c, a, d, e, g, h, i, k, f, j, l, m, n], is_dual)
    } else {
        select_10717([f, a, b, d, g, j, e, i, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10700([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10701([c, d, a, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_10712([c, d, b, e, f, a, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10683([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_10684([b, c, d, g, f, j, h, i, k, l, a, m, n], is_dual)
    } else {
        select_10700([b, a, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10653([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_10654([a, c, d, e, g, f, h, i, b, j, k, l, m, n], is_dual)
    } else {
        select_10683([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10644([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < l) || (is_dual && c > l) {
        select_10645([a, b, k, i, m, n, f, g, c, d, l, j], !is_dual)
    } else {
        select_10653([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10643([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_10644([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10644([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10597([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_10598([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_10643([a, b, c, d, e, f, h, i, j, k, l, m, g, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10495([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10496([a, b, c, d, e, g, h, f, j, i, k, l, m, n], is_dual)
    } else {
        select_10597([a, b, c, d, f, g, i, e, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10494([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_10495([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_10495([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10252([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_10253([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_10494([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9670([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_9671([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10252([a, b, c, d, e, f, g, h, i, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_9318([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_9319([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_9670([a, b, c, d, e, f, g, i, j, k, l, m, h, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9317([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9318([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_9318([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_9316([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_9317([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_9317([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_10736([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_140([a, i, j, k, b, h, f, g], !is_dual)
    } else {
        select_144([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_10735([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_518([a, c, d, g, e, f, i, h, j], is_dual)
    } else {
        select_10736([a, g, m, n, b, k, l, i, h, e, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10734([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_10735([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    } else {
        select_8071([a, k, l, m, g, h, b, c, j, d, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10733([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_10734([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_10734([a, b, d, c, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_10741([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_48([e, b, c, d, f, h, g, i], is_dual)
    } else {
        select_942([a, f, c, d, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10740([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10741([a, c, d, e, b, f, g, h, i, k, l], is_dual)
    } else {
        select_4252([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_10743([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_38([b, c, d, g, f, h, i], is_dual)
    } else {
        select_499([a, h, d, e, f, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6036([a, b, c, f, e, h, i, g, j, k], is_dual)
    } else {
        select_10743([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10739([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_10740([f, b, c, d, e, g, h, i, j, m, k, l], is_dual)
    } else {
        select_10742([j, k, l, n, f, m, a, b, h, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_10745([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_292([d, a, c, e, g, h, i], is_dual)
    } else {
        select_33([f, b, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10744([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_515([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_10745([g, k, j, h, f, a, b, c, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10738([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_10739([b, a, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_10744([j, l, m, a, n, f, b, h, k, i, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10748([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4880([i, f, h, k, j, d, g, a, b], !is_dual)
    } else {
        select_386([f, b, c, h, e, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_10750([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_153([b, c, g, e, f, i, h], is_dual)
    } else {
        select_644([g, k, j, d, h, e, a, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10749([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1381([b, d, c, e, g, f, i, j, h], is_dual)
    } else {
        select_10750([a, b, f, d, h, e, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10747([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10748([h, k, l, e, j, d, i, a, f, g, c], !is_dual)
    } else {
        select_10749([a, b, c, e, f, g, h, i, d, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10746([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_10747([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_7637([b, d, a, e, g, c, h, i, f, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_10737([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_10738([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_10746([a, k, n, m, f, l, h, b, j, g, i, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10732([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10733([a, c, b, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10737([a, c, d, e, f, g, h, b, i, k, l, m, j, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_10755([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8235([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3580([a, b, i, f, j, h, k, g, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10754([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_728([a, c, f, i, g, j, k], is_dual)
    } else {
        select_10755([b, a, c, d, e, f, g, h, i, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_10758([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_61([a, b, c, h, i], is_dual)
    } else {
        select_118([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10757([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_10758([a, c, h, e, f, i, g, k, m], is_dual)
    } else {
        select_10758([b, d, g, e, f, i, h, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_10759([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_618([f, h, i, d, e, g, b, a], !is_dual)
    } else {
        select_2228([f, g, i, d, e, a, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10756([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_10757([a, c, b, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_10759([l, g, m, a, j, b, h, c, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10753([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10754([c, b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_10756([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10762([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4252([b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_4563([j, n, l, m, f, k, i, a, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_453([e, c, d, a, f, g, h], is_dual)
    } else {
        select_2660([b, a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10763([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_10764([d, h, j, k, e, i, a, f, g, b], !is_dual)
    } else {
        select_1548([a, f, c, d, e, g, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_10761([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_10762([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_10763([j, i, n, a, f, k, l, b, g, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_381([h, j, i, e, f, a, b, g], !is_dual)
    } else {
        select_238([a, c, d, f, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10766([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2183([h, i, j, e, f, a, b, c, g], !is_dual)
    } else {
        select_10767([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_10765([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_10766([i, j, k, m, e, f, l, a, b, h], !is_dual)
    } else {
        select_377([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10760([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_10761([a, b, c, d, e, f, g, i, h, j, k, m, l, n], is_dual)
    } else {
        select_10765([b, g, d, e, f, h, a, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10752([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10753([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_10760([a, c, d, e, f, g, h, b, i, k, l, j, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_10769([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_8334([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_8854([a, b, c, d, e, g, h, f, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10768([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8853([a, c, d, b, e, f, h, i, g, j, k], is_dual)
    } else {
        select_10769([a, b, d, c, e, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10751([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_10752([a, b, d, c, e, f, h, g, i, j, m, l, k, n], is_dual)
    } else {
        select_10768([a, j, m, n, l, b, h, g, c, k, i, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10731([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_10732([a, b, d, c, f, g, h, e, i, j, k, m, l, n], is_dual)
    } else {
        select_10751([a, b, d, e, f, g, h, c, i, j, l, m, k, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_10775([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1364([f, k, l, i, h, a, b, d, e], !is_dual)
    } else {
        select_1953([a, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10774([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10775([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_8075([a, d, c, e, f, b, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10773([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2794([g, k, j, b, a, i, c, h, d], !is_dual)
    } else {
        select_10774([b, a, c, d, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_10777([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3021([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_4635([a, g, d, e, b, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_10779([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_81([e, f, h, d, a, g], !is_dual)
    } else {
        select_309([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_10778([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1914([f, a, g, d, h, b, e], is_dual)
    } else {
        select_10779([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_10776([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10777([c, a, b, e, f, d, g, i], is_dual)
    } else {
        select_10778([a, b, c, d, g, e, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10772([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_10773([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_10776([j, g, k, a, b, i, c, d, h], !is_dual)
    }
}
/// n = 11, i = 3
fn select_10783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1254([d, h, e, f, a, g, i, j], is_dual)
    } else {
        select_9414([b, c, d, a, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_10784([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2747([a, b, c, d, f, h, j, k, i, l], is_dual)
    } else {
        select_84([a, b, d, e, i, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_10782([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10783([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_10784([b, d, c, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_10787([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_292([e, h, g, f, a, b, d], !is_dual)
    } else {
        select_213([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10786([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2886([b, c, a, d, f, e, g, i, j, h, k], is_dual)
    } else {
        select_10787([e, k, j, l, a, f, h, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1953([a, b, c, g, e, f, i, j, k, l], is_dual)
    } else {
        select_1254([c, a, f, d, e, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10785([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10786([b, c, d, e, a, f, g, i, h, k, j, l], is_dual)
    } else {
        select_10788([a, c, d, e, b, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10781([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10782([c, a, b, d, e, f, g, h, i, j, l, m], is_dual)
    } else {
        select_10785([b, a, c, d, f, i, h, g, j, l, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10790([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2651([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_487([a, b, j, h, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10792([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_97([a, b, d, e, f, i, h, j], is_dual)
    } else {
        select_647([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10791([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_10792([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_988([b, h, c, f, a, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10789([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_10790([a, b, e, g, f, h, c, i, j, k], is_dual)
    } else {
        select_10791([a, b, e, c, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10780([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_10781([a, b, c, e, d, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_10789([a, b, e, h, f, g, d, i, k, j, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10771([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_10772([b, a, c, d, e, i, h, j, k, g, l, n], is_dual)
    } else {
        select_10780([a, c, b, d, e, f, h, g, i, k, j, l, n, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10797([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_70([a, b, d, i, j, k, g], is_dual)
    } else {
        select_948([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10796([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2888([a, d, f, e, b, g, h, i, j], is_dual)
    } else {
        select_10797([a, c, d, b, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10799([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_376([a, b, c, f, g, h, i, k], is_dual)
    } else {
        select_5099([a, c, b, d, f, e, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_10798([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2884([a, b, d, e, g, h, i, k, j, l], is_dual)
    } else {
        select_10799([k, i, l, m, f, g, j, a, b, c, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10795([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_10796([a, b, g, d, e, i, h, f, k, j, l], is_dual)
    } else {
        select_10798([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_10801([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1882([a, b, c, i, d, h, g, j, k], is_dual)
    } else {
        select_2129([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10803([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6357([a, b, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_1459([g, f, c, d, e, a, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10802([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_10803([b, a, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_6933([b, c, d, e, f, a, g, h, i, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10800([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_10801([a, d, e, f, b, c, g, h, i, k, j], is_dual)
    } else {
        select_10802([a, b, c, d, e, h, g, j, l, m, n, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_10794([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10795([b, d, c, e, f, h, g, i, a, j, k, m, n], is_dual)
    } else {
        select_10800([b, a, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10808([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_803([e, b, c, d, f, g, i, h], is_dual)
    } else {
        select_213([g, j, e, d, a, h, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_642([b, c, d, f, g, i, h, j], is_dual)
    } else {
        select_10808([a, c, d, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10809([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5318([i, j, g, h, e, a, b, f, c], !is_dual)
    } else {
        select_974([a, e, b, d, g, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10806([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10807([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_10809([a, b, g, c, h, f, e, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10812([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_82([d, g, c, e, h], is_dual)
    } else {
        select_154([i, j, g, d, h, f, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10811([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_642([a, c, d, g, f, i, h, j], is_dual)
    } else {
        select_10812([b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10810([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_10811([b, a, d, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_4241([a, b, f, d, g, h, e, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10805([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_10806([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_10810([a, b, d, c, e, g, i, h, f, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_10815([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_74([a, f, b, d, e, h, i], is_dual)
    } else {
        select_332([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_10816([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1236([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_141([a, c, e, f, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_10814([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10815([b, c, g, e, f, a, h, j, k], is_dual)
    } else {
        select_10816([c, d, b, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_10818([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_699([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_83([h, g, i, a, c], is_dual)
    }
}
/// n = 9, i = 4
fn select_10817([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10818([a, c, b, e, d, f, g, h, i], is_dual)
    } else {
        select_3575([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10813([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_10814([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10817([a, i, k, b, j, h, c, g, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10804([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10805([a, b, c, d, g, e, f, i, h, j, k], is_dual)
    } else {
        select_10813([e, i, k, h, l, m, f, g, a, j, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10793([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_10794([a, c, b, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_10804([g, l, m, n, a, h, j, c, b, k, d, e, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10770([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_10771([b, a, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10793([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10730([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_10731([a, b, c, e, d, f, g, i, j, l, m, h, n, k], is_dual)
    } else {
        select_10770([a, b, c, e, f, g, d, i, h, k, j, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_10825([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4777([i, j, k, e, h, a, b, g, d], !is_dual)
    } else {
        select_2754([b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_724([b, a, c, g, e, f, i, j, k], is_dual)
    } else {
        select_84([a, e, f, d, h, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10824([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10825([c, b, d, e, a, f, g, i, h, j, k], is_dual)
    } else {
        select_10826([c, a, d, e, b, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10827([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_732([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_7708([a, b, e, d, f, h, i, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_10823([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10824([a, b, d, c, f, h, g, j, k, i, m], is_dual)
    } else {
        select_10827([a, c, b, d, e, i, k, l, h, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10822([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9453([a, c, d, e, f, b, g, i, j, h, k, l], is_dual)
    } else {
        select_10823([a, b, c, d, f, e, h, i, g, k, l, j, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10830([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_7267([i, g, l, a, e, k, b, c, h], !is_dual)
    } else {
        select_8584([a, b, e, d, g, f, j, i, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_10832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_265([a, b, g, c, i, f, k, h], is_dual)
    } else {
        select_53([a, h, d, e, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_10835([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_30([b, c, d, g], is_dual)
    } else {
        select_99([a, h, e, i, f, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_10834([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3051([h, a, b, i, f, e, g, k, j], is_dual)
    } else {
        select_10835([a, c, d, e, f, g, j, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_10836([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_453([a, i, b, e, f, k, g], is_dual)
    } else {
        select_236([a, g, c, d, e, h, j, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10834([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_10836([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10831([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10832([b, a, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_10833([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10829([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_10830([a, c, g, d, b, f, j, h, i, k, l, m], is_dual)
    } else {
        select_10831([a, c, d, b, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10828([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3503([a, c, d, e, b, h, f, i, k, j, g], is_dual)
    } else {
        select_10829([a, b, c, e, d, h, g, i, k, f, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10821([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_10822([a, b, d, e, f, c, g, i, h, k, j, l, m], is_dual)
    } else {
        select_10828([a, b, e, f, d, g, i, h, c, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_10840([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2282([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_7708([b, a, e, d, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_10842([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_70([e, b, d, f, h, i, g], is_dual)
    } else {
        select_185([a, c, d, f, e, g, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10841([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_10842([h, k, j, l, a, b, i, f, d, g, e], !is_dual)
    } else {
        select_988([h, j, l, b, a, i, c, g, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10839([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10840([c, b, a, d, e, i, k, l, h, m], is_dual)
    } else {
        select_10841([a, b, d, c, f, h, g, j, k, i, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10838([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_10839([a, b, c, d, f, e, h, i, g, k, l, j, m, n], is_dual)
    } else {
        select_9453([b, c, d, e, f, a, g, i, j, h, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10837([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_10838([a, b, c, e, f, d, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_10828([b, a, e, f, c, g, i, h, d, j, k, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10820([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10821([c, a, d, b, e, f, h, g, j, i, k, l, m], is_dual)
    } else {
        select_10837([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_10849([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_95([a, d, c, i, g, h, k], is_dual)
    } else {
        select_612([b, d, e, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_10848([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_10849([b, d, a, c, e, h, g, f, i, j, k], is_dual)
    } else {
        select_2073([d, f, c, e, a, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10851([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_205([j, f, k, a, b, i], !is_dual)
    } else {
        select_772([a, c, f, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_10852([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2348([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_499([e, c, d, a, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10850([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_10851([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10852([a, b, d, g, f, c, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_10847([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_10848([b, c, e, d, a, f, h, g, i, j, k], is_dual)
    } else {
        select_10850([a, c, b, h, d, f, g, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10846([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10847([b, c, d, e, a, g, h, f, i, k, j, l], is_dual)
    } else {
        select_4474([b, a, d, c, i, g, j, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10855([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4595([e, b, c, d, g, h, i, f, j, k], is_dual)
    } else {
        select_8429([a, f, b, d, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10856([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_9027([a, b, d, f, e, g, h, i, j, k, l], is_dual)
    } else {
        select_6160([a, b, c, h, e, g, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10854([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10855([c, d, b, e, f, a, g, h, i, k, j, l], is_dual)
    } else {
        select_10856([c, d, a, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_10857([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1599([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1599([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_10853([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10854([b, c, d, e, a, g, h, f, i, k, j, l], is_dual)
    } else {
        select_10857([a, b, d, c, g, i, j, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10845([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10846([c, d, b, e, a, h, i, f, j, g, l, k], is_dual)
    } else {
        select_10853([c, d, a, e, b, h, i, g, k, f, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10861([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5994([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_5706([k, l, g, a, i, b, j, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10863([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_375([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_122([a, b, c, i, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_10862([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_265([b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_10863([a, c, e, b, d, f, h, i, g, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10860([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10861([a, b, d, g, e, h, f, i, j, k, l, m], is_dual)
    } else {
        select_10862([b, c, d, f, e, h, i, g, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_10865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1971([b, g, c, h, a, f, i, j], is_dual)
    } else {
        select_960([b, a, c, d, e, f, i, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10864([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10865([c, b, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_565([b, a, c, g, i, j, k, f], is_dual)
    }
}
/// n = 13, i = 5
fn select_10859([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_10860([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_10864([a, b, c, d, h, f, j, i, k, g, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_10868([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_614([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_188([i, j, h, a, b, f, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_10867([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1298([a, b, c, e, h, j, g, l, i], is_dual)
    } else {
        select_10868([c, a, d, b, g, f, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_10869([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5799([c, b, e, a, g, h, j, k, i], is_dual)
    } else {
        select_5799([c, a, d, b, f, i, j, l, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_10866([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10867([c, d, b, a, e, f, h, i, j, g, l, k], is_dual)
    } else {
        select_10869([a, d, c, b, e, g, h, f, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10858([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10859([a, c, b, e, d, f, h, i, j, g, l, k, m], is_dual)
    } else {
        select_10866([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10844([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_10845([b, d, f, e, a, g, h, i, c, j, k, l], is_dual)
    } else {
        select_10858([b, d, e, f, c, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10843([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10844([b, a, d, c, e, f, g, i, j, k, h, l, n], is_dual)
    } else {
        select_10844([c, a, d, b, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10819([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_10820([c, b, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10843([c, a, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10729([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_10730([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    } else {
        select_10819([a, c, d, e, f, g, b, i, j, h, l, k, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_10878([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_167([j, k, l, e, a, f, b, h], !is_dual)
    } else {
        select_2495([b, a, c, d, f, e, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10877([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2951([a, c, f, d, e, h, g, j, k, i], is_dual)
    } else {
        select_10878([a, b, c, d, e, f, g, i, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_10876([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3072([a, c, d, e, h, g, j, k, i, l], is_dual)
    } else {
        select_10877([a, b, c, g, e, f, i, k, l, j, h, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_10880([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4093([a, c, d, e, g, f, h, j, l], is_dual)
    } else {
        select_4093([b, d, c, f, g, e, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10882([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2836([a, b, f, d, g, e, i, j, k], is_dual)
    } else {
        select_2836([a, c, e, d, g, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10881([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_166([a, b, f, e, h, g, j, d, k], is_dual)
    } else {
        select_10882([b, a, c, e, d, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10879([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_10880([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_10881([i, l, k, g, j, e, f, h, b, c, a], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10875([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_10876([b, c, a, d, e, f, g, i, h, k, l, j, m], is_dual)
    } else {
        select_10879([m, k, i, n, a, l, e, j, b, f, h, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_10886([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_379([c, d, b, e, f, g, h, j, i, k], is_dual)
    } else {
        select_128([a, d, b, e, g, i, j, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_10885([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_10886([b, a, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_5411([b, h, d, e, a, g, j, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10888([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_154([a, b, d, g, e, h, k, i], is_dual)
    } else {
        select_942([a, c, d, e, f, i, g, j, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10887([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_6367([g, b, d, a, h, e, k, i, l], is_dual)
    } else {
        select_10888([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10884([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_10885([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_10887([a, b, c, g, e, f, h, k, j, i, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10890([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_250([e, b, h, d, i, g], is_dual)
    } else {
        select_1859([a, c, b, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10892([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_188([g, j, h, d, a, f, c], !is_dual)
    } else {
        select_644([i, j, g, h, d, e, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10891([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_10892([b, a, c, f, e, g, d, h, i, k], is_dual)
    } else {
        select_9039([d, a, c, f, g, e, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10889([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_10890([b, c, d, a, e, f, g, j, h, i, k], is_dual)
    } else {
        select_10891([k, h, l, a, e, i, j, f, b, g, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_10883([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_10884([a, b, d, c, e, g, f, h, i, j, l, m, k], is_dual)
    } else {
        select_10889([a, b, c, g, h, e, f, i, l, k, m, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_10874([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_10875([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_10883([a, c, b, d, f, e, g, h, i, k, m, l, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10896([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3609([a, b, c, e, d, f, g, h, i, k], is_dual)
    } else {
        select_61([a, h, e, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10897([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3173([h, i, j, k, g, d, a, f, c, e], !is_dual)
    } else {
        select_6767([a, b, f, d, g, h, e, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10895([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10896([a, c, b, d, e, f, h, i, j, k, g], is_dual)
    } else {
        select_10897([a, b, c, d, f, e, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_10899([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_565([e, a, c, f, i, j, k, g], is_dual)
    } else {
        select_2297([b, d, a, c, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_10898([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4256([b, c, d, f, g, i, j, h, k], is_dual)
    } else {
        select_10899([j, l, i, m, h, k, e, a, b, f, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10894([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10895([b, c, g, e, h, f, a, j, k, i, l], is_dual)
    } else {
        select_10898([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_10901([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2884([a, b, c, d, g, h, i, f, j, k], is_dual)
    } else {
        select_1232([b, a, d, e, c, g, f, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10902([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_806([f, k, l, m, g, a, h, b, i], !is_dual)
    } else {
        select_7201([b, c, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_10900([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_10901([a, b, d, e, h, f, g, i, k, j, m], is_dual)
    } else {
        select_10902([a, c, b, e, d, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10893([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_10894([f, b, d, c, g, h, i, a, k, l, m, j, n], is_dual)
    } else {
        select_10900([b, c, d, e, a, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10873([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_10874([a, c, e, d, g, i, h, b, j, f, l, k, m, n], is_dual)
    } else {
        select_10893([a, c, d, e, b, f, g, i, h, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10906([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_425([g, f, i, j, a, b, h, c], !is_dual)
    } else {
        select_1669([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10905([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5457([b, a, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_10906([a, b, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10907([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_8193([a, c, b, d, f, e, g, h, j, i], is_dual)
    } else {
        select_10286([a, b, c, d, f, g, h, i, j, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_10904([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10905([c, a, d, e, b, g, f, h, j, i, k], is_dual)
    } else {
        select_10907([h, k, l, j, a, g, f, c, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10910([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_8265([b, d, a, c, e, f, h, g, i, j], is_dual)
    } else {
        select_3873([k, l, i, h, e, g, b, a, j, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10912([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_886([b, d, c, g, f, e, h], is_dual)
    } else {
        select_4686([h, g, j, k, d, a, i, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_272([a, b, c, f, e, h, i, j], is_dual)
    } else {
        select_782([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_10911([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_10912([a, c, b, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_10913([g, j, k, h, d, e, a, b, i, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10909([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10910([a, b, d, c, e, f, h, i, j, g, l, k], is_dual)
    } else {
        select_10911([j, k, l, h, e, i, a, b, f, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10915([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1813([b, c, d, f, e, h, g, i], is_dual)
    } else {
        select_1396([b, c, a, g, e, i, f, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_10916([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_1813([i, h, k, d, e, a, j, f], !is_dual)
    } else {
        select_7513([b, a, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10914([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_10915([h, j, k, i, f, d, e, a, g, b], !is_dual)
    } else {
        select_10916([a, c, b, d, f, e, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10908([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10909([a, b, c, d, f, e, g, j, h, k, l, i], is_dual)
    } else {
        select_10914([k, l, h, j, f, e, i, a, b, c, g], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10903([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < l) || (is_dual && e > l) {
        select_10904([i, k, h, e, m, j, f, a, l, b, g, c], !is_dual)
    } else {
        select_10908([b, a, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10872([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10873([a, c, d, b, e, g, h, f, i, k, l, m, j, n], is_dual)
    } else {
        select_10903([k, m, n, l, a, g, f, c, b, h, d, j, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10922([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_936([f, i, k, e, j, h, g, a, b], !is_dual)
    } else {
        select_4888([f, h, k, e, j, a, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10923([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_95([e, b, c, d, f, g, i], is_dual)
    } else {
        select_198([e, i, j, f, h, a, g, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10921([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_10922([a, b, g, d, e, f, h, i, j, k, m], is_dual)
    } else {
        select_10923([b, d, c, f, e, h, g, i, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10924([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2651([a, j, k, l, g, h, i, f, c, d], !is_dual)
    } else {
        select_7878([a, k, l, j, h, i, g, e, c, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10920([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_10921([l, m, n, i, a, h, j, k, e, b, g, f, d], !is_dual)
    } else {
        select_10924([a, c, e, d, f, g, h, i, j, l, k, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_10928([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_153([i, h, d, e, f, a, c], !is_dual)
    } else {
        select_644([a, b, c, e, d, f, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10927([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_10928([a, e, f, h, d, j, i, k, l], is_dual)
    } else {
        select_527([d, b, c, g, e, f, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_10929([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_192([b, c, e, g, h, j], is_dual)
    } else {
        select_1860([a, d, b, c, f, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_10926([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10927([b, c, e, f, h, g, i, a, j, k, l, m], is_dual)
    } else {
        select_10929([b, a, c, e, d, f, g, i, h, j, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10925([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_10926([a, c, b, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_79([a, b, d, g, i, j, k, h], is_dual)
    }
}
/// n = 14, i = 6
fn select_10919([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_10920([b, d, c, e, g, f, h, a, j, l, k, i, m, n], is_dual)
    } else {
        select_10925([b, c, d, a, e, g, h, f, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_10932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_791([a, i, j, h, k, b, f, c, g], !is_dual)
    } else {
        select_845([a, b, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10931([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10932([a, f, j, i, k, g, h, c, d, b, e], !is_dual)
    } else {
        select_3038([a, g, i, k, f, b, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10933([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_81([a, b, c, g, i, j], is_dual)
    } else {
        select_614([a, d, b, c, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_10930([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_10931([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_10933([a, j, k, f, b, h, i, d, g, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10918([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10919([a, b, d, e, c, g, h, f, j, k, l, i, n, m], is_dual)
    } else {
        select_10930([b, j, m, k, l, a, g, f, d, c, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10937([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6303([a, c, e, d, g, i, f, h, k], is_dual)
    } else {
        select_4237([h, g, j, k, i, d, e, a, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_167([a, b, g, f, h, e, j, k], is_dual)
    } else {
        select_2898([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10939([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10940([b, a, c, d, e, f, g, h, j, k, l], is_dual)
    } else {
        select_3993([a, b, c, f, e, g, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_10938([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2267([h, b, c, d, i, e, g, j, l], is_dual)
    } else {
        select_10939([a, c, b, g, e, f, j, i, k, l, m, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_10936([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_10937([i, c, b, a, e, f, k, h, l, j, m], is_dual)
    } else {
        select_10938([b, a, c, d, e, f, g, h, j, i, k, m, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10942([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4239([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6353([e, b, h, f, g, a, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_10943([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4395([b, c, a, d, f, g, e, h, i], is_dual)
    } else {
        select_1124([c, e, d, f, a, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_10941([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_10942([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_10943([b, f, c, e, a, h, i, j, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_10935([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_10936([a, c, b, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_10941([a, b, f, g, h, i, j, k, l, e], is_dual)
    }
}
/// n = 13, i = 5
fn select_10934([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10935([a, b, d, e, c, f, g, h, i, j, m, k, l], is_dual)
    } else {
        select_10935([a, c, d, e, b, f, g, h, i, j, m, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10917([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10918([a, b, d, c, e, g, f, h, j, k, m, i, n, l], is_dual)
    } else {
        select_10934([a, b, c, e, d, h, g, j, i, k, l, f, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10871([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_10872([b, a, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_10917([b, a, c, d, e, g, h, i, j, k, l, f, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10950([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_76([e, b, c, g, d, f, h, i, j], is_dual)
    } else {
        select_736([d, g, i, j, e, h, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10949([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_7637([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_10950([a, e, c, h, d, f, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10951([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2343([a, c, b, d, e, f, g, h, k, j], is_dual)
    } else {
        select_310([a, b, d, f, g, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_10948([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_10949([b, a, c, e, d, f, h, g, i, j, l], is_dual)
    } else {
        select_10951([i, h, g, k, m, d, l, e, a, b, j], !is_dual)
    }
}
/// n = 10, i = 3
fn select_10954([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_834([i, a, b, d, e, g, h, j], is_dual)
    } else {
        select_834([g, b, c, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10953([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_310([h, i, k, d, l, a, j], !is_dual)
    } else {
        select_10954([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10952([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_8107([i, g, k, h, l, d, e, a, b, j], !is_dual)
    } else {
        select_10953([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10947([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10948([l, n, m, f, j, k, a, b, c, i, g, h, e], !is_dual)
    } else {
        select_10952([l, m, n, f, k, j, a, c, b, g, d, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_10958([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1532([b, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_737([a, b, c, i, f, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10960([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_820([a, g, c, d, f, i, h, k], is_dual)
    } else {
        select_5929([a, b, f, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10959([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10960([a, d, b, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_10960([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10957([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_10958([b, a, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_10959([c, d, e, b, g, f, a, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_10962([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_393([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_516([c, d, f, e, g, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_10961([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10962([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1810([a, b, c, i, g, h, f, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10956([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10957([b, a, e, d, g, f, h, j, k, i, m], is_dual)
    } else {
        select_10961([a, c, e, b, d, f, g, h, i, k, j, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_10966([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1596([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_703([a, d, g, f, e, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10965([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10966([a, c, f, d, e, g, i, j, l], is_dual)
    } else {
        select_6958([a, b, c, g, e, f, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_10967([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_878([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_122([c, b, e, g, h, f], is_dual)
    }
}
/// n = 13, i = 5
fn select_10964([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_10965([a, b, g, d, e, f, h, i, k, l, j, m], is_dual)
    } else {
        select_10967([a, b, c, i, e, f, g, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_10969([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4898([g, i, j, a, e, h, c, f, d], !is_dual)
    } else {
        select_684([a, i, j, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10968([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3933([i, h, j, a, e, b, c, g, f], !is_dual)
    } else {
        select_10969([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10963([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_10964([b, a, c, d, f, e, g, h, i, l, k, j, m], is_dual)
    } else {
        select_10968([i, a, b, c, f, g, j, l, m, e], is_dual)
    }
}
/// n = 14, i = 6
fn select_10955([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_10956([a, c, d, b, e, f, g, i, h, j, l, k, n, m], is_dual)
    } else {
        select_10963([a, d, e, c, f, g, i, h, b, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10946([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_10947([b, c, a, d, e, g, h, i, j, k, f, m, l, n], is_dual)
    } else {
        select_10955([b, c, a, d, e, g, h, f, i, k, j, m, l, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_10974([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4448([b, a, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_2747([e, h, k, j, i, a, g, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10975([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1654([a, f, c, d, g, e, i, j], is_dual)
    } else {
        select_729([d, b, e, c, g, f, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_10973([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_10974([a, b, c, f, e, h, i, k, g, l, j], is_dual)
    } else {
        select_10975([b, a, d, e, i, g, f, k, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_10977([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_81([a, g, c, d, f, h], is_dual)
    } else {
        select_376([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_10976([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_6857([a, b, c, e, d, f, g, i, j, h, k], is_dual)
    } else {
        select_10977([i, j, k, g, e, d, a, h, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10972([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_10973([b, a, c, d, e, g, h, i, f, k, j, l], is_dual)
    } else {
        select_10976([b, f, d, a, h, g, e, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_10980([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4354([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_176([d, i, j, k, a, e, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_10981([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_571([d, i, k, a, e, j, g, b, f], !is_dual)
    } else {
        select_380([h, i, j, d, f, a, g, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_10979([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10980([a, c, b, e, h, f, i, j, l, g, k], is_dual)
    } else {
        select_10981([a, d, b, e, h, g, f, j, l, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_10983([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1381([b, d, c, e, g, f, i, j, h], is_dual)
    } else {
        select_2452([b, a, f, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_10984([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4880([i, h, g, k, j, d, e, a, b], !is_dual)
    } else {
        select_156([b, c, e, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_10982([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10983([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_10984([h, k, l, d, i, j, a, e, f, g, c], !is_dual)
    }
}
/// n = 13, i = 6
fn select_10978([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_10979([h, m, l, i, d, k, e, j, f, a, b, g], !is_dual)
    } else {
        select_10982([a, c, b, d, e, g, f, h, i, k, j, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10971([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_10972([a, b, f, d, e, i, g, j, k, h, m, n], is_dual)
    } else {
        select_10978([l, m, n, e, k, j, i, a, b, h, f, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_10988([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_878([b, a, c, d, e, f, g, j, i], is_dual)
    } else {
        select_250([a, c, f, e, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_10989([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2458([b, a, c, e, f, h, j, m, l], is_dual)
    } else {
        select_936([a, c, d, f, g, i, h, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_10987([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10988([b, c, d, h, f, a, j, k, m, i], is_dual)
    } else {
        select_10989([b, c, d, e, a, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10992([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5876([b, c, d, e, f, g, i, h, j, l], is_dual)
    } else {
        select_5580([a, b, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_10991([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4717([a, j, k, l, h, e, i, b], !is_dual)
    } else {
        select_10992([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_10994([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1563([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_103([b, a, e, g, i, d, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_10993([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10994([h, l, k, a, j, i, e, g, b, c], !is_dual)
    } else {
        select_3058([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_10990([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10991([a, c, b, d, e, f, h, j, i, g, k, l], is_dual)
    } else {
        select_10993([a, b, c, d, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10986([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10987([b, c, a, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_10990([a, c, b, e, i, g, h, f, k, j, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_10997([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1039([a, d, b, c, e, f, g, i, j], is_dual)
    } else {
        select_684([b, c, f, a, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_10998([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4490([a, b, e, d, g, f, i, j], is_dual)
    } else {
        select_453([d, a, c, f, e, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_10996([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_10997([b, a, c, d, e, g, f, i, h, j], is_dual)
    } else {
        select_10998([b, d, c, e, f, g, a, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_10995([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1975([d, b, e, c, h, g, f, j, i], is_dual)
    } else {
        select_10996([d, i, h, k, j, e, g, a, b, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10985([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_10986([a, c, b, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_10995([l, m, k, h, f, i, b, a, c, j, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_10970([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_10971([b, c, d, e, f, g, h, i, a, j, k, l, n, m], is_dual)
    } else {
        select_10985([b, c, a, d, e, f, h, i, g, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10945([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_10946([b, a, c, d, e, g, f, h, i, j, l, m, k, n], is_dual)
    } else {
        select_10970([a, b, c, d, e, g, h, i, j, l, k, m, f, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_11004([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_8815([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4095([h, a, b, j, f, e, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_11005([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_67([i, e, a, k, f, l], is_dual)
    } else {
        select_341([b, f, c, d, e, g, h, j, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_11003([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_11004([f, a, c, d, h, e, i, j, g, l, k], is_dual)
    } else {
        select_11005([a, b, c, d, f, e, g, i, j, h, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_11007([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_171([c, e, a, d, f, g, h, i], is_dual)
    } else {
        select_1124([g, j, a, b, h, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11006([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4215([a, b, c, d, e, f, i, h, j, g], is_dual)
    } else {
        select_11007([b, c, a, e, d, f, i, g, j, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_11002([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_11003([b, a, c, d, f, e, h, g, i, k, l, j], is_dual)
    } else {
        select_11006([k, h, l, g, m, e, a, j, f, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11011([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_65([b, c, d, e, f, h, g, i, k], is_dual)
    } else {
        select_1979([i, h, k, l, j, e, f, a, g, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_11010([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3070([i, a, b, e, f, k, g, l, m], is_dual)
    } else {
        select_11011([a, f, c, d, e, g, h, j, k, i, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11009([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < l) || (is_dual && e > l) {
        select_3252([j, m, e, g, i, l, a, h], !is_dual)
    } else {
        select_11010([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11013([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5340([a, b, g, e, i, j, h, k, f], is_dual)
    } else {
        select_846([h, j, i, l, e, f, g, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_11014([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_67([h, a, k, j, f, b], !is_dual)
    } else {
        select_8393([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11012([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11013([a, g, c, d, e, f, h, j, i, l, m, k], is_dual)
    } else {
        select_11014([e, b, f, c, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11008([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_11009([a, b, c, d, f, g, h, i, j, e, k, l, m], is_dual)
    } else {
        select_11012([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11001([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_11002([b, c, d, e, a, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_11008([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_11017([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_9274([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_169([a, c, b, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11018([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_7201([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9359([f, h, j, k, l, a, g, b, i, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11016([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_11017([j, f, i, k, l, b, a, g, c, h], !is_dual)
    } else {
        select_11018([b, c, d, a, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_11016([a, b, d, c, h, f, g, j, k, l, i, m], is_dual)
    } else {
        select_2165([b, a, c, g, e, f, i, h, k, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11000([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11001([a, b, d, c, e, f, h, i, j, g, k, m, l], is_dual)
    } else {
        select_11015([a, b, c, d, e, f, h, g, i, j, l, k, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_11023([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1513([a, b, c, d, e, f, h, i], is_dual)
    } else {
        select_152([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11022([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2410([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_11023([g, e, j, a, h, i, b, c, f], !is_dual)
    }
}
/// n = 13, i = 5
fn select_11021([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5798([a, c, b, e, d, g, f, i, h, k, j, l], is_dual)
    } else {
        select_11022([a, c, h, e, b, g, j, k, i, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_11024([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2361([a, b, c, e, f, h, j, k, i, l], is_dual)
    } else {
        select_3605([a, b, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11020([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11021([a, b, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_11024([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_11029([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_820([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_2474([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11030([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_235([a, f, c, d, e, g, i, j], is_dual)
    } else {
        select_2898([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_11029([e, i, j, g, f, a, h, b], !is_dual)
    } else {
        select_11030([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_11032([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_361([h, g, i, a, b, e, c], !is_dual)
    } else {
        select_122([a, b, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_11031([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_265([b, e, d, c, g, f, i, h], is_dual)
    } else {
        select_11032([a, b, f, d, h, g, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11027([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_11028([a, c, b, g, e, f, i, j, k, h], is_dual)
    } else {
        select_11031([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11035([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_640([e, d, b, c, f, g, i], is_dual)
    } else {
        select_942([e, i, j, k, g, h, a, f, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11036([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_95([e, d, b, c, f, g, h], is_dual)
    } else {
        select_23([a, i, j], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_11035([f, i, j, k, a, h, e, g, b, c, d], !is_dual)
    } else {
        select_11036([a, i, j, k, f, h, e, g, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11033([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1924([a, g, i, k, j, h, e, b, c, f], !is_dual)
    } else {
        select_11034([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_11026([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_11027([a, c, d, b, e, g, f, h, i, j, l], is_dual)
    } else {
        select_11033([e, b, d, c, g, i, h, f, k, m, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11040([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_852([a, f, c, d, g, e, h, i, k], is_dual)
    } else {
        select_1617([b, c, e, d, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_11039([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_11040([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6965([a, c, e, d, g, h, j, k, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11041([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_4777([g, i, j, a, h, b, e, f, d], !is_dual)
    } else {
        select_9553([b, a, c, d, f, e, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_11038([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_11039([b, a, c, e, d, f, g, h, j, i, k, m], is_dual)
    } else {
        select_11041([a, b, g, e, i, h, f, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11037([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_8689([a, b, i, e, f, c, h, l, j], is_dual)
    } else {
        select_11038([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11025([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_11026([f, l, m, n, a, i, k, b, j, g, c, d, h], !is_dual)
    } else {
        select_11037([a, b, c, d, e, f, g, h, i, k, j, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11019([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_11020([a, b, d, e, c, f, i, g, j, h, k, l, m], is_dual)
    } else {
        select_11025([a, b, c, e, d, f, i, h, j, g, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10999([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11000([a, b, c, e, d, f, h, i, k, j, g, l, n], is_dual)
    } else {
        select_11019([a, c, d, b, e, f, h, g, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10944([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_10945([a, c, d, b, f, g, h, e, i, k, l, j, n, m], is_dual)
    } else {
        select_10999([a, c, d, e, f, g, h, b, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_10870([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_10871([b, c, e, d, f, g, i, h, j, a, k, l, m, n], is_dual)
    } else {
        select_10944([b, c, e, a, d, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10728([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_10729([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10870([a, b, d, f, e, g, h, j, i, k, c, m, n, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_10727([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_10728([g, d, e, c, f, b, a, j, l, i, h, k, m, n], is_dual)
    } else {
        select_10728([g, d, f, c, e, b, a, j, k, i, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10726([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_10727([h, g, f, a, d, e, b, l, k, c, i, j, m, n], is_dual)
    } else {
        select_10727([h, g, f, c, d, e, b, l, k, a, i, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10725([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10726([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    } else {
        select_10726([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10724([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10725([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_10725([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11042([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_8446([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_8446([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_10723([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_10724([a, b, c, d, e, f, g, i, h, j, k, l, n, m], is_dual)
    } else {
        select_11042([a, b, c, d, e, f, g, i, h, j, l, m, n, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_10722([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10723([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_10723([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_11056([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3046([b, a, c, d, e, h, g, f, i, j], is_dual)
    } else {
        select_5370([i, h, g, k, d, a, j, e, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11057([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_947([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_1482([h, e, j, b, a, f, i, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11055([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_11056([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_11057([a, h, i, k, d, e, j, f, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_11060([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5589([e, h, i, f, a, b, g], !is_dual)
    } else {
        select_1527([f, h, i, a, e, g, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11059([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_947([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_11060([f, h, e, j, a, b, i, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11058([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1910([c, b, a, e, f, d, g, h, i], is_dual)
    } else {
        select_11059([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11054([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_11055([a, b, c, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_11058([a, d, j, k, h, f, e, b, i, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11053([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11054([a, b, d, e, c, g, h, f, i, j, k], is_dual)
    } else {
        select_11054([a, c, d, f, b, g, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11052([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11053([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_11053([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11051([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_10268([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_11052([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11067([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3164([a, b, e, d, g, f, i, h], is_dual)
    } else {
        select_571([d, c, a, f, e, h, j, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11066([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_11067([a, b, c, d, e, f, h, g, i, k, j], is_dual)
    } else {
        select_3771([a, b, e, d, h, f, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_11069([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4201([c, a, b, d, f, e, i, g, j, h], is_dual)
    } else {
        select_2470([h, e, j, a, i, g, f, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11068([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8203([a, b, e, d, i, g, f, k, h], is_dual)
    } else {
        select_11069([f, j, k, g, d, i, h, a, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11065([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_11066([a, c, b, e, f, h, i, d, g, j, k], is_dual)
    } else {
        select_11068([a, c, b, e, d, h, g, i, f, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11072([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_580([a, j, k, e, i, b, f, g, d], !is_dual)
    } else {
        select_1456([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11071([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_109([a, e, k, b, h, i, g, c, f], !is_dual)
    } else {
        select_11072([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11070([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_11071([e, h, k, l, f, j, g, a, i, c, b], !is_dual)
    } else {
        select_298([f, a, b, g, d, h, e, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11064([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_11065([b, d, h, f, a, g, i, e, j, k, l], is_dual)
    } else {
        select_11070([b, c, d, a, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11063([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11064([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_11064([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_11076([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_249([d, h, j, k, e, a, i], !is_dual)
    } else {
        select_4803([b, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_11076([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_7262([i, j, k, g, d, e, a, b, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11081([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([i, j, e, d, h, a], !is_dual)
    } else {
        select_34([g, b, c, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_11080([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1265([d, b, c, e, g, f, j, h, k], is_dual)
    } else {
        select_11081([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11079([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_9640([d, i, j, k, g, e, a, h, b, f], !is_dual)
    } else {
        select_11080([k, i, j, g, e, h, a, d, b, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11082([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_250([d, j, k, e, a, h], !is_dual)
    } else {
        select_199([b, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_11078([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_11079([a, b, c, e, d, g, f, h, j, k, i], is_dual)
    } else {
        select_11082([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11077([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4764([d, j, k, l, g, h, e, a, i, b], !is_dual)
    } else {
        select_11078([a, e, c, d, g, h, f, i, l, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11074([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_11075([e, f, c, h, a, g, d, i, k, j, l], is_dual)
    } else {
        select_11077([a, b, c, d, e, g, h, f, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11073([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11074([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_11074([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11062([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_11063([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_11073([a, b, e, d, f, g, h, i, j, c, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_11089([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_77([f, j, i, a, h, e, b], !is_dual)
    } else {
        select_340([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11088([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_76([a, i, j, e, f, h, g, c, d], !is_dual)
    } else {
        select_11089([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11087([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_282([a, e, b, d, f, g, h, i], is_dual)
    } else {
        select_11088([a, c, b, g, e, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11086([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_11087([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_11087([a, c, d, b, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11085([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11086([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_11086([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_11094([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_216([b, c, a, d, e, f, g], is_dual)
    } else {
        select_188([a, c, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11093([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_11094([h, g, i, j, a, b, e, f, d], !is_dual)
    } else {
        select_71([g, a, b, c, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11092([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1162([c, a, d, b, e, f, g, h], is_dual)
    } else {
        select_11093([b, c, e, d, f, g, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11091([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11092([a, j, k, g, l, h, f, b, i, e], !is_dual)
    } else {
        select_844([a, b, c, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11090([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_11091([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_7359([a, f, g, c, d, h, b, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11084([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_11085([a, c, d, b, e, h, g, f, i, j, k], is_dual)
    } else {
        select_11090([a, b, c, d, e, g, h, i, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11083([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11084([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_11084([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11061([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_11062([a, b, c, e, f, g, h, i, j, d, l, k], is_dual)
    } else {
        select_11083([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11050([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_11051([a, b, c, j, l, h, d, g, e, k, i], !is_dual)
    } else {
        select_11061([a, b, c, d, e, f, h, i, g, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_11101([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1291([a, f, i, j, b, h, g, d, c], !is_dual)
    } else {
        select_2943([a, b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11100([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11101([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_11101([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11099([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_473([a, b, c, f, g, d, i, h, j], is_dual)
    } else {
        select_11100([a, b, c, f, e, d, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11102([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_9971([a, b, c, e, d, f, g, i, j, h], is_dual)
    } else {
        select_2678([a, b, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11098([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_11099([a, b, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_11102([a, b, c, f, e, g, h, d, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11103([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_10333([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_10333([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11097([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11098([a, b, c, g, f, k, i, j, d, h], !is_dual)
    } else {
        select_11103([a, b, c, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11096([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_11097([a, b, c, d, e, f, g, i, k, h, j], is_dual)
    } else {
        select_11097([a, b, c, e, d, g, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11109([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_10050([b, c, a, d, f, e, g, i, h, j], is_dual)
    } else {
        select_8203([j, k, i, f, e, a, b, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_11111([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3164([j, k, h, f, e, b, a, i], !is_dual)
    } else {
        select_136([b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11110([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_11111([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3771([j, i, k, e, f, a, c, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_11108([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_11109([a, c, b, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_11110([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_11112([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_10476([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_11110([a, b, c, e, i, g, h, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_11107([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_11108([g, b, c, e, a, f, h, i, j, k, l], is_dual)
    } else {
        select_11112([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_11114([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_221([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_412([a, b, d, g, f, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11113([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11114([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3666([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11106([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_11107([a, c, b, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_11113([a, h, b, c, i, g, j, k, l, m, f], is_dual)
    }
}
/// n = 13, i = 5
fn select_11105([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_11106([a, b, c, d, e, f, g, h, i, k, m, j, l], is_dual)
    } else {
        select_11106([a, b, d, c, e, f, h, g, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11104([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11105([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11105([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11095([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_11096([a, b, c, e, j, h, k, l, d, m, g], is_dual)
    } else {
        select_11104([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11049([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_11050([a, b, c, l, g, n, d, h, m, e, k, j], !is_dual)
    } else {
        select_11095([a, b, c, e, d, f, h, g, i, k, m, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11048([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_11049([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11049([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_11124([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_331([a, b, c, d, f, e, g, i], is_dual)
    } else {
        select_331([a, b, h, i, g, e, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11123([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_709([a, b, c, f, e, h, i, g, j], is_dual)
    } else {
        select_11124([a, e, b, d, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11122([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_11123([a, e, c, d, h, f, i, g, j, k], is_dual)
    } else {
        select_1371([a, g, k, l, i, h, e, j, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11127([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_97([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_987([e, j, h, k, f, a, i, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11126([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_11127([e, h, j, k, a, f, i, b, g, c, d], !is_dual)
    } else {
        select_8308([a, h, j, k, e, f, i, b, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11128([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_151([a, e, j, h, i, f, b, g], !is_dual)
    } else {
        select_2351([a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11125([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_11126([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_11128([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11121([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_11122([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_11125([a, b, f, c, h, e, j, i, k, l, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_11120([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11121([a, b, d, e, c, f, g, i, h, j, k, l], is_dual)
    } else {
        select_11121([a, c, d, e, b, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_11133([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_673([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_1528([b, f, c, e, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_11132([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_602([a, b, d, e, f, i, g, h, j, k], is_dual)
    } else {
        select_11133([a, b, c, e, g, h, f, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_11136([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_205([i, e, j, f, h, a], !is_dual)
    } else {
        select_2769([e, b, c, d, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_11137([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_381([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_52([f, e, i, d, h, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11135([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_11136([i, j, g, k, d, h, a, e, f, b], !is_dual)
    } else {
        select_11137([h, i, j, g, d, e, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3589([a, c, b, d, e, g, f, h, i], is_dual)
    } else {
        select_11135([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11131([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_11132([a, c, b, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_11134([a, g, j, l, b, h, k, i, f, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_11141([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_71([g, a, h, i, b, f], !is_dual)
    } else {
        select_1224([b, a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_11140([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6435([a, c, d, b, e, f, g, i, h, j], is_dual)
    } else {
        select_11141([e, i, g, k, a, h, b, c, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11139([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_5036([a, f, d, e, b, g, i, j, h], is_dual)
    } else {
        select_11140([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_11143([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_878([b, d, e, a, f, c, g, h, i], is_dual)
    } else {
        select_1780([b, d, c, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11142([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3559([b, d, a, e, c, f, g, i, h], is_dual)
    } else {
        select_11143([a, d, c, b, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11138([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_11139([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11142([e, a, i, j, k, f, b, h, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11130([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11131([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_11138([a, g, h, l, b, i, k, j, c, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11147([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1870([a, b, c, g, f, e, i, j], is_dual)
    } else {
        select_1576([c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_5397([c, a, b, d, e, f, g, j, h, k, i], is_dual)
    } else {
        select_171([f, j, e, i, g, h, c, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11146([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_11147([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_11148([i, j, e, k, f, a, h, g, d, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_11150([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_638([f, h, e, i, a, b, g, c], !is_dual)
    } else {
        select_2889([b, c, d, a, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_11149([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11150([a, b, c, g, e, i, f, j, h], is_dual)
    } else {
        select_1547([a, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11145([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_11146([g, i, h, k, a, e, j, f, c, b, d], !is_dual)
    } else {
        select_11149([g, i, e, k, a, h, j, f, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11152([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_233([e, i, j, g, k, a, f, b, h], !is_dual)
    } else {
        select_299([a, c, d, f, e, g, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_11154([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1772([f, d, b, c, a, g, h, i], is_dual)
    } else {
        select_734([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11153([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_11154([b, c, e, d, a, f, h, g, j], is_dual)
    } else {
        select_7607([c, a, e, b, d, h, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11151([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_11152([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_11153([i, h, e, k, j, a, f, b, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11144([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_11145([f, i, j, k, b, g, c, a, d, h, e], !is_dual)
    } else {
        select_11151([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_11130([a, b, d, c, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_11144([a, j, h, i, l, b, c, k, g, d, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11119([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_11120([a, b, c, d, e, g, h, i, j, k, f, l], is_dual)
    } else {
        select_11129([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_11159([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_299([a, b, c, i, f, k, h, j, l], is_dual)
    } else {
        select_1935([a, f, d, h, e, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11158([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_11159([a, c, b, d, e, f, h, g, j, i, k, l], is_dual)
    } else {
        select_10521([a, g, d, e, b, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11157([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_10519([a, b, c, g, e, f, h, i, l, m, j, k], is_dual)
    } else {
        select_11158([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11156([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_10263([a, b, i, d, f, k, c, g, l, m, j], is_dual)
    } else {
        select_11157([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_11163([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5059([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_324([b, c, g, e, f, h, a], is_dual)
    }
}
/// n = 9, i = 3
fn select_11162([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_9083([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_11163([b, c, d, e, f, g, h, a, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11164([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_844([a, f, i, j, k, g, b, h, c, d], !is_dual)
    } else {
        select_844([a, g, i, j, k, f, b, h, c, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11161([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_11162([a, c, d, e, b, g, h, f, i], is_dual)
    } else {
        select_11164([a, b, c, d, e, g, h, i, j, k, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_11160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_7354([a, h, f, j, k, g, b, c, i, d], !is_dual)
    } else {
        select_11161([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11155([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_11156([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_11160([a, f, l, m, k, b, i, c, g, d, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11118([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_11119([a, f, l, n, k, b, g, d, i, c, m, j], !is_dual)
    } else {
        select_11155([a, d, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11117([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11118([a, b, c, d, e, h, g, i, j, k, f, l, m, n], is_dual)
    } else {
        select_11118([a, c, b, d, e, h, f, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11116([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11117([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11117([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11115([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_11116([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11116([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11047([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_11048([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_11115([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_11170([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1386([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1386([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_11170([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_11170([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11173([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_9190([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_9190([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11172([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_7805([a, c, d, e, h, g, i, b, j, k, l], is_dual)
    } else {
        select_11173([a, d, c, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11171([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11172([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_11172([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11168([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_11169([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_11171([a, b, c, d, f, g, h, i, j, k, e, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11180([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_833([a, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_1875([g, i, l, e, k, b, a, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_156([g, j, b, f, a, i, c], !is_dual)
    } else {
        select_2444([h, j, f, a, i, g, b, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11181([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_11182([b, a, e, d, f, g, i, j, h, k], is_dual)
    } else {
        select_1419([g, i, l, a, e, k, b, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11179([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_11180([b, a, c, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_11181([a, b, c, d, f, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_11184([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_222([a, b, c, h, e, j, f, i], is_dual)
    } else {
        select_9161([a, b, f, d, e, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11183([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11184([a, c, b, d, f, e, g, h, j, i], is_dual)
    } else {
        select_10577([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11178([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_11179([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_11183([c, b, a, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11177([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11178([a, b, c, d, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_11178([b, a, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11176([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11177([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_11177([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11175([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11176([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_11176([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_11188([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2631([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_2631([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11187([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_6482([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_11188([a, b, c, e, f, h, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11186([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_10347([a, b, c, d, f, h, i, e, j, k], is_dual)
    } else {
        select_11187([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11185([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_11186([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11171([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_11174([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_11175([a, b, c, d, e, j, m, l, f, k, i, h], !is_dual)
    } else {
        select_11185([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_11167([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_11168([a, b, c, d, e, i, f, m, l, k, j, h], !is_dual)
    } else {
        select_11174([a, b, c, d, e, i, m, l, k, f, j, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11194([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_10247([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_10247([a, b, c, e, f, d, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11193([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2422([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_11194([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11198([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5354([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_143([a, i, j, k, e, f, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11197([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11198([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_11198([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11196([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_11197([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_11114([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11199([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_417([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_7800([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11195([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11196([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11199([a, b, c, j, h, k, f, g, i, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11192([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_11193([a, b, c, i, j, k, f, g, d, h], !is_dual)
    } else {
        select_11195([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_11204([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_389([c, d, e, f, a, b, g], is_dual)
    } else {
        select_566([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_11206([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_192([a, b, e, f, g, c], is_dual)
    } else {
        select_7220([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_11205([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_9341([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_11206([c, d, e, g, f, a, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_11203([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_11204([a, h, b, c, d, e, g, i, j], is_dual)
    } else {
        select_11205([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11209([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1459([g, a, b, c, e, f, i, k, j], is_dual)
    } else {
        select_259([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_11208([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_11209([b, c, d, e, f, g, a, h, i, k, j], is_dual)
    } else {
        select_7202([b, c, d, f, a, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11210([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_389([b, d, e, f, a, c, g], is_dual)
    } else {
        select_1458([a, b, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11207([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_11208([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11210([h, a, b, c, d, e, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11202([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11203([a, c, d, e, f, g, b, h, i, k], is_dual)
    } else {
        select_11207([c, b, d, e, f, g, a, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11211([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_1445([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1841([a, c, b, e, f, d, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11201([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_11202([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11211([a, h, c, d, e, f, i, b, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11200([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1437([a, b, h, d, e, f, i, c, j, k], is_dual)
    } else {
        select_11201([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11191([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_11192([a, b, c, h, l, d, j, k, e, f, i], !is_dual)
    } else {
        select_11200([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11190([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_11191([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_11191([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_11219([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2152([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_1010([a, b, d, c, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_11218([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_80([a, b, c, h, e, i, f], is_dual)
    } else {
        select_11219([a, b, f, d, e, g, j, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_11217([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11218([a, b, d, e, c, f, g, h, j, i], is_dual)
    } else {
        select_11184([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11216([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_11217([a, c, d, b, e, f, h, i, g, j], is_dual)
    } else {
        select_1793([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11215([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11216([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_11216([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_11215([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_11215([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_11222([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2140([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4626([a, c, d, e, g, b, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_11224([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_425([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_425([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11223([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2135([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_11224([a, g, b, i, j, c, h, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11221([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_11222([a, b, c, i, j, k, g, h, d], !is_dual)
    } else {
        select_11223([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11220([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1817([a, b, c, i, j, k, g, d, h], !is_dual)
    } else {
        select_11221([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11213([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_11214([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11220([a, b, c, j, d, l, i, k, e, f, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11227([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6736([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_6736([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11226([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2164([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_11227([a, b, c, d, e, h, i, j, k, g, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_11228([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_8181([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_2117([a, b, c, d, e, h, i, k, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_11225([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_11226([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_11228([a, b, c, d, f, g, e, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_11212([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_11213([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_11225([a, b, c, d, j, e, m, l, i, k, f, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_11189([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11190([a, b, c, d, e, f, k, m, l, i, j, h], !is_dual)
    } else {
        select_11212([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_11166([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11167([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_11189([a, b, c, d, e, f, g, i, k, h, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_11238([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_638([g, i, e, j, a, f, h, b], !is_dual)
    } else {
        select_5449([b, c, d, a, f, e, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11237([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3992([e, i, j, g, a, b, f, h], !is_dual)
    } else {
        select_11238([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_7143([a, b, h, c, f, e, j, g, i, k], is_dual)
    } else {
        select_11237([a, b, g, d, e, h, i, f, k, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_11235([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5331([e, h, j, k, l, a, c, i, f, g, d], !is_dual)
    } else {
        select_11236([e, k, h, m, a, j, f, l, b, c, i], !is_dual)
    }
}
/// n = 13, i = 6
fn select_11234([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_11235([g, e, j, m, a, f, l, b, k, h, c, i, d], !is_dual)
    } else {
        select_11235([g, f, j, m, b, e, l, a, k, h, c, i, d], !is_dual)
    }
}
/// n = 13, i = 6
fn select_11233([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11234([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11234([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_11232([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11233([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11233([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_11245([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_84([d, b, e, c, g, f, k], is_dual)
    } else {
        select_7920([a, b, f, d, e, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_11246([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_468([a, b, c, d, f, g, i, h], is_dual)
    } else {
        select_37([a, b, e, c, d, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_11244([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11245([j, k, m, a, f, l, b, h, c, d, i], !is_dual)
    } else {
        select_11246([c, d, a, f, e, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_11243([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11244([a, b, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_11244([b, a, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_11250([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_85([c, d, e, g, f, h], is_dual)
    } else {
        select_325([a, b, f, g, e, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_11249([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_11250([b, c, e, d, f, g, i, j, h, k], is_dual)
    } else {
        select_5071([a, b, h, c, f, e, k, j, i, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_11251([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3748([g, i, k, d, e, j, h, a, b, f], !is_dual)
    } else {
        select_650([d, b, c, e, g, f, i, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_11248([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_11249([b, a, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_11251([j, l, m, e, a, k, b, i, h, g, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_11247([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_11248([a, b, c, d, f, g, h, i, j, e, k, l, m], is_dual)
    } else {
        select_11248([b, a, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11242([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_11243([a, b, c, d, e, f, g, i, h, j, l, k, m], is_dual)
    } else {
        select_11247([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11241([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11242([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11242([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11240([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11241([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_11241([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_11252([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8036([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_8036([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11239([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_11240([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_11252([a, b, c, d, f, e, i, j, k, h, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11231([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_11232([a, b, c, d, h, n, e, l, m, f, k, j, i], !is_dual)
    } else {
        select_11239([a, b, c, d, f, e, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_11260([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5507([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_650([a, f, h, i, e, g, b, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11260([a, k, g, l, b, h, j, c, d], !is_dual)
    } else {
        select_10157([a, c, b, e, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_11258([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11259([a, b, c, g, e, h, f, i, j, k, l, m], is_dual)
    } else {
        select_7047([a, c, d, f, e, h, j, i, g, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11257([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11258([a, b, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_11258([b, a, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11256([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11257([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11257([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11255([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11256([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_11256([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_11263([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3797([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_10371([a, c, h, d, e, g, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11262([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_10373([a, b, g, j, l, c, k, h, d, i, e], !is_dual)
    } else {
        select_11263([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11261([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11262([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_11262([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11254([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_11255([a, b, c, d, f, e, g, h, i, j, k, m, l], is_dual)
    } else {
        select_11261([a, b, c, d, e, f, i, j, k, l, h, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_11270([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1486([c, b, d, a, f, g, j, i, h], is_dual)
    } else {
        select_710([f, a, e, b, h, j, k, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_11271([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4944([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_186([e, d, g, f, b, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_11269([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_11270([a, c, d, e, b, g, f, i, h, j, k], is_dual)
    } else {
        select_11271([c, d, f, e, b, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11268([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4185([j, i, l, f, a, k, b, g, c, h], !is_dual)
    } else {
        select_11269([b, c, a, d, e, f, g, i, h, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11267([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11268([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_11268([b, a, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11266([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11267([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_11267([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11265([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11266([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_11266([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_11277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_5694([b, c, d, e, g, h], is_dual)
    } else {
        select_10181([g, i, j, f, a, h, b, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11278([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_5694([a, b, c, d, g, h], is_dual)
    } else {
        select_7920([g, i, j, a, f, h, b, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11276([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_11277([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_11278([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_10489([b, c, a, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_11276([g, j, a, k, l, b, c, i, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11275([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_11275([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_11273([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2579([a, b, c, d, k, l, m, i, j, e, h], !is_dual)
    } else {
        select_11274([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_11272([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_11273([a, b, c, d, e, f, g, i, k, h, j, l, m], is_dual)
    } else {
        select_2562([a, b, c, d, f, e, g, h, j, i, l, k, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_11264([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11265([a, b, c, d, e, g, f, h, j, k, i, l], is_dual)
    } else {
        select_11272([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11253([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_11254([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_11264([a, b, c, d, m, h, n, e, k, l, j, f, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11230([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_11231([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_11253([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11229([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_11230([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_11230([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11165([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11166([a, b, c, d, e, f, i, k, j, l, g, m, n], is_dual)
    } else {
        select_11229([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11046([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_11047([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    } else {
        select_11165([a, b, c, d, e, f, g, h, i, j, k, m, n, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_11288([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5438([b, c, d, a, g, e, f, h, i], is_dual)
    } else {
        select_8203([b, h, d, a, f, g, e, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_11290([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_425([a, b, d, c, f, e, g, h], is_dual)
    } else {
        select_2318([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_11289([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_424([a, c, d, e, f, g, b, h], is_dual)
    } else {
        select_11290([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11287([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11288([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_11289([b, h, a, c, f, e, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_11286([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11287([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_11287([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_11295([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_70([a, i, f, g, e, b, h], !is_dual)
    } else {
        select_312([a, e, c, d, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_11294([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11295([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_11295([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_11297([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([b, e, c, d, f, h, g], is_dual)
    } else {
        select_700([f, i, e, h, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_11297([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_629([a, i, f, j, g, e, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11293([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_11294([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_11296([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11292([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5199([a, b, j, f, g, c, i, h], !is_dual)
    } else {
        select_11293([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_11299([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_139([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_81([a, b, c, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_11298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_478([a, b, h, j, f, c, i, g], !is_dual)
    } else {
        select_11299([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11291([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_11292([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_11298([a, b, c, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_11285([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_11286([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_11291([a, b, i, f, k, g, c, j, d, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_11304([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_774([a, c, b, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_5389([k, g, l, a, h, c, b, j, i], !is_dual)
    }
}
/// n = 11, i = 3
fn select_11305([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_770([c, b, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_6507([b, a, c, i, h, j, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_11303([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_11304([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_11305([a, d, b, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_11302([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_11303([a, d, c, b, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_1958([a, d, b, c, e, i, j, k, l, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_11307([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_74([a, b, c, d, i, g, k], is_dual)
    } else {
        select_350([a, b, g, e, f, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_11306([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6355([a, c, g, e, f, b, h, i, j, k], is_dual)
    } else {
        select_11307([a, c, e, f, b, d, i, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_11301([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_11302([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_11306([a, d, c, b, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_11313([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_993([d, h, i, e, g, a, b, f, c], !is_dual)
    } else {
        select_993([e, h, i, d, g, a, b, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_11312([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_81([d, e, c, b, g, f], is_dual)
    } else {
        select_11313([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_11311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_6303([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_11312([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_11315([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_312([a, f, d, e, b, g, h], is_dual)
    } else {
        select_4660([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_11316([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1418([c, a, b, d, e, f, g], is_dual)
    } else {
        select_153([g, h, a, e, b, c, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_11314([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_11315([a, b, d, c, e, f, g, i, h], is_dual)
    } else {
        select_11316([a, b, d, g, f, c, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_11311([i, f, j, b, c, a, g, h, d], !is_dual)
    } else {
        select_11314([b, c, d, a, e, f, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_11319([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_120([a, b, c, g, e, i], is_dual)
    } else {
        select_729([a, c, e, d, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_11318([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_11319([b, a, c, d, e, g, h, f, i], is_dual)
    } else {
        select_6366([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11317([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_8140([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_11318([a, b, d, e, f, c, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11309([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11310([a, c, d, b, e, f, g, h, j, i], is_dual)
    } else {
        select_11317([a, c, d, b, e, f, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11322([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_250([a, i, j, f, b, g], !is_dual)
    } else {
        select_2137([a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_11321([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3933([h, i, j, a, f, b, c, g, d], !is_dual)
    } else {
        select_11322([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2794([i, f, j, a, c, g, b, h, d], !is_dual)
    } else {
        select_11321([b, c, a, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11308([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_11309([c, b, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_11320([h, f, i, a, k, b, c, j, d, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_11300([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_11301([a, d, c, e, b, f, g, h, i, k, j, l], is_dual)
    } else {
        select_11308([a, c, d, e, i, h, j, k, b, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11284([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_11285([a, b, d, e, i, h, j, k, c, l, m], is_dual)
    } else {
        select_11300([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_11327([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3767([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_5267([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_11328([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_222([f, a, h, b, d, e, g, i], is_dual)
    } else {
        select_222([e, a, g, c, d, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11326([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_11327([g, d, f, j, e, k, a, i, h, b], !is_dual)
    } else {
        select_11328([b, a, c, f, d, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11325([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6971([g, e, f, j, k, d, a, b, i, h], !is_dual)
    } else {
        select_11326([b, a, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11324([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11325([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11325([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11329([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6054([a, b, d, c, e, g, f, h, i, j, k], is_dual)
    } else {
        select_7800([a, b, e, j, h, k, f, c, i, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11323([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_11324([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_11329([a, b, c, e, g, d, h, f, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11283([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < d) || (is_dual && l > d) {
        select_11284([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11323([a, b, c, e, i, h, j, k, l, d, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_11336([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1924([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_4053([a, c, e, g, f, b, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_11335([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_790([a, b, l, k, m, h, j, c, i, e, f], !is_dual)
    } else {
        select_11336([a, b, k, m, l, h, j, g, c, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_11339([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_356([b, c, g, h, a, i, f], is_dual)
    } else {
        select_4028([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_11338([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_893([a, f, i, g, b, h, c], !is_dual)
    } else {
        select_11339([b, a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_11341([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_110([f, h, g, j, b, i, c], !is_dual)
    } else {
        select_8045([a, d, e, b, c, f, h, g, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_11342([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2404([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_238([b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_11340([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_11341([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_11342([a, c, d, e, f, b, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11337([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_11338([a, b, j, k, l, i, h, g, c], !is_dual)
    } else {
        select_11340([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11334([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_11335([a, b, d, c, e, f, g, h, i, k, l, j, n], is_dual)
    } else {
        select_11337([a, b, l, n, h, m, k, j, g, c, d, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4794([f, c, b, a, e, h, g, i, j], is_dual)
    } else {
        select_5478([b, a, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11344([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2462([a, i, j, k, b, h, g, e, c, f, d], !is_dual)
    } else {
        select_11345([a, b, j, k, i, h, g, e, c, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_11347([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_476([a, b, d, g, f, c, h, i], is_dual)
    } else {
        select_327([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_11347([a, b, d, e, c, g, f, h, j], is_dual)
    } else {
        select_475([a, b, c, g, d, h, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11343([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11344([a, b, c, d, e, f, h, g, j, k, i], is_dual)
    } else {
        select_11346([a, b, j, k, g, h, i, e, c, f], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11333([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_11334([a, b, d, c, e, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_11343([a, b, d, i, g, j, h, c, l, k, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_11349([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8756([a, b, d, e, c, f, g, i, h, j], is_dual)
    } else {
        select_1205([a, b, c, e, f, d, g, h, i, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_11352([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1069([a, b, c, d, e, f, g], is_dual)
    } else {
        select_4101([a, b, f, g, e, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_11351([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1152([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_11352([a, b, d, h, c, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11350([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6484([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_11351([a, b, d, f, c, e, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11348([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11349([a, b, d, c, e, g, f, h, j, k, i, l], is_dual)
    } else {
        select_11350([a, b, d, c, f, e, g, i, j, k, h, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11332([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_11333([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_11348([a, b, c, h, l, m, n, j, k, g, d, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11358([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1039([c, d, a, b, e, h, f, i, g], is_dual)
    } else {
        select_157([a, b, e, c, h, g, f, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_11357([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11358([j, k, h, m, l, e, f, g, a, b], !is_dual)
    } else {
        select_578([h, j, k, m, l, g, e, a, i, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11360([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4865([f, b, d, a, e, h, g, i, j], is_dual)
    } else {
        select_4866([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11361([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6003([d, b, c, e, f, g, h], is_dual)
    } else {
        select_3259([f, j, g, d, i, a, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11359([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_11360([f, j, k, i, h, g, a, d, b, e], !is_dual)
    } else {
        select_11361([b, a, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_11356([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_11357([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11359([h, k, m, e, l, a, j, f, g, b, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_11363([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_9843([a, e, b, c, d, f, h, g, i, l, k], is_dual)
    } else {
        select_389([b, c, d, g, f, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_11362([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11363([a, b, c, d, e, f, h, g, j, i, l, k], is_dual)
    } else {
        select_2304([a, h, f, b, c, d, i, g, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11355([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_11356([b, e, c, d, f, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_11362([b, a, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_11367([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_348([a, c, d, b, e, g, f, h], is_dual)
    } else {
        select_8080([a, f, c, d, b, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_11366([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11367([a, b, d, e, f, g, h, i, k], is_dual)
    } else {
        select_1419([a, c, b, h, f, i, j, g, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11365([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_11366([a, k, n, h, m, l, f, g, j, b, c, i], !is_dual)
    } else {
        select_604([a, b, f, g, d, e, h, i, l, j, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_11370([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_468([a, b, f, d, e, h, g, j], is_dual)
    } else {
        select_729([a, b, g, c, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_11371([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_468([c, d, a, b, e, g, f, h], is_dual)
    } else {
        select_1308([a, c, d, f, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_11369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_11370([c, d, e, a, b, f, g, i, j, h], is_dual)
    } else {
        select_11371([a, b, c, d, f, h, i, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_11373([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4099([a, b, c, d, e, f, h, g, k, j], is_dual)
    } else {
        select_5941([b, c, a, d, e, g, h, j, f, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_11372([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_11373([g, k, l, j, i, a, h, e, f, c, b], !is_dual)
    } else {
        select_627([a, c, e, d, g, f, i, j, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11368([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_11369([a, c, b, d, e, g, f, h, j, i, l], is_dual)
    } else {
        select_11372([b, c, d, e, f, g, a, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_11364([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_11365([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11368([a, h, k, m, n, b, l, f, j, g, i, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11354([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_11355([a, b, c, d, e, f, h, g, i, j, k, l, n], is_dual)
    } else {
        select_11364([a, b, e, c, d, g, h, i, j, k, f, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11353([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11354([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11354([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11331([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_11332([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    } else {
        select_11353([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_11380([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1236([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_386([a, h, j, b, i, c, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_11379([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11380([a, b, c, g, e, f, h, j, i, k], is_dual)
    } else {
        select_1874([a, b, c, d, i, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11383([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_100([b, a, c, i, f, k, h, m], is_dual)
    } else {
        select_118([a, h, d, e, j, g, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11382([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11383([c, a, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11383([c, b, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_11385([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_167([b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_940([i, f, j, g, h, a, e, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11384([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_565([a, f, c, d, h, g, j, i], is_dual)
    } else {
        select_11385([h, j, l, f, k, a, e, i, b, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_11381([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_11382([a, b, c, d, e, f, h, g, i, j, l, k, m], is_dual)
    } else {
        select_11384([c, b, e, f, g, a, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11378([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_11379([a, b, d, c, e, f, g, i, j, h, l, m], is_dual)
    } else {
        select_11381([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_11389([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_98([a, b, e, i, f, j], is_dual)
    } else {
        select_529([a, c, d, e, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_11390([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_238([a, d, e, i, g, h, j], is_dual)
    } else {
        select_1617([a, b, c, h, f, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_11388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_11389([f, c, d, e, a, g, h, i, j, k], is_dual)
    } else {
        select_11390([b, c, a, d, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_11387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_6811([a, b, h, c, j, g, f, i, k], is_dual)
    } else {
        select_11388([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_11392([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_614([e, b, c, d, f, h, g, i], is_dual)
    } else {
        select_5589([a, g, b, e, i, f, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_11391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4862([f, c, d, g, a, e, h, i, j], is_dual)
    } else {
        select_11392([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_11386([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_11387([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_11391([b, g, d, e, f, h, a, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11377([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_11378([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11386([a, d, b, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_11396([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_618([c, h, i, d, e, g, a, f], !is_dual)
    } else {
        select_422([c, g, i, d, e, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_11398([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_21([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_65([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_11397([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11398([c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_6038([j, l, m, k, h, g, a, b, c, d, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_11395([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11396([g, m, a, b, j, l, h, c, i], !is_dual)
    } else {
        select_11397([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_11400([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_519([b, f, d, e, c, g, i, h, j], is_dual)
    } else {
        select_4563([a, b, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11399([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_728([b, c, f, i, g, j, k], is_dual)
    } else {
        select_11400([a, b, c, d, e, f, g, h, i, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_11394([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_11395([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11399([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_11401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2126([a, b, d, e, f, c, h, g, i, k], is_dual)
    } else {
        select_2126([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_11393([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11394([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_11401([a, b, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_11376([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_11377([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    } else {
        select_11393([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_11405([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1769([i, j, h, a, g, e, b, f, c], !is_dual)
    } else {
        select_1769([h, j, i, a, g, f, b, e, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_11407([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_67([e, f, i, a, h, g], !is_dual)
    } else {
        select_5589([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_11408([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_580([a, b, c, f, g, h, e, j, i], is_dual)
    } else {
        select_603([a, b, d, c, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_11407([a, b, e, g, d, i, f, h, k], is_dual)
    } else {
        select_11408([d, j, k, i, h, g, e, a, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_11404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_11405([d, j, g, k, h, i, f, e, a, b], !is_dual)
    } else {
        select_11406([a, b, c, d, e, f, i, g, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_11410([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_290([b, a, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_8142([l, k, g, b, a, h, j, c, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_11411([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1914([a, b, c, f, i, g, j], is_dual)
    } else {
        select_327([a, f, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_11409([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_11410([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_11411([b, a, g, e, f, h, c, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_11403([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11404([g, l, m, a, h, k, c, b, j, d, i], !is_dual)
    } else {
        select_11409([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_11416([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_453([g, c, d, h, f, e, i], is_dual)
    } else {
        select_2898([d, a, b, e, f, i, g, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_11415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_11416([b, c, a, d, e, f, g, h, j, i], is_dual)
    } else {
        select_4169([a, b, f, g, i, h, e, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_11417([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_638([g, h, d, j, a, e, i, f], !is_dual)
    } else {
        select_4597([b, c, a, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_11414([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_11415([a, d, c, b, e, f, g, i, h, j, k], is_dual)
    } else {
        select_11417([a, b, c, e, f, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_11413([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11414([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_7608([a, f, b, d, e, h, i, g, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11420([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_725([i, h, k, j, a, f, e, g, b], !is_dual)
    } else {
        select_3186([a, b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11419([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5209([a, b, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_11420([e, j, k, g, h, f, i, b, a, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11422([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3221([a, b, f, d, e, h, i, j, g], is_dual)
    } else {
        select_3115([a, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_11421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_11422([a, b, c, e, f, g, i, j, k, h], is_dual)
    } else {
        select_6235([f, a, d, c, e, i, h, g, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11418([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11419([a, g, b, d, e, h, i, f, j, k, l], is_dual)
    } else {
        select_11421([a, b, d, c, e, f, h, j, g, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11412([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11413([c, a, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_11418([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11402([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_11403([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11412([g, a, l, m, n, b, j, h, c, k, d, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11375([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_11376([a, b, c, d, e, f, h, g, i, j, l, k, n], is_dual)
    } else {
        select_11402([a, b, c, d, e, f, h, i, j, l, k, g, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11374([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11375([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11375([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11330([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_11331([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_11374([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11282([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_11283([a, b, c, d, e, f, g, h, j, l, k, m, i], is_dual)
    } else {
        select_11330([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_11429([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1550([a, e, f, c, d, g, h, i, l], is_dual)
    } else {
        select_2578([a, j, k, l, e, f, b, i, g, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_11430([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2651([a, e, c, d, h, f, g, l, i, m], is_dual)
    } else {
        select_1072([a, j, k, m, e, l, i, b], !is_dual)
    }
}
/// n = 13, i = 6
fn select_11428([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11429([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_11430([a, c, d, e, b, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_11427([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1686([f, a, k, l, m, b, c, i, j, g, h], !is_dual)
    } else {
        select_11428([b, c, a, d, e, f, g, h, j, l, m, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_11435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_98([a, h, e, g, i, j], is_dual)
    } else {
        select_96([b, e, c, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_11434([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_618([j, g, f, k, a, e, i, b], !is_dual)
    } else {
        select_11435([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11436([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2719([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1548([e, i, f, j, a, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_11433([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_11434([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_11436([e, f, c, d, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11432([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_7214([a, c, d, e, g, b, f, h, i, j, k, l], is_dual)
    } else {
        select_11433([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11438([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_564([f, a, g, c, d, e, h, i, j, k], is_dual)
    } else {
        select_988([a, b, h, e, f, i, j, g, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_11440([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_111([a, b, g, e, f, h, i], is_dual)
    } else {
        select_238([a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_11439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_102([a, b, i, e, j, f, g], is_dual)
    } else {
        select_11440([a, f, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11437([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_11438([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_11439([b, a, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11431([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_11432([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_11437([a, c, b, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 6
fn select_11426([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_11427([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_11431([a, b, f, j, l, m, c, k, g, d, i, h], !is_dual)
    }
}
/// n = 13, i = 6
fn select_11425([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11426([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11426([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_11444([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9582([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_9582([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_11443([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6173([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_11444([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_11442([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_11443([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_11443([a, b, c, d, e, g, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11447([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_418([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2586([a, b, c, d, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11446([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_11447([a, b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11188([a, b, c, d, h, e, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11445([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_11443([a, b, c, g, h, i, d, j, k], is_dual)
    } else {
        select_11446([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11441([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_11442([a, b, c, d, i, e, j, g, k], is_dual)
    } else {
        select_11445([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_11424([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_11425([a, b, c, d, l, n, k, m, i, h, j, f, g], !is_dual)
    } else {
        select_11441([a, b, c, d, l, n, k, m, i, h, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_11455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_700([a, b, e, i, j, k, f], is_dual)
    } else {
        select_529([b, c, d, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_11456([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_153([a, b, e, i, j, k, l], is_dual)
    } else {
        select_485([a, c, d, e, g, f, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11454([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11455([a, c, d, e, b, f, g, h, j, i, k], is_dual)
    } else {
        select_11456([b, c, d, e, a, g, f, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 6
fn select_11453([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_947([d, e, b, c, h, f, g, i, k], is_dual)
    } else {
        select_11454([h, d, k, l, m, e, j, a, i, f, b, g], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11452([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1794([a, k, h, m, b, j, f, c, i], !is_dual)
    } else {
        select_11453([l, k, n, a, h, i, m, b, j, g, f, d, e], !is_dual)
    }
}
/// n = 10, i = 3
fn select_11460([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_186([a, b, h, g, i, j], is_dual)
    } else {
        select_96([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_11459([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_11460([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3253([f, g, k, a, b, j, c, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11461([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2719([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_812([e, i, j, f, a, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_11458([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_11459([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_11461([a, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_11457([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_1794([j, l, h, i, a, b, f, c, k], !is_dual)
    } else {
        select_11458([a, b, f, d, e, h, i, g, j, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11451([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11452([a, b, c, d, e, g, h, f, j, k, l, i, m, n], is_dual)
    } else {
        select_11457([a, c, b, d, e, f, h, i, g, k, j, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11450([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11451([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_11451([b, a, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11449([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11450([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11450([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11448([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11449([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11449([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11423([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_11424([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_11448([a, b, c, d, e, f, g, h, j, k, l, m, i, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11281([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_11282([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_11423([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_11469([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_588([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_413([a, f, b, c, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_11468([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_11469([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_8209([a, f, g, b, j, k, i, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_11471([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_7844([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2369([a, b, c, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11470([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3295([a, g, c, d, e, b, h, i, j, k], is_dual)
    } else {
        select_11471([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11467([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_11468([a, b, j, g, l, c, h, k, i, d, e], !is_dual)
    } else {
        select_11470([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11466([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11467([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_11467([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_11475([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_588([a, b, d, e, c, g, f, h], is_dual)
    } else {
        select_412([a, b, f, j, c, i, g, h, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11474([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_8037([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_11475([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11473([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11474([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_11474([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11472([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_11442([a, b, c, d, j, e, i, g, h], !is_dual)
    } else {
        select_11473([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11465([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_11466([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_11472([a, b, c, d, j, l, k, h, e, i], !is_dual)
    }
}
/// n = 11, i = 3
fn select_11481([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2590([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_140([a, i, c, d, b, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_11480([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_7191([a, b, h, e, f, g, c, i, j, k, l], is_dual)
    } else {
        select_11481([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11479([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_11480([a, b, d, e, c, f, g, h, i, j, l, k], is_dual)
    } else {
        select_189([a, b, d, i, e, c, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11478([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_1996([a, b, c, l, d, n, j, m, k, h, i], !is_dual)
    } else {
        select_11479([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_11485([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_9750([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_75([e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_11484([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2581([a, b, j, f, l, m, c, k, i, g, h], !is_dual)
    } else {
        select_11485([c, d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 6
fn select_11483([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11484([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    } else {
        select_11484([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 6
fn select_11482([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_6180([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_11483([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11477([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_11478([a, b, c, d, g, e, f, h, j, k, i, l, m, n], is_dual)
    } else {
        select_11482([a, b, c, d, l, n, k, m, j, e, f, i, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11476([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1676([a, b, c, d, e, f, g, h, j, k, l, m, i, n], is_dual)
    } else {
        select_11477([a, b, c, d, f, g, e, h, i, j, m, n, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11464([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_11465([a, b, c, d, m, i, n, k, h, e, l, j], !is_dual)
    } else {
        select_11476([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_11493([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_280([d, e, b, c, f, g, h, j], is_dual)
    } else {
        select_157([d, e, i, j, h, f, a, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11492([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_11493([j, k, l, a, b, c, i, g, d, h], !is_dual)
    } else {
        select_2635([a, b, d, c, e, f, g, h, j, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_11491([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_7059([l, m, n, g, h, i, j, e, a, b, k], !is_dual)
    } else {
        select_11492([g, h, i, m, l, n, j, k, f, e, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11497([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_100([i, e, f, j, h, d, g, a], !is_dual)
    } else {
        select_75([e, b, c, f, g], is_dual)
    }
}
/// n = 13, i = 6
fn select_11496([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1870([j, l, m, e, k, a, i, b], !is_dual)
    } else {
        select_11497([a, c, d, e, g, h, f, k, m, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_11495([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_11496([a, c, d, e, g, f, i, j, h, k, l, m, n], is_dual)
    } else {
        select_4163([k, m, g, n, l, a, b, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11494([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_7070([i, c, b, g, l, a, n, m, h], is_dual)
    } else {
        select_11495([c, b, a, d, e, f, h, i, j, k, l, g, n, m], is_dual)
    }
}
/// n = 14, i = 6
fn select_11490([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_11491([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11494([a, b, c, d, e, g, j, f, k, h, i, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_11501([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_10835([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_10835([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11500([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_680([a, b, c, f, g, h], is_dual)
    } else {
        select_11501([d, a, b, c, e, f, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_11503([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_74([f, h, c, d, e, i, j], is_dual)
    } else {
        select_7659([k, h, m, j, g, l, f, a, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11502([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_680([b, c, d, h, f, j], is_dual)
    } else {
        select_11503([a, e, b, c, d, f, g, h, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11499([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11500([b, c, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_11502([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_11505([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_299([e, i, j, l, f, g, h, b, c], !is_dual)
    } else {
        select_2974([i, k, e, f, l, g, j, d, h, a], !is_dual)
    }
}
/// n = 13, i = 6
fn select_11507([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_280([g, h, i, j, m, f, c, d], !is_dual)
    } else {
        select_391([k, l, g, h, m, i, j, e, a, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11506([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6365([l, n, i, h, g, m, a, e, b], !is_dual)
    } else {
        select_11507([a, e, c, d, i, f, j, k, h, m, l, n, g], is_dual)
    }
}
/// n = 14, i = 6
fn select_11504([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_11505([b, c, d, f, h, i, e, g, j, k, l, m], is_dual)
    } else {
        select_11506([a, b, c, d, e, g, j, k, f, h, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11498([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_11499([b, a, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_11504([b, e, c, d, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11489([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_11490([a, c, b, d, e, g, h, i, j, l, k, m, n, f], is_dual)
    } else {
        select_11498([a, c, d, e, b, f, g, h, i, j, l, n, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_11512([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_910([a, b, f, d, h, g, e, i, j, k], is_dual)
    } else {
        select_2216([a, b, c, d, e, f, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11511([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2215([a, c, d, b, e, h, f, i, g, j], is_dual)
    } else {
        select_11512([a, b, d, c, e, h, g, i, f, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11510([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_11511([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_3449([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_11509([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_11510([a, e, k, h, m, j, f, l, g, i, d], !is_dual)
    } else {
        select_3666([a, e, h, l, k, g, j, i, b, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11516([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_675([e, f, c, d, h, g, l, i], is_dual)
    } else {
        select_214([j, k, l, f, e, a, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11517([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_804([b, c, d, e, g, f, h, i, k, j], is_dual)
    } else {
        select_628([g, j, l, a, h, i, b, d, e], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11515([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_11516([a, e, c, d, f, h, g, j, i, k, n, l], is_dual)
    } else {
        select_11517([k, n, j, m, f, h, i, l, e, a, g, b], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11514([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5942([l, m, f, n, h, a, j, i, e, b], !is_dual)
    } else {
        select_11515([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 13, i = 6
fn select_11518([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2717([d, f, g, k, l, m, i, j, e, h, b, c], !is_dual)
    } else {
        select_5944([k, d, l, m, f, g, i, e, a, j], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11513([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_11514([a, b, c, d, e, f, h, g, j, k, i, l, m, n], is_dual)
    } else {
        select_11518([e, c, d, f, g, a, i, h, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11508([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_11509([a, b, c, e, f, h, g, j, i, l, n, k, m], is_dual)
    } else {
        select_11513([a, d, b, c, e, f, h, i, j, l, k, m, n, g], is_dual)
    }
}
/// n = 14, i = 6
fn select_11488([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_11489([a, b, c, d, e, f, g, j, h, i, k, l, m, n], is_dual)
    } else {
        select_11508([a, d, e, c, g, h, i, b, j, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11487([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11488([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11488([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_11524([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3303([c, d, b, e, a, f, g, h], is_dual)
    } else {
        select_157([c, d, a, e, b, f, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_11523([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_540([b, c, d, a, e, g, f, h, i], is_dual)
    } else {
        select_11524([g, a, b, c, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11527([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_97([i, j, h, k, a, b, f, c], !is_dual)
    } else {
        select_469([a, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11528([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6032([b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_11440([i, h, k, l, b, a, j, f, c], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11526([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11527([f, k, i, m, n, g, l, j, a, b, c], !is_dual)
    } else {
        select_11528([i, f, k, m, n, j, l, g, a, h, d, e], !is_dual)
    }
}
/// n = 9, i = 2
fn select_11529([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_9981([a, b, c, e, f, g, d, h, i], is_dual)
    } else {
        select_9981([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_11525([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_11526([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11529([i, k, m, n, f, g, j, a, l], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11522([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_11523([f, m, n, l, i, a, j, g, b, k], !is_dual)
    } else {
        select_11525([a, c, b, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_11533([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_257([a, c, d, b, e, f, g], is_dual)
    } else {
        select_25([h], is_dual)
    }
}
/// n = 12, i = 5
fn select_11532([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1901([a, b, c, g, e, f, i, j, h, k, l], is_dual)
    } else {
        select_11533([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_11531([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_10474([g, j, k, n, a, b, m, i, d, e, h], !is_dual)
    } else {
        select_11532([g, l, j, n, a, k, m, b, h, c, f, i], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11530([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_6945([g, l, n, j, a, m, h, b, c, k, d, i], !is_dual)
    } else {
        select_11531([a, b, c, e, f, d, g, h, i, j, m, n, k, l], is_dual)
    }
}
/// n = 14, i = 6
fn select_11521([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_11522([b, c, d, e, f, g, h, i, j, k, l, m, a, n], is_dual)
    } else {
        select_11530([b, a, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11520([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11521([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11521([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_11539([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_98([d, a, g, h, c, e], is_dual)
    } else {
        select_98([c, b, e, f, d, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_11538([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_8158([b, c, a, d, e, g, i, f, h, j], is_dual)
    } else {
        select_11539([b, d, f, e, a, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5906([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_5906([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_11542([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_81([a, d, e, c, f, g], is_dual)
    } else {
        select_70([a, b, f, d, g, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_11540([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_11541([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_11542([a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_11538([b, a, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_11540([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_11545([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1581([a, b, c, e, g, d, f, h, i], is_dual)
    } else {
        select_4635([d, c, a, f, e, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_11544([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_11545([a, b, c, e, f, g, h, i, d], is_dual)
    } else {
        select_1908([a, g, h, e, f, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_11543([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2909([e, f, h, i, a, b, c, g, d], !is_dual)
    } else {
        select_11544([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_11536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_11537([a, b, d, e, g, f, i, h, j, k], is_dual)
    } else {
        select_11543([a, j, k, i, b, h, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_11549([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_736([h, i, f, j, a, e, g, b], !is_dual)
    } else {
        select_5211([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_11548([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_11549([a, c, b, d, e, g, f, i, h, j], is_dual)
    } else {
        select_4569([a, f, c, b, e, h, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_11550([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3992([b, d, c, a, e, g, h, f], is_dual)
    } else {
        select_4772([b, a, d, c, f, g, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_11547([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_11548([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_11550([a, g, i, j, h, b, e, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_11552([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_10779([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_10779([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_11553([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2425([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_2425([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_11551([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_11552([a, b, c, g, e, h, f, i], is_dual)
    } else {
        select_11553([a, b, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_11546([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_11547([a, b, c, f, e, i, g, j, k, h], is_dual)
    } else {
        select_11551([a, b, e, d, g, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_11535([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_11536([a, c, b, d, e, g, f, i, h, j, k], is_dual)
    } else {
        select_11546([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1069([a, b, c, i, j, f, k], is_dual)
    } else {
        select_463([a, b, d, f, e, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_11559([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_468([b, c, a, d, f, g, h, j], is_dual)
    } else {
        select_53([a, e, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_11560([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6032([a, b, c, f, e, g, i, j, h], is_dual)
    } else {
        select_316([a, g, c, d, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_11558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_11559([b, a, c, d, e, g, f, i, h, j], is_dual)
    } else {
        select_11560([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_11557([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_11558([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_11563([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5164([a, b, e, d, h, f, i, g, j], is_dual)
    } else {
        select_1971([a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11562([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_11563([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_9003([a, d, c, f, g, e, j, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_11561([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5153([b, a, c, d, f, g, h, e, j, i], is_dual)
    } else {
        select_11562([b, d, c, f, e, g, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11555([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_11556([a, c, b, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_11561([a, c, d, g, f, h, j, b, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11565([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3438([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_1542([a, b, c, f, e, h, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_11564([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_7165([a, b, c, d, g, i, h, j, f, k], is_dual)
    } else {
        select_11565([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11554([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_11555([a, b, e, d, f, c, g, i, h, j, k], is_dual)
    } else {
        select_11564([a, b, e, c, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11534([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_11535([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_11554([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 6
fn select_11519([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_11520([a, b, c, e, d, f, g, h, i, j, l, k, n, m], is_dual)
    } else {
        select_11534([a, b, c, m, n, j, l, h, d, e, k], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11486([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_11487([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_11519([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11463([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_11464([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_11486([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11462([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_11463([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11486([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11280([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_11281([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_11462([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_11574([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_7262([e, i, j, k, d, f, a, b, h], !is_dual)
    } else {
        select_11078([b, a, c, e, d, f, g, h, k, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_11573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_11574([a, b, d, e, f, c, g, h, j, k, i], is_dual)
    } else {
        select_11075([a, c, d, e, b, g, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_11577([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3258([b, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_2077([b, a, g, d, f, h, i, e, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_11576([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2481([a, b, g, c, i, f, h, j, e, k], is_dual)
    } else {
        select_11577([a, b, c, d, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_11575([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_11576([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1852([a, b, g, c, e, i, h, j, k, l, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_11572([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_11573([e, f, j, l, a, b, k, h, i, c, g], !is_dual)
    } else {
        select_11575([a, b, c, d, e, f, i, h, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_11571([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_11572([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_11160([h, a, b, c, i, e, f, j, k, g, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_11582([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_7819([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_7819([b, a, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_11581([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_9083([i, a, b, c, g, e, f, h], is_dual)
    } else {
        select_11582([a, b, d, c, e, f, i, h, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_11580([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_11581([b, c, a, d, f, g, h, e, i, j], is_dual)
    } else {
        select_11164([h, a, i, b, c, f, g, j, k, l, e], is_dual)
    }
}
/// n = 12, i = 5
fn select_11579([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_7354([g, h, e, k, l, f, a, b, j, i], !is_dual)
    } else {
        select_11580([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_11587([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2078([a, b, g, c, e, f, i, h, j], is_dual)
    } else {
        select_55([b, d, h, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_11586([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1162([g, b, e, a, d, h, f, i], is_dual)
    } else {
        select_11587([a, c, d, b, g, h, f, i, e, j], is_dual)
    }
}
/// n = 13, i = 6
fn select_11585([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_11586([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_3410([f, i, e, l, m, a, k, b, j, g, h], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11584([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_11585([f, i, n, k, a, b, m, j, c, l, h, g, e], !is_dual)
    } else {
        select_11158([b, a, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_11590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3087([b, c, d, f, g, e, i, h], is_dual)
    } else {
        select_2943([e, b, a, c, h, g, f, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_11589([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_11590([b, a, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_8184([f, i, e, l, a, g, k, j, b, h, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_11588([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_11589([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_10265([f, a, c, h, e, g, i, b, k, l, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_11583([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_11584([a, c, b, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_11588([f, k, j, n, a, c, b, m, l, i, g, d], !is_dual)
    }
}
/// n = 14, i = 6
fn select_11578([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_11579([f, l, k, n, a, i, b, c, m, g, d, j], !is_dual)
    } else {
        select_11583([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11570([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_11571([f, l, n, k, a, i, c, b, g, d, m, j], !is_dual)
    } else {
        select_11578([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11569([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_11570([c, d, b, e, a, g, i, f, k, j, h, m, l, n], is_dual)
    } else {
        select_11570([c, e, b, d, a, g, h, f, k, j, i, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11568([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_11569([f, e, a, c, d, i, b, g, h, k, j, m, l, n], is_dual)
    } else {
        select_11569([f, e, b, c, d, i, a, g, h, k, j, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11567([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_11568([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11568([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11566([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_11567([a, b, c, d, e, g, h, f, i, j, k, l, m, n], is_dual)
    } else {
        select_11567([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11279([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_11280([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_11566([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11045([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_11046([a, b, c, d, e, f, h, i, j, k, l, m, g, n], is_dual)
    } else {
        select_11279([a, b, c, d, e, f, h, g, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11044([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_11045([a, b, c, d, e, f, g, i, j, k, l, m, h, n], is_dual)
    } else {
        select_11042([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_11043([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_11044([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1884([a, b, c, d, e, f, g, h, j, k, l, m, n, i], is_dual)
    }
}
/// n = 14, i = 6
fn select_10721([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_10722([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_11043([a, b, c, d, e, f, g, h, i, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 6
fn select_9315([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_9316([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_10721([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_1([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_9315([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 6
fn select_0([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_1([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
