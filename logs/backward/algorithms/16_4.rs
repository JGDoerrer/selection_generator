/// n = 1, i = 0
fn select_26([a]: [usize; 1], _: bool) -> usize {
    a
}
/// n = 2, i = 0
fn select_25([a, b]: [usize; 2], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_26([a], is_dual)
    } else {
        select_26([b], is_dual)
    }
}
/// n = 3, i = 0
fn select_24([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_25([a, b], is_dual)
    } else {
        select_25([b, c], is_dual)
    }
}
/// n = 4, i = 0
fn select_23([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_24([a, b, c], is_dual)
    } else {
        select_24([b, c, d], is_dual)
    }
}
/// n = 7, i = 1
fn select_22([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_23([c, d, e, f], is_dual)
    } else {
        select_24([a, b, g], is_dual)
    }
}
/// n = 6, i = 1
fn select_28([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_24([c, d, e], is_dual)
    } else {
        select_24([a, b, f], is_dual)
    }
}
/// n = 4, i = 1
fn select_29([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_24([a, b, c], is_dual)
    } else {
        select_26([d], is_dual)
    }
}
/// n = 8, i = 2
fn select_27([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_28([b, c, d, e, g, f], is_dual)
    } else {
        select_29([a, b, c, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_21([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_22([b, c, d, e, i, g, h], is_dual)
    } else {
        select_27([f, a, h, b, c, g, i, j], is_dual)
    }
}
/// n = 4, i = 1
fn select_33([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_25([a, d], is_dual)
    } else {
        select_25([b, c], is_dual)
    }
}
/// n = 3, i = 1
fn select_34([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_25([a, b], is_dual)
    } else {
        select_26([c], is_dual)
    }
}
/// n = 6, i = 2
fn select_32([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_33([b, c, e, d], is_dual)
    } else {
        select_34([a, b, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_31([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_32([a, b, c, f, e, g], is_dual)
    } else {
        select_32([a, b, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_30([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([a, b, c, d, f, g, h], is_dual)
    } else {
        select_31([e, h, a, b, f, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_20([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_21([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_30([b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_37([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_23([c, d, e, f], is_dual)
    } else {
        select_29([a, b, g, h], is_dual)
    }
}
/// n = 4, i = 1
fn select_39([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_33([a, c, b, d], is_dual)
    } else {
        select_33([b, c, a, d], is_dual)
    }
}
/// n = 7, i = 2
fn select_38([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_28([a, b, c, d, e, f], is_dual)
    } else {
        select_39([a, f, b, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_36([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_37([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_38([a, c, b, h, g, f, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_42([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_24([b, c, d], is_dual)
    } else {
        select_34([a, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_41([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_42([b, c, d, e, f, g], is_dual)
    } else {
        select_39([a, g, h, b], !is_dual)
    }
}
/// n = 5, i = 1
fn select_44([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_24([b, c, d], is_dual)
    } else {
        select_25([a, e], is_dual)
    }
}
/// n = 5, i = 2
fn select_45([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_33([a, b, c, d], is_dual)
    } else {
        select_34([d, a, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_43([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_44([b, c, d, g, f], is_dual)
    } else {
        select_45([a, b, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_40([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_41([f, a, c, d, e, g, h, i], is_dual)
    } else {
        select_43([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_35([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_36([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_40([g, b, d, e, a, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_19([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_20([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_35([b, h, c, e, f, a, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_18([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_19([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_19([a, b, d, e, f, g, c, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 1
fn select_50([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_23([d, e, f, g], is_dual)
    } else {
        select_23([a, b, c, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_49([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_37([a, h, d, e, f, g, i, j], is_dual)
    } else {
        select_50([b, c, g, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_48([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_49([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_49([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_53([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_23([c, d, e, f], is_dual)
    } else {
        select_39([a, b, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_54([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_23([c, d, e, g], is_dual)
    } else {
        select_44([a, b, h, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_52([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_53([a, g, c, d, e, f, h, i], is_dual)
    } else {
        select_54([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_51([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_52([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_52([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_47([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_48([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_51([a, b, h, e, f, g, c, i, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_46([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_47([f, g, h, a, d, e, j, i, k, l], is_dual)
    } else {
        select_47([f, g, h, a, b, c, k, i, j, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_17([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_18([a, b, c, d, e, j, k, i, m, l, n], is_dual)
    } else {
        select_46([f, c, i, g, h, a, b, d, j, l, k, m], is_dual)
    }
}
/// n = 9, i = 1
fn select_59([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_22([a, h, d, e, f, g, i], is_dual)
    } else {
        select_50([b, c, g, d, e, f, h, i], is_dual)
    }
}
/// n = 6, i = 1
fn select_61([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_23([b, c, d, e], is_dual)
    } else {
        select_25([a, f], is_dual)
    }
}
/// n = 7, i = 1
fn select_62([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_28([a, f, c, d, e, g], is_dual)
    } else {
        select_28([b, e, c, d, f, g], is_dual)
    }
}
/// n = 8, i = 1
fn select_60([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_61([a, c, d, e, f, h], is_dual)
    } else {
        select_62([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 1
fn select_58([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_59([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_60([b, h, d, e, f, g, a, i], is_dual)
    }
}
/// n = 5, i = 1
fn select_65([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_44([a, c, d, b, e], is_dual)
    } else {
        select_44([b, c, d, a, e], is_dual)
    }
}
/// n = 8, i = 2
fn select_64([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_65([a, e, c, f, h], is_dual)
    } else {
        select_62([b, d, a, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_63([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_64([a, c, d, g, f, b, h, i], is_dual)
    } else {
        select_36([a, c, d, b, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_57([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_58([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_63([a, b, c, j, d, h, i, g, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_56([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_57([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_57([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 2
fn select_55([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_46([f, c, j, g, h, a, b, i, k, m, l, n], is_dual)
    } else {
        select_56([a, b, c, d, e, k, l, i, j, n, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_16([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_17([a, j, b, c, d, f, g, h, l, k, m, i, n, o], is_dual)
    } else {
        select_55([a, c, d, e, b, f, g, h, j, i, k, m, l, n], is_dual)
    }
}
/// n = 5, i = 2
fn select_73([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_33([a, b, c, d], is_dual)
    } else {
        select_34([a, d, e], is_dual)
    }
}
/// n = 6, i = 2
fn select_72([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([a, c, b, d, e, f], is_dual)
    } else {
        select_73([a, b, e, f, d], is_dual)
    }
}
/// n = 8, i = 2
fn select_71([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_72([a, b, g, f, e, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_70([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_71([a, b, c, h, e, f, g, i], is_dual)
    } else {
        select_71([a, b, d, g, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_69([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_70([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_70([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_75([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_49([a, b, i, d, e, f, g, h, j, k], is_dual)
    } else {
        select_49([a, c, h, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_74([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_75([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_75([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_68([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_69([a, b, j, d, e, c, h, i, k], is_dual)
    } else {
        select_74([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_67([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_68([a, b, h, f, g, c, i, j, k, l, m], is_dual)
    } else {
        select_56([a, b, c, d, e, j, k, h, i, m, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_76([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_68([a, b, d, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_18([a, b, c, d, e, i, j, h, l, k, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_66([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_67([a, c, d, e, b, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_76([a, i, b, c, d, f, g, l, j, k, h, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_15([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_16([a, b, c, d, f, g, e, h, i, j, k, m, l, n, o], is_dual)
    } else {
        select_66([a, b, c, d, f, g, l, i, j, k, e, m, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_14([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_15([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    } else {
        select_15([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o], is_dual)
    }
}
/// n = 9, i = 2
fn select_84([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_22([b, f, c, d, e, g, h], is_dual)
    } else {
        select_37([a, g, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_83([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_52([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_84([b, a, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_82([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_83([g, f, e, c, d, i, h, j, k], is_dual)
    } else {
        select_83([g, f, e, a, b, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_87([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_27([b, d, g, e, f, i, h, j], is_dual)
    } else {
        select_27([a, c, h, e, f, i, g, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_89([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([a, c, b, f, g, h], is_dual)
    } else {
        select_39([b, e, d, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_88([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_37([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_89([a, b, h, c, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_86([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_87([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_88([g, b, d, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_90([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_71([g, b, d, e, a, f, h, i], is_dual)
    } else {
        select_36([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_85([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_86([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_90([a, d, g, e, f, h, b, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_81([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_82([b, h, f, g, d, c, a, i, k, j, l], is_dual)
    } else {
        select_85([a, b, c, e, d, j, i, h, l, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_94([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_38([a, f, c, d, e, g, i], is_dual)
    } else {
        select_38([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_95([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_37([a, g, c, d, e, f, h, j], is_dual)
    } else {
        select_37([b, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_93([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_94([a, b, c, i, g, h, f, j, k], is_dual)
    } else {
        select_95([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_98([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_42([a, c, d, e, f, h], is_dual)
    } else {
        select_29([b, c, d, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_97([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([a, b, c, f, e, g, h, i], is_dual)
    } else {
        select_42([a, d, g, e, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_96([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_97([a, b, i, c, f, h, g, j, k], is_dual)
    } else {
        select_84([a, c, d, e, g, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_92([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_93([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_96([b, c, a, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_91([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_92([a, b, d, c, e, j, h, i, l, k, m], is_dual)
    } else {
        select_82([c, h, f, g, e, d, a, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_80([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_81([a, b, d, e, c, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_91([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_79([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_80([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_80([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_78([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_79([a, b, c, d, e, f, g, l, i, j, k, m, n], is_dual)
    } else {
        select_79([a, b, c, d, e, f, h, k, i, j, l, m, n], is_dual)
    }
}
/// n = 7, i = 2
fn select_106([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([a, c, b, e, f, g], is_dual)
    } else {
        select_29([a, c, d, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_105([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([c, d, e, g, f, h], is_dual)
    } else {
        select_106([a, c, b, h, f, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_104([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_21([c, b, d, e, f, a, g, i, h, j], is_dual)
    } else {
        select_105([a, c, g, e, f, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 1
fn select_108([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_50([a, b, c, f, g, h, j, i], is_dual)
    } else {
        select_50([a, b, c, d, e, i, j, h], is_dual)
    }
}
/// n = 10, i = 1
fn select_107([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_108([e, f, g, a, b, c, d, h, i, j], is_dual)
    } else {
        select_59([h, c, d, e, f, g, a, i, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_103([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_104([g, f, j, a, d, e, h, i, k, l], is_dual)
    } else {
        select_107([f, a, d, e, b, c, i, h, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_112([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_42([a, c, d, e, f, g], is_dual)
    } else {
        select_39([a, b, h, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_113([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_42([a, b, c, f, i, j], is_dual)
    } else {
        select_28([b, c, d, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_111([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_112([a, g, d, e, f, h, i, j], is_dual)
    } else {
        select_113([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 5, i = 2
fn select_115([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_39([a, b, c, d], is_dual)
    } else {
        select_34([a, d, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_114([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_62([a, d, b, c, e, f, g], is_dual)
    } else {
        select_115([a, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_110([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_111([a, c, d, b, e, f, h, g, i, j], is_dual)
    } else {
        select_114([a, c, d, g, f, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_116([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_49([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_84([a, h, d, e, f, g, b, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_109([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_110([a, b, c, j, d, g, i, h, k, l], is_dual)
    } else {
        select_116([a, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_102([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_103([d, a, e, f, g, c, b, i, h, j, k, l], is_dual)
    } else {
        select_109([b, c, j, d, f, g, h, a, i, k, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_121([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_32([f, c, g, e, d, a], !is_dual)
    } else {
        select_45([d, g, c, e, b], !is_dual)
    }
}
/// n = 6, i = 2
fn select_123([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_33([a, d, c, f], is_dual)
    } else {
        select_33([b, c, d, e], is_dual)
    }
}
/// n = 6, i = 2
fn select_122([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_123([a, b, c, e, d, f], is_dual)
    } else {
        select_123([a, b, d, e, c, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_120([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_121([g, f, a, d, e, b, c], !is_dual)
    } else {
        select_122([g, d, a, e, f, b], !is_dual)
    }
}
/// n = 5, i = 2
fn select_125([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_39([a, b, c, e], is_dual)
    } else {
        select_39([a, c, b, d], is_dual)
    }
}
/// n = 5, i = 2
fn select_126([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_45([b, c, a, d, e], is_dual)
    } else {
        select_33([a, c, b, d], is_dual)
    }
}
/// n = 6, i = 2
fn select_124([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_125([e, a, b, d, f], is_dual)
    } else {
        select_126([d, b, c, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_119([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_120([e, a, b, d, g, h, i], is_dual)
    } else {
        select_124([d, b, c, f, e, h], is_dual)
    }
}
/// n = 6, i = 2
fn select_129([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_45([d, f, e, a, b], !is_dual)
    } else {
        select_45([e, f, d, a, c], !is_dual)
    }
}
/// n = 6, i = 2
fn select_131([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_33([a, b, e, f], is_dual)
    } else {
        select_33([a, c, d, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_130([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([a, e, c, f, d, h], is_dual)
    } else {
        select_131([b, c, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_128([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_129([b, c, d, g, f, h], is_dual)
    } else {
        select_130([a, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_132([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_129([h, f, i, a, d, c], !is_dual)
    } else {
        select_121([b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_127([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_128([a, b, d, c, e, f, g, h, j], is_dual)
    } else {
        select_132([e, j, i, f, h, g, a, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_118([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_119([f, b, d, a, g, e, h, i, j], is_dual)
    } else {
        select_127([a, b, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 1
fn select_135([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_22([a, b, c, d, e, g, h], is_dual)
    } else {
        select_22([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 5, i = 0
fn select_137([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_23([a, b, c, d], is_dual)
    } else {
        select_23([a, b, c, e], is_dual)
    }
}
/// n = 5, i = 2
fn select_138([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_29([a, b, c, d], is_dual)
    } else {
        select_29([a, b, c, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_136([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([c, d, e, f, g], is_dual)
    } else {
        select_138([a, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_135([b, g, c, d, e, f, h, i], is_dual)
    } else {
        select_136([a, h, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 6, i = 2
fn select_141([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_32([a, b, c, e, d, f], is_dual)
    } else {
        select_73([d, c, a, e, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_140([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([c, d, e, f, g], is_dual)
    } else {
        select_141([a, j, k, b, i, h], !is_dual)
    }
}
/// n = 7, i = 2
fn select_143([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_23([b, c, d, e], is_dual)
    } else {
        select_34([a, f, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_142([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_137([d, e, f, g, i], is_dual)
    } else {
        select_143([a, b, c, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_139([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_140([a, i, d, e, f, g, h, j, k, l, m], is_dual)
    } else {
        select_142([a, b, c, d, e, f, g, h, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_133([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_134([a, i, d, e, f, g, h, b, j, k, l], is_dual)
    } else {
        select_139([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_117([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_118([a, c, d, j, h, i, b, k, l, m], is_dual)
    } else {
        select_133([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_101([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_102([b, a, d, f, g, c, i, h, j, k, l, m, n], is_dual)
    } else {
        select_117([a, b, c, e, d, j, k, h, i, m, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_100([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_101([a, b, c, e, d, f, g, h, j, k, l, i, m, n, o], is_dual)
    } else {
        select_101([a, b, d, e, c, f, g, h, i, k, l, j, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_99([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_100([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_100([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_77([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_78([a, b, d, f, c, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_99([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_13([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_14([a, b, c, e, d, f, g, h, i, j, l, m, k, n, o], is_dual)
    } else {
        select_77([a, b, c, j, e, k, f, h, i, d, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_153([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, h, b, f, i, j], is_dual)
    } else {
        select_23([c, d, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_152([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_53([b, f, c, d, e, g, h, i], is_dual)
    } else {
        select_153([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_151([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_120([a, b, h, g, i, j, f], is_dual)
    } else {
        select_152([b, a, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_156([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_45([b, c, f, g, e], is_dual)
    } else {
        select_29([h, d, i, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_155([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_121([d, c, f, e, a, h, i], is_dual)
    } else {
        select_156([c, a, b, e, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_157([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([c, d, e, f, g], is_dual)
    } else {
        select_45([i, j, a, b, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_154([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_155([j, k, l, g, h, a, b, c, i], !is_dual)
    } else {
        select_157([b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_150([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_151([b, h, d, e, f, g, a, i, j, k], is_dual)
    } else {
        select_154([b, c, a, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_149([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_150([c, d, a, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_150([c, d, b, e, f, g, h, a, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_160([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_49([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_52([b, h, d, e, f, g, a, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_163([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([e, a, c, f, d, g], is_dual)
    } else {
        select_32([d, b, c, f, e, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_162([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_62([b, c, a, d, e, f, g], is_dual)
    } else {
        select_163([b, g, c, e, a, f, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_164([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_65([d, e, a, g, f], !is_dual)
    } else {
        select_129([a, b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_161([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_162([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_164([f, e, i, a, b, h, g], !is_dual)
    }
}
/// n = 11, i = 3
fn select_159([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_160([c, b, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_161([b, c, i, d, g, a, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_158([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_159([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_159([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_148([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_149([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_158([c, d, b, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_54([a, i, d, e, f, g, h, j, k], is_dual)
    } else {
        select_50([b, c, h, d, e, f, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_170([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_22([b, h, c, d, e, g, i], is_dual)
    } else {
        select_54([a, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_168([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_169([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_170([b, h, d, e, f, g, a, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_173([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_131([a, b, e, f, d, g], is_dual)
    } else {
        select_44([b, c, d, f, e], is_dual)
    }
}
/// n = 9, i = 2
fn select_172([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([b, c, d, g, e, h], is_dual)
    } else {
        select_173([b, h, a, e, f, i, g], is_dual)
    }
}
/// n = 6, i = 1
fn select_175([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_44([a, b, f, d, e], is_dual)
    } else {
        select_44([a, c, e, d, f], is_dual)
    }
}
/// n = 5, i = 1
fn select_176([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_44([b, a, c, d, e], is_dual)
    } else {
        select_33([b, e, d, a], is_dual)
    }
}
/// n = 8, i = 2
fn select_174([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_175([b, c, e, d, f, g], is_dual)
    } else {
        select_176([d, a, f, e, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_171([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_172([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_174([b, c, g, e, f, a, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_167([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_168([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_171([b, c, j, d, a, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_179([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_153([f, a, d, e, h, g, j, i, k, l], is_dual)
    } else {
        select_153([f, a, b, c, i, g, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_178([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_21([b, c, d, e, f, k, i, j, h, m], is_dual)
    } else {
        select_179([a, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_182([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_28([b, c, d, e, g, h], is_dual)
    } else {
        select_44([a, d, e, f, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_184([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_24([b, c, e], is_dual)
    } else {
        select_33([a, f, d, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_183([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_184([b, c, d, e, g, f, h], is_dual)
    } else {
        select_39([a, h, b, e], is_dual)
    }
}
/// n = 10, i = 2
fn select_181([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_182([f, d, e, b, c, g, i, h, j], is_dual)
    } else {
        select_183([h, a, d, e, f, i, g, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_180([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_169([f, b, c, d, e, h, g, k, i, j, l], is_dual)
    } else {
        select_181([f, a, j, b, c, g, k, h, i, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_177([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_178([a, f, b, c, d, e, h, g, i, j, k, l, m], is_dual)
    } else {
        select_180([g, b, c, d, e, a, h, f, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_166([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_167([b, c, d, g, a, k, h, i, j, m, l], is_dual)
    } else {
        select_177([d, c, i, e, f, b, a, h, l, k, j, m, n], is_dual)
    }
}
/// n = 7, i = 2
fn select_190([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_33([a, c, d, g], is_dual)
    } else {
        select_33([b, c, e, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_189([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_44([a, c, d, e, h], is_dual)
    } else {
        select_190([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_188([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_61([c, d, e, i, g, h], is_dual)
    } else {
        select_189([a, c, b, h, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_187([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_59([a, b, c, d, e, k, g, i, j], is_dual)
    } else {
        select_188([f, j, a, b, c, h, g, i, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_186([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_187([g, a, b, c, d, f, e, h, i, j, k, l], is_dual)
    } else {
        select_180([e, a, b, c, d, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_185([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_186([b, i, f, g, c, d, a, h, l, k, j, m], is_dual)
    } else {
        select_167([a, b, d, e, c, k, h, i, j, m, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_165([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_166([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_185([b, c, a, d, g, e, f, h, j, i, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_147([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < n) || (is_dual && l > n) {
        select_148([b, i, a, c, d, j, k, h, m, n, o, l], is_dual)
    } else {
        select_165([b, d, a, e, f, g, c, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_146([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_147([a, c, b, d, e, f, g, i, j, k, l, h, m, n, o], is_dual)
    } else {
        select_147([b, c, a, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_145([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_146([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_146([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_144([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_145([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o], is_dual)
    } else {
        select_145([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_12([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_13([a, b, c, d, f, g, h, e, i, k, l, j, m, n, o, p], is_dual)
    } else {
        select_144([a, b, c, d, e, f, h, g, m, k, l, n, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_11([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_12([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o, p], is_dual)
    } else {
        select_12([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    }
}
/// n = 8, i = 3
fn select_202([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([a, e, c, f, d, h], is_dual)
    } else {
        select_32([b, d, c, f, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_201([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_121([d, h, a, e, g, b, f], !is_dual)
    } else {
        select_202([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_200([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_201([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_201([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_205([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_32([a, g, c, f, d, i], is_dual)
    } else {
        select_190([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_204([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_205([a, b, c, e, d, f, g, i, h], is_dual)
    } else {
        select_130([a, b, f, e, d, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_203([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_204([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_204([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_199([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_200([d, e, a, c, g, h, f, j], is_dual)
    } else {
        select_203([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_209([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([g, h, f, d, a, b], !is_dual)
    } else {
        select_39([a, f, c, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_208([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_209([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_209([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 5, i = 1
fn select_211([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_23([a, b, c, d], is_dual)
    } else {
        select_26([e], is_dual)
    }
}
/// n = 9, i = 3
fn select_212([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_42([e, c, d, g, f, i], is_dual)
    } else {
        select_29([h, a, b, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_210([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_211([g, c, d, e, h], is_dual)
    } else {
        select_212([a, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_207([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_208([a, h, b, j, k, f, g, l], is_dual)
    } else {
        select_210([a, f, c, d, e, g, i, h, k, l], is_dual)
    }
}
/// n = 6, i = 1
fn select_215([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_28([a, b, c, d, e, f], is_dual)
    } else {
        select_44([e, c, d, a, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_214([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_215([d, b, c, e, f, g], is_dual)
    } else {
        select_173([a, g, b, d, f, e, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_217([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_23([c, d, e, g], is_dual)
    } else {
        select_44([h, a, b, i, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_216([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_217([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_217([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_213([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_214([h, a, b, k, l, f, g, i], is_dual)
    } else {
        select_216([f, g, c, d, e, i, j, h, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_206([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_207([a, g, c, d, e, h, f, i, j, k, l, m], is_dual)
    } else {
        select_213([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_198([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_199([a, i, b, k, l, f, g, m, j, h], is_dual)
    } else {
        select_206([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_222([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_184([a, b, c, e, f, g, h], is_dual)
    } else {
        select_24([b, c, d], is_dual)
    }
}
/// n = 9, i = 2
fn select_221([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_54([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_222([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_220([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_172([a, j, b, c, k, g, h, i, m], is_dual)
    } else {
        select_221([g, i, d, e, f, h, l, j, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_224([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_176([a, b, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_223([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_208([b, i, c, a, j, g, h, k], is_dual)
    } else {
        select_224([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_219([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_220([b, a, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_223([h, a, c, d, e, f, j, i, k, l, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_229([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_33([b, c, d, e], is_dual)
    } else {
        select_34([a, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_228([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_229([a, c, d, e, f, g, h], is_dual)
    } else {
        select_39([b, f, c, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_227([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_228([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_228([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_230([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_106([a, b, c, h, e, g, j], is_dual)
    } else {
        select_173([b, g, d, e, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_226([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_227([b, a, f, h, e, i, j, g], is_dual)
    } else {
        select_230([b, c, d, a, f, e, h, g, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_233([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_45([b, c, f, e, h], is_dual)
    } else {
        select_73([a, b, d, g, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_234([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_184([a, b, c, d, g, e, f], is_dual)
    } else {
        select_184([a, b, c, d, g, f, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_232([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_233([h, i, j, d, g, a, f, e, c], !is_dual)
    } else {
        select_234([c, b, d, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_236([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_39([a, g, i, h], !is_dual)
    } else {
        select_190([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_235([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_228([g, i, h, d, e, a, f, b], !is_dual)
    } else {
        select_236([a, c, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_231([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_232([a, c, b, d, f, e, g, i, j, h], is_dual)
    } else {
        select_235([i, g, j, d, h, e, a, f, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_225([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_226([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_231([b, a, c, h, f, i, g, e, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_218([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_219([c, a, b, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_225([a, b, k, c, l, g, h, i, m, n, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_197([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_198([b, g, d, e, f, a, h, i, k, j, l, m, n], is_dual)
    } else {
        select_218([b, a, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_196([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_197([a, d, b, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_197([a, d, c, e, f, g, b, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 6, i = 2
fn select_242([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_65([a, c, b, d, e], is_dual)
    } else {
        select_126([a, c, e, b, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_243([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_215([b, c, a, d, e, f], is_dual)
    } else {
        select_129([b, c, f, e, a, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_241([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_242([a, f, b, c, g, e], is_dual)
    } else {
        select_243([a, c, d, b, f, e, g], is_dual)
    }
}
/// n = 3, i = 1
fn select_247([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_34([a, b, c], is_dual)
    } else {
        select_34([a, c, b], is_dual)
    }
}
/// n = 6, i = 2
fn select_246([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_247([a, e, f], is_dual)
    } else {
        select_44([a, b, c, d, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_245([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([a, b, d, f, e, g, i, h], is_dual)
    } else {
        select_246([a, c, g, e, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_249([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_32([a, c, d, f, e, h], is_dual)
    } else {
        select_32([b, d, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_248([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_249([a, b, f, d, e, g, h, i], is_dual)
    } else {
        select_38([b, d, c, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_244([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_245([c, d, b, e, f, a, g, i, h], is_dual)
    } else {
        select_248([c, d, a, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_240([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_241([b, e, a, f, g, c, h], is_dual)
    } else {
        select_244([b, a, e, d, c, g, f, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_239([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_240([a, c, d, b, e, g, h, f, i], is_dual)
    } else {
        select_240([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_238([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_239([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_239([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_255([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_32([a, d, c, e, f, g], is_dual)
    } else {
        select_39([a, b, d, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_254([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_65([a, b, d, g, f], is_dual)
    } else {
        select_255([a, b, c, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_257([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_23([b, c, d, f], is_dual)
    } else {
        select_45([a, g, e, h, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_256([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_257([a, e, f, g, h, k, j, m, n], is_dual)
    } else {
        select_257([a, b, c, d, h, l, i, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_253([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_254([a, b, c, d, h, k, m, i], is_dual)
    } else {
        select_256([c, a, b, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_259([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([b, c, d, e, g], is_dual)
    } else {
        select_45([a, h, f, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_261([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_131([b, c, d, e, f, g], is_dual)
    } else {
        select_123([a, c, d, e, f, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_262([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_45([a, d, g, f, c], is_dual)
    } else {
        select_45([b, c, g, e, d], is_dual)
    }
}
/// n = 9, i = 4
fn select_260([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_261([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_262([a, c, d, e, f, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_258([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_259([b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_260([b, a, i, g, f, h, k, j, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_252([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_253([b, c, d, a, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_258([i, d, e, f, g, a, h, k, j, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_266([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_184([c, a, b, d, f, e, g], is_dual)
    } else {
        select_39([a, b, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_267([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([b, d, c, e, g, f], is_dual)
    } else {
        select_45([d, h, a, b, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_265([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_266([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_267([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_269([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_32([a, d, b, c, e, f], is_dual)
    } else {
        select_32([a, d, c, b, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_268([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_269([e, c, d, f, h, g], is_dual)
    } else {
        select_269([e, a, b, g, i, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_264([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_265([c, d, e, b, f, g, a, i, h], is_dual)
    } else {
        select_268([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_271([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_37([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_72([b, g, c, a, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_272([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([c, d, e, f, g], is_dual)
    } else {
        select_269([c, a, b, g, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_270([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_271([a, d, e, b, c, g, f, i], is_dual)
    } else {
        select_272([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_263([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_264([b, a, d, e, c, f, h, g, i], is_dual)
    } else {
        select_270([a, d, e, b, c, h, g, f, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_251([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_252([a, c, d, b, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_263([a, k, b, c, d, m, h, i, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_276([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_54([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_153([a, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_278([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_23([c, d, e, f], is_dual)
    } else {
        select_45([h, i, a, b, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_37([f, b, c, d, e, g, h, i], is_dual)
    } else {
        select_278([a, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_276([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_277([g, c, d, e, f, a, h, i, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_281([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([d, b, c, e, f, h], is_dual)
    } else {
        select_190([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_280([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_281([a, b, c, d, f, e, g, i], is_dual)
    } else {
        select_89([d, g, h, i, e, f, a, c], !is_dual)
    }
}
/// n = 8, i = 2
fn select_282([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_37([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_143([f, c, d, e, a, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_279([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_280([i, k, j, a, g, f, b, c, h], !is_dual)
    } else {
        select_282([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_274([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_275([a, b, i, e, f, g, h, k, j, m, n, l], is_dual)
    } else {
        select_279([a, b, j, c, d, h, l, i, m, n, k], is_dual)
    }
}
/// n = 6, i = 1
fn select_285([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_215([a, b, d, e, c, f], is_dual)
    } else {
        select_215([a, c, d, e, b, f], is_dual)
    }
}
/// n = 6, i = 1
fn select_286([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_211([a, c, d, e, f], is_dual)
    } else {
        select_65([a, b, c, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_284([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_285([a, c, d, b, e, f], is_dual)
    } else {
        select_286([a, b, c, d, e, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_283([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_284([a, b, c, d, g, f, h], is_dual)
    } else {
        select_285([a, c, d, e, f, g], is_dual)
    }
}
/// n = 14, i = 4
fn select_273([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_274([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_283([l, b, c, d, a, h, m, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_250([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_251([b, c, d, e, f, g, h, a, i, j, l, k, m, n], is_dual)
    } else {
        select_273([b, a, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_237([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < n) || (is_dual && i > n) {
        select_238([a, l, b, d, e, c, m, n, i], is_dual)
    } else {
        select_250([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_195([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_196([b, c, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_237([b, c, d, a, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_194([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_195([a, b, d, e, c, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_195([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_193([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_194([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_194([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_192([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_193([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_193([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 1
fn select_295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_108([e, f, g, a, i, c, d, h, j, k], is_dual)
    } else {
        select_108([e, f, g, b, h, c, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 1
fn select_294([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_295([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    } else {
        select_295([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 10, i = 1
fn select_296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_58([a, c, i, e, f, g, h, b, j], is_dual)
    } else {
        select_107([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 1
fn select_293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_294([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_296([a, b, d, j, f, g, h, i, c, k], is_dual)
    }
}
/// n = 6, i = 1
fn select_300([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_65([a, b, c, f, e], is_dual)
    } else {
        select_65([a, b, d, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_301([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_65([b, c, d, e, f], is_dual)
    } else {
        select_269([a, b, c, f, e, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_299([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_300([b, c, d, e, g, f], is_dual)
    } else {
        select_301([a, b, c, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_298([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_299([g, a, b, c, e, h, f, i], is_dual)
    } else {
        select_299([f, a, b, d, e, h, g, i], is_dual)
    }
}
/// n = 7, i = 1
fn select_304([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([e, c, d, f, g], is_dual)
    } else {
        select_211([e, a, b, g, f], is_dual)
    }
}
/// n = 8, i = 1
fn select_305([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_61([g, d, e, f, a, h], is_dual)
    } else {
        select_50([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 1
fn select_303([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_304([a, h, d, e, f, g, i], is_dual)
    } else {
        select_305([f, d, e, b, c, g, i, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_306([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_304([b, g, d, e, a, f, h], is_dual)
    } else {
        select_304([c, f, d, e, a, g, h], is_dual)
    }
}
/// n = 9, i = 1
fn select_302([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_303([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_306([b, c, h, e, f, g, a, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_297([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_298([b, c, d, i, e, g, a, h, j], is_dual)
    } else {
        select_302([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 2
fn select_292([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_293([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_297([a, c, d, k, e, f, b, i, j, l], is_dual)
    }
}
/// n = 9, i = 1
fn select_311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_22([c, d, e, f, g, h, i], is_dual)
    } else {
        select_22([c, d, a, b, i, h, g], is_dual)
    }
}
/// n = 11, i = 1
fn select_310([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_108([b, c, h, d, e, f, g, j, k, i], is_dual)
    } else {
        select_311([a, i, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_313([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_27([h, e, f, a, b, g, i, j], is_dual)
    } else {
        select_27([i, c, d, a, b, g, h, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_312([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_108([d, e, h, a, b, f, g, k, j, i], is_dual)
    } else {
        select_313([f, g, a, b, c, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_309([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_310([h, a, b, c, d, e, f, g, k, i, j], is_dual)
    } else {
        select_312([a, b, g, c, d, e, f, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 1
fn select_316([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([a, d, e, g, f, h], is_dual)
    } else {
        select_61([a, b, c, h, f, g], is_dual)
    }
}
/// n = 10, i = 1
fn select_315([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_108([a, b, g, c, d, e, f, i, j, h], is_dual)
    } else {
        select_316([h, c, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 1
fn select_314([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_303([h, b, c, d, e, f, g, i, j], is_dual)
    } else {
        select_315([a, g, b, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_308([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_309([a, f, b, c, d, e, g, h, j, k, i, l], is_dual)
    } else {
        select_314([i, b, c, d, e, g, h, f, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_319([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_21([c, a, d, e, f, b, g, i, h, j], is_dual)
    } else {
        select_36([b, g, c, e, f, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_318([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_319([a, b, e, c, f, g, d, h, i, j], is_dual)
    } else {
        select_319([a, b, e, d, f, g, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_317([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_318([a, i, b, c, d, f, g, h, j, k], is_dual)
    } else {
        select_318([a, h, b, c, e, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_307([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_308([e, a, f, g, h, c, d, b, i, j, k, l], is_dual)
    } else {
        select_317([b, c, d, e, j, g, h, i, a, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_291([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_292([a, b, d, e, c, g, h, i, f, j, k, l], is_dual)
    } else {
        select_307([a, b, d, e, f, g, h, i, c, j, k, l], is_dual)
    }
}
/// n = 6, i = 0
fn select_325([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_137([a, b, c, d, e], is_dual)
    } else {
        select_137([a, b, d, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_326([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_65([a, b, c, e, g], is_dual)
    } else {
        select_215([a, d, b, c, e, f], is_dual)
    }
}
/// n = 13, i = 3
fn select_324([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_325([d, e, f, g, h, j], is_dual)
    } else {
        select_326([a, b, k, c, i, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_328([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_141([a, i, b, j, g, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_327([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_328([a, b, c, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_137([c, d, e, f, g], is_dual)
    }
}
/// n = 14, i = 4
fn select_323([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_324([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_327([a, b, d, e, f, g, h, j, i, k, l, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_332([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_247([a, g, h], is_dual)
    } else {
        select_190([a, c, b, d, e, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_331([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_332([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_229([a, b, d, f, g, e, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_330([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_331([a, b, k, h, i, l, m, n], is_dual)
    } else {
        select_325([c, d, e, f, g, j], is_dual)
    }
}
/// n = 5, i = 2
fn select_335([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_247([a, d, e], is_dual)
    } else {
        select_33([a, b, c, d], is_dual)
    }
}
/// n = 6, i = 2
fn select_334([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_335([e, b, a, d, f], is_dual)
    } else {
        select_72([a, b, c, d, e, f], is_dual)
    }
}
/// n = 12, i = 3
fn select_333([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_325([c, d, e, f, g, i], is_dual)
    } else {
        select_334([a, b, j, h, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_329([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_330([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_333([a, i, c, d, e, f, g, j, h, k, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_322([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_323([b, a, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_329([b, c, d, e, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_321([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_322([a, d, b, e, f, g, h, i, j, c, k, l, n, m], is_dual)
    } else {
        select_322([a, d, c, e, f, g, h, i, j, b, k, m, n, l], is_dual)
    }
}
/// n = 6, i = 2
fn select_341([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_42([a, c, d, b, e, f], is_dual)
    } else {
        select_42([b, c, d, a, e, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_340([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_65([a, f, d, g, b], !is_dual)
    } else {
        select_341([a, d, f, g, e, c], !is_dual)
    }
}
/// n = 6, i = 2
fn select_342([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_341([a, b, c, d, e, f], is_dual)
    } else {
        select_341([a, b, c, d, f, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_339([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_340([a, g, h, b, e, c, f], !is_dual)
    } else {
        select_342([a, b, d, e, f, h], is_dual)
    }
}
/// n = 6, i = 2
fn select_344([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_125([a, b, c, e, f], is_dual)
    } else {
        select_126([a, b, d, f, e], is_dual)
    }
}
/// n = 7, i = 3
fn select_346([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_131([d, f, g, a, e, b], !is_dual)
    } else {
        select_45([e, f, d, b, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_345([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_346([a, b, c, d, f, g, e], is_dual)
    } else {
        select_346([a, c, b, d, e, g, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_343([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_344([d, g, i, e, a, h], !is_dual)
    } else {
        select_345([b, c, e, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_338([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_339([d, h, i, g, f, a, e, c], !is_dual)
    } else {
        select_343([c, b, a, d, f, i, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_337([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_338([g, e, i, a, f, h, c, b, d], !is_dual)
    } else {
        select_338([g, f, i, b, e, h, c, a, d], !is_dual)
    }
}
/// n = 7, i = 1
fn select_350([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_62([a, c, d, e, b, f, g], is_dual)
    } else {
        select_62([b, c, d, e, a, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_351([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_211([a, c, d, e, f], is_dual)
    } else {
        select_341([a, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_349([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_350([a, c, e, b, d, f, g], is_dual)
    } else {
        select_351([a, b, c, d, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_353([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_65([a, e, c, d, f], is_dual)
    } else {
        select_346([g, d, h, a, e, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_355([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_184([a, b, c, d, e, f, g], is_dual)
    } else {
        select_42([d, b, c, e, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_354([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_202([a, b, c, e, d, f, h, g], is_dual)
    } else {
        select_355([h, d, i, e, a, g, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_352([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_353([e, d, i, a, g, h, b, f], !is_dual)
    } else {
        select_354([a, b, c, e, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_348([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_349([b, a, d, e, c, f, g, h, j], is_dual)
    } else {
        select_352([g, i, j, a, b, f, c, h, d], !is_dual)
    }
}
/// n = 8, i = 2
fn select_357([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_286([a, b, c, d, f, h], is_dual)
    } else {
        select_350([a, c, e, b, d, f, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_360([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_42([a, b, c, d, f, g], is_dual)
    } else {
        select_39([a, e, g, f], !is_dual)
    }
}
/// n = 6, i = 2
fn select_361([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_32([a, b, c, e, d, f], is_dual)
    } else {
        select_33([c, d, e, b], is_dual)
    }
}
/// n = 7, i = 3
fn select_359([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_360([d, e, g, a, b, f, c], !is_dual)
    } else {
        select_361([a, c, b, d, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_362([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_211([b, c, d, e, f], is_dual)
    } else {
        select_129([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_358([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_359([e, g, h, a, b, c, f], !is_dual)
    } else {
        select_362([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_356([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_357([c, b, d, e, a, f, g, h], is_dual)
    } else {
        select_358([b, a, c, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_347([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_348([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_356([c, a, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_336([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_337([b, c, g, d, h, i, a, f, j], is_dual)
    } else {
        select_347([b, c, d, a, e, f, h, i, g, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_320([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_321([a, b, c, e, d, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_336([a, b, c, e, k, j, d, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_290([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_291([a, c, d, f, g, h, i, b, j, k, l, m], is_dual)
    } else {
        select_320([a, c, d, b, e, f, g, h, k, j, m, n, o, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_289([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_290([a, b, d, e, c, f, g, h, i, k, l, j, m, n, o], is_dual)
    } else {
        select_290([a, c, d, e, b, f, g, h, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_288([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_289([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o], is_dual)
    } else {
        select_289([a, c, d, e, f, g, h, i, j, b, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_287([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_288([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o], is_dual)
    } else {
        select_288([a, b, c, e, f, g, h, i, j, k, d, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_191([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && f < m) || (is_dual && f > m) {
        select_192([a, b, c, d, e, g, h, i, j, l, m, f, n, o], is_dual)
    } else {
        select_287([a, b, c, d, e, g, h, f, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_10([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_11([a, b, c, d, e, f, h, g, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_191([a, b, c, d, e, f, g, k, h, l, j, m, o, n, p], is_dual)
    }
}
/// n = 7, i = 2
fn select_375([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, e, b, d, g, f], is_dual)
    } else {
        select_29([a, c, f, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_374([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_176([b, a, d, g, h], is_dual)
    } else {
        select_375([a, c, b, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_373([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_374([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_123([c, f, e, h, i, a], is_dual)
    }
}
/// n = 7, i = 3
fn select_377([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_335([b, c, d, e, f], is_dual)
    } else {
        select_141([d, f, g, a, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_376([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_377([a, b, f, d, g, h, e], is_dual)
    } else {
        select_353([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_372([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_373([b, a, d, c, f, e, h, g, i], is_dual)
    } else {
        select_376([b, e, d, a, g, f, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_380([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_267([b, a, c, e, d, f, h, g], is_dual)
    } else {
        select_130([b, c, a, e, d, g, h, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_379([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_380([c, g, i, h, d, f, e, a], !is_dual)
    } else {
        select_359([g, e, h, d, c, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_378([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_379([a, c, d, b, f, g, e, h, i], is_dual)
    } else {
        select_379([b, c, e, a, f, g, d, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_371([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_372([e, b, c, d, f, g, h, i, j], is_dual)
    } else {
        select_378([a, b, c, e, i, j, f, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_384([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_106([b, e, d, g, f, h, i], is_dual)
    } else {
        select_106([a, e, c, h, f, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_64([c, f, d, e, a, g, h, i], is_dual)
    } else {
        select_384([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_385([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_87([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_36([c, g, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_382([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_383([a, c, b, i, d, g, h, k, l, j], is_dual)
    } else {
        select_385([b, c, a, h, e, f, g, j, i, l, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_388([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_65([a, b, c, e, g], is_dual)
    } else {
        select_215([c, d, a, b, e, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_390([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_42([a, b, c, d, f, g], is_dual)
    } else {
        select_39([b, d, c, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_389([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_360([f, g, h, a, c, e, d], !is_dual)
    } else {
        select_390([f, g, h, a, b, e, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_387([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_388([a, c, d, b, e, g, f], is_dual)
    } else {
        select_389([a, c, b, d, f, g, e, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_393([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([a, c, b, d, e, f], is_dual)
    } else {
        select_42([e, d, g, a, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_392([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_346([d, f, h, e, g, a, c], !is_dual)
    } else {
        select_393([d, c, b, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_394([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_98([g, d, h, i, e, f, a, b], !is_dual)
    } else {
        select_190([a, b, c, e, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_392([f, i, j, g, a, b, h, c], !is_dual)
    } else {
        select_394([g, i, j, a, f, h, b, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_386([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_387([g, i, j, f, b, a, c, h], !is_dual)
    } else {
        select_391([b, c, e, a, d, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_381([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_382([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_386([b, a, c, h, i, j, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_370([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_371([a, b, i, d, g, k, h, c, j, l, m], is_dual)
    } else {
        select_381([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_399([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_42([a, b, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_398([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_399([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_140([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 1
fn select_401([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([d, e, f, g, h], is_dual)
    } else {
        select_23([a, b, c, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_400([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_136([a, i, d, e, f, g, h, j, k, l], is_dual)
    } else {
        select_401([b, c, h, d, e, f, g, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_397([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_398([a, i, d, e, f, g, h, b, j, k, l, m], is_dual)
    } else {
        select_400([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_405([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([a, c, b, d, e, g], is_dual)
    } else {
        select_247([b, e, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_406([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_32([f, g, e, c, d, a], !is_dual)
    } else {
        select_34([e, b, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_404([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_405([f, a, b, e, d, g, h], is_dual)
    } else {
        select_406([h, g, e, f, a, d, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_403([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_71([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_404([b, c, g, e, f, a, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_409([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_32([a, b, c, e, d, g], is_dual)
    } else {
        select_32([a, f, g, e, d, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_408([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_121([a, b, d, e, f, g, h], is_dual)
    } else {
        select_409([d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_407([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_408([b, a, c, e, d, g, f, h], is_dual)
    } else {
        select_120([e, d, h, f, g, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_402([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_403([b, a, c, d, f, e, g, i, h], is_dual)
    } else {
        select_407([i, e, j, b, a, f, h, g], !is_dual)
    }
}
/// n = 13, i = 4
fn select_396([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_397([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_402([a, b, j, d, h, c, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_412([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_350([b, c, d, a, e, f, g], is_dual)
    } else {
        select_351([a, f, b, c, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_411([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_299([b, c, d, f, a, e, g, h], is_dual)
    } else {
        select_412([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 8, i = 1
fn select_414([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_286([a, b, d, e, f, h], is_dual)
    } else {
        select_350([a, b, c, d, e, g, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_413([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_414([a, b, c, e, f, g, d, h], is_dual)
    } else {
        select_414([a, b, d, e, f, g, c, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_411([a, b, c, d, e, i, h, j, k], is_dual)
    } else {
        select_413([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_395([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_396([a, b, c, g, d, e, f, h, i, k, l, j, m], is_dual)
    } else {
        select_410([c, a, d, e, f, b, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_369([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_370([b, c, d, g, e, f, h, i, j, k, a, l, m], is_dual)
    } else {
        select_395([b, c, d, a, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_368([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_369([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_369([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_421([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([c, d, e, f, g], is_dual)
    } else {
        select_126([a, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_422([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_54([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_54([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_420([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_421([a, h, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_422([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_424([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_215([a, b, c, j, h, k], is_dual)
    } else {
        select_137([d, e, f, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_423([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_328([a, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_424([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_419([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_420([a, i, d, e, f, g, h, b, j, l, k], is_dual)
    } else {
        select_423([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_427([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_129([a, c, e, d, f, g], is_dual)
    } else {
        select_138([d, b, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_426([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_97([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_427([i, j, e, a, g, b, h, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_428([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_301([a, c, d, b, e, f, g], is_dual)
    } else {
        select_362([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_425([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_426([a, b, d, c, e, g, h, f, i, j], is_dual)
    } else {
        select_428([a, b, c, f, e, h, g, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_418([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_419([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_425([a, c, d, j, h, b, i, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_432([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_65([a, b, d, e, h], is_dual)
    } else {
        select_106([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_431([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_286([a, b, e, f, i, h], is_dual)
    } else {
        select_432([a, b, c, d, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_430([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_431([a, b, d, c, e, f, g, i, h, j], is_dual)
    } else {
        select_350([a, b, h, e, f, c, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_53([e, f, c, d, g, i, h, j], is_dual)
    } else {
        select_53([e, f, a, b, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_436([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([c, d, e, g, f, h], is_dual)
    } else {
        select_255([a, b, c, h, f, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_435([c, d, e, f, a, b, g, i, h, j], is_dual)
    } else {
        select_436([a, b, g, e, f, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_433([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_434([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_434([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_429([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_430([c, d, e, b, f, g, h, a, i, j], is_dual)
    } else {
        select_433([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_417([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_418([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_429([c, a, e, f, g, b, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_416([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_417([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_417([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_442([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_209([a, c, b, e, f, g, d, h], is_dual)
    } else {
        select_375([b, c, a, e, d, g, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_441([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_362([g, d, e, i, f, h, b, a], !is_dual)
    } else {
        select_442([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_440([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_357([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_441([f, i, j, a, b, g, c, h, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_443([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_352([h, g, l, b, a, k, c, j, i], !is_dual)
    } else {
        select_319([c, b, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_439([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_440([a, b, c, d, k, g, l, h, j, m], is_dual)
    } else {
        select_443([a, b, c, h, e, f, g, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_438([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_439([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_439([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_447([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_300([a, c, b, e, d, f], is_dual)
    } else {
        select_243([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_450([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_23([b, c, d, e], is_dual)
    } else {
        select_29([a, g, h, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_449([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_450([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_450([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_448([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_449([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_211([a, g, h, i, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_446([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_447([a, b, g, h, i, c, f], !is_dual)
    } else {
        select_448([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_453([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_61([f, c, d, e, b, g], is_dual)
    } else {
        select_37([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_454([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_215([b, a, c, d, e, f], is_dual)
    } else {
        select_341([a, f, h, i, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_452([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_453([a, b, d, e, g, f, h, i], is_dual)
    } else {
        select_454([a, b, c, h, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_451([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_452([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_452([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_445([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_446([a, b, l, j, m, h, c, d, k], !is_dual)
    } else {
        select_451([a, b, e, h, f, g, j, i, k, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_458([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_211([a, d, f, g, b], !is_dual)
    } else {
        select_341([a, d, f, g, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_457([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_301([d, e, g, i, a, h, b], !is_dual)
    } else {
        select_458([d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_456([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_457([a, k, c, f, l, g, m, h, j], is_dual)
    } else {
        select_452([a, b, h, d, e, f, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_455([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_456([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_456([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_444([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_445([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_455([a, b, e, d, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_437([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_438([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_444([a, b, c, e, d, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_415([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_416([a, b, d, e, f, c, g, h, i, k, j, l, m], is_dual)
    } else {
        select_437([a, b, d, e, f, g, h, i, j, k, c, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_367([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_368([a, b, c, d, e, g, h, f, i, j, k, m, l], is_dual)
    } else {
        select_415([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_465([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_111([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_111([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_464([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_48([f, g, b, c, d, e, h, i, j, k], is_dual)
    } else {
        select_465([f, g, a, j, b, c, h, i, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_468([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_211([a, c, d, e, f], is_dual)
    } else {
        select_138([a, b, f, e, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_467([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_305([e, a, b, c, d, f, g, h], is_dual)
    } else {
        select_468([e, h, a, b, f, g, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_466([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_48([f, g, b, c, d, e, h, i, j, k], is_dual)
    } else {
        select_467([a, j, b, c, f, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_464([e, a, b, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_466([h, a, b, c, d, f, g, e, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_472([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_341([e, f, d, h, g, a], !is_dual)
    } else {
        select_163([b, c, a, e, f, d, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_473([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_37([g, a, c, d, e, f, h, i], is_dual)
    } else {
        select_37([f, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_471([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_472([b, c, h, f, g, a, i, j], is_dual)
    } else {
        select_473([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_470([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_471([a, c, h, e, f, g, b, i, j, k], is_dual)
    } else {
        select_20([c, b, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 6, i = 2
fn select_477([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_44([a, b, c, d, e], is_dual)
    } else {
        select_34([e, a, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_476([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_22([b, c, a, d, e, f, g], is_dual)
    } else {
        select_477([g, b, c, a, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_475([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_304([c, f, d, e, a, g, h], is_dual)
    } else {
        select_476([a, b, g, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_474([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_303([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_475([b, h, c, e, f, a, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_469([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_470([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_474([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_462([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_463([d, i, g, h, e, a, b, c, k, j, l, m], is_dual)
    } else {
        select_469([a, b, c, d, f, e, j, i, l, k, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_461([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_462([a, b, c, d, f, e, g, h, j, k, i, l, m], is_dual)
    } else {
        select_462([a, b, c, e, f, d, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_460([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_461([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_461([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_484([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([b, c, d, e, g], is_dual)
    } else {
        select_73([a, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_485([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([c, d, e, f, g], is_dual)
    } else {
        select_115([a, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_483([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_484([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_485([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_482([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_483([a, b, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_483([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_486([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_242([a, b, c, d, e, f], is_dual)
    } else {
        select_341([a, b, c, g, f, e], !is_dual)
    }
}
/// n = 10, i = 3
fn select_481([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_482([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_486([a, b, c, h, d, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_480([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_481([a, b, c, d, e, f, h, j, i, k], is_dual)
    } else {
        select_469([a, b, c, e, g, d, f, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_491([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_255([a, b, c, d, e, f, g], is_dual)
    } else {
        select_406([c, b, e, f, g, a, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_490([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_271([a, c, d, b, e, g, f, h], is_dual)
    } else {
        select_491([a, c, f, d, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_489([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_357([a, d, c, f, b, g, i, h], is_dual)
    } else {
        select_490([a, b, d, e, c, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_211([a, b, c, i, j], is_dual)
    } else {
        select_137([d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_493([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_135([c, i, d, e, f, g, h, j], is_dual)
    } else {
        select_494([a, b, h, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_496([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_65([a, b, c, i, j], is_dual)
    } else {
        select_137([d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_495([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_496([a, h, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_422([a, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_492([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_493([b, d, a, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_495([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_488([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_489([a, b, c, d, k, e, i, j, l, m], is_dual)
    } else {
        select_492([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_487([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_488([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_488([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_479([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_480([a, b, c, d, e, g, k, f, j, l, m], is_dual)
    } else {
        select_487([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_502([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_405([d, a, c, e, g, h, i], is_dual)
    } else {
        select_34([f, b, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_503([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_184([b, a, c, d, e, f, g], is_dual)
    } else {
        select_39([a, e, c, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_501([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_502([b, a, c, e, f, h, d, g, i], is_dual)
    } else {
        select_503([h, g, i, e, d, f, b, a], !is_dual)
    }
}
/// n = 11, i = 3
fn select_504([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_95([a, b, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_95([a, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_500([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_501([b, c, i, a, g, h, j, k, l], is_dual)
    } else {
        select_504([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_499([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_318([a, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_500([a, b, c, d, e, f, h, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_508([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_27([b, c, f, d, e, h, g, i], is_dual)
    } else {
        select_31([a, g, d, e, f, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_507([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_71([c, f, d, e, g, a, h, i], is_dual)
    } else {
        select_508([c, b, a, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_509([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_88([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_40([b, g, d, e, f, a, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_506([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_507([b, d, a, e, f, g, c, h, j, i], is_dual)
    } else {
        select_509([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_505([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_318([a, d, e, f, g, b, c, i, h, j], is_dual)
    } else {
        select_506([a, b, c, d, e, f, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_498([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_499([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_505([a, i, b, c, d, e, g, h, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_513([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_59([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_473([b, h, d, e, f, g, a, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_512([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_58([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_513([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_514([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_513([a, d, b, e, f, g, h, c, i, j], is_dual)
    } else {
        select_513([a, d, c, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_511([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_512([a, h, d, f, b, c, g, i, j, k], is_dual)
    } else {
        select_514([a, b, c, e, d, g, i, h, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_517([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_300([b, c, d, g, f, h], is_dual)
    } else {
        select_271([f, a, e, b, c, g, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_518([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_300([a, b, c, g, f, i], is_dual)
    } else {
        select_304([a, b, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_516([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_517([a, b, c, d, h, f, g, j, i, k], is_dual)
    } else {
        select_518([b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_521([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_163([c, d, a, e, f, b, g], is_dual)
    } else {
        select_163([c, d, b, e, f, a, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_520([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_350([b, c, d, a, e, f, g], is_dual)
    } else {
        select_521([b, c, d, g, f, a, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_523([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_281([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_390([d, g, h, e, a, f, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_522([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_84([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_523([b, h, c, f, a, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_519([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_520([f, b, c, d, h, g, i, j], is_dual)
    } else {
        select_522([g, a, e, b, c, f, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_515([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_516([a, c, d, e, f, g, b, h, j, i, k], is_dual)
    } else {
        select_519([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_510([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_511([a, d, e, c, f, b, g, i, h, k, j], is_dual)
    } else {
        select_515([a, b, d, e, f, c, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_497([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_498([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_510([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_478([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_479([a, b, d, e, f, g, h, c, i, k, j, l, m], is_dual)
    } else {
        select_497([a, b, d, e, f, g, j, h, c, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_459([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_460([a, b, c, e, f, h, d, g, i, j, k, l, m], is_dual)
    } else {
        select_478([a, b, c, d, g, e, f, i, h, j, k, m, n, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_366([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_367([a, b, c, e, d, h, f, g, k, l, m, j, n], is_dual)
    } else {
        select_459([a, b, c, e, f, g, h, d, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_365([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_366([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_366([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_534([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_39([b, c, e, g], is_dual)
    } else {
        select_29([a, d, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_535([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_39([a, g, c, i], is_dual)
    } else {
        select_190([a, b, d, f, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_533([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_534([b, a, e, d, g, f, i, h], is_dual)
    } else {
        select_535([b, a, d, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_508([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_533([b, c, g, d, a, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_339([a, b, c, g, h, i, f, j], is_dual)
    } else {
        select_532([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_539([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([f, b, a, e, h, i], is_dual)
    } else {
        select_29([g, c, d, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_538([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_539([a, f, b, c, e, h, g, i, j], is_dual)
    } else {
        select_28([b, c, d, g, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_538([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_436([a, b, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_541([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_211([a, b, c, e, g], is_dual)
    } else {
        select_215([a, d, b, c, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_540([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_541([a, c, d, b, e, f, g], is_dual)
    } else {
        select_342([a, f, e, h, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_537([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_540([a, j, f, k, h, b, i, g], !is_dual)
    }
}
/// n = 12, i = 4
fn select_530([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_531([a, b, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_536([a, b, d, h, e, f, i, g, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_529([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_530([a, b, c, i, d, f, k, g, h, j, l, m], is_dual)
    } else {
        select_530([a, b, c, h, e, f, j, g, i, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_547([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_45([b, f, d, a, h], is_dual)
    } else {
        select_190([b, c, a, d, e, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_546([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_547([e, b, a, d, f, h, i, g], is_dual)
    } else {
        select_547([d, c, a, e, f, g, i, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_549([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_184([a, b, f, d, g, e, h], is_dual)
    } else {
        select_184([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_548([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_173([a, f, b, e, g, i, j], is_dual)
    } else {
        select_549([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_545([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_546([d, b, f, e, a, g, j, i, h], is_dual)
    } else {
        select_548([b, a, d, c, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_544([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_545([a, b, g, c, e, i, f, j, h, k], is_dual)
    } else {
        select_545([a, b, f, d, e, h, g, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_553([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_184([a, c, d, e, h, g, j], is_dual)
    } else {
        select_184([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_552([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_553([b, d, a, c, e, f, g, i, h, j], is_dual)
    } else {
        select_375([a, d, c, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_554([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_261([a, b, c, e, g, h, i, j], is_dual)
    } else {
        select_173([b, c, d, h, f, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_551([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_552([a, d, f, c, h, g, e, j, k, i], is_dual)
    } else {
        select_554([c, e, b, d, g, h, f, i, k, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_550([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_551([a, g, d, b, e, j, h, f, k, i, l], is_dual)
    } else {
        select_551([a, f, d, c, e, i, h, g, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_543([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_544([d, g, a, b, k, e, f, i, j, h, l], is_dual)
    } else {
        select_550([d, a, b, c, h, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_557([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_350([a, b, c, g, h, f, j], is_dual)
    } else {
        select_60([d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_557([a, b, e, c, g, h, f, j, k, i], is_dual)
    } else {
        select_557([a, b, e, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_560([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_37([a, c, d, e, g, h, i, j], is_dual)
    } else {
        select_535([a, b, c, i, f, h, g, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_561([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_332([a, h, b, e, f, i, g, j], is_dual)
    } else {
        select_143([a, c, d, g, e, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_559([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_560([a, b, c, d, e, g, h, f, i, k, j], is_dual)
    } else {
        select_561([f, b, d, e, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_563([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_123([a, b, d, e, h, i], is_dual)
    } else {
        select_123([a, c, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_562([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_255([a, g, d, c, f, h, i], is_dual)
    } else {
        select_563([a, b, d, h, e, f, g, j, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_558([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_559([a, b, g, d, e, i, f, h, j, k, l], is_dual)
    } else {
        select_562([a, b, j, c, f, g, h, k, l, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_555([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_556([b, c, d, e, a, g, h, f, i, j, k], is_dual)
    } else {
        select_558([a, d, e, b, c, g, h, i, j, k, f, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_542([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_543([c, d, e, b, g, h, i, f, a, j, k, l], is_dual)
    } else {
        select_555([b, a, c, d, e, f, h, i, j, k, g, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_528([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_529([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_542([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 1
fn select_568([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_285([a, b, c, d, e, g], is_dual)
    } else {
        select_285([a, b, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_567([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_284([a, b, c, d, h, g, i], is_dual)
    } else {
        select_568([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_570([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_21([g, c, d, e, f, b, i, j, h, k], is_dual)
    } else {
        select_21([h, c, d, e, f, a, i, j, g, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_569([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_93([b, c, i, e, f, a, g, h, j, k, l], is_dual)
    } else {
        select_570([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_566([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_567([a, c, d, e, g, i, h, k, j], is_dual)
    } else {
        select_569([a, b, c, f, d, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_571([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_567([a, c, d, e, b, g, h, j, i], is_dual)
    } else {
        select_85([a, b, c, f, d, e, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_565([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_566([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_571([a, b, c, d, e, i, j, h, k, g, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_564([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_565([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_565([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_527([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_528([a, b, d, e, f, g, h, i, j, c, k, l, m], is_dual)
    } else {
        select_564([a, b, d, e, c, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_577([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_300([a, c, b, d, e, f], is_dual)
    } else {
        select_65([a, b, c, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_578([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_449([a, f, e, h, i, g, b, c], !is_dual)
    } else {
        select_243([a, b, d, c, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_576([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_577([a, h, i, j, b, f, c], !is_dual)
    } else {
        select_578([a, i, h, j, b, f, g, d, e], !is_dual)
    }
}
/// n = 8, i = 2
fn select_579([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_350([a, c, d, b, e, f, g], is_dual)
    } else {
        select_243([a, c, g, d, b, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_575([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_576([a, b, c, d, g, f, i, j, k, h], is_dual)
    } else {
        select_579([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_582([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([a, c, d, e, f, g], is_dual)
    } else {
        select_344([a, b, c, g, f, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_584([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_360([a, c, d, b, e, f, g], is_dual)
    } else {
        select_360([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_583([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_243([a, c, d, b, f, e, g], is_dual)
    } else {
        select_584([a, f, e, h, b, g, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_581([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_582([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_583([a, c, d, g, f, b, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_587([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_32([a, g, b, f, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_586([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_587([b, a, d, e, f, c, g, h], is_dual)
    } else {
        select_40([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_585([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_579([a, f, d, c, e, h, g, i], is_dual)
    } else {
        select_586([a, b, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_580([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_581([a, f, g, d, e, b, h, i, k], is_dual)
    } else {
        select_585([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_574([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_575([a, c, d, e, f, b, h, g, i, j, k], is_dual)
    } else {
        select_580([a, c, b, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_593([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_184([a, b, c, d, e, f, g], is_dual)
    } else {
        select_29([e, b, c, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_592([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_593([b, c, e, f, g, d, h, j], is_dual)
    } else {
        select_503([a, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_595([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([c, d, g, f, a, e], !is_dual)
    } else {
        select_29([c, b, d, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_594([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_547([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_595([g, f, a, d, h, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_591([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_592([a, c, b, e, d, f, h, g, i, j], is_dual)
    } else {
        select_594([a, e, c, g, f, h, d, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_597([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_503([h, i, j, g, a, e, b, c], !is_dual)
    } else {
        select_202([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_598([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_335([g, f, a, b, c], !is_dual)
    } else {
        select_121([g, h, a, f, e, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_596([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_597([b, a, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_598([a, b, c, f, g, h, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_591([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_596([b, a, c, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_600([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_584([a, b, c, f, h, e, g], is_dual)
    } else {
        select_584([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_599([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_600([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_583([a, h, e, i, f, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_589([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_590([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_599([a, b, g, c, h, f, i, j, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_588([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_589([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_589([a, b, d, e, f, c, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_574([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_588([a, c, d, e, h, g, i, b, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_606([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_143([f, c, d, e, a, g, i], is_dual)
    } else {
        select_278([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_605([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_606([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_124([i, j, g, b, a, c], !is_dual)
    }
}
/// n = 11, i = 3
fn select_604([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_605([a, b, c, d, e, g, h, j, i, k], is_dual)
    } else {
        select_434([a, c, d, f, b, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_608([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_350([a, c, e, b, d, f, g], is_dual)
    } else {
        select_449([a, b, c, d, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_610([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_62([d, e, b, c, f, g, h], is_dual)
    } else {
        select_141([h, a, f, e, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_611([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_98([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_73([a, f, e, c, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_609([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_610([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_611([g, h, j, k, a, e, i, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_607([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_608([i, a, b, d, e, g, h, j, k, l], is_dual)
    } else {
        select_609([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_603([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_604([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_607([b, d, c, e, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_602([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_603([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_603([a, b, d, e, f, g, c, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_601([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_602([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_588([a, c, d, e, h, i, j, b, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_572([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_573([a, b, h, d, e, g, c, i, j, k, l], is_dual)
    } else {
        select_601([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_526([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_527([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_572([a, b, c, d, e, j, f, k, i, l, h, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_619([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_360([a, b, c, d, e, f, g], is_dual)
    } else {
        select_360([a, b, c, d, e, g, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_618([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_619([a, c, d, b, e, f, g], is_dual)
    } else {
        select_619([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_617([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_608([a, b, c, f, e, g, h, i, j, k], is_dual)
    } else {
        select_618([a, b, d, i, f, j, k], is_dual)
    }
}
/// n = 4, i = 1
fn select_623([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_39([a, b, c, d], is_dual)
    } else {
        select_39([a, b, d, c], is_dual)
    }
}
/// n = 7, i = 3
fn select_622([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_623([b, c, d, e], is_dual)
    } else {
        select_42([a, b, c, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_624([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_332([a, g, b, e, f, i, j, k], is_dual)
    } else {
        select_24([c, d, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_621([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_622([e, j, k, a, h, f, b], !is_dual)
    } else {
        select_624([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_627([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_32([d, f, g, e, a, b], !is_dual)
    } else {
        select_32([d, f, g, e, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_626([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, c, d, e, f, g, h], is_dual)
    } else {
        select_627([e, i, j, a, f, g, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_625([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_254([b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_626([a, b, c, d, f, g, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_620([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_621([b, d, c, h, f, g, i, a, j, k, l], is_dual)
    } else {
        select_625([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_616([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_617([a, b, c, g, e, i, h, f, j, k, l], is_dual)
    } else {
        select_620([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 6, i = 2
fn select_632([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_45([e, f, a, b, c], !is_dual)
    } else {
        select_29([b, c, d, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_631([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_255([g, h, i, d, e, f, a], !is_dual)
    } else {
        select_632([d, e, b, c, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_630([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_301([a, b, c, e, h, g, i], is_dual)
    } else {
        select_631([h, j, k, a, f, i, b, c, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_629([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_625([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_630([a, b, c, g, e, i, h, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_628([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_629([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_629([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_615([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_616([a, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_628([a, g, c, d, e, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_637([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_65([b, c, d, e, f], is_dual)
    } else {
        select_632([a, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_636([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_286([b, c, e, f, g, h], is_dual)
    } else {
        select_637([a, b, c, d, h, g, i], is_dual)
    }
}
/// n = 9, i = 1
fn select_638([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_59([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_59([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_635([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_636([g, e, f, i, c, d, h, j, k], is_dual)
    } else {
        select_638([e, f, c, d, a, b, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_341([a, g, i, j, h, f], !is_dual)
    } else {
        select_62([a, d, b, c, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_640([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_641([a, b, i, c, f, h, g, j, k, l], is_dual)
    } else {
        select_84([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_639([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_640([a, d, b, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_640([a, d, c, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_634([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_635([a, e, f, g, c, d, b, h, i, j, k], is_dual)
    } else {
        select_639([b, c, d, i, f, g, h, a, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_644([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_211([a, b, c, d, e], is_dual)
    } else {
        select_211([a, b, f, g, e], !is_dual)
    }
}
/// n = 12, i = 4
fn select_643([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_58([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_644([a, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_642([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_643([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_116([b, c, a, e, f, g, h, d, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_633([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_634([a, b, e, f, g, c, d, h, i, j, k, l, m], is_dual)
    } else {
        select_642([a, b, c, d, e, f, i, h, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_614([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_615([a, c, e, f, d, g, h, i, j, b, k, l, m], is_dual)
    } else {
        select_633([a, c, b, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_650([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_173([b, d, c, f, e, g, h], is_dual)
    } else {
        select_393([a, d, b, h, f, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_649([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_650([a, b, d, c, f, g, e, h, i], is_dual)
    } else {
        select_594([a, e, d, b, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_652([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_163([a, e, c, d, g, f, i], is_dual)
    } else {
        select_141([d, f, b, h, e, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_653([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_405([d, f, g, e, a, b, c], !is_dual)
    } else {
        select_123([b, c, d, e, a, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_651([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_652([b, a, c, d, e, f, g, h, j], is_dual)
    } else {
        select_653([h, i, j, d, e, a, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_648([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_649([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_651([b, c, d, f, e, g, a, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_655([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_359([d, g, e, a, b, f, c], !is_dual)
    } else {
        select_359([d, g, f, a, b, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_657([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_163([b, c, d, a, e, f, h], is_dual)
    } else {
        select_163([a, d, c, b, f, e, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_658([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_121([a, b, c, e, d, g, f], is_dual)
    } else {
        select_361([g, c, d, e, f, a], !is_dual)
    }
}
/// n = 8, i = 3
fn select_656([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_657([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_658([h, e, b, f, g, c, a], !is_dual)
    }
}
/// n = 8, i = 3
fn select_654([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_655([a, e, h, f, b, g, c], !is_dual)
    } else {
        select_656([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_647([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_648([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_654([a, h, j, e, f, b, i, g], !is_dual)
    }
}
/// n = 8, i = 2
fn select_662([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_53([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_222([b, c, d, e, f, a, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_664([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_184([a, c, d, b, e, f, g], is_dual)
    } else {
        select_184([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_663([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_593([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_664([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_661([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_662([a, b, d, e, g, f, h, i], is_dual)
    } else {
        select_663([a, b, c, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_660([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_661([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_583([a, j, k, f, g, b, i, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_659([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_660([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_660([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_646([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_647([a, b, i, c, f, j, g, k, l, h], is_dual)
    } else {
        select_659([a, b, g, d, e, f, h, i, k, l, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_668([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_65([g, h, d, i, a], !is_dual)
    } else {
        select_450([e, g, h, i, d, f, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_669([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_450([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_450([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_667([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_668([j, k, l, g, a, h, b, c, i], !is_dual)
    } else {
        select_669([a, d, e, f, h, g, i, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_671([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_346([e, f, g, a, d, c, b], !is_dual)
    } else {
        select_361([e, f, d, a, g, b], !is_dual)
    }
}
/// n = 6, i = 2
fn select_673([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_32([a, b, c, d, e, f], is_dual)
    } else {
        select_34([a, f, b], is_dual)
    }
}
/// n = 7, i = 2
fn select_672([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_255([a, b, c, d, e, g, f], is_dual)
    } else {
        select_673([a, b, c, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_670([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_671([a, d, g, e, f, i, j], is_dual)
    } else {
        select_672([b, c, d, f, e, h, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_666([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_667([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_670([b, c, d, i, a, g, h, j, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_676([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_129([f, d, g, e, a, b], !is_dual)
    } else {
        select_129([f, e, g, d, a, c], !is_dual)
    }
}
/// n = 5, i = 1
fn select_677([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_65([a, b, c, d, e], is_dual)
    } else {
        select_39([a, b, e, c], is_dual)
    }
}
/// n = 7, i = 3
fn select_675([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_676([a, b, c, d, e, f, g], is_dual)
    } else {
        select_677([d, e, f, a, g], !is_dual)
    }
}
/// n = 6, i = 2
fn select_679([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_335([a, f, e, b, c], !is_dual)
    } else {
        select_269([a, b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_680([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_98([b, a, c, d, e, f, h, g], is_dual)
    } else {
        select_255([a, g, h, i, e, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_678([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_679([a, b, c, e, g, h], is_dual)
    } else {
        select_680([a, g, i, j, f, h, c, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_674([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_675([a, e, g, f, b, i, j], is_dual)
    } else {
        select_678([a, c, d, e, b, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_666([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_674([a, b, c, d, i, j, h, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_645([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_646([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_665([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_613([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_614([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_645([a, b, d, e, f, j, h, i, k, c, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_688([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_42([b, c, d, g, f, i], is_dual)
    } else {
        select_123([i, j, e, h, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_687([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_688([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_112([a, e, c, d, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_686([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_353([f, e, j, a, h, i, b, g], !is_dual)
    } else {
        select_687([a, b, c, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_691([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_44([b, c, d, e, f], is_dual)
    } else {
        select_29([a, g, h, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_690([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([b, c, d, e, f, g, h], is_dual)
    } else {
        select_691([a, h, b, c, f, g, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_692([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_211([b, c, d, e, f], is_dual)
    } else {
        select_45([e, g, a, b, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_689([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_690([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_692([a, b, c, h, f, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_685([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_686([b, g, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_689([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_684([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_685([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_685([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_693([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_660([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_660([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_683([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_684([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_693([a, b, c, e, f, g, d, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_83([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_583([a, c, d, h, g, b, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_695([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_696([a, b, c, d, e, i, g, h, j, k], is_dual)
    } else {
        select_696([a, b, c, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_699([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_162([a, c, b, d, f, e, g, h], is_dual)
    } else {
        select_242([a, f, b, g, h, e], is_dual)
    }
}
/// n = 10, i = 2
fn select_698([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_699([a, c, i, d, g, b, h, j], is_dual)
    } else {
        select_160([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_701([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_304([c, f, d, e, a, g, h], is_dual)
    } else {
        select_271([a, b, g, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_700([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_699([a, c, h, d, f, b, g, i], is_dual)
    } else {
        select_701([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_697([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_698([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_700([a, b, c, e, i, g, h, d, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_694([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_695([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_697([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_682([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_683([a, b, c, d, e, f, i, j, h, k, l], is_dual)
    } else {
        select_694([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_706([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_162([a, c, b, d, f, e, g, h], is_dual)
    } else {
        select_584([a, f, e, i, b, h, g], !is_dual)
    }
}
/// n = 11, i = 3
fn select_705([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_160([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_706([a, c, i, d, g, b, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_704([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_705([e, f, a, b, c, i, j, g, h, k, l], is_dual)
    } else {
        select_705([e, f, a, b, d, h, j, g, i, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_707([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_698([e, f, d, a, b, i, j, g, h, k], is_dual)
    } else {
        select_698([e, f, d, a, c, h, j, g, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_703([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_704([d, a, b, c, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_707([a, b, c, g, e, f, h, i, j, d, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_702([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_683([a, b, c, d, e, i, j, k, h, l, m], is_dual)
    } else {
        select_703([d, f, g, e, a, b, c, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_681([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_682([a, b, c, d, e, f, j, h, k, i, l, m], is_dual)
    } else {
        select_702([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_612([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_613([a, b, c, d, f, e, g, h, i, j, l, k, m], is_dual)
    } else {
        select_681([a, b, c, d, e, g, f, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_525([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_526([a, b, c, d, e, g, f, h, j, i, k, m, l], is_dual)
    } else {
        select_612([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_524([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_525([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_525([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_364([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_365([a, b, c, d, e, g, f, h, i, j, l, k, m, n], is_dual)
    } else {
        select_524([a, b, c, d, e, g, h, i, k, l, f, m, n], is_dual)
    }
}
/// n = 6, i = 2
fn select_718([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_125([a, b, e, d, f], is_dual)
    } else {
        select_34([a, c, e], is_dual)
    }
}
/// n = 6, i = 2
fn select_717([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_718([a, b, c, e, d, f], is_dual)
    } else {
        select_718([a, b, d, e, c, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_716([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_284([a, b, c, d, e, f, g], is_dual)
    } else {
        select_717([a, f, c, d, b, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_720([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_60([a, c, d, e, f, b, g, h], is_dual)
    } else {
        select_473([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_719([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_414([a, c, b, e, f, g, d, h], is_dual)
    } else {
        select_720([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_715([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_716([a, b, d, e, h, c, i], is_dual)
    } else {
        select_719([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_724([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_341([a, e, c, f, h, i], is_dual)
    } else {
        select_62([b, d, a, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_725([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_163([a, b, c, d, e, f, h], is_dual)
    } else {
        select_141([e, h, i, a, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_723([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_724([a, b, c, d, e, g, f, h, j], is_dual)
    } else {
        select_725([f, b, d, a, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_722([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_723([a, i, c, d, b, g, h, j, k, l], is_dual)
    } else {
        select_513([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_721([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_19([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_722([a, b, d, e, f, g, c, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_714([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_715([a, b, d, e, f, c, h, j, i], is_dual)
    } else {
        select_721([a, b, c, d, g, e, f, h, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_731([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_32([a, f, b, e, d, g], is_dual)
    } else {
        select_44([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_730([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_163([a, f, b, e, i, g, j], is_dual)
    } else {
        select_731([e, c, d, h, f, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_732([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_503([e, a, b, f, g, d, h, i], is_dual)
    } else {
        select_503([d, a, c, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_729([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_730([b, a, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_732([d, b, f, e, a, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_734([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_409([a, b, e, g, h, i, j], is_dual)
    } else {
        select_731([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_735([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_547([a, c, b, f, e, h, i, g], is_dual)
    } else {
        select_547([a, d, b, f, e, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_733([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_734([a, f, c, d, g, h, e, j, i, k], is_dual)
    } else {
        select_735([a, d, b, e, g, f, j, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_728([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_729([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_733([a, d, c, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_739([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_184([a, c, d, e, g, f, h], is_dual)
    } else {
        select_33([a, b, e, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_738([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_739([d, b, a, e, f, h, i, g], is_dual)
    } else {
        select_549([d, a, c, f, g, e, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_738([b, e, c, d, g, h, f, i, j], is_dual)
    } else {
        select_562([a, c, f, d, g, h, i, e, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_736([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_737([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_551([c, b, e, d, f, a, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_727([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_728([a, b, c, h, d, i, g, f, j, k, l], is_dual)
    } else {
        select_736([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_726([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_727([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_727([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_713([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_714([a, b, c, e, d, f, g, i, h, j, k, l], is_dual)
    } else {
        select_726([a, b, c, e, g, f, i, h, d, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_745([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_360([a, c, d, e, g, f, h], is_dual)
    } else {
        select_209([h, i, g, e, d, a, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_744([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_359([e, h, f, a, d, g, c], !is_dual)
    } else {
        select_745([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_747([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([c, d, e, f, i], is_dual)
    } else {
        select_126([a, b, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_748([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_215([b, a, d, e, g, i], is_dual)
    } else {
        select_375([a, c, b, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_746([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_747([a, g, c, d, e, f, h, j, i, k], is_dual)
    } else {
        select_748([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_743([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_744([b, c, h, g, f, a, j, k, i], is_dual)
    } else {
        select_746([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_743([a, d, b, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_743([a, d, c, e, f, g, b, h, i, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_753([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_45([f, h, a, e, c], !is_dual)
    } else {
        select_29([g, d, i, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_754([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, b, d, f, e, h], is_dual)
    } else {
        select_184([c, a, b, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_752([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_753([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_754([h, i, e, g, f, d, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_751([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_374([b, c, a, d, e, g, f, h, i], is_dual)
    } else {
        select_752([i, h, j, e, a, g, f, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_750([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_744([b, c, g, f, e, a, i, j, h], is_dual)
    } else {
        select_751([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_749([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_750([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_750([a, d, c, e, f, b, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_741([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_742([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    } else {
        select_749([a, c, d, b, e, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_740([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_741([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_741([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_712([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_713([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_740([a, b, d, c, e, f, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_711([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_712([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_712([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_763([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_44([d, c, f, e, h], is_dual)
    } else {
        select_45([i, j, a, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_762([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_763([a, b, f, c, e, g, i, j, h, k], is_dual)
    } else {
        select_205([b, c, d, g, e, f, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_765([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_32([d, b, c, e, f, h], is_dual)
    } else {
        select_33([h, i, a, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_765([a, f, b, d, e, h, i, g, j], is_dual)
    } else {
        select_29([d, c, g, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_761([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_762([a, b, c, d, f, g, e, h, j, i, k], is_dual)
    } else {
        select_764([e, d, c, a, g, f, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_281([g, c, b, a, f, i, h, j], is_dual)
    } else {
        select_54([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_766([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_304([c, h, d, e, a, g, i], is_dual)
    } else {
        select_767([a, b, g, d, e, f, i, h, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_760([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_761([a, b, d, c, g, i, h, l, k, m, n], is_dual)
    } else {
        select_766([a, c, d, e, f, h, i, k, j, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_770([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([b, c, a, d, e, f], is_dual)
    } else {
        select_341([a, e, b, d, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_769([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_718([e, f, h, a, b, g], !is_dual)
    } else {
        select_770([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_768([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_769([b, a, c, d, f, g, h, e], is_dual)
    } else {
        select_387([b, c, d, a, f, e, g, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_759([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_760([a, c, b, d, e, f, h, g, i, j, k, m, l, n], is_dual)
    } else {
        select_768([a, b, c, l, m, h, g, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_775([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_190([a, d, b, g, e, f, h], is_dual)
    } else {
        select_190([a, d, c, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_774([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_775([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_45([b, h, g, a, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_776([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_775([b, a, c, d, f, e, g, h], is_dual)
    } else {
        select_163([c, e, d, g, a, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_773([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_774([a, b, c, e, g, j, h, i, k], is_dual)
    } else {
        select_776([a, c, b, d, i, f, h, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_772([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_168([a, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_773([a, j, b, d, c, i, h, g, k, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_779([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_360([a, b, c, d, e, f, g], is_dual)
    } else {
        select_73([a, e, d, b, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_780([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_27([a, b, c, d, g, f, h, i], is_dual)
    } else {
        select_27([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_778([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_779([h, j, f, b, a, i, g], !is_dual)
    } else {
        select_780([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_782([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_593([f, h, i, e, d, g, a, b], !is_dual)
    } else {
        select_41([f, d, h, i, e, g, a, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_783([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_202([a, b, c, e, f, d, g, h], is_dual)
    } else {
        select_202([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_781([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_782([b, c, a, d, e, g, f, h, i], is_dual)
    } else {
        select_783([d, g, h, i, a, e, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_777([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_778([b, a, d, e, c, f, g, i, h, j], is_dual)
    } else {
        select_781([i, j, k, a, f, g, b, c, h], !is_dual)
    }
}
/// n = 14, i = 4
fn select_771([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_772([a, c, b, d, e, f, h, g, i, j, k, m, l], is_dual)
    } else {
        select_777([a, b, c, i, j, g, h, l, m, n, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_758([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_759([b, d, c, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_771([b, d, a, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_757([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_758([a, c, d, b, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_758([b, c, d, a, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_756([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_757([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_757([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_755([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_756([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_756([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_710([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_711([a, b, c, d, e, f, g, k, l, m, j, n], is_dual)
    } else {
        select_755([a, b, c, d, f, e, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_792([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_215([f, h, b, c, j, g], is_dual)
    } else {
        select_62([a, g, d, e, f, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_793([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_61([c, d, e, i, f, h], is_dual)
    } else {
        select_43([c, h, a, b, f, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_791([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_792([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_793([c, d, b, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_795([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_163([b, c, d, a, e, f, h], is_dual)
    } else {
        select_163([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_794([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_300([b, c, a, e, d, f], is_dual)
    } else {
        select_795([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_790([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_791([a, c, e, f, b, d, h, g, i, j, k], is_dual)
    } else {
        select_794([a, b, i, d, c, k, g, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_797([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_351([a, f, d, e, g, h, j], is_dual)
    } else {
        select_770([a, b, c, h, f, i, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_799([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_202([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_202([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_798([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_657([a, b, f, c, h, e, g, i], is_dual)
    } else {
        select_799([b, e, a, d, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_796([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_797([b, a, f, d, e, g, i, h, k, j], is_dual)
    } else {
        select_798([b, a, h, c, j, f, k, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_790([a, c, d, b, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_796([a, d, c, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_789([a, c, b, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_789([b, c, a, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_787([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_788([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_788([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_786([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_787([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_787([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_805([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_71([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_71([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_804([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_467([a, d, e, f, b, c, g, h, i], is_dual)
    } else {
        select_805([b, c, g, e, f, a, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_807([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_449([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_242([a, b, g, h, c, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_806([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_200([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_807([a, b, g, e, i, h, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_803([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_804([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_806([a, b, g, k, c, j, d, i, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_802([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_803([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_803([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_810([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_577([a, c, d, b, f, e, g], is_dual)
    } else {
        select_583([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_809([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_810([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_806([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_814([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_215([a, c, b, d, e, f], is_dual)
    } else {
        select_141([a, f, c, b, e, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_813([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_814([a, b, c, d, e, f, g], is_dual)
    } else {
        select_242([a, b, c, f, g, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_812([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_200([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_813([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_811([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_812([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_813([a, b, d, c, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_808([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_809([a, b, c, g, i, d, h, f, e], !is_dual)
    } else {
        select_811([a, b, c, d, i, g, h, f], !is_dual)
    }
}
/// n = 12, i = 4
fn select_801([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_802([a, b, c, d, h, f, g, i, j, k, l], is_dual)
    } else {
        select_808([a, b, c, d, l, k, j, h, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_818([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_447([a, b, c, g, i, h, f], !is_dual)
    } else {
        select_449([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_821([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_215([a, b, c, d, e, f], is_dual)
    } else {
        select_341([a, b, h, i, g, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_820([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_821([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_821([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_819([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_820([a, b, c, d, g, f, h, i, j], is_dual)
    } else {
        select_820([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_817([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_818([a, b, c, d, g, h, i, f, j], is_dual)
    } else {
        select_819([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_824([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_718([a, b, g, e, f, c], !is_dual)
    } else {
        select_340([a, e, g, b, f, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_823([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_200([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_824([a, b, c, f, g, h, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_822([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_823([a, b, d, g, f, h, c, i], is_dual)
    } else {
        select_581([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_816([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_817([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_822([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_829([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_211([a, b, c, d, f], is_dual)
    } else {
        select_65([a, b, c, d, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_828([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_286([a, c, b, d, e, f], is_dual)
    } else {
        select_829([a, b, g, h, c, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_827([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_520([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_828([a, g, b, c, d, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_826([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_823([a, g, c, d, f, h, b, i], is_dual)
    } else {
        select_827([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_833([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_106([b, a, c, d, e, g, f], is_dual)
    } else {
        select_72([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 8, i = 2
fn select_834([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_137([b, c, d, e, f], is_dual)
    } else {
        select_34([a, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_833([a, b, c, i, g, j, h, k], is_dual)
    } else {
        select_834([a, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_831([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_832([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_832([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_835([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_305([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_282([a, g, d, e, f, b, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_830([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_831([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_835([a, b, h, e, f, g, d, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_825([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_826([a, b, d, e, i, h, c, j, k], is_dual)
    } else {
        select_830([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_815([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_816([a, b, c, e, i, h, j, d, k, l], is_dual)
    } else {
        select_825([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_800([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_801([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_815([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_785([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_786([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    } else {
        select_800([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_784([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_711([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_785([a, b, c, d, f, e, g, h, j, i, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_709([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_710([a, b, c, d, g, f, e, h, i, j, k, l, n, m], is_dual)
    } else {
        select_784([a, b, c, d, g, e, f, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_708([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_709([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_709([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_363([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_364([a, b, c, d, e, f, h, g, i, j, k, l, n, m], is_dual)
    } else {
        select_708([a, b, c, d, e, f, h, g, i, j, l, m, n, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_9([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < g) || (is_dual && o > g) {
        select_10([a, b, c, d, e, f, h, g, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_363([a, b, c, d, e, f, h, k, l, m, n, o, g, p], is_dual)
    }
}
/// n = 7, i = 2
fn select_849([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_28([a, b, c, d, e, f], is_dual)
    } else {
        select_29([e, c, d, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_848([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([b, c, d, e, f, g, h], is_dual)
    } else {
        select_849([a, h, b, c, f, g, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_847([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_108([c, d, g, a, b, e, f, j, i, h], is_dual)
    } else {
        select_848([h, a, b, e, f, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_846([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_847([a, f, b, c, d, e, g, i, j, h, k], is_dual)
    } else {
        select_20([h, b, c, d, e, g, f, i, j, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_852([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([b, c, d, e, f, g, h], is_dual)
    } else {
        select_38([a, h, b, c, f, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_851([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_852([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_852([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_850([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_48([f, g, b, c, d, e, h, i, j, k], is_dual)
    } else {
        select_851([f, g, a, j, b, c, h, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_845([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_846([e, a, b, c, d, f, h, g, i, j, l, k], is_dual)
    } else {
        select_850([g, a, b, c, d, f, h, e, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_855([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([a, b, d, e, f, g], is_dual)
    } else {
        select_829([a, b, c, g, f, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_857([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_163([a, b, c, d, e, f, g], is_dual)
    } else {
        select_115([d, e, c, g, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_856([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_857([b, c, d, a, e, f, g], is_dual)
    } else {
        select_163([c, d, a, e, f, b, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_854([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_855([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_856([a, c, d, g, f, b, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_853([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_854([a, b, d, i, e, c, h, j], is_dual)
    } else {
        select_512([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_844([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_845([e, i, f, g, c, d, b, a, k, j, l, m], is_dual)
    } else {
        select_853([a, c, d, e, h, b, j, i, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_843([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_148([b, c, a, d, e, f, j, i, l, m, n, k], is_dual)
    } else {
        select_844([c, b, e, f, a, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_842([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_843([a, c, d, b, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_843([b, c, d, a, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_841([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_842([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    } else {
        select_842([b, c, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_840([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_841([a, b, c, e, f, g, h, i, j, d, k, l, m, n], is_dual)
    } else {
        select_841([a, b, d, e, f, g, h, i, j, c, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 2
fn select_865([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_21([g, b, c, d, e, f, i, j, h, k], is_dual)
    } else {
        select_311([a, h, b, c, d, e, g, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_867([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([b, d, e, f, g], is_dual)
    } else {
        select_632([a, b, c, g, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_866([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_304([c, f, d, e, b, g, h], is_dual)
    } else {
        select_867([a, b, g, d, e, f, h, i], is_dual)
    }
}
/// n = 12, i = 2
fn select_864([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_865([d, b, h, e, f, a, i, g, k, j, l], is_dual)
    } else {
        select_866([a, b, c, i, j, g, h, l, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_863([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_864([f, e, d, a, b, i, k, j, g, h, l, m], is_dual)
    } else {
        select_864([f, e, d, a, c, h, k, j, g, i, l, m], is_dual)
    }
}
/// n = 13, i = 2
fn select_862([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_863([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_863([a, b, c, e, d, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_871([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_435([c, h, e, f, a, b, g, j, i, k], is_dual)
    } else {
        select_435([d, g, e, f, a, b, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_870([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_871([a, b, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_434([a, b, c, d, h, i, g, j, l, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_874([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([a, d, e, h, g], is_dual)
    } else {
        select_106([a, b, c, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_873([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_304([c, h, d, e, a, g, i], is_dual)
    } else {
        select_874([a, b, g, d, e, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_876([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_22([b, c, d, e, j, h, i], is_dual)
    } else {
        select_182([f, b, c, a, i, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_875([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_876([b, c, i, e, f, a, g, h, j, k, l], is_dual)
    } else {
        select_876([b, d, h, e, f, a, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_872([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_873([a, c, b, i, j, h, g, l, m, k], is_dual)
    } else {
        select_875([c, f, d, e, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 2
fn select_869([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_870([a, h, b, c, e, f, i, j, k, g, l, m], is_dual)
    } else {
        select_872([b, c, a, e, f, d, i, g, j, k, l, h, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_878([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_766([a, c, b, i, j, h, g, l, m, k, n], is_dual)
    } else {
        select_875([c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_877([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_878([a, c, b, d, e, f, i, h, j, k, l, g, m, n], is_dual)
    } else {
        select_870([b, g, a, c, e, f, i, j, k, h, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_868([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_869([b, c, a, d, e, f, i, h, g, k, l, j, m], is_dual)
    } else {
        select_877([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_861([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_862([a, f, g, b, c, d, e, k, l, h, i, j, m], is_dual)
    } else {
        select_868([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 2
fn select_882([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_107([g, a, b, c, d, e, i, h, j, k], is_dual)
    } else {
        select_319([g, f, k, a, b, c, h, i, j, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_881([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_92([a, b, d, c, j, k, h, i, m, l, n], is_dual)
    } else {
        select_882([e, c, h, f, g, d, a, j, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_883([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_882([e, b, h, f, g, c, a, j, i, l, k, m], is_dual)
    } else {
        select_85([a, b, c, d, j, k, i, h, m, l, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_880([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_881([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_883([a, b, d, c, e, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_887([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_71([e, h, c, d, g, f, i, j], is_dual)
    } else {
        select_49([e, c, d, a, b, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_886([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_887([c, i, e, f, b, a, g, h, j, k], is_dual)
    } else {
        select_887([d, h, e, f, b, a, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_885([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_886([a, c, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_85([a, b, c, d, i, j, h, g, l, k, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_888([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_92([a, b, d, c, i, j, g, h, l, k, m], is_dual)
    } else {
        select_886([a, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_884([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_885([a, b, d, c, e, f, h, i, j, k, g, l, m], is_dual)
    } else {
        select_888([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_879([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_880([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_884([a, b, c, d, f, l, h, i, j, k, e, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_860([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_861([a, c, b, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_879([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 1
fn select_895([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_61([a, b, c, d, f, g], is_dual)
    } else {
        select_23([b, c, d, e], is_dual)
    }
}
/// n = 10, i = 2
fn select_894([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_496([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_895([h, d, e, f, g, c, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_897([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_211([c, d, e, f, i], is_dual)
    } else {
        select_53([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_898([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_269([d, b, c, f, h, g], is_dual)
    } else {
        select_632([a, d, e, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_896([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_897([c, d, a, b, e, g, h, f, i], is_dual)
    } else {
        select_898([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_893([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_894([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_896([a, d, b, c, j, h, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_901([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_335([a, b, i, f, j], is_dual)
    } else {
        select_257([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_900([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_453([a, b, d, e, f, h, i, k], is_dual)
    } else {
        select_901([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_903([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_137([c, d, e, f, i], is_dual)
    } else {
        select_173([a, j, b, g, h, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_904([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_261([b, a, f, e, d, g, i, h], is_dual)
    } else {
        select_184([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_902([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_903([b, c, a, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_904([b, i, c, g, a, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_899([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_900([a, b, h, d, e, f, i, g, j, k, l], is_dual)
    } else {
        select_902([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_893([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_899([b, d, c, e, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_905([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_103([d, a, e, f, g, c, b, i, h, j, k, l], is_dual)
    } else {
        select_57([b, c, j, d, f, g, h, a, i, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_891([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_892([a, c, b, d, e, j, k, h, i, m, n, l], is_dual)
    } else {
        select_905([a, c, e, f, g, d, i, h, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_911([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, b, c, d, e, g], is_dual)
    } else {
        select_45([f, g, a, d, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_910([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_911([b, c, e, a, f, h, g], is_dual)
    } else {
        select_38([b, c, a, d, f, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_909([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_120([f, h, e, a, g, b, c], !is_dual)
    } else {
        select_910([a, c, d, b, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_913([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_37([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_911([b, c, g, a, f, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_912([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_913([a, b, d, c, e, f, g, i, h], is_dual)
    } else {
        select_242([a, f, c, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_908([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_909([b, f, c, d, a, g, h, i], is_dual)
    } else {
        select_912([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_915([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_52([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_895([b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_914([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_915([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_915([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_907([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_908([a, b, c, j, d, i, h, k, l], is_dual)
    } else {
        select_914([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_906([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_905([a, c, d, f, g, b, i, h, j, k, l, m], is_dual)
    } else {
        select_907([a, b, c, e, d, j, k, h, i, m, n, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_890([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_891([a, b, c, d, e, f, g, i, h, k, l, j, m, n], is_dual)
    } else {
        select_906([a, b, c, e, d, f, g, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_889([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_879([a, c, e, b, f, g, h, i, j, d, k, l, m, n], is_dual)
    } else {
        select_890([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_859([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_860([a, b, d, e, c, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_889([a, b, d, e, f, g, h, i, j, c, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_923([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_42([a, b, c, d, e, f], is_dual)
    } else {
        select_42([a, b, c, d, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_922([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_360([a, b, f, d, g, e, h], is_dual)
    } else {
        select_923([a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_134([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_922([a, i, c, g, b, h, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_926([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_129([a, b, e, d, f, h], is_dual)
    } else {
        select_409([d, a, c, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_925([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_611([a, b, c, e, f, h, g, j], is_dual)
    } else {
        select_926([i, f, j, a, h, b, g, d, c], !is_dual)
    }
}
/// n = 10, i = 2
fn select_927([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_494([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_895([h, d, e, f, g, b, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_924([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_925([a, b, c, j, d, h, i, k, l, m], is_dual)
    } else {
        select_927([c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_920([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_921([a, b, i, e, f, g, h, d, j, l, k], is_dual)
    } else {
        select_924([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_919([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_920([a, b, c, d, e, j, k, h, i, m, n, l, o], is_dual)
    } else {
        select_905([b, a, e, f, g, d, i, h, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_918([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_919([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_919([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 2
fn select_929([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_68([a, b, c, e, j, g, h, i, d, k, l], is_dual)
    } else {
        select_46([e, d, f, g, h, a, b, c, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_934([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_61([b, a, c, d, e, f], is_dual)
    } else {
        select_632([a, e, g, h, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_933([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_934([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_644([a, e, c, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_935([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_494([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_834([h, d, e, f, g, a, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_932([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_933([a, i, c, d, b, h, j, k, l], is_dual)
    } else {
        select_935([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_938([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([a, b, c, h, i], is_dual)
    } else {
        select_23([d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_937([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_938([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_143([g, d, e, f, a, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_940([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_182([a, d, e, b, c, f, h, g, i], is_dual)
    } else {
        select_41([a, g, d, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_939([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_940([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_940([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_936([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_937([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_939([a, b, c, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_931([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_932([a, b, c, i, e, f, g, h, j, l, k, m], is_dual)
    } else {
        select_936([a, b, d, h, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_944([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_390([a, f, b, d, g, e, h], is_dual)
    } else {
        select_390([a, e, c, d, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_945([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_61([a, c, d, f, e, h], is_dual)
    } else {
        select_215([e, b, c, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_943([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_944([e, i, j, a, f, h, g, b], !is_dual)
    } else {
        select_945([b, a, c, d, f, e, h, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_942([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_398([a, b, d, e, f, i, g, h, j, k, l, m], is_dual)
    } else {
        select_943([a, b, c, j, g, h, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_941([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_942([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_942([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_930([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_931([a, b, e, c, f, g, h, i, d, j, l, k, m], is_dual)
    } else {
        select_941([a, b, e, d, f, g, h, i, c, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_928([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_929([a, b, d, e, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_930([a, b, c, d, f, e, j, k, i, m, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_917([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_918([a, b, d, c, e, f, g, h, i, k, l, j, m, n, o], is_dual)
    } else {
        select_928([a, b, c, d, f, e, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_916([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_917([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o], is_dual)
    } else {
        select_860([a, b, d, e, c, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_858([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_859([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_916([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_839([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_840([a, b, c, d, e, f, g, h, i, l, m, k, n, o], is_dual)
    } else {
        select_858([a, b, c, d, f, g, h, i, e, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_838([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_839([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o], is_dual)
    } else {
        select_839([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_837([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_191([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o], is_dual)
    } else {
        select_838([a, b, c, d, e, f, h, i, j, g, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_836([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < g) || (is_dual && n > g) {
        select_837([a, b, c, d, e, f, h, i, g, j, k, l, m, n, o], is_dual)
    } else {
        select_363([a, b, c, d, e, f, h, i, j, l, m, n, g, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_8([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < k) || (is_dual && n > k) {
        select_9([a, b, c, d, e, f, g, h, j, i, l, m, k, o, n, p], is_dual)
    } else {
        select_836([a, b, c, d, e, f, g, l, h, i, m, n, p, k, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_7([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_8([a, b, c, d, e, f, g, h, i, j, l, m, n, o, k, p], is_dual)
    } else {
        select_8([a, b, c, d, e, f, g, i, h, j, k, m, n, o, l, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_7([a, b, c, d, e, f, g, h, j, k, i, l, m, n, o, p], is_dual)
    } else {
        select_7([a, b, c, d, e, f, g, i, j, k, h, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6([a, b, c, d, e, f, g, h, i, j, l, k, m, n, o, p], is_dual)
    } else {
        select_6([a, b, c, d, e, f, g, h, i, k, l, j, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_5([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_5([a, b, c, d, e, f, g, h, i, j, k, m, o, l, n, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_961([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_414([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_412([a, b, c, d, i, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_960([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_635([a, e, f, g, c, d, b, h, i, j, k], is_dual)
    } else {
        select_961([b, c, d, i, f, g, h, a, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_959([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_396([a, b, c, f, d, e, j, h, i, l, m, k, n], is_dual)
    } else {
        select_960([c, a, d, e, g, b, i, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_958([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_370([b, c, d, f, e, j, h, i, l, k, a, m, n], is_dual)
    } else {
        select_959([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_965([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_887([c, d, e, f, b, a, g, h, i, j], is_dual)
    } else {
        select_701([a, b, h, e, f, g, c, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_969([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_131([a, c, e, h, d, g], is_dual)
    } else {
        select_131([b, c, d, h, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_968([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_969([b, f, c, e, a, g, h, i], is_dual)
    } else {
        select_43([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_967([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_968([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_776([b, a, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_966([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_414([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_967([a, b, c, i, d, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_964([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_965([c, a, d, f, b, h, g, i, j, k], is_dual)
    } else {
        select_966([a, b, c, e, d, i, g, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_963([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_964([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_964([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_962([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_602([a, b, c, d, e, h, g, i, j, l, k, m], is_dual)
    } else {
        select_963([a, d, b, e, c, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_957([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_958([a, b, c, d, f, e, h, k, l, j, o, m, n, p], is_dual)
    } else {
        select_962([a, b, d, c, e, g, m, i, n, k, p, l, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_956([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_957([a, b, c, d, f, g, e, h, i, k, l, j, n, o, m, p], is_dual)
    } else {
        select_957([a, c, b, d, e, g, f, h, j, k, m, i, n, o, l, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_955([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_956([a, b, d, e, c, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_956([a, c, d, e, b, f, g, h, i, k, l, j, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_954([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_955([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    } else {
        select_955([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_953([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_954([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    } else {
        select_954([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_952([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_953([a, b, c, d, e, f, h, g, i, j, l, m, k, n, o, p], is_dual)
    } else {
        select_953([a, b, c, d, e, g, h, f, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_951([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_952([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_952([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_950([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_951([a, b, c, d, e, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_951([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_982([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_623([a, b, h, i], !is_dual)
    } else {
        select_450([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_981([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_622([f, h, i, a, b, c, g], !is_dual)
    } else {
        select_982([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_984([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_202([a, c, d, g, e, f, i, h], is_dual)
    } else {
        select_595([g, j, a, b, h, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_983([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_984([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_984([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_981([c, d, e, a, b, h, g, f, i], is_dual)
    } else {
        select_983([c, d, a, b, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_987([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_163([c, e, d, f, h, g, j], is_dual)
    } else {
        select_202([a, f, b, e, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_989([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_229([a, b, d, f, g, h, i], is_dual)
    } else {
        select_39([b, e, c, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_988([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_989([a, f, b, d, g, e, h, i, j], is_dual)
    } else {
        select_989([a, e, c, d, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_986([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_987([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_988([b, d, g, e, f, a, h, j, i, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_991([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_360([e, f, h, a, b, g, d], !is_dual)
    } else {
        select_31([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_990([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_120([a, c, e, g, b, h, f], is_dual)
    } else {
        select_991([a, c, b, d, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_985([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_986([a, b, c, d, f, g, e, h, j, i, k], is_dual)
    } else {
        select_990([a, g, c, f, i, j, h, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_979([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_980([a, e, b, h, c, g, f, j, i, k], is_dual)
    } else {
        select_985([b, a, c, d, g, f, h, i, e, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_995([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_989([a, f, b, d, h, e, g, i, j], is_dual)
    } else {
        select_989([a, e, c, d, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_997([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_184([a, b, c, d, e, f, g], is_dual)
    } else {
        select_34([a, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_998([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_184([a, b, c, d, e, f, g], is_dual)
    } else {
        select_184([a, b, c, e, d, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_996([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_997([a, c, d, e, h, g, j, k], is_dual)
    } else {
        select_998([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_994([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_995([b, c, g, e, f, a, h, i, j, k], is_dual)
    } else {
        select_996([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1000([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_228([a, d, c, f, e, h, g, i], is_dual)
    } else {
        select_503([a, e, b, g, i, f, h, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_1002([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_123([a, d, c, g, e, h], is_dual)
    } else {
        select_39([e, f, b, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_1001([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_266([a, b, c, e, d, g, f, h], is_dual)
    } else {
        select_1002([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_999([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1000([b, c, d, i, f, g, h, j, k], is_dual)
    } else {
        select_1001([j, a, d, e, f, i, h, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_993([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_994([a, b, h, c, e, i, f, m, l, j, k], is_dual)
    } else {
        select_999([b, a, f, d, e, g, j, h, l, k, m, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1005([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_269([a, b, c, g, i, f], is_dual)
    } else {
        select_141([a, f, d, h, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1008([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_33([a, f, c, h], is_dual)
    } else {
        select_33([b, e, d, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1007([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_184([b, c, d, f, i, h, k], is_dual)
    } else {
        select_1008([a, b, e, f, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1009([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_184([d, b, c, e, g, f, h], is_dual)
    } else {
        select_39([h, i, a, d], is_dual)
    }
}
/// n = 12, i = 4
fn select_1006([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1007([a, b, c, d, e, f, h, g, j, i, l, k], is_dual)
    } else {
        select_1009([a, c, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1004([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1005([h, a, g, d, f, e, i, j, l], is_dual)
    } else {
        select_1006([d, a, b, c, f, e, h, i, g, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1011([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_89([b, a, d, h, g, e, k, j], is_dual)
    } else {
        select_535([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1010([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1011([a, b, c, g, e, f, i, h, k, j, l], is_dual)
    } else {
        select_65([b, h, d, j, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_1003([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1004([b, a, g, c, e, f, k, i, h, m, l, j], is_dual)
    } else {
        select_1010([b, a, f, d, e, h, g, j, k, l, m, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_992([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_993([a, c, b, d, g, f, h, i, k, e, j, l, m], is_dual)
    } else {
        select_1003([b, c, d, a, g, h, e, i, j, k, f, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_978([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_979([a, b, c, i, k, e, g, l, j, f, m], is_dual)
    } else {
        select_992([a, c, b, d, e, g, f, h, i, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_977([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_978([c, d, a, e, f, g, b, h, i, j, l, m, k], is_dual)
    } else {
        select_978([d, c, b, e, g, f, a, h, i, k, l, m, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_976([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_977([a, c, b, d, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_977([b, c, a, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_975([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_976([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_976([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_974([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_975([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_975([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_973([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_974([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_974([a, b, c, d, f, e, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_1022([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_39([c, d, e, g], is_dual)
    } else {
        select_39([a, b, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1021([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_266([c, d, b, e, f, a, h, g], is_dual)
    } else {
        select_1022([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1020([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_301([a, c, d, e, h, g, i], is_dual)
    } else {
        select_1021([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1019([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1020([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_1020([b, a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1025([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_409([i, a, b, e, f, h, j], is_dual)
    } else {
        select_998([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1027([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_184([a, c, d, e, g, f, i], is_dual)
    } else {
        select_39([a, h, b, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1026([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1027([f, a, c, d, e, g, i, h, j], is_dual)
    } else {
        select_1027([e, b, c, d, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1024([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1025([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1026([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1029([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([c, d, a, b, e, f], is_dual)
    } else {
        select_341([a, b, c, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1028([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_301([a, c, d, e, g, f, h], is_dual)
    } else {
        select_1029([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1023([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1024([b, a, e, c, d, f, h, i, j, g], is_dual)
    } else {
        select_1028([b, f, c, d, a, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1018([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1019([a, b, c, d, f, i, j, h, k, l], is_dual)
    } else {
        select_1023([a, b, c, d, e, g, i, k, j, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_1033([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_246([e, c, d, a, f, g], is_dual)
    } else {
        select_38([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1034([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_37([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_393([b, g, c, a, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1032([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1033([a, i, b, c, k, f, g], is_dual)
    } else {
        select_1034([f, a, g, d, e, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1031([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1032([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1032([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1037([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_450([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_393([a, g, b, h, f, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1036([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_353([a, g, b, i, j, e, h, f], is_dual)
    } else {
        select_1037([a, e, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1038([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_341([g, h, c, d, f, k], is_dual)
    } else {
        select_355([f, a, b, i, j, e, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1035([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1036([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1038([c, d, a, b, h, g, i, j, e, f, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1030([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1031([b, a, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_1035([b, f, d, e, a, g, k, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1017([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_1018([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1030([b, c, e, d, h, g, i, k, a, l, j, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_1043([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_129([d, b, c, e, f, g], is_dual)
    } else {
        select_269([h, e, f, d, g, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1042([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_657([g, h, f, i, a, d, e, b], !is_dual)
    } else {
        select_1043([b, a, c, d, f, h, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1044([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_243([b, c, d, a, f, e, g], is_dual)
    } else {
        select_164([f, e, h, a, b, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1041([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1042([a, b, c, e, f, d, h, g, i], is_dual)
    } else {
        select_1044([a, g, h, i, d, e, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1046([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_454([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_454([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1045([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_794([a, e, i, j, h, f, c, g], !is_dual)
    } else {
        select_1046([a, e, b, d, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1040([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1041([a, d, g, e, f, b, j, i, h], is_dual)
    } else {
        select_1045([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 1
fn select_1049([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_350([d, e, a, b, h, f, g], is_dual)
    } else {
        select_350([d, e, a, c, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1050([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_718([i, f, j, a, g, b], !is_dual)
    } else {
        select_662([f, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_1048([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1049([e, f, g, c, d, i, h, j], is_dual)
    } else {
        select_1050([a, b, c, d, h, i, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_1053([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([e, c, d, h, g], is_dual)
    } else {
        select_281([a, g, b, e, f, i, j, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_1055([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_247([a, f, g], is_dual)
    } else {
        select_123([a, b, c, d, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1054([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_332([a, c, b, e, f, g, d, h], is_dual)
    } else {
        select_1055([g, h, e, f, a, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1052([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1053([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_1054([a, b, g, i, e, f, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1056([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_671([a, c, f, d, h, e, i], is_dual)
    } else {
        select_340([d, g, i, a, f, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1051([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_1052([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1056([a, b, g, i, j, f, e, h, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1047([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_1048([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1051([b, c, d, h, i, g, k, j, a, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1039([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_1040([a, c, d, k, l, b, g, i, j, m], is_dual)
    } else {
        select_1047([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1016([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1017([a, b, d, e, c, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_1039([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 6, i = 2
fn select_1062([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_125([f, a, b, d, e], is_dual)
    } else {
        select_125([e, a, c, d, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1063([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_393([a, e, b, g, h, d, f], is_dual)
    } else {
        select_393([a, d, c, f, h, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1061([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1062([a, f, g, h, d, e], !is_dual)
    } else {
        select_1063([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1065([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_360([a, b, e, f, h, d, g], is_dual)
    } else {
        select_393([a, d, c, g, f, e, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1064([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_359([a, h, g, d, f, e, c], !is_dual)
    } else {
        select_1065([a, c, b, e, f, d, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1060([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1061([a, c, d, b, f, e, h, g], is_dual)
    } else {
        select_1064([a, b, d, e, f, c, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1059([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_823([a, b, c, d, e, f, h, i], is_dual)
    } else {
        select_1060([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1058([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1059([a, c, d, e, f, g, h, b, i], is_dual)
    } else {
        select_1059([a, f, h, i, c, g, d, b, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1069([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_833([a, b, c, g, e, f, i, h], is_dual)
    } else {
        select_833([a, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1068([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1069([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1069([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1072([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_346([e, h, i, a, f, g, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1071([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_940([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1072([a, g, d, e, f, b, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1070([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1071([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1071([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1067([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1068([a, b, c, d, i, g, j, k, h], is_dual)
    } else {
        select_1070([a, b, g, c, e, f, h, i, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1076([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_41([f, h, g, i, a, d, b, e], !is_dual)
    } else {
        select_393([a, d, c, g, f, e, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1077([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_72([b, d, c, f, g, e], is_dual)
    } else {
        select_390([b, a, e, g, h, d, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_1075([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1076([a, b, c, e, f, g, d, h, i], is_dual)
    } else {
        select_1077([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1079([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_261([c, a, b, e, d, g, h, f], is_dual)
    } else {
        select_122([d, c, a, f, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1078([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1079([a, b, c, d, e, f, h, i], is_dual)
    } else {
        select_1077([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1074([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1075([g, e, i, a, f, h, b, d, c], !is_dual)
    } else {
        select_1078([g, f, i, e, h, a, b, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1073([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1074([a, g, i, j, f, b, c, h, e], !is_dual)
    } else {
        select_386([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1066([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_1067([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1073([a, b, c, i, d, j, h, k, l, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1057([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_1058([a, j, c, d, k, g, b, l, h], is_dual)
    } else {
        select_1066([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_1016([a, c, d, b, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_1057([a, c, b, d, e, i, h, j, k, l, m, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1085([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_718([a, h, e, f, g, b], !is_dual)
    } else {
        select_663([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1084([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_349([a, f, c, h, e, g, j, i, k], is_dual)
    } else {
        select_1085([a, b, d, i, f, k, h, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1089([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_42([a, b, f, e, h, i], is_dual)
    } else {
        select_24([c, d, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1088([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_31([b, g, c, d, f, h, j], is_dual)
    } else {
        select_1089([a, f, c, d, e, h, g, i, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1087([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1088([a, b, d, e, f, j, h, i, l, k, m], is_dual)
    } else {
        select_183([b, c, d, e, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1091([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_261([a, b, c, e, f, d, g, h], is_dual)
    } else {
        select_673([a, d, c, f, e, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_1093([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([a, c, b, f, g, e], is_dual)
    } else {
        select_32([a, d, b, e, g, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1092([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_215([a, c, d, e, g, f], is_dual)
    } else {
        select_1093([a, b, c, f, g, e, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1090([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1091([a, c, i, e, f, k, h, l], is_dual)
    } else {
        select_1092([b, c, h, d, e, g, j, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_1086([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1087([b, c, e, a, d, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_1090([b, c, g, e, a, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1083([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1084([a, b, c, g, e, f, h, j, k, i, l, m], is_dual)
    } else {
        select_1086([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_1096([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_129([a, b, e, d, g, f], is_dual)
    } else {
        select_29([d, c, f, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_1095([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_340([d, e, c, a, f, g, h], is_dual)
    } else {
        select_1096([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1098([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_409([a, b, e, d, g, h, i], is_dual)
    } else {
        select_141([a, d, c, f, e, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_1099([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_346([d, f, g, a, e, b, c], !is_dual)
    } else {
        select_361([a, f, g, d, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1097([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1098([a, b, d, g, e, h, i, f, j], is_dual)
    } else {
        select_1099([a, g, j, f, i, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1095([a, e, d, g, b, f, h, i], is_dual)
    } else {
        select_1097([a, c, b, d, f, h, e, g, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_1082([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_1083([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1094([a, b, c, k, f, l, i, m, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1104([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_393([a, b, g, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1103([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_359([f, g, j, a, b, i, c], !is_dual)
    } else {
        select_1104([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1106([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_129([i, e, j, a, b, h], !is_dual)
    } else {
        select_31([b, e, c, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1107([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_113([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_269([f, a, j, k, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1105([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1106([a, b, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1107([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1102([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1103([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1105([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1101([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1102([a, b, g, f, d, e, i, h, j, k, l], is_dual)
    } else {
        select_599([a, b, j, c, k, g, f, l, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1111([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_53([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_534([a, b, c, h, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1110([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1111([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1111([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1109([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_434([c, d, e, f, a, b, g, i, h, j], is_dual)
    } else {
        select_1110([a, b, c, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1114([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_236([d, h, i, e, g, a, b, f, c], !is_dual)
    } else {
        select_236([e, h, i, d, g, a, b, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1113([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_351([a, b, d, e, g, h, j], is_dual)
    } else {
        select_1114([i, g, k, a, b, j, f, h, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1112([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_873([c, d, e, a, b, f, g, i, h, j], is_dual)
    } else {
        select_1113([a, b, d, c, g, f, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1108([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1109([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_1112([b, c, e, d, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1100([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_1101([a, b, d, c, h, g, f, k, j, l, m, i], is_dual)
    } else {
        select_1108([a, b, g, f, c, e, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1081([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1082([a, b, c, d, e, h, f, i, j, g, k, l, m], is_dual)
    } else {
        select_1100([a, b, d, c, e, h, g, i, j, f, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1080([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_1081([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1081([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1014([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1015([a, c, b, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_1080([a, c, d, e, f, g, h, i, j, b, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_1119([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_579([a, f, c, e, g, h, i, j], is_dual)
    } else {
        select_522([a, b, d, c, h, f, g, j, k, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1122([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_775([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_72([a, b, i, g, e, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1123([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_739([b, e, c, d, f, h, g, i], is_dual)
    } else {
        select_31([a, g, c, d, e, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1121([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1122([a, g, b, d, f, h, e, j, i, k], is_dual)
    } else {
        select_1123([a, d, c, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1124([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_205([a, c, b, e, g, f, j, i, k], is_dual)
    } else {
        select_549([b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1120([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1121([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_1124([b, d, a, e, f, g, c, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1118([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1119([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1120([a, b, d, e, f, c, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1128([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_553([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_673([a, h, b, f, e, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1130([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_184([a, c, d, e, g, f, h], is_dual)
    } else {
        select_25([a, b], is_dual)
    }
}
/// n = 9, i = 3
fn select_1129([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_623([a, b, h, i], is_dual)
    } else {
        select_1130([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1127([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1128([a, e, c, d, g, f, h, i, j, k], is_dual)
    } else {
        select_1129([a, b, c, d, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1132([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_255([d, e, a, g, f, h, i], is_dual)
    } else {
        select_255([b, c, a, h, f, g, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1131([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_254([c, d, e, f, g, h, k, j], is_dual)
    } else {
        select_1132([e, a, b, c, d, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1126([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_1127([b, c, d, g, f, h, i, j, a, k, l], is_dual)
    } else {
        select_1131([b, c, a, d, f, e, h, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_1134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_652([i, b, c, a, f, g, h, j, k], is_dual)
    } else {
        select_170([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1133([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_579([a, i, b, e, g, h, k, j], is_dual)
    } else {
        select_1134([a, c, d, b, h, f, g, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1125([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1126([a, b, c, d, f, e, i, h, g, j, k, l], is_dual)
    } else {
        select_1133([a, d, c, e, f, g, h, i, b, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1117([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1118([a, b, c, e, h, f, j, i, g, k, m], is_dual)
    } else {
        select_1125([a, b, d, e, c, f, h, g, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1138([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_342([a, b, c, i, f, j], is_dual)
    } else {
        select_1034([a, b, f, d, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1139([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_351([a, b, c, d, i, g, k], is_dual)
    } else {
        select_1034([a, b, g, e, f, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1138([a, b, g, e, f, c, h, j, i, k], is_dual)
    } else {
        select_1139([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1140([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_934([a, f, d, e, h, g, i, k], is_dual)
    } else {
        select_829([a, b, c, i, j, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_1136([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1137([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1140([a, c, g, e, f, i, h, b, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1144([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_261([c, a, e, f, d, h, i, g], is_dual)
    } else {
        select_234([c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1143([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_546([d, b, c, a, e, f, h, i, g], is_dual)
    } else {
        select_1144([c, a, d, e, b, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1146([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_739([a, f, c, d, e, g, h, j], is_dual)
    } else {
        select_183([e, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_184([e, c, d, f, i, h, k], is_dual)
    } else {
        select_184([e, a, b, f, j, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1148([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_183([a, c, d, e, i, h, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1145([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1146([f, c, d, e, a, g, h, i, j, k], is_dual)
    } else {
        select_1147([b, c, a, d, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1142([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1143([a, b, h, c, j, g, f, i, k], is_dual)
    } else {
        select_1145([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1141([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1142([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1142([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1135([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1136([a, b, c, d, e, f, h, i, g, j, l, k], is_dual)
    } else {
        select_1141([a, b, d, c, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1116([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_1117([a, b, d, c, e, f, h, g, i, j, k, m, l], is_dual)
    } else {
        select_1135([a, b, d, c, e, i, h, g, k, l, m, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1154([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_503([a, c, e, f, h, d, g, i], is_dual)
    } else {
        select_173([d, b, c, g, f, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1153([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1154([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1154([c, b, d, e, a, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_121([j, i, d, e, h, a, f], !is_dual)
    } else {
        select_163([b, e, c, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1158([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_23([c, d, e, g], is_dual)
    } else {
        select_42([a, b, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1157([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_22([b, h, c, d, e, g, i], is_dual)
    } else {
        select_1158([a, g, c, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1155([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1156([b, i, c, a, f, g, h, j, k, l], is_dual)
    } else {
        select_1157([b, c, a, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1152([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1153([a, b, c, i, g, j, h, k, f], is_dual)
    } else {
        select_1155([a, c, b, d, e, g, f, h, i, j, l, k], is_dual)
    }
}
/// n = 6, i = 2
fn select_1160([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_122([a, b, c, d, e, f], is_dual)
    } else {
        select_122([a, b, c, d, f, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_1159([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_718([c, a, d, f, e, g], is_dual)
    } else {
        select_1160([f, h, a, b, c, g], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1151([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_1152([a, c, b, d, e, g, f, h, i, j, l, k], is_dual)
    } else {
        select_1159([a, j, b, c, g, l, k, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1164([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_593([b, a, e, f, g, d, h, i], is_dual)
    } else {
        select_234([b, c, d, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1163([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_120([g, h, d, e, i, a, f], !is_dual)
    } else {
        select_1164([b, c, a, e, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1166([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_72([b, c, d, f, g, e], is_dual)
    } else {
        select_390([a, b, e, f, d, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1167([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_405([a, b, f, e, d, h, i], is_dual)
    } else {
        select_390([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1165([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1166([h, i, d, e, g, a, b, f, c], !is_dual)
    } else {
        select_1167([b, a, c, e, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1162([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1163([b, c, a, f, e, d, h, i, g], is_dual)
    } else {
        select_1165([i, j, h, e, f, d, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1161([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1162([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1162([c, b, d, e, g, a, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1150([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1151([b, c, a, d, e, g, f, h, i, k, j, l], is_dual)
    } else {
        select_1161([a, b, c, i, g, j, k, h, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1149([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1150([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1150([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1115([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_1116([a, b, d, c, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_1149([a, b, c, d, e, i, h, j, k, l, m, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_1013([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1014([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_1115([a, b, d, c, f, g, h, e, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1175([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_340([a, b, f, d, g, h, e], is_dual)
    } else {
        select_584([a, d, g, i, e, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1174([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1175([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1175([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1178([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_62([a, d, b, c, e, f, g], is_dual)
    } else {
        select_39([a, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1177([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1178([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_1178([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1179([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1098([a, i, j, g, h, b, c, d, f], !is_dual)
    } else {
        select_1034([a, b, d, c, e, g, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1176([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1177([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_1179([a, b, c, g, e, h, f, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1173([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1174([a, f, k, b, i, j, c, g, h], !is_dual)
    } else {
        select_1176([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1183([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_997([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_112([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1184([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_98([f, a, h, i, d, g, b, e], !is_dual)
    } else {
        select_375([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1183([a, b, d, f, e, g, h, j], is_dual)
    } else {
        select_1184([a, i, j, e, h, b, f, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1181([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1095([a, e, j, b, h, i, f, g], !is_dual)
    } else {
        select_1182([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1185([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_537([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_583([a, j, k, f, h, b, i, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1180([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1181([a, b, g, e, f, c, h, i, j, k], is_dual)
    } else {
        select_1185([a, b, c, d, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1172([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_1173([a, b, d, c, f, g, e, h, i, j, k], is_dual)
    } else {
        select_1180([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1189([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1092([b, c, e, a, f, g, i, h], is_dual)
    } else {
        select_1092([a, c, d, b, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_1191([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_215([a, b, c, h, g, j], is_dual)
    } else {
        select_23([d, e, f, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_1190([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1191([b, a, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1191([a, b, c, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1188([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_1189([b, c, j, d, e, a, h, i, k], is_dual)
    } else {
        select_1190([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_1194([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_129([b, a, c, d, e, g], is_dual)
    } else {
        select_126([e, a, b, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1193([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([a, b, d, e, f, g], is_dual)
    } else {
        select_1194([h, f, i, a, b, c, g], !is_dual)
    }
}
/// n = 11, i = 3
fn select_1192([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_887([a, d, e, f, c, b, g, h, i, j], is_dual)
    } else {
        select_1193([a, b, c, d, i, g, j, h, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1187([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1188([c, a, b, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1192([b, c, h, d, f, g, a, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1198([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_106([a, b, c, d, e, g, f], is_dual)
    } else {
        select_246([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 8, i = 2
fn select_1199([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_27([b, d, e, a, c, f, g, h], is_dual)
    } else {
        select_361([b, a, c, g, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1197([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1198([b, f, d, e, a, h, g, i], is_dual)
    } else {
        select_1199([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1201([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_61([b, a, c, d, e, f], is_dual)
    } else {
        select_341([a, e, c, d, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1200([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1201([b, i, c, d, a, h, j, k], is_dual)
    } else {
        select_494([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1196([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1197([a, b, h, d, e, c, i, j, k], is_dual)
    } else {
        select_1200([a, b, d, e, c, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_1195([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_1196([h, g, f, a, i, d, e, j, k, l, m], is_dual)
    } else {
        select_48([f, h, d, e, b, c, k, j, i, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_1186([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1187([a, b, c, e, i, g, h, d, j, k, l, m], is_dual)
    } else {
        select_1195([e, d, f, g, h, c, b, a, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1171([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_1172([a, c, b, d, e, k, j, l, i, m, n], is_dual)
    } else {
        select_1186([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_1206([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_541([a, d, e, b, c, f, g], is_dual)
    } else {
        select_1033([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_341([a, b, d, e, h, j], is_dual)
    } else {
        select_98([c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1207([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1208([c, d, e, a, b, f, g, h, i, j], is_dual)
    } else {
        select_1208([c, d, f, a, b, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1205([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1206([c, d, e, g, i, j, h], is_dual)
    } else {
        select_1207([f, h, a, b, c, d, i, k, j, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_1210([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_662([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_662([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1209([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1210([a, b, g, c, d, f, i, j], is_dual)
    } else {
        select_835([c, d, e, a, b, f, g, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1204([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1205([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_1209([b, c, d, e, h, g, a, i, k, l, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1212([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_656([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_241([c, a, b, e, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1216([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([a, f, d, e, h, j], is_dual)
    } else {
        select_39([b, c, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1215([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1022([b, e, c, d, f, g, h, i], is_dual)
    } else {
        select_1216([a, c, d, b, f, g, e, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_622([a, d, e, f, i, h, k], is_dual)
    } else {
        select_1215([a, d, b, c, f, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1213([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1214([e, a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1214([f, c, d, a, b, e, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1211([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1212([a, b, c, d, h, i, k, g], is_dual)
    } else {
        select_1213([c, d, e, f, a, b, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1203([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1204([b, e, f, c, d, a, g, h, j, l, i, k], is_dual)
    } else {
        select_1211([b, a, e, f, c, d, j, i, k, l, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1220([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_351([a, b, d, e, g, h, k], is_dual)
    } else {
        select_725([i, j, k, a, b, g, f, h, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1219([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_447([b, g, c, d, a, i, h], is_dual)
    } else {
        select_1220([b, a, e, c, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1224([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([h, e, j, i, a, b], !is_dual)
    } else {
        select_29([g, c, d, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_1223([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1224([a, f, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_1130([b, e, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1222([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_622([a, b, h, e, j, f, k], is_dual)
    } else {
        select_1223([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1226([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_911([a, e, c, d, g, f, i], is_dual)
    } else {
        select_126([d, b, f, h, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_1228([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_184([a, b, c, d, e, f, g], is_dual)
    } else {
        select_247([a, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1227([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_211([f, b, c, d, g], is_dual)
    } else {
        select_1228([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1225([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1226([a, b, g, i, f, e, h, j, k], is_dual)
    } else {
        select_1227([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1221([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1222([b, c, d, e, a, f, g, i, h, j, k], is_dual)
    } else {
        select_1225([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1218([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1219([a, b, d, e, c, f, g, h, i, k, j], is_dual)
    } else {
        select_1221([a, b, c, d, e, f, h, i, j, k, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_1230([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_577([a, b, d, e, c, f, g], is_dual)
    } else {
        select_577([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1233([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_98([b, c, a, d, e, f, h, g], is_dual)
    } else {
        select_335([b, f, e, a, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_162([a, f, c, d, h, e, g, k], is_dual)
    } else {
        select_1233([e, b, a, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1235([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([b, c, d, g, f, h], is_dual)
    } else {
        select_233([a, h, b, e, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1234([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1235([b, c, a, d, e, f, h, g, j, i, k], is_dual)
    } else {
        select_988([b, c, g, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1231([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1232([b, d, c, e, a, f, g, h, i, k, j], is_dual)
    } else {
        select_1234([b, d, a, e, f, c, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1229([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1230([b, c, h, e, a, i, g], is_dual)
    } else {
        select_1231([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1218([b, a, e, c, d, g, h, i, j, k, f], is_dual)
    } else {
        select_1229([b, c, d, e, a, g, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1202([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1203([b, c, e, f, a, d, g, h, j, i, l, k], is_dual)
    } else {
        select_1217([b, c, e, f, d, h, i, a, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_1170([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_1171([a, b, c, e, f, j, g, h, i, l, k, m, n, o], is_dual)
    } else {
        select_1202([a, b, c, d, e, f, m, i, j, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_1169([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1170([h, e, f, g, c, d, a, b, i, k, l, j, m, n, o], is_dual)
    } else {
        select_1170([h, e, g, f, c, d, a, b, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_1168([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1169([h, i, f, g, a, d, e, b, c, j, k, l, m, n, o], is_dual)
    } else {
        select_1169([h, i, f, g, c, d, e, b, a, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_1012([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < n) || (is_dual && d > n) {
        select_1013([a, b, c, e, f, g, l, j, k, m, n, d, o], is_dual)
    } else {
        select_1168([a, b, c, e, f, d, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_972([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < n) || (is_dual && e > n) {
        select_973([a, b, c, d, f, g, l, j, k, m, n, e, o], is_dual)
    } else {
        select_1012([a, b, c, d, f, g, e, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_971([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_972([a, b, c, d, e, f, h, i, j, g, k, l, m, n, o], is_dual)
    } else {
        select_972([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_970([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_971([a, b, c, d, e, f, g, h, j, k, i, l, m, n, o], is_dual)
    } else {
        select_971([a, b, c, d, e, f, g, i, j, k, h, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_949([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < j) || (is_dual && p > j) {
        select_950([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_970([a, b, c, d, e, f, g, h, i, k, m, n, o, p, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_1250([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_361([a, b, f, d, g, e], is_dual)
    } else {
        select_731([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1249([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_718([a, b, f, e, g, h], is_dual)
    } else {
        select_1250([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1248([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1249([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1249([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1247([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1248([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_1248([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1252([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_447([a, b, d, e, c, f, g], is_dual)
    } else {
        select_807([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1251([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1252([a, b, c, e, f, d, g, h], is_dual)
    } else {
        select_1252([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1246([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1247([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_1251([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_1257([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_360([a, b, c, d, f, e, g], is_dual)
    } else {
        select_42([d, f, g, a, b, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1258([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_98([d, g, h, i, a, f, e, c], !is_dual)
    } else {
        select_173([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1256([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1257([a, b, f, d, g, h, e], is_dual)
    } else {
        select_1258([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1255([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1256([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1256([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1254([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_810([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_1255([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1253([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_693([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1254([a, b, c, g, k, i, j, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1245([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_1246([a, b, c, i, k, g, d, j], !is_dual)
    } else {
        select_1253([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1244([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1245([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_1245([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1264([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_641([a, b, h, c, e, g, f, i, j, k], is_dual)
    } else {
        select_587([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1263([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_640([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1264([a, c, d, i, f, g, h, b, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1262([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1263([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1263([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_1268([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_27([a, d, e, b, c, f, g, h], is_dual)
    } else {
        select_106([a, f, d, e, b, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1267([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1268([a, b, d, c, g, f, h, i], is_dual)
    } else {
        select_215([b, d, e, h, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_1266([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_306([d, a, b, c, i, f, g, h], is_dual)
    } else {
        select_1267([e, d, h, a, b, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1265([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1266([a, b, c, d, e, g, h, i, f, j], is_dual)
    } else {
        select_1266([a, b, c, d, f, g, h, i, e, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1261([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1262([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_1265([c, f, g, d, a, b, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1272([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_152([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_95([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1271([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1272([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_583([a, j, k, g, c, b, i, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1270([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1271([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1271([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1269([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1270([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1270([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1261([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_1269([a, b, c, d, e, f, i, j, k, l, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1260([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_1260([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1243([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1244([a, b, c, d, e, g, i, j, k, f, l], is_dual)
    } else {
        select_1259([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_1279([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_84([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_84([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1278([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1279([a, b, c, d, f, h, g, j, i], is_dual)
    } else {
        select_116([a, d, e, b, c, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1278([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_1278([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1282([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_305([c, a, b, d, e, f, g, h], is_dual)
    } else {
        select_65([a, b, c, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1284([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_129([d, f, h, a, g, b], !is_dual)
    } else {
        select_122([b, c, d, f, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1283([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1284([a, d, b, e, c, f, g, h], is_dual)
    } else {
        select_1284([a, d, c, e, b, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1281([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1282([c, d, b, a, e, f, g, h, i], is_dual)
    } else {
        select_1283([b, c, d, h, a, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1286([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_282([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_795([a, f, i, j, b, h, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1285([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_447([a, f, c, d, b, g, h], is_dual)
    } else {
        select_1286([a, b, e, c, d, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1280([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1281([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_1285([a, c, d, e, g, b, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1276([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1277([a, b, e, f, d, c, g, h, j, i], is_dual)
    } else {
        select_1280([a, b, c, e, f, d, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1276([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_1276([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1291([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_285([a, b, c, e, f, g], is_dual)
    } else {
        select_282([a, d, b, c, e, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1293([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_121([e, b, a, d, g, f, h], is_dual)
    } else {
        select_184([b, a, c, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1292([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1183([a, f, g, i, d, h, e, c], !is_dual)
    } else {
        select_1293([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1290([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1291([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1292([a, d, c, f, g, h, b, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1294([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_200([a, b, h, i, g, e, f, c], !is_dual)
    } else {
        select_200([a, b, h, i, g, f, e, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1289([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1290([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_1294([a, b, e, g, f, c, i, j, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1298([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_215([b, a, c, d, e, f], is_dual)
    } else {
        select_115([a, f, b, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1297([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1298([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_1298([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_200([a, b, j, h, i, f, c, g], !is_dual)
    } else {
        select_1297([a, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1299([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_200([a, b, i, j, h, f, c, g], !is_dual)
    } else {
        select_449([a, b, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1296([a, b, c, d, h, f, g, i, j, k], is_dual)
    } else {
        select_1299([a, b, c, e, g, f, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1288([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1289([a, b, c, d, h, i, g, f, j, k], is_dual)
    } else {
        select_1295([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1287([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1288([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_1288([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_1275([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    } else {
        select_1287([a, b, c, d, f, g, i, j, e, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_1306([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_121([b, c, a, d, e, f, g], is_dual)
    } else {
        select_123([a, c, b, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1305([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_662([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_1306([a, c, g, b, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_583([a, i, j, f, c, b, h, g], !is_dual)
    } else {
        select_1305([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1303([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1304([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1304([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1302([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_811([a, b, c, d, j, h, i, g], !is_dual)
    } else {
        select_1303([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_269([c, h, i, d, a, g], !is_dual)
    } else {
        select_141([c, d, b, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1310([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_301([a, c, d, e, h, g, i], is_dual)
    } else {
        select_1311([h, k, a, f, j, b, i, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1309([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1310([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1310([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1308([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1309([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1309([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1307([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1308([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1308([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1302([a, b, c, d, f, h, i, e, j, k], is_dual)
    } else {
        select_1307([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1301([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1301([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1273([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1274([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1300([a, b, c, d, e, g, i, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1242([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1243([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_1273([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1319([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_449([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_449([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1318([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_447([a, b, c, h, j, i, g], !is_dual)
    } else {
        select_1319([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1317([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_818([a, b, c, d, h, g, i, j, k], is_dual)
    } else {
        select_1318([a, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1316([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_684([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1317([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_1322([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_699([a, b, e, c, f, g, d, h], is_dual)
    } else {
        select_699([a, b, e, d, f, g, c, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1321([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_827([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_1322([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_715([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1321([a, b, d, e, f, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1315([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1316([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1320([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1326([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_83([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_241([a, c, d, h, g, b, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1325([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1326([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_1326([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1327([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_581([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_581([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1324([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1325([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_1327([a, b, h, d, e, c, g, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1331([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_285([a, b, c, d, f, h], is_dual)
    } else {
        select_350([a, d, e, b, c, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_1332([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_300([a, b, d, e, f, g], is_dual)
    } else {
        select_215([a, c, b, f, e, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1330([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1331([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_1332([a, d, c, e, f, g, b, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1329([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_581([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1330([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1328([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_811([a, b, c, d, e, g, i, j], is_dual)
    } else {
        select_1329([a, b, c, g, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1323([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1324([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_1328([a, b, c, e, f, d, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1314([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1315([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    } else {
        select_1323([a, b, c, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1337([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_655([b, c, f, e, a, g, h], is_dual)
    } else {
        select_362([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1336([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1337([c, b, a, d, e, f, g, h], is_dual)
    } else {
        select_1044([e, g, a, i, b, c, h, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1335([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1336([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1336([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1341([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1077([c, a, b, f, e, h, g, d], is_dual)
    } else {
        select_1077([c, b, a, f, d, h, g, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_1342([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_286([a, c, d, e, f, h], is_dual)
    } else {
        select_662([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1340([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1341([f, i, j, a, b, h, g, c], !is_dual)
    } else {
        select_1342([b, a, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1339([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1340([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1340([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_1346([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_229([a, b, c, d, f, e, g], is_dual)
    } else {
        select_229([a, b, c, e, f, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1345([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_997([b, a, c, d, f, e, g, h], is_dual)
    } else {
        select_1346([b, e, d, a, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1344([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_227([b, a, c, e, d, f, g, h], is_dual)
    } else {
        select_1345([a, b, c, e, f, g, h, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_1343([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1344([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1344([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1338([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1339([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1343([a, b, c, j, h, i, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1334([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1335([a, b, c, h, j, i, d, e, g], !is_dual)
    } else {
        select_1338([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1347([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1172([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1172([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1333([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1334([a, b, c, e, f, h, i, d, j, k], is_dual)
    } else {
        select_1347([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1313([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1314([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_1333([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1354([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_934([e, i, g, h, a, f, c, d], !is_dual)
    } else {
        select_677([a, g, h, e, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1282([c, d, b, a, e, f, g, h, i], is_dual)
    } else {
        select_1354([a, i, j, k, b, g, c, d, h], !is_dual)
    }
}
/// n = 7, i = 2
fn select_1357([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_255([b, c, d, a, e, f, g], is_dual)
    } else {
        select_255([b, c, e, a, d, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1356([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_286([c, d, e, f, g, h], is_dual)
    } else {
        select_1357([h, a, b, c, d, g, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1358([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_285([a, b, f, c, d, h], is_dual)
    } else {
        select_350([c, d, e, a, b, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1355([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1356([b, c, d, e, a, f, h, g, i], is_dual)
    } else {
        select_1358([b, c, d, e, g, a, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1352([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1353([f, a, b, c, d, e, h, i, g, j, k], is_dual)
    } else {
        select_1355([f, b, c, d, e, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1351([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1352([e, a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1352([g, a, b, c, d, f, e, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 1
fn select_1362([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_300([a, b, d, g, f, c], is_dual)
    } else {
        select_350([a, b, d, c, e, f, g], is_dual)
    }
}
/// n = 7, i = 1
fn select_1363([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_211([a, c, d, e, g], is_dual)
    } else {
        select_215([a, b, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1361([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1362([a, b, c, e, f, g, h], is_dual)
    } else {
        select_1363([a, d, b, c, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_215([e, b, c, d, f, g], is_dual)
    } else {
        select_143([e, h, i, j, a, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1365([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1366([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1366([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1364([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1365([a, f, d, b, c, g, i, h, j, k], is_dual)
    } else {
        select_520([a, b, c, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1360([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1361([a, c, d, f, b, g, e, h, i], is_dual)
    } else {
        select_1364([a, c, d, f, e, b, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1369([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_285([a, g, h, e, i, b], !is_dual)
    } else {
        select_449([a, e, g, h, i, f, c, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1371([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_691([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1370([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_671([b, g, c, a, f, h, i], is_dual)
    } else {
        select_1371([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1368([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1369([a, f, d, e, b, g, h, i, j], is_dual)
    } else {
        select_1370([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1373([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_285([a, c, d, b, e, f], is_dual)
    } else {
        select_351([a, b, c, d, e, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1374([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_671([b, e, c, a, f, g, h], is_dual)
    } else {
        select_691([b, c, a, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1372([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1373([a, b, g, h, i, e, f, d], !is_dual)
    } else {
        select_1374([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1367([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1368([a, b, f, d, e, g, h, j, k, i], is_dual)
    } else {
        select_1372([a, b, h, c, i, f, j, k, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1359([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1360([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1367([a, b, f, d, e, g, h, i, c, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1350([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1351([a, e, f, g, b, c, d, h, i, j, k], is_dual)
    } else {
        select_1359([b, c, d, f, g, e, h, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1349([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1350([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_802([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1381([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_593([c, a, b, e, g, d, f, h], is_dual)
    } else {
        select_122([d, c, a, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1380([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1381([a, b, c, d, e, f, h, i], is_dual)
    } else {
        select_345([a, b, e, g, d, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1383([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_361([a, c, d, e, f, g], is_dual)
    } else {
        select_41([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1382([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_120([h, f, g, a, b, c, e], !is_dual)
    } else {
        select_1383([a, c, d, b, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1379([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1380([g, h, i, e, f, b, c, a, d], !is_dual)
    } else {
        select_1382([a, g, i, h, e, f, c, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1386([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_122([d, c, a, f, e, g], is_dual)
    } else {
        select_503([b, c, a, e, g, d, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1387([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_450([a, c, d, f, e, g, h, j], is_dual)
    } else {
        select_209([h, i, j, e, f, a, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1385([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1386([i, j, k, f, g, a, b, c], !is_dual)
    } else {
        select_1387([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1390([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_184([a, c, d, e, g, f, i], is_dual)
    } else {
        select_131([a, b, f, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1389([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1390([b, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_1027([a, f, c, d, e, g, h, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1391([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1228([e, c, d, a, g, f, h, i], is_dual)
    } else {
        select_1027([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1389([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_1391([a, f, c, d, g, h, e, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1384([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1385([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1388([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1378([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1379([a, c, b, h, g, i, j, k, f], is_dual)
    } else {
        select_1384([a, c, b, d, e, g, f, h, j, k, i], is_dual)
    }
}
/// n = 7, i = 1
fn select_1394([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_350([a, b, c, e, f, d, g], is_dual)
    } else {
        select_350([a, b, d, e, f, c, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1393([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_51([a, b, f, c, d, e, g, i, j], is_dual)
    } else {
        select_1394([a, c, d, e, b, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1395([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1272([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_1394([a, d, e, f, b, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1392([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1393([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1395([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1377([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1378([a, c, d, e, f, g, h, i, b, j, k], is_dual)
    } else {
        select_1392([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1399([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_340([a, j, k, b, f, c, i], !is_dual)
    } else {
        select_1034([a, b, f, d, e, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1398([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1138([a, c, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1399([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_1402([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_183([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_183([b, a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1401([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_718([a, b, g, f, h, i], is_dual)
    } else {
        select_1402([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1400([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1103([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1401([b, g, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1398([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1400([a, c, b, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1407([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([a, f, b, e, h, i], is_dual)
    } else {
        select_24([c, d, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_405([k, j, f, e, a, h, b], !is_dual)
    } else {
        select_1407([e, a, c, d, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_72([a, b, h, j, k, e], is_dual)
    } else {
        select_1027([a, e, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1406([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1408([c, b, d, e, a, g, f, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1411([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_42([a, c, d, e, f, h], is_dual)
    } else {
        select_42([b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1410([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_360([a, c, e, f, h, d, i], is_dual)
    } else {
        select_1411([f, g, h, i, a, e, b, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1412([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([e, c, d, f, g], is_dual)
    } else {
        select_911([a, g, b, e, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1409([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1410([a, g, b, e, i, j, h, k, f], is_dual)
    } else {
        select_1412([a, e, c, d, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1405([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1409([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1224([a, e, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_246([a, b, h, j, e, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1416([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_346([a, h, b, j, e, f, k], is_dual)
    } else {
        select_41([e, f, c, d, i, g, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1414([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1415([c, b, d, e, a, g, f, h, i, j, k], is_dual)
    } else {
        select_1416([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1418([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_393([a, b, e, f, h, d, i], is_dual)
    } else {
        select_393([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1417([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1418([a, b, g, e, i, j, h, k, f], is_dual)
    } else {
        select_1037([a, e, c, d, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1413([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1414([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1417([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1404([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1413([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1396([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1397([a, d, b, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1403([a, d, c, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1376([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1377([a, b, d, c, e, f, h, g, i, k, j], is_dual)
    } else {
        select_1396([a, b, c, d, e, f, h, i, j, k, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1375([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1376([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1376([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1348([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1349([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1375([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1312([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1313([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1348([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1241([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1242([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1312([a, b, c, d, e, i, g, j, f, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1427([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_350([b, c, d, a, e, f, g], is_dual)
    } else {
        select_795([b, c, g, d, a, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_676([b, c, g, f, a, h, i], is_dual)
    } else {
        select_282([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1426([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1427([f, a, c, b, e, h, g, k, i], is_dual)
    } else {
        select_1428([a, b, d, c, g, f, i, j, h], is_dual)
    }
}
/// n = 13, i = 3
fn select_1430([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_243([a, b, k, c, m, g, j], is_dual)
    } else {
        select_780([a, f, j, d, e, h, i, l, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_1429([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1430([b, a, c, f, g, e, h, i, j, k, m, l, n], is_dual)
    } else {
        select_1430([a, b, c, f, g, d, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_1425([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < n) || (is_dual && h > n) {
        select_1426([a, b, c, n, d, o, i, h, l, p, m], is_dual)
    } else {
        select_1429([a, c, d, h, g, e, f, i, j, k, m, l, n, o], is_dual)
    }
}
/// n = 11, i = 3
fn select_1433([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_21([d, a, c, e, f, b, g, i, h, j], is_dual)
    } else {
        select_362([b, a, c, i, h, j, k, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_1432([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1433([a, b, c, d, e, h, i, j, g, k, l], is_dual)
    } else {
        select_1433([a, b, c, d, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1436([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_969([b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_393([a, d, c, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1436([a, b, d, c, f, g, e, h, i, j], is_dual)
    } else {
        select_1383([e, b, a, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1437([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_71([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_341([a, e, d, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1435([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_1437([b, a, d, e, f, c, g, i, h, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_1431([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_1432([a, c, j, e, f, g, h, i, l, k, m, n], is_dual)
    } else {
        select_1434([a, c, b, m, d, n, k, j, o, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_1424([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_1425([b, a, c, d, e, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    } else {
        select_1431([a, b, c, i, g, e, f, j, k, l, m, h, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1423([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1424([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1424([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_1441([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_729([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_545([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1444([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_121([i, g, a, e, h, b, c], !is_dual)
    } else {
        select_141([a, c, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1444([a, b, c, d, f, g, i, j, k], is_dual)
    } else {
        select_162([a, c, d, e, i, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1446([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_775([e, b, c, d, g, f, h, i], is_dual)
    } else {
        select_535([a, d, f, c, g, e, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1445([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1446([c, a, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1446([c, b, d, e, f, a, g, h, j, i], is_dual)
    }
}
/// n = 15, i = 4
fn select_1442([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1443([a, c, k, e, f, g, i, j, m, l, o], is_dual)
    } else {
        select_1445([a, b, c, l, d, g, h, n, o, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_1440([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_1441([b, c, a, l, d, m, h, g, k, o], is_dual)
    } else {
        select_1442([a, c, b, d, e, f, g, h, i, j, k, l, n, m, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_1450([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_184([b, c, d, f, h, g, i], is_dual)
    } else {
        select_229([a, b, e, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1449([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1450([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_595([e, k, a, h, j, f, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1448([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1183([i, a, d, e, f, h, k, l], is_dual)
    } else {
        select_1449([a, d, b, c, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1447([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1337([i, a, b, c, f, j, l, g], is_dual)
    } else {
        select_1448([a, d, e, b, c, f, h, g, i, k, j, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_1439([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && o < a) || (is_dual && o > a) {
        select_1440([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_1447([b, c, h, i, j, g, k, l, m, o, n, a], is_dual)
    }
}
/// n = 9, i = 3
fn select_1455([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, c, d, e, f, g, h], is_dual)
    } else {
        select_32([a, g, d, f, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1456([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_332([a, f, b, d, e, h, g, i], is_dual)
    } else {
        select_42([a, c, g, d, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1454([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1455([b, a, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1456([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1453([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1454([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_339([a, b, c, g, f, h, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1452([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_531([a, b, c, e, d, f, h, g, i, j], is_dual)
    } else {
        select_1453([a, b, g, e, f, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1459([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_671([a, c, g, f, i, e, j], is_dual)
    } else {
        select_770([a, b, d, e, f, h, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1462([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([a, b, f, h, e, i], is_dual)
    } else {
        select_44([e, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_1461([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1462([a, b, d, e, g, f, h, j, i], is_dual)
    } else {
        select_1462([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1463([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_72([a, g, b, h, e, i], is_dual)
    } else {
        select_998([a, c, d, e, f, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1460([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1461([b, c, f, d, e, h, g, i, j, k], is_dual)
    } else {
        select_1463([a, g, d, e, f, i, h, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1458([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1459([a, b, h, c, i, k, g, f, j, l], is_dual)
    } else {
        select_1460([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1466([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_450([a, c, d, e, g, h, i, j], is_dual)
    } else {
        select_115([a, i, b, f, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1465([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1191([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1466([a, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1464([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1465([a, b, d, c, h, i, g, j, l, m, n], is_dual)
    } else {
        select_1049([e, f, j, c, g, h, i, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1457([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_1458([b, c, d, h, i, g, j, l, a, k, m, n], is_dual)
    } else {
        select_1464([b, c, a, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_1451([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < n) || (is_dual && k > n) {
        select_1452([a, b, c, l, d, g, n, h, o, k], is_dual)
    } else {
        select_1457([a, b, c, h, e, f, g, i, j, k, m, l, o, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_1438([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1439([a, b, d, e, f, g, c, h, i, j, k, l, n, m, o], is_dual)
    } else {
        select_1451([a, c, d, e, f, g, b, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_1422([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_1423([a, b, c, e, d, g, h, f, i, j, k, m, l, n, o, p], is_dual)
    } else {
        select_1438([a, b, c, d, e, g, h, l, j, k, i, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1421([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1422([a, b, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    } else {
        select_1422([a, b, d, c, e, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1420([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1421([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1421([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1419([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1420([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o, p], is_dual)
    } else {
        select_1420([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1240([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < n) || (is_dual && h > n) {
        select_1241([a, b, c, d, e, f, g, n, o, h, m, p], is_dual)
    } else {
        select_1419([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 8, i = 3
fn select_1477([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_503([c, b, d, e, a, f, h, g], is_dual)
    } else {
        select_534([c, a, b, d, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1476([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_662([a, b, d, e, g, f, h, j], is_dual)
    } else {
        select_1477([a, b, c, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1475([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1272([a, h, b, d, e, f, g, i, k, j], is_dual)
    } else {
        select_1476([a, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1480([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_54([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_535([a, b, h, c, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1479([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_254([b, c, e, f, g, i, j, h], is_dual)
    } else {
        select_1480([a, e, d, b, c, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1481([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1446([a, f, c, d, e, h, g, i, k, j], is_dual)
    } else {
        select_1154([a, g, b, e, j, f, i, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1478([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1479([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_1481([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_1474([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1475([a, b, c, e, f, j, g, h, k, l, m], is_dual)
    } else {
        select_1478([a, b, c, k, d, g, h, i, l, j, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1485([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_89([f, h, i, d, a, g, b, e], !is_dual)
    } else {
        select_393([f, g, i, d, a, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1484([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1485([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1485([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_1487([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_335([f, e, a, c, d], !is_dual)
    } else {
        select_390([f, g, d, a, b, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1486([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_622([b, c, d, e, f, g, h], is_dual)
    } else {
        select_1487([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1483([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1484([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_1486([b, c, a, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_855([a, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1305([f, a, b, c, e, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1482([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1483([f, b, h, c, a, g, j, i, k], is_dual)
    } else {
        select_1488([b, c, a, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_1473([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_1474([a, c, b, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_1482([a, b, c, i, k, j, h, m, l, g, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_1492([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_340([e, h, i, a, f, g, c], !is_dual)
    } else {
        select_770([a, f, b, d, e, h, g, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_1493([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_718([b, a, c, d, e, f], is_dual)
    } else {
        select_779([d, e, g, a, b, f, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1491([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1492([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1493([g, f, b, a, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1495([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_271([f, a, d, b, e, g, h, j], is_dual)
    } else {
        select_215([b, c, e, g, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1496([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_340([a, b, c, f, g, h, e], is_dual)
    } else {
        select_679([a, c, e, d, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1495([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1496([f, h, b, d, a, j, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1490([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1491([a, d, g, e, f, b, i, h, j], is_dual)
    } else {
        select_1494([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_1489([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_1474([a, c, b, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_1490([a, b, c, i, k, j, h, m, l, g], is_dual)
    }
}
/// n = 14, i = 4
fn select_1472([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1473([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1489([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_1502([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_553([a, c, b, g, e, f, i, j, h, k], is_dual)
    } else {
        select_549([c, b, d, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1501([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_652([c, b, d, h, i, g, e, j, l], is_dual)
    } else {
        select_1502([a, c, b, d, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_738([c, f, d, b, g, e, h, i, j], is_dual)
    } else {
        select_183([e, a, c, g, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1500([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1501([c, b, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1503([c, a, d, e, b, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1505([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_690([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1072([a, g, d, e, f, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1506([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_21([b, c, h, e, f, a, g, j, i, k], is_dual)
    } else {
        select_21([b, d, g, e, f, a, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_1504([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1505([a, b, c, h, i, j, g, l, m, k], is_dual)
    } else {
        select_1506([a, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_1499([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < n) || (is_dual && k > n) {
        select_1500([a, b, d, n, c, h, g, o, l, k, m, p], is_dual)
    } else {
        select_1504([a, b, d, k, e, f, h, i, j, m, l, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_1510([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_22([b, c, d, e, j, h, i], is_dual)
    } else {
        select_113([f, a, i, b, c, g, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_1509([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1510([b, c, i, e, f, a, g, h, j, k, l, m], is_dual)
    } else {
        select_1510([b, d, h, e, f, a, g, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_1512([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_173([e, c, d, a, f, g, h], is_dual)
    } else {
        select_535([b, d, a, c, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1511([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1363([a, c, d, e, h, g, i], is_dual)
    } else {
        select_1512([a, b, i, c, f, g, h, j, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_1508([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_1509([b, d, e, f, a, h, g, i, j, l, k, m, n], is_dual)
    } else {
        select_1511([a, b, c, i, j, g, h, k, m, n, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1516([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_131([c, d, e, f, h, i], is_dual)
    } else {
        select_29([a, b, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1515([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1462([a, b, d, e, g, f, h, i, k], is_dual)
    } else {
        select_1516([a, b, c, f, g, e, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1517([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_98([b, a, e, i, h, g, l, j], is_dual)
    } else {
        select_535([b, c, d, g, f, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1514([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1515([b, e, f, d, a, g, h, j, i, k, l], is_dual)
    } else {
        select_1517([b, c, d, a, e, g, h, f, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1519([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_121([g, i, a, h, e, b, c], !is_dual)
    } else {
        select_361([a, b, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1518([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1519([a, b, d, c, e, g, h, f, i], is_dual)
    } else {
        select_1519([a, c, d, b, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1513([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1514([b, a, c, e, d, f, g, h, j, k, i, l], is_dual)
    } else {
        select_1518([a, b, c, d, i, j, f, h, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_1507([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < g) || (is_dual && n > g) {
        select_1508([b, c, d, g, e, f, h, i, j, k, m, l, n, o], is_dual)
    } else {
        select_1513([a, b, c, n, d, h, i, g, o, l, m, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1498([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_1499([a, b, c, d, e, f, h, i, j, k, l, m, g, n, o, p], is_dual)
    } else {
        select_1507([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1497([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1498([a, c, d, e, f, g, b, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1498([b, c, d, e, f, g, a, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1471([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < o) || (is_dual && m > o) {
        select_1472([a, b, c, e, d, j, k, i, h, l, n, p, o, m], is_dual)
    } else {
        select_1497([a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_1527([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_23([d, e, f, i], is_dual)
    } else {
        select_28([a, b, c, h, g, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_1526([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_1527([c, d, h, e, f, g, i, j, k, l], is_dual)
    } else {
        select_24([a, b, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_1528([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_623([a, b, c, i], is_dual)
    } else {
        select_53([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_1525([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1526([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_1528([a, b, j, e, f, g, h, k, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_1524([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_1525([a, b, d, e, c, h, i, j, k, l, m, o, p], is_dual)
    } else {
        select_1049([f, g, j, c, l, h, i, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_173([f, b, a, i, e, j, g], is_dual)
    } else {
        select_998([e, c, d, g, h, f, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_44([i, a, b, j, g], is_dual)
    }
}
/// n = 13, i = 3
fn select_1530([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1531([a, k, b, c, g, i, h, l, j, m], is_dual)
    } else {
        select_1532([b, c, d, e, f, h, i, j, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_1529([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_1049([e, f, j, a, l, h, i, n], is_dual)
    } else {
        select_1530([b, c, d, a, h, i, g, j, k, l, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1523([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1524([a, b, c, d, e, f, g, i, j, h, k, l, m, n, o, p], is_dual)
    } else {
        select_1529([c, b, d, e, f, g, h, i, j, a, k, l, m, n, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_1536([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_215([b, d, c, e, f, g], is_dual)
    } else {
        select_143([a, b, c, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_300([b, c, d, e, h, g], is_dual)
    } else {
        select_1536([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([b, c, d, e, g, f, h], is_dual)
    } else {
        select_662([f, a, b, c, e, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1535([b, c, d, f, a, g, e, h, i, j], is_dual)
    } else {
        select_1537([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1539([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_662([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_662([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_1538([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_58([c, e, f, a, d, g, h, i, j], is_dual)
    } else {
        select_1539([a, b, c, d, h, i, g, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_1533([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_1534([a, b, c, d, e, m, i, o, l, p], is_dual)
    } else {
        select_1538([a, b, f, l, g, h, i, j, k, n, m, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1522([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_1523([b, c, f, d, e, g, h, i, j, k, l, a, m, n, o, p], is_dual)
    } else {
        select_1533([b, c, a, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_1542([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_58([c, d, f, a, b, e, g, h, i], is_dual)
    } else {
        select_1210([a, b, g, c, e, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1544([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_305([c, e, f, a, b, d, g, h], is_dual)
    } else {
        select_351([a, b, c, d, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1543([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_104([a, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1544([a, b, c, d, f, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1541([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1542([b, c, d, i, e, f, a, h, j, k, l], is_dual)
    } else {
        select_1543([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_1548([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_211([e, a, c, d, g], is_dual)
    } else {
        select_215([a, b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1547([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_304([a, e, c, d, b, f, g], is_dual)
    } else {
        select_1548([b, f, c, d, a, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1546([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1547([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_242([a, g, b, c, h, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1545([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1546([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_1546([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 14, i = 3
fn select_1540([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_1541([a, b, c, e, k, g, h, i, j, l, m, n], is_dual)
    } else {
        select_1545([a, b, c, d, f, m, n, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_1521([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_1522([a, b, e, c, d, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_1540([a, c, d, b, f, i, g, h, j, k, m, l, n, o], is_dual)
    }
}
/// n = 9, i = 3
fn select_1552([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_656([g, a, b, c, e, h, f, i], is_dual)
    } else {
        select_656([f, a, b, d, e, h, g, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_1555([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_65([a, d, c, e, f], is_dual)
    } else {
        select_72([a, b, f, d, g, e], is_dual)
    }
}
/// n = 8, i = 2
fn select_1554([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1555([a, c, b, f, h, g, e], is_dual)
    } else {
        select_1092([b, c, d, a, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1556([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1092([b, e, d, a, h, f, i, g], is_dual)
    } else {
        select_1092([a, e, c, b, i, g, h, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_1553([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1554([f, b, e, d, a, h, g, i], is_dual)
    } else {
        select_1556([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1551([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1552([b, g, c, e, a, f, h, i, j], is_dual)
    } else {
        select_1553([b, a, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1561([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_42([a, c, d, e, g, h], is_dual)
    } else {
        select_44([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_1560([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_27([f, b, c, d, e, h, g, j], is_dual)
    } else {
        select_1561([g, a, d, e, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1559([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1560([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_33([b, i, f, a], is_dual)
    }
}
/// n = 9, i = 4
fn select_1563([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_360([d, b, c, e, f, h, i], is_dual)
    } else {
        select_73([f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1564([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_923([a, c, e, d, f, h, i], is_dual)
    } else {
        select_41([d, g, h, i, a, e, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1562([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1563([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_1564([e, g, i, a, f, h, b, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1558([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1559([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1562([f, h, c, d, a, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1491([a, d, g, e, f, b, i, h, j], is_dual)
    } else {
        select_1558([a, d, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1550([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_1551([a, c, e, b, f, g, d, h, i, j], is_dual)
    } else {
        select_1557([a, c, d, e, f, g, b, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1570([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_131([b, c, d, f, g, h], is_dual)
    } else {
        select_33([a, d, e, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_61([c, d, e, i, g, h], is_dual)
    } else {
        select_1570([a, b, c, h, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1569([a, b, c, d, e, f, g, h, i, k, l], is_dual)
    } else {
        select_1054([a, b, h, j, f, g, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1571([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1389([b, a, c, d, f, e, g, i, j, k, h], is_dual)
    } else {
        select_1487([h, a, b, j, f, e, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1568([b, a, c, d, e, g, f, h, i, j, l, k], is_dual)
    } else {
        select_1571([f, b, d, e, a, g, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_1566([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1567([f, a, h, d, e, k, g, i, j, m, l, n], is_dual)
    } else {
        select_1567([f, a, i, b, c, l, g, h, j, m, k, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_1576([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_28([c, d, e, f, g, h], is_dual)
    } else {
        select_24([a, b, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1575([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1576([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_623([a, b, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1577([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_43([e, b, c, d, f, g, h, i, k], is_dual)
    } else {
        select_115([i, j, a, e, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1574([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1575([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1577([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1573([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1574([a, b, k, c, d, h, i, l, j, m, n], is_dual)
    } else {
        select_1539([a, b, e, f, g, j, h, k, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_1580([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([a, d, e, h, g], is_dual)
    } else {
        select_31([a, g, b, c, i, f, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_1579([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_285([a, b, i, e, f, h], is_dual)
    } else {
        select_1580([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1578([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1579([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1394([a, b, c, j, f, g, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_1572([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_1573([a, b, f, g, c, d, e, h, i, k, l, j, m, n], is_dual)
    } else {
        select_1578([c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_1565([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1566([c, d, e, f, g, b, h, i, j, k, a, l, m, n], is_dual)
    } else {
        select_1572([b, c, a, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1549([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_1550([a, b, c, d, j, h, l, k, m, i, n], is_dual)
    } else {
        select_1565([a, b, e, c, d, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_1520([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < b) || (is_dual && n > b) {
        select_1521([a, c, d, e, f, b, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1549([a, c, d, e, f, j, k, i, l, n, m, b, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1470([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1471([a, b, d, e, f, g, h, i, j, k, l, c, m, n, o, p], is_dual)
    } else {
        select_1520([a, b, d, c, e, f, g, h, j, k, l, i, m, n, p, o], is_dual)
    }
}
/// n = 8, i = 3
fn select_1588([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([a, d, b, c, e, f], is_dual)
    } else {
        select_341([a, b, c, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1587([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1098([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_1588([a, f, i, g, h, d, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1586([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1291([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1587([a, d, c, f, g, h, b, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1589([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_340([a, e, d, b, f, g, h], is_dual)
    } else {
        select_326([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1585([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1586([a, b, c, f, d, g, h, j, k, i], is_dual)
    } else {
        select_1589([a, b, h, e, i, f, k, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1592([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_243([e, h, i, d, f, a, g], !is_dual)
    } else {
        select_472([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1591([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1592([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1592([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1593([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_447([a, b, h, i, f, c, g], !is_dual)
    } else {
        select_1046([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1591([a, b, f, d, h, e, g, j, i], is_dual)
    } else {
        select_1593([a, b, e, c, g, i, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1584([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1585([a, b, c, e, d, f, g, i, j, h, k], is_dual)
    } else {
        select_1590([a, b, c, d, h, i, f, j, g, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1598([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_72([h, i, d, a, g, b], !is_dual)
    } else {
        select_393([f, i, g, a, d, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1597([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1598([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1598([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1599([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_95([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_95([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1596([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1597([a, i, k, g, j, b, c, d, h], !is_dual)
    } else {
        select_1599([c, d, b, a, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1602([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_405([e, h, i, f, a, g, b], !is_dual)
    } else {
        select_189([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1601([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1178([a, d, e, c, b, f, g, h], is_dual)
    } else {
        select_1602([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1604([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_341([a, g, f, h, d, b], !is_dual)
    } else {
        select_341([a, f, g, h, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1603([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1604([a, b, c, e, f, d, g, i], is_dual)
    } else {
        select_1604([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1600([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1601([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1603([a, h, j, b, f, i, c, g, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1595([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1596([a, b, c, g, e, f, h, i, j, k, l], is_dual)
    } else {
        select_1600([a, b, c, i, d, j, g, h, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1607([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_271([a, c, f, d, e, g, h, i], is_dual)
    } else {
        select_1034([a, b, g, d, e, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1606([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1175([a, f, k, b, i, j, g, c, h], !is_dual)
    } else {
        select_1607([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1605([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1606([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_1606([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1594([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1595([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_1605([a, g, c, h, e, f, b, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1583([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_1584([a, b, c, d, j, g, h, k, l, m, i], is_dual)
    } else {
        select_1594([a, b, c, g, e, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_1613([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_360([a, b, f, d, h, e, g], is_dual)
    } else {
        select_360([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1612([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1072([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1613([a, c, g, e, f, b, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1611([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1612([a, b, g, c, e, i, f, j, h], is_dual)
    } else {
        select_1612([a, b, f, d, e, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1610([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1611([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1611([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1615([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_340([a, e, h, f, g, b, c], !is_dual)
    } else {
        select_340([a, f, h, e, g, b, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1614([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_855([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1615([a, c, d, g, f, b, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1609([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1610([a, b, c, d, e, h, g, j, k, i], is_dual)
    } else {
        select_1614([a, b, d, f, c, k, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1619([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_449([g, j, d, e, f, i, k, l], is_dual)
    } else {
        select_449([g, k, a, b, c, h, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1618([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_447([a, k, b, c, d, l, h], is_dual)
    } else {
        select_1619([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1621([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_449([a, e, c, d, f, g, h, i], is_dual)
    } else {
        select_164([a, b, g, e, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1620([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1621([a, d, b, c, h, f, i, j, g], is_dual)
    } else {
        select_520([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_1617([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1618([a, c, d, e, b, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1620([a, c, d, h, e, b, k, l, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1624([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_359([g, e, h, a, d, f, c], !is_dual)
    } else {
        select_345([d, g, h, e, a, f, b], !is_dual)
    }
}
/// n = 9, i = 2
fn select_1626([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_61([g, c, d, e, a, h], is_dual)
    } else {
        select_54([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1627([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_143([g, c, d, e, a, h, j], is_dual)
    } else {
        select_153([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1625([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1626([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1627([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1623([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1624([b, h, c, a, f, g, i, j], is_dual)
    } else {
        select_1625([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_1629([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_359([a, c, d, b, e, f, g], is_dual)
    } else {
        select_359([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1628([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1095([a, c, d, g, e, f, h, i], is_dual)
    } else {
        select_1629([a, h, g, i, b, e, c], !is_dual)
    }
}
/// n = 11, i = 3
fn select_1622([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1623([a, b, f, d, e, g, h, i, k, j], is_dual)
    } else {
        select_1628([a, b, i, c, j, f, k, g, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_1616([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1617([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1622([a, c, d, f, g, h, b, j, i, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1608([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < n) || (is_dual && k > n) {
        select_1609([a, b, c, d, e, i, h, l, j, n, m], is_dual)
    } else {
        select_1616([a, b, d, c, h, f, g, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1582([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1583([a, b, d, h, f, g, i, c, k, j, m, l, n], is_dual)
    } else {
        select_1608([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_1635([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_162([a, c, b, d, f, e, g, h], is_dual)
    } else {
        select_164([a, e, i, b, f, h, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1634([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1635([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1635([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1633([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_819([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1634([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1632([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_684([a, b, c, g, e, f, h, i, k, j, l], is_dual)
    } else {
        select_1633([a, b, c, i, d, j, g, k, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1639([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_449([a, f, e, i, j, h, b, g], !is_dual)
    } else {
        select_162([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1638([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_475([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1639([a, c, h, d, f, b, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1637([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_474([d, e, a, b, c, f, g, h, i, j], is_dual)
    } else {
        select_1638([d, e, i, a, b, f, g, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_684([a, b, c, d, h, i, g, k, l, j, m], is_dual)
    } else {
        select_1637([e, f, g, a, b, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1631([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_1632([a, b, c, d, h, i, g, j, l, m, n, k], is_dual)
    } else {
        select_1636([a, b, c, g, e, f, j, h, i, k, l, n, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_1643([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_855([a, b, c, d, i, g, h, j], is_dual)
    } else {
        select_720([a, b, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1642([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_314([d, a, e, f, g, b, c, h, i, j], is_dual)
    } else {
        select_1643([b, c, i, d, f, g, a, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1641([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1262([e, f, d, j, a, b, g, h, i, k, l, m], is_dual)
    } else {
        select_1642([e, f, d, a, b, c, g, h, i, j, k], is_dual)
    }
}
/// n = 5, i = 2
fn select_1647([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_623([a, b, d, e], !is_dual)
    } else {
        select_29([a, d, e, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1646([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_662([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1647([a, b, g, h, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_1648([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_679([a, c, d, e, b, f], is_dual)
    } else {
        select_677([a, c, d, b, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1645([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1646([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1648([a, b, h, i, j, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1644([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1645([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1645([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_1640([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_1641([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1644([e, f, g, h, i, j, k, d, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_1630([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1631([e, f, g, a, b, c, h, i, j, l, m, n, o, p], is_dual)
    } else {
        select_1640([b, c, d, e, f, g, m, i, j, k, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1581([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < n) || (is_dual && h > n) {
        select_1582([a, b, c, d, e, j, k, i, l, n, m, h, p, o], is_dual)
    } else {
        select_1630([e, d, f, g, a, b, c, i, h, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1469([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < d) || (is_dual && m > d) {
        select_1470([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1581([a, b, c, e, f, g, h, i, j, k, l, m, d, n, o, p], is_dual)
    }
}
/// n = 9, i = 4
fn select_1655([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_447([a, f, h, i, e, b, g], !is_dual)
    } else {
        select_578([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_997([a, c, e, d, g, f, i, j], is_dual)
    } else {
        select_989([a, b, f, d, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1657([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_984([a, b, c, d, f, g, e, i, h, j], is_dual)
    } else {
        select_1658([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1656([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1175([a, e, j, b, h, i, f, c, g], !is_dual)
    } else {
        select_1657([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1654([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1655([a, b, c, g, e, h, i, f, j], is_dual)
    } else {
        select_1656([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1653([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1654([a, b, i, c, e, k, f, l, h, j], is_dual)
    } else {
        select_1654([a, b, h, d, e, j, g, l, i, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1662([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_718([f, a, b, d, g, e], is_dual)
    } else {
        select_922([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1661([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1662([a, c, g, e, f, b, h, i], is_dual)
    } else {
        select_1072([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1665([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_143([b, a, c, d, e, f, g], is_dual)
    } else {
        select_269([e, a, g, h, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1664([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([a, c, d, e, f, g], is_dual)
    } else {
        select_1665([a, f, i, j, b, h, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1667([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_341([a, f, i, j, h, g], !is_dual)
    } else {
        select_62([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1666([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1667([a, g, d, e, f, i, h, j, k, l], is_dual)
    } else {
        select_454([a, b, c, j, f, k, g, i, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1663([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1664([j, a, c, e, f, g, i, k, l, m], is_dual)
    } else {
        select_1666([a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1660([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_1661([a, b, l, d, g, m, h, n, j], is_dual)
    } else {
        select_1663([a, b, c, h, e, f, g, j, i, k, l, n, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1670([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_392([b, a, c, e, d, g, f, h], is_dual)
    } else {
        select_799([e, g, d, i, a, h, b, f], !is_dual)
    }
}
/// n = 13, i = 4
fn select_1669([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1670([a, k, c, f, l, g, m, h, j], is_dual)
    } else {
        select_452([a, b, h, d, e, f, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1668([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1669([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_1669([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1659([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1660([b, a, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_1668([b, c, h, e, f, g, i, a, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1652([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < l) || (is_dual && c > l) {
        select_1653([a, b, d, j, g, h, l, i, c, k, m, n], is_dual)
    } else {
        select_1659([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1651([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1652([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1652([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_1676([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_359([d, e, h, a, f, g, b], !is_dual)
    } else {
        select_359([d, f, h, a, e, g, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1675([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1676([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1676([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1677([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1183([a, f, d, e, b, g, h, i], is_dual)
    } else {
        select_1034([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1674([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1675([a, b, d, g, f, c, h, i], is_dual)
    } else {
        select_1677([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1673([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1674([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_1251([a, b, c, f, d, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1679([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1655([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1655([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1678([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_809([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1679([a, b, c, e, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1672([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1673([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1678([a, b, c, f, j, d, g, i, h], !is_dual)
    }
}
/// n = 11, i = 3
fn select_1682([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_58([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_341([a, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1681([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1682([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1682([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1680([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_809([a, b, c, h, l, d, k, j, i], !is_dual)
    } else {
        select_1681([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1671([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1672([a, b, c, d, i, h, e, j, k, l], is_dual)
    } else {
        select_1680([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_1650([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_1651([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1671([a, b, c, i, d, f, g, k, j, n, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1691([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_123([a, c, d, g, h, j], is_dual)
    } else {
        select_1008([a, b, d, e, f, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1692([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_39([g, h, c, e], is_dual)
    } else {
        select_190([a, e, b, d, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1690([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1691([a, d, b, g, e, f, h, j, i, k], is_dual)
    } else {
        select_1692([a, c, d, f, e, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1689([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_546([d, c, e, g, a, f, h, j, i], is_dual)
    } else {
        select_1690([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1695([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([a, g, b, d, i, f], is_dual)
    } else {
        select_32([a, f, c, e, h, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1696([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_44([c, d, i, g, j], is_dual)
    } else {
        select_190([a, b, h, e, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1694([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1695([a, b, d, e, g, i, j, h, l], is_dual)
    } else {
        select_1696([c, d, b, a, f, g, e, h, j, l, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1698([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_39([a, b, h, k], is_dual)
    } else {
        select_190([c, d, g, e, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1697([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_266([a, b, d, f, h, i, g, k], is_dual)
    } else {
        select_1698([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1693([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1694([b, a, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_1697([a, f, d, c, h, g, e, k, j, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1688([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1689([a, b, g, d, f, h, i, k, e, j, l], is_dual)
    } else {
        select_1693([b, a, d, c, f, e, h, g, j, k, i, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1702([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([a, b, d, g, e, h], is_dual)
    } else {
        select_39([e, f, c, d], is_dual)
    }
}
/// n = 11, i = 4
fn select_1701([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_233([j, h, k, g, i, a, e, b, c], !is_dual)
    } else {
        select_1702([a, b, d, f, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1700([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_552([b, c, e, d, g, h, f, i, j, k], is_dual)
    } else {
        select_1701([a, f, d, c, h, g, e, k, j, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1699([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1700([b, a, d, c, e, f, h, g, j, k, i, l], is_dual)
    } else {
        select_1143([a, e, g, d, i, h, f, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1687([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1688([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1699([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_1706([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_215([b, d, a, e, f, g], is_dual)
    } else {
        select_215([a, c, b, f, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1707([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_923([a, c, d, g, f, h, i], is_dual)
    } else {
        select_115([a, h, b, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1705([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1706([a, b, d, c, f, e, h, g], is_dual)
    } else {
        select_1707([a, d, b, c, f, g, h, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_656([b, a, c, f, e, h, i, g], is_dual)
    } else {
        select_1705([b, a, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_1710([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_998([a, b, c, d, e, f, g], is_dual)
    } else {
        select_998([a, b, c, d, e, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1711([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_98([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_123([g, h, e, a, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1709([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1710([b, a, c, d, e, f, g], is_dual)
    } else {
        select_1711([d, g, h, i, a, e, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1712([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_718([a, c, d, e, f, g], is_dual)
    } else {
        select_164([a, g, h, b, e, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1708([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1709([a, b, f, d, e, h, i, g, j], is_dual)
    } else {
        select_1712([d, a, e, c, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1703([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1704([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1708([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1686([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1687([a, b, c, e, d, f, h, g, i, k, j, l], is_dual)
    } else {
        select_1703([a, b, c, d, i, f, j, g, l, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1716([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_301([d, b, c, f, h, i, g], is_dual)
    } else {
        select_508([a, d, e, b, c, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1718([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_997([h, i, j, d, a, g, f, c], !is_dual)
    } else {
        select_360([d, i, j, a, g, e, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1717([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_245([b, a, f, d, e, g, h, j, i], is_dual)
    } else {
        select_1718([a, c, b, h, f, e, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1715([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1716([c, a, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_1717([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1719([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1427([a, b, f, d, h, g, j, i, l], is_dual)
    } else {
        select_522([a, c, e, b, g, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1714([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1715([a, b, c, d, h, f, g, j, k, l, i], is_dual)
    } else {
        select_1719([a, b, c, e, d, f, h, g, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1723([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_215([e, a, d, g, f, i], is_dual)
    } else {
        select_62([b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1722([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_652([b, a, d, f, h, g, e, i, j], is_dual)
    } else {
        select_1723([a, b, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1725([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_54([a, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_54([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1724([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_59([b, c, g, d, e, f, i, h, j], is_dual)
    } else {
        select_1725([a, b, h, d, e, f, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1721([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_1722([b, j, c, d, g, a, h, i, k, l], is_dual)
    } else {
        select_1724([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1728([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_233([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_123([d, i, g, h, a, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1729([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_405([d, h, i, f, a, e, c], !is_dual)
    } else {
        select_261([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1727([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1728([h, i, d, e, g, b, a, f, c], !is_dual)
    } else {
        select_1729([h, g, i, e, d, f, b, c, a], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1730([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_453([b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_95([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1726([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1727([h, c, b, a, f, g, i, j, k], is_dual)
    } else {
        select_1730([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_1720([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1721([a, c, h, d, e, f, g, i, k, j, m, l], is_dual)
    } else {
        select_1726([a, b, c, i, j, g, h, l, m, n, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1713([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_1714([a, b, c, d, j, g, i, l, k, h, m, n], is_dual)
    } else {
        select_1720([a, d, c, b, e, f, g, i, h, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1685([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_1686([a, b, d, j, c, h, l, i, k, m, n, g], is_dual)
    } else {
        select_1713([a, b, d, c, e, f, h, g, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1684([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1685([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1685([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_1738([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_23([c, d, e, i], is_dual)
    } else {
        select_190([a, b, h, f, g, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_1737([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1738([a, b, e, f, i, g, h, j, k, l, m], is_dual)
    } else {
        select_1738([a, b, c, d, j, g, h, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_1736([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_254([a, b, d, j, h, l, k, i], is_dual)
    } else {
        select_1737([c, d, a, b, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_1735([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_1736([b, c, a, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_1132([d, a, k, b, c, h, g, i, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_1741([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1148([a, b, d, e, c, f, g, h, j, k, i], is_dual)
    } else {
        select_375([a, c, b, f, i, k, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_1740([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1741([a, g, b, d, e, h, f, i, k, j, l], is_dual)
    } else {
        select_1569([b, f, c, d, e, h, g, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_1739([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_551([a, j, c, b, f, k, h, g, l, i, m], is_dual)
    } else {
        select_1740([a, c, g, d, e, f, i, h, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_1734([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1735([b, a, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_1739([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1745([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_106([f, e, h, i, a, b, g], !is_dual)
    } else {
        select_38([b, d, a, c, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1746([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_27([b, d, e, a, c, f, g, h], is_dual)
    } else {
        select_393([g, f, i, a, b, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1744([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1745([a, g, j, i, f, b, h, d, e], !is_dual)
    } else {
        select_1746([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_1747([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_124([b, a, c, d, e, f], is_dual)
    } else {
        select_124([d, a, g, b, e, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1743([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1744([a, b, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_1747([a, g, e, b, f, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1750([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_233([h, i, f, g, e, a, d, c, b], !is_dual)
    } else {
        select_130([h, e, i, g, f, d, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1749([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1383([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1750([c, b, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1753([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([g, h, i, d, a, b], !is_dual)
    } else {
        select_73([a, c, f, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1752([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_72([h, d, i, f, b, a], !is_dual)
    } else {
        select_1753([b, a, c, d, e, g, h, i, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1754([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_335([g, f, b, c, d], !is_dual)
    } else {
        select_262([g, h, e, f, a, d, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1751([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1752([g, h, i, e, f, a, b, c, d], !is_dual)
    } else {
        select_1754([g, h, a, i, e, f, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1748([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1749([a, e, h, i, f, b, g, d, c], !is_dual)
    } else {
        select_1751([a, f, h, i, e, g, b, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1743([a, b, e, f, d, g, i, h, j, k], is_dual)
    } else {
        select_1748([a, j, k, i, b, g, f, c, h], !is_dual)
    }
}
/// n = 14, i = 4
fn select_1733([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_1734([a, c, b, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_1742([a, b, c, j, i, h, k, m, l, g, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1732([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1733([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1733([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_1758([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_520([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_578([a, i, f, j, b, g, h, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1757([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1758([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1758([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_1762([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_211([a, c, d, e, f], is_dual)
    } else {
        select_126([a, b, f, g, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_1761([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_663([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_1762([a, b, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1761([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_583([a, i, j, e, f, b, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1759([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1760([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_1760([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1756([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1757([a, b, c, d, g, f, h, i, j, k], is_dual)
    } else {
        select_1759([a, b, c, e, d, h, i, g, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1767([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_211([e, a, h, i, g], !is_dual)
    } else {
        select_163([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1766([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_301([d, h, i, e, a, b, g], !is_dual)
    } else {
        select_1767([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1765([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1766([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1766([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1768([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_200([a, b, g, j, e, i, h, c], !is_dual)
    } else {
        select_486([a, b, g, d, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1765([a, b, e, d, g, f, i, h, j], is_dual)
    } else {
        select_1768([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1773([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([e, i, j, h, a, g], !is_dual)
    } else {
        select_23([b, c, d, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1772([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1773([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1773([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1774([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_23([b, c, d, f], is_dual)
    } else {
        select_73([a, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1771([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1772([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_1774([a, c, d, e, b, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1775([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_305([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_341([a, b, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1770([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1771([a, g, d, e, f, b, h, i, j, k], is_dual)
    } else {
        select_1775([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_1776([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_855([f, e, h, c, d, g, i, j], is_dual)
    } else {
        select_638([e, f, c, d, a, b, g, i, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_1769([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1770([a, b, d, c, e, i, h, k, l, j, m], is_dual)
    } else {
        select_1776([e, h, f, g, c, a, b, j, i, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1763([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_1764([a, b, d, i, h, k, j, c, l, m], is_dual)
    } else {
        select_1769([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1755([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1756([a, b, c, d, e, k, h, m, i, l, n], is_dual)
    } else {
        select_1763([a, b, c, e, i, f, g, h, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1731([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_1732([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1755([a, b, c, e, d, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1683([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1684([a, b, c, f, d, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1731([a, b, c, e, f, g, h, d, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1649([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_1650([a, b, c, e, f, g, h, i, j, k, d, l, n, m], is_dual)
    } else {
        select_1683([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_1468([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < i) || (is_dual && o > i) {
        select_1469([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1649([a, b, c, d, e, f, k, l, j, m, n, o, p, i], is_dual)
    }
}
/// n = 16, i = 4
fn select_1467([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1468([a, b, c, d, e, g, h, i, f, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1468([a, b, c, d, f, g, h, i, e, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1239([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_1240([a, b, c, d, e, f, g, h, i, j, l, m, k, n, o, p], is_dual)
    } else {
        select_1467([a, b, c, d, e, f, h, i, j, k, l, m, g, n, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_1787([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_359([h, i, g, a, b, e, c], !is_dual)
    } else {
        select_164([g, h, i, a, b, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1786([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_490([a, b, f, d, c, h, i, g, k], is_dual)
    } else {
        select_1787([a, c, e, b, f, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1427([a, b, f, e, h, g, j, i, l], is_dual)
    } else {
        select_797([a, c, d, b, g, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1785([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1786([a, c, b, g, d, f, j, h, k, l, i], is_dual)
    } else {
        select_1788([a, c, b, d, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1793([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_131([a, c, g, f, d, i], is_dual)
    } else {
        select_190([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1792([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1793([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_1008([c, e, f, a, g, d, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1794([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, c, d, e, f, g, h], is_dual)
    } else {
        select_72([a, d, g, f, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1791([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1792([c, d, b, f, g, e, a, i, h], is_dual)
    } else {
        select_1794([c, a, b, d, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1796([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_249([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_89([a, c, f, d, e, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1797([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_405([a, b, g, f, e, h, j], is_dual)
    } else {
        select_98([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1795([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1796([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1797([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1790([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1791([b, a, c, d, g, i, f, h, j], is_dual)
    } else {
        select_1795([a, f, b, c, e, h, i, g, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_1799([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_304([a, c, d, e, b, f, g], is_dual)
    } else {
        select_468([b, f, d, e, a, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1798([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1427([a, b, c, d, g, f, h, i, j], is_dual)
    } else {
        select_1799([a, c, e, b, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1790([a, b, c, d, g, f, j, h, k, l, i], is_dual)
    } else {
        select_1798([f, a, c, e, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1784([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1785([a, d, b, e, c, h, g, i, k, f, l, j], is_dual)
    } else {
        select_1789([a, d, c, e, b, h, f, i, k, j, g, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1801([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_348([a, b, c, d, g, f, i, j, k, h], is_dual)
    } else {
        select_1798([b, a, d, e, c, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1800([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1801([a, b, c, e, d, f, g, i, j, h, k], is_dual)
    } else {
        select_1801([b, a, c, d, e, f, h, i, k, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1783([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1784([b, c, a, d, e, g, f, h, j, k, l, i], is_dual)
    } else {
        select_1800([a, b, d, h, c, j, i, g, l, f, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1782([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1783([c, d, e, b, a, g, i, f, k, j, h, l], is_dual)
    } else {
        select_1783([c, e, d, b, a, g, h, f, k, j, i, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1803([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1800([a, c, d, b, e, h, g, i, j, f, k], is_dual)
    } else {
        select_1800([b, c, d, a, e, h, f, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1802([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1803([b, c, d, a, e, g, h, f, j, k, i], is_dual)
    } else {
        select_1803([b, c, e, a, d, g, h, f, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1781([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1782([a, b, c, d, e, j, g, h, i, f, k, l], is_dual)
    } else {
        select_1802([f, c, d, e, j, b, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1780([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1781([f, e, a, c, d, j, b, g, h, i, k, l], is_dual)
    } else {
        select_1781([f, e, b, c, d, j, a, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1779([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1780([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1780([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1778([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1779([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_1779([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_1777([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_1778([a, b, c, d, e, f, h, k, l, m, g, n], is_dual)
    } else {
        select_708([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_1238([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < k) || (is_dual && p > k) {
        select_1239([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1777([a, b, c, d, e, f, g, h, l, m, n, o, p, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_1237([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1238([a, b, c, d, e, f, g, h, j, k, i, l, m, n, o, p], is_dual)
    } else {
        select_1238([a, b, c, d, e, f, g, i, j, k, h, l, m, n, o, p], is_dual)
    }
}
/// n = 13, i = 2
fn select_1815([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_58([a, c, d, b, j, k, h, i, m], is_dual)
    } else {
        select_107([b, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 2
fn select_1814([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_1815([c, b, f, g, e, a, h, j, k, i, l, n, m], is_dual)
    } else {
        select_1815([c, a, f, g, d, b, i, j, k, h, m, n, l], is_dual)
    }
}
/// n = 14, i = 2
fn select_1813([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1814([a, c, d, b, e, f, g, i, j, k, l, h, m, n], is_dual)
    } else {
        select_1814([b, c, d, a, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 14, i = 2
fn select_1812([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1813([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_1813([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 1
fn select_1820([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_135([a, h, c, d, e, f, g, i], is_dual)
    } else {
        select_135([b, g, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 1
fn select_1819([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1820([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_1820([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1822([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([a, b, d, e, f, g, h], is_dual)
    } else {
        select_1363([a, c, b, e, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1821([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1547([a, b, d, f, e, g, h, j], is_dual)
    } else {
        select_1822([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_1818([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1819([a, b, d, e, f, g, j, i, k], is_dual)
    } else {
        select_1821([a, b, c, k, d, h, i, j, l, m], is_dual)
    }
}
/// n = 10, i = 1
fn select_1825([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_59([d, e, i, a, b, c, g, h, j], is_dual)
    } else {
        select_59([d, f, h, a, b, c, g, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_188([e, a, b, c, h, i, f, g, j, k], is_dual)
    } else {
        select_188([e, a, b, d, g, i, f, h, j, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_1824([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1825([a, b, l, c, d, e, g, h, i, k], is_dual)
    } else {
        select_1826([k, c, d, e, f, g, h, i, j, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_1829([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_62([b, c, d, e, g, h, i], is_dual)
    } else {
        select_189([a, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1830([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_215([a, b, f, g, e, i], is_dual)
    } else {
        select_62([c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_1828([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1829([f, d, e, b, c, i, g, h, j, k], is_dual)
    } else {
        select_1830([j, a, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_1831([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_169([a, b, i, d, e, f, g, j, h, k, l], is_dual)
    } else {
        select_169([a, c, h, d, e, f, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_1827([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_1828([a, b, l, c, d, h, i, j, k, g, m], is_dual)
    } else {
        select_1831([a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 2
fn select_1823([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1824([f, g, a, d, e, c, b, i, j, h, l, k, m], is_dual)
    } else {
        select_1827([c, b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_1817([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_1818([a, b, d, e, c, j, k, h, i, l, n, m, o], is_dual)
    } else {
        select_1823([a, c, d, f, g, b, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 1
fn select_1834([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_107([a, b, d, e, f, g, h, c, i, j], is_dual)
    } else {
        select_107([a, c, d, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 13, i = 2
fn select_1833([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_296([a, b, e, f, c, d, k, i, j, m], is_dual)
    } else {
        select_1834([a, c, d, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 2
fn select_1835([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_294([a, c, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_296([a, b, d, e, c, k, l, i, j, n], is_dual)
    }
}
/// n = 14, i = 2
fn select_1832([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_1833([a, e, b, c, g, h, d, i, j, k, m, n, l], is_dual)
    } else {
        select_1835([a, e, d, g, h, f, b, c, j, k, i, l, n, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_1816([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1817([a, c, e, d, f, g, h, i, j, k, l, b, m, n, o], is_dual)
    } else {
        select_1832([a, b, d, c, e, f, g, h, j, k, l, i, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_1811([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_1812([a, b, d, e, f, c, g, h, j, i, l, m, k, n], is_dual)
    } else {
        select_1816([a, b, c, d, f, e, g, h, j, k, l, m, i, n, o], is_dual)
    }
}
/// n = 11, i = 3
fn select_1840([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_86([a, b, d, c, e, f, h, g, i, j, k], is_dual)
    } else {
        select_475([a, d, g, e, f, h, c, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_1839([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_82([b, h, f, g, d, c, a, i, k, j, l], is_dual)
    } else {
        select_1840([a, c, b, e, d, j, i, h, l, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_1844([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_405([g, a, b, f, e, h, i], is_dual)
    } else {
        select_98([a, e, c, d, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1843([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_49([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_1844([b, i, c, d, a, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1842([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_887([d, h, e, f, b, a, g, i, j, k], is_dual)
    } else {
        select_1843([a, b, c, i, e, f, g, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_1841([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_82([f, g, h, j, c, b, a, i, k, l, m], is_dual)
    } else {
        select_1842([a, b, d, e, c, k, i, h, j, m, l, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_1838([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1839([a, b, c, d, j, f, g, k, i, l, h, m, n], is_dual)
    } else {
        select_1841([a, c, d, b, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_1846([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_464([a, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_20([b, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1849([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_21([c, b, d, e, f, a, h, i, g, j], is_dual)
    } else {
        select_454([g, k, h, l, a, b, j, d, i], !is_dual)
    }
}
/// n = 13, i = 4
fn select_1848([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1849([h, a, b, d, e, f, g, i, j, k, l, m], is_dual)
    } else {
        select_1849([g, a, c, d, e, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_1850([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1103([a, h, b, d, e, f, g, i, j, k], is_dual)
    } else {
        select_1103([a, g, c, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1847([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1848([f, c, d, e, a, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1850([i, c, d, a, b, f, g, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_1845([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_1846([c, d, a, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_1847([f, g, c, d, j, b, h, i, a, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_1837([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_1838([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1845([a, b, c, j, d, f, g, h, k, i, l, n, o, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_1856([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_405([f, g, h, a, b, c, e], !is_dual)
    } else {
        select_664([b, c, a, d, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1855([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1856([f, g, i, k, j, a, b, c], !is_dual)
    } else {
        select_40([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1857([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_135([b, c, d, e, f, g, i, j], is_dual)
    } else {
        select_49([a, b, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1854([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1855([a, b, k, c, d, i, h, j, l, m, n], is_dual)
    } else {
        select_1857([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1859([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1104([a, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_913([f, b, c, d, e, g, h, j, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_1858([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1859([a, b, k, c, d, i, h, j, l, m, n], is_dual)
    } else {
        select_1857([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_1853([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1854([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_1858([a, c, d, e, f, g, h, i, b, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_1861([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_431([b, c, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1356([a, h, b, c, e, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1860([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_635([a, e, f, g, c, d, b, h, i, j, k], is_dual)
    } else {
        select_1861([b, c, d, i, f, g, h, a, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_1852([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_1853([a, b, c, f, g, d, e, j, i, k, m, l, n, o], is_dual)
    } else {
        select_1860([a, c, d, e, h, b, k, i, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_1865([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1183([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_211([a, c, d, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1867([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_72([g, h, f, a, b, c], !is_dual)
    } else {
        select_393([f, h, g, a, b, e, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1866([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1867([a, g, i, k, j, b, c, h], !is_dual)
    } else {
        select_157([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1864([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1865([a, g, d, e, f, b, h, j, k], is_dual)
    } else {
        select_1866([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1863([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_82([b, e, f, g, d, c, a, h, i, j, k], is_dual)
    } else {
        select_1864([a, b, c, d, e, j, h, k, i, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_1862([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_1863([a, b, c, d, j, g, h, i, l, k, m, n, o], is_dual)
    } else {
        select_1864([a, b, c, e, f, m, i, j, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_1851([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1852([a, b, c, e, f, g, h, d, i, j, l, m, k, n, o], is_dual)
    } else {
        select_1862([a, b, c, d, g, h, e, f, i, l, k, m, j, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_1836([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_1837([a, c, d, e, f, g, h, i, j, k, b, l, m, n, o], is_dual)
    } else {
        select_1851([a, c, d, e, b, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_1810([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_1811([a, b, d, e, f, g, c, h, j, k, l, i, m, n, o], is_dual)
    } else {
        select_1836([a, b, c, d, e, f, g, m, j, k, l, n, i, o, p], is_dual)
    }
}
/// n = 14, i = 2
fn select_1869([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_1812([g, h, d, e, c, f, a, b, k, m, i, j, l, n], is_dual)
    } else {
        select_1812([g, h, d, f, c, e, a, b, k, l, i, j, m, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_1875([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_301([c, a, b, f, h, i, g], is_dual)
    } else {
        select_105([c, d, e, a, b, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1874([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1875([b, c, a, h, d, g, i, f, j], is_dual)
    } else {
        select_436([b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1877([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_135([c, i, d, e, f, g, h, j], is_dual)
    } else {
        select_496([a, b, h, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_1876([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1875([b, c, a, k, d, i, j, h, l], is_dual)
    } else {
        select_1877([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_1873([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_1874([a, b, c, d, l, h, i, m, j, k], is_dual)
    } else {
        select_1876([a, b, c, i, e, f, g, h, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_1879([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_200([a, i, b, c, e, f, h, j], is_dual)
    } else {
        select_200([a, h, b, d, e, g, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1882([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([b, c, d, e, g], is_dual)
    } else {
        select_33([a, h, f, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_1881([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_652([j, a, b, k, f, g, h, i, l], is_dual)
    } else {
        select_1882([a, c, d, e, i, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1883([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_254([a, b, c, j, g, k, i, h], is_dual)
    } else {
        select_169([c, a, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1880([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1881([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_1883([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_1878([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_1879([m, a, b, c, g, h, i, j, k, n], is_dual)
    } else {
        select_1880([k, a, b, d, e, f, g, h, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_1872([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1873([b, a, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_1878([b, c, d, e, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 2
fn select_1887([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_424([b, c, d, a, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1092([b, i, d, c, a, h, k, j], is_dual)
    }
}
/// n = 13, i = 2
fn select_1886([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_414([a, b, f, g, h, l, i, j], is_dual)
    } else {
        select_1887([a, b, f, j, c, d, e, i, k, m, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_1889([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_496([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_672([b, c, i, d, a, j, h], is_dual)
    }
}
/// n = 12, i = 2
fn select_1888([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_1889([a, b, c, i, f, g, h, l, j, k], is_dual)
    } else {
        select_568([a, b, c, d, e, k, i], is_dual)
    }
}
/// n = 13, i = 2
fn select_1885([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1886([a, d, f, g, h, e, b, c, i, j, l, m, k], is_dual)
    } else {
        select_1888([a, b, c, d, i, f, g, h, k, l, m, j], is_dual)
    }
}
/// n = 13, i = 2
fn select_1884([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1885([a, d, e, b, c, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_1885([a, d, e, c, b, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_1871([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1872([g, d, e, f, a, b, c, i, j, k, h, l, m, n], is_dual)
    } else {
        select_1884([g, d, e, f, h, a, b, c, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_1894([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1104([b, g, d, e, f, a, h, i, k], is_dual)
    } else {
        select_508([b, c, a, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1893([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1894([a, b, c, d, h, f, g, j, k, i, l], is_dual)
    } else {
        select_866([c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1893([e, d, a, b, c, i, f, h, j, g, k, l], is_dual)
    } else {
        select_1893([e, d, a, c, b, i, f, g, j, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1899([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_42([a, c, d, e, h, j], is_dual)
    } else {
        select_42([b, c, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1898([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1002([i, j, e, h, a, g, f, b], !is_dual)
    } else {
        select_1899([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1897([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1898([a, b, c, i, f, h, g, j, k, l], is_dual)
    } else {
        select_95([a, b, d, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_1896([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1897([a, b, d, c, i, f, g, h, j, l, k, m], is_dual)
    } else {
        select_866([b, c, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_1895([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1896([e, b, c, a, d, j, i, f, h, g, k, l, m], is_dual)
    } else {
        select_1896([e, b, d, a, c, j, i, f, g, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1891([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1892([b, c, d, i, e, f, g, h, k, j, l, m], is_dual)
    } else {
        select_1895([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1890([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1891([a, b, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    } else {
        select_1891([a, b, c, d, f, g, h, i, j, e, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_1870([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_1871([a, b, f, c, d, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1890([l, c, d, e, g, h, i, j, k, f, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_1868([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_1869([a, f, b, c, d, e, g, h, i, m, j, k, l, n], is_dual)
    } else {
        select_1870([b, i, c, d, e, f, g, h, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1809([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1810([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    } else {
        select_1868([i, h, c, f, g, d, a, b, m, e, k, l, j, n, o, p], is_dual)
    }
}
/// n = 12, i = 3
fn select_1908([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_1527([b, c, g, d, e, f, h, i, j, k], is_dual)
    } else {
        select_25([a, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1909([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_125([a, b, c, h, i], is_dual)
    } else {
        select_1411([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_1907([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1908([a, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_1909([a, b, k, c, d, i, h, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([b, c, d, g, f, h], is_dual)
    } else {
        select_969([a, b, h, e, f, g, j, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_1910([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1911([a, j, b, c, g, k, h, i, m, n], is_dual)
    } else {
        select_221([g, i, d, e, f, h, l, j, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_1906([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1907([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1910([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_84([a, c, d, e, f, b, g, h, j], is_dual)
    } else {
        select_277([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1916([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([h, i, j, e, a, b], !is_dual)
    } else {
        select_42([a, c, d, g, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1915([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1916([a, b, c, d, f, g, e, h, j, i], is_dual)
    } else {
        select_41([e, b, c, d, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1914([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1915([g, b, d, e, a, f, h, i, j, k], is_dual)
    } else {
        select_508([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_1912([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1913([a, h, i, e, f, g, k, j, n, l], is_dual)
    } else {
        select_1914([a, b, j, c, d, h, l, i, m, n, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1905([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1906([a, c, d, e, f, g, h, b, i, j, l, k, m, n], is_dual)
    } else {
        select_1912([a, b, d, e, f, g, h, c, i, j, k, l, n, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_1918([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_48([a, h, b, c, e, f, g, i, j, k], is_dual)
    } else {
        select_520([a, b, c, d, j, h, k, i], is_dual)
    }
}
/// n = 12, i = 2
fn select_1917([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1918([a, c, d, i, f, g, h, b, k, j, l], is_dual)
    } else {
        select_1888([a, c, d, b, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1904([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1905([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_1917([a, c, d, e, b, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_1922([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_814([a, e, b, d, g, f, h], is_dual)
    } else {
        select_243([a, b, c, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1925([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, b, d, g, f, i], is_dual)
    } else {
        select_33([c, d, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1924([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1925([a, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_38([a, d, c, h, g, e, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1923([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_230([c, a, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1924([c, e, b, d, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1921([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1922([b, a, f, e, c, g, i, h], is_dual)
    } else {
        select_1923([a, b, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1920([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1921([a, c, d, b, e, g, h, i, f, j], is_dual)
    } else {
        select_1921([b, c, d, a, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1919([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1920([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1920([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_1903([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_1904([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_1919([a, c, b, d, e, k, i, l, m, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_1902([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_1903([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1903([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_1931([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_328([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1532([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1933([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_129([g, f, h, a, b, c], !is_dual)
    } else {
        select_141([b, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1932([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1381([b, c, a, e, f, i, h, g], is_dual)
    } else {
        select_1933([e, a, d, b, g, i, j, f], is_dual)
    }
}
/// n = 13, i = 4
fn select_1930([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1931([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1932([a, b, c, j, h, g, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1936([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_125([a, b, h, i, j], is_dual)
    } else {
        select_375([c, a, d, f, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1937([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_126([g, b, h, a, j], is_dual)
    } else {
        select_535([b, d, a, c, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1935([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1936([a, b, e, d, f, g, i, h, k, j], is_dual)
    } else {
        select_1937([a, b, c, f, h, g, j, e, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_652([b, a, f, d, e, h, g, j, i], is_dual)
    } else {
        select_242([d, g, i, c, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1934([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1935([b, a, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_1938([b, c, d, f, e, g, a, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_1929([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_1930([b, a, h, d, e, f, g, i, j, k, m, n, l], is_dual)
    } else {
        select_1934([a, b, k, c, g, l, h, i, m, n, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1941([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1284([e, a, c, d, f, g, i, h], is_dual)
    } else {
        select_1293([d, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1942([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_120([a, f, b, g, e, h, i], is_dual)
    } else {
        select_442([a, b, c, d, f, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1940([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1941([c, b, a, g, e, d, i, h, f], is_dual)
    } else {
        select_1942([i, j, h, e, g, d, a, f, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1944([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_421([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1882([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1945([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1933([d, h, i, g, e, a, b, f], !is_dual)
    } else {
        select_779([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1943([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1944([b, a, d, e, f, h, g, i, l, j], is_dual)
    } else {
        select_1945([j, k, l, a, g, h, b, c, i], !is_dual)
    }
}
/// n = 13, i = 4
fn select_1939([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1940([a, b, j, g, h, f, k, l, m, i], is_dual)
    } else {
        select_1943([h, a, f, c, d, e, g, i, j, m, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1928([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1929([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_1939([b, h, d, e, f, i, g, j, a, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1950([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([b, c, d, g, e, h], is_dual)
    } else {
        select_281([b, h, a, e, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1951([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_37([h, b, c, d, e, f, i, k], is_dual)
    } else {
        select_153([f, a, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_1949([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_1950([a, k, b, c, l, g, h, i, j, m], is_dual)
    } else {
        select_1951([a, i, d, e, f, j, g, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_1948([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_1949([c, a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1648([h, l, a, b, m, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1954([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_623([b, c, d, g], is_dual)
    } else {
        select_534([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_1955([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_217([c, d, e, f, g, i, k, j, l], is_dual)
    } else {
        select_1027([a, b, c, d, h, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1953([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1954([a, b, c, k, d, i, m, h, n], is_dual)
    } else {
        select_1955([a, d, b, c, e, f, g, i, h, j, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1957([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_125([a, b, c, i, j], is_dual)
    } else {
        select_278([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1956([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_344([a, b, j, c, k, g], is_dual)
    } else {
        select_1957([a, b, g, d, e, f, i, h, k, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_1952([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1953([a, b, c, d, e, f, g, i, h, k, l, j, m, n], is_dual)
    } else {
        select_1956([a, d, i, e, f, g, j, k, h, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1947([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1948([c, d, b, e, f, g, h, a, i, j, k, l, m], is_dual)
    } else {
        select_1952([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_1960([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([a, c, d, f, g], is_dual)
    } else {
        select_121([i, f, a, e, h, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1959([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1960([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_997([f, a, j, e, b, i, h, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1962([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_998([e, c, d, a, f, g, h], is_dual)
    } else {
        select_1027([b, a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1963([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_997([a, b, c, d, f, g, e, i], is_dual)
    } else {
        select_236([f, h, i, d, g, a, b, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1961([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1962([e, a, c, d, f, h, g, j, i], is_dual)
    } else {
        select_1963([h, e, k, f, j, a, i, b, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1958([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1959([e, a, c, d, f, h, g, j, k, i], is_dual)
    } else {
        select_1961([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1946([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < a) || (is_dual && n > a) {
        select_1947([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1958([b, k, c, d, l, h, i, m, j, n, a], is_dual)
    }
}
/// n = 14, i = 4
fn select_1927([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1928([a, c, d, e, f, g, h, i, j, b, k, l, m, n], is_dual)
    } else {
        select_1946([a, c, b, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_1968([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_454([a, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_362([e, i, h, j, a, f, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1967([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1344([a, b, c, e, g, h, f, i], is_dual)
    } else {
        select_1968([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1970([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_718([a, b, f, e, d, h], is_dual)
    } else {
        select_1477([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1973([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_32([d, b, c, e, f, g], is_dual)
    } else {
        select_73([a, b, d, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1972([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_332([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_1973([g, i, h, d, e, a, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1974([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_246([a, c, e, d, f, h], is_dual)
    } else {
        select_390([a, b, f, d, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1971([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1972([b, a, c, f, d, g, h, e, i], is_dual)
    } else {
        select_1974([d, h, i, e, f, g, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1969([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1970([e, d, h, i, a, f, g, b], !is_dual)
    } else {
        select_1971([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1966([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1967([a, c, d, b, e, f, h, g, i, j], is_dual)
    } else {
        select_1969([a, c, g, e, i, f, b, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1977([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1298([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_779([a, b, g, e, i, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1978([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_353([g, i, h, a, f, e, d, c], !is_dual)
    } else {
        select_208([h, i, g, a, f, d, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1976([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1977([b, c, d, a, f, e, g, i, h], is_dual)
    } else {
        select_1978([h, j, i, f, e, a, b, c, g], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1981([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_129([c, d, g, e, f, a], !is_dual)
    } else {
        select_141([c, e, g, d, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1982([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_341([a, d, c, e, h, i], is_dual)
    } else {
        select_998([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1981([g, j, b, f, a, i, c], !is_dual)
    } else {
        select_1982([h, j, f, a, i, g, b, e, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1984([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_266([f, g, i, h, d, a, b, e], !is_dual)
    } else {
        select_989([b, a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1985([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_341([g, h, e, f, c, a], !is_dual)
    } else {
        select_341([e, f, g, h, d, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1983([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1984([g, f, i, d, h, b, a, e, c], !is_dual)
    } else {
        select_1985([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1979([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1980([b, a, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1983([b, e, d, a, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1975([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_1976([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_1979([b, a, c, d, f, g, h, i, j, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1965([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1966([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_1975([a, b, d, e, f, c, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1990([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_89([b, a, c, f, g, e, i, h], is_dual)
    } else {
        select_38([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1991([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_390([e, h, i, d, a, f, c], !is_dual)
    } else {
        select_156([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1989([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1990([a, b, d, c, f, e, g, i, h], is_dual)
    } else {
        select_1991([a, b, c, g, f, h, i, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1988([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1496([h, c, b, i, e, j, f, g], is_dual)
    } else {
        select_1989([c, a, f, d, g, e, h, i, k, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1995([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_131([b, c, d, e, f, g], is_dual)
    } else {
        select_229([a, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1994([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1995([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_229([a, e, d, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1993([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1226([c, b, a, d, e, g, h, i, f], is_dual)
    } else {
        select_1994([i, h, d, g, f, c, a, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1992([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1341([b, d, c, h, g, f, e, i], is_dual)
    } else {
        select_1993([a, c, e, h, f, i, d, j, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1987([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1988([a, b, c, d, f, g, i, h, e, j, k], is_dual)
    } else {
        select_1992([e, c, b, a, f, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1998([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_340([a, c, d, g, f, i, h], is_dual)
    } else {
        select_1982([g, j, i, a, h, e, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1997([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1998([a, d, c, b, g, f, i, e, j, h], is_dual)
    } else {
        select_1382([a, b, e, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2000([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_120([g, h, e, d, i, b, f], !is_dual)
    } else {
        select_232([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2001([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1011([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1487([h, b, a, g, i, k, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_1999([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2000([b, f, d, e, a, g, h, i, j, k], is_dual)
    } else {
        select_2001([b, a, d, c, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1996([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1997([f, a, c, b, e, h, g, j, k, i], is_dual)
    } else {
        select_1999([a, c, d, b, e, f, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1986([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1987([a, d, b, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_1996([a, d, c, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1964([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1965([f, b, g, c, d, a, h, j, i, k], is_dual)
    } else {
        select_1986([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_1926([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_1927([a, c, b, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1964([a, b, c, d, k, l, m, i, j, h, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_1901([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1902([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1926([a, c, d, e, f, g, h, i, j, b, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 2
fn select_2007([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_75([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_75([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2011([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_42([a, b, c, e, h, i], is_dual)
    } else {
        select_44([d, b, c, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2010([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_215([b, e, c, d, g, h], is_dual)
    } else {
        select_2011([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2009([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_350([b, c, f, d, e, h, i], is_dual)
    } else {
        select_2010([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2008([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1028([a, i, b, c, f, h, g, j, k], is_dual)
    } else {
        select_2009([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2006([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2007([a, b, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_2008([a, b, c, d, k, e, h, j, i, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_2014([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_350([b, c, d, e, f, g, h], is_dual)
    } else {
        select_637([a, b, c, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_2013([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_414([b, c, e, f, g, i, h, j], is_dual)
    } else {
        select_2014([a, b, c, e, d, j, h, i, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_2012([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2013([h, f, g, k, a, d, e, i, j, l, m], is_dual)
    } else {
        select_294([f, g, a, d, e, b, c, j, i, l, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_2005([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_2006([b, c, d, k, e, g, h, i, a, j, l, m, n], is_dual)
    } else {
        select_2012([e, a, f, g, h, c, d, b, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2019([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_215([b, c, d, e, f, g], is_dual)
    } else {
        select_691([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2018([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_301([a, c, d, b, f, g, h], is_dual)
    } else {
        select_2019([a, b, e, c, d, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2021([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_405([a, b, f, e, d, g, h], is_dual)
    } else {
        select_42([b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2022([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_405([b, e, c, a, f, g, h], is_dual)
    } else {
        select_89([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2020([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2021([b, a, d, g, f, e, i, h], is_dual)
    } else {
        select_2022([a, b, c, e, h, g, i, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_2017([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2018([b, c, a, d, e, g, h, f, i], is_dual)
    } else {
        select_2020([b, c, e, d, f, g, h, a, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2023([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_577([a, c, d, b, f, e, g], is_dual)
    } else {
        select_1712([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2016([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2017([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_2023([a, b, d, f, h, g, c, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_2026([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_325([c, d, e, f, g, i], is_dual)
    } else {
        select_176([a, b, j, h, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_2027([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_325([b, c, d, e, f, h], is_dual)
    } else {
        select_33([a, i, g, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2025([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2026([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2027([h, c, d, e, f, g, i, a, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2029([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1532([a, b, c, d, e, f, h, i, j, k], is_dual)
    } else {
        select_1532([a, b, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2030([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_325([d, e, f, g, h, i], is_dual)
    } else {
        select_677([a, b, c, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2028([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2029([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_2030([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2024([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2025([a, c, d, e, f, g, h, i, b, j, k], is_dual)
    } else {
        select_2028([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2016([a, b, c, d, k, l, j, i, m], is_dual)
    } else {
        select_2024([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_2004([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_2005([a, b, e, f, g, h, c, j, i, k, l, m, n, o], is_dual)
    } else {
        select_2015([a, b, c, d, e, f, k, l, i, j, n, o, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_2003([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2004([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    } else {
        select_2004([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o], is_dual)
    }
}
/// n = 7, i = 2
fn select_2037([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_335([a, b, d, e, g], is_dual)
    } else {
        select_141([d, b, c, e, f, g], is_dual)
    }
}
/// n = 13, i = 3
fn select_2036([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_325([c, d, e, f, g, j], is_dual)
    } else {
        select_2037([a, k, b, h, l, i, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2035([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2036([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_333([a, i, c, d, e, f, g, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2039([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_325([c, d, e, f, g, j], is_dual)
    } else {
        select_523([a, k, b, h, l, i, m, n], is_dual)
    }
}
/// n = 13, i = 4
fn select_2040([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_676([a, b, j, h, k, l, m], is_dual)
    } else {
        select_325([c, d, e, f, g, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_2038([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2039([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2040([a, i, c, d, e, f, g, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2034([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2035([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_2038([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_2044([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_129([b, c, d, f, e, g], is_dual)
    } else {
        select_346([f, g, h, a, e, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2043([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1258([a, b, d, f, h, e, i, g, j], is_dual)
    } else {
        select_2044([a, b, c, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2042([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1256([a, e, d, g, b, f, h, j, i], is_dual)
    } else {
        select_2043([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2045([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1256([e, f, i, a, g, h, b, c, d], !is_dual)
    } else {
        select_1256([e, g, i, a, f, h, b, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2041([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2042([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_2045([a, h, i, j, e, b, f, g, d], !is_dual)
    }
}
/// n = 14, i = 4
fn select_2033([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2034([a, b, d, c, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_2041([a, b, k, d, l, c, i, j, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_2049([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_325([d, e, f, g, h, j], is_dual)
    } else {
        select_468([a, k, b, c, l, i, m], is_dual)
    }
}
/// n = 12, i = 2
fn select_2050([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_300([a, b, c, k, i, l], is_dual)
    } else {
        select_325([d, e, f, g, h, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2048([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2049([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2050([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2047([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2048([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    } else {
        select_2048([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2053([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_243([b, c, e, a, g, f, h], is_dual)
    } else {
        select_795([a, b, d, c, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2052([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_2053([a, b, c, e, d, g, f, h, i], is_dual)
    } else {
        select_577([b, a, c, f, g, d, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2055([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_286([e, f, a, h, i, g], !is_dual)
    } else {
        select_1548([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2054([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_447([a, e, h, i, f, b, g], !is_dual)
    } else {
        select_2055([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2051([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2052([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2054([f, a, i, j, b, g, h, c, d], !is_dual)
    }
}
/// n = 14, i = 4
fn select_2046([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2047([a, b, d, e, c, f, g, h, i, j, k, l, n], is_dual)
    } else {
        select_2051([a, b, d, e, k, l, c, j, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2032([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2033([a, c, d, e, f, g, h, i, j, b, k, l, m, n], is_dual)
    } else {
        select_2046([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2056([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2005([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_2005([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2031([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_2032([a, b, c, d, e, f, g, k, l, j, n, o, m, p], is_dual)
    } else {
        select_2056([a, b, d, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2002([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2003([a, b, d, e, c, f, g, h, i, j, l, m, k, n, o], is_dual)
    } else {
        select_2031([a, b, c, d, e, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1900([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < n) || (is_dual && c > n) {
        select_1901([a, b, d, e, f, g, l, m, j, k, n, c, o, p], is_dual)
    } else {
        select_2002([a, b, d, e, f, c, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1808([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_1809([a, b, c, d, g, h, i, e, f, j, l, m, k, n, o, p], is_dual)
    } else {
        select_1900([a, b, c, d, e, f, g, h, i, j, k, l, m, o, p, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_1807([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1808([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    } else {
        select_1808([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1806([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1807([a, b, c, d, e, f, g, h, i, j, l, m, n, k, o, p], is_dual)
    } else {
        select_1807([a, b, c, d, e, g, f, h, i, j, k, m, n, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1805([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1806([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_1806([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1804([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1805([a, b, c, d, e, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_1805([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1236([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < o) || (is_dual && j > o) {
        select_1237([a, b, c, d, e, f, g, h, i, k, l, m, n, o, j, p], is_dual)
    } else {
        select_1804([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_948([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < o) || (is_dual && m > o) {
        select_949([a, b, c, d, e, f, g, h, i, j, k, l, n, o, m, p], is_dual)
    } else {
        select_1236([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 2
fn select_2070([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_75([a, d, e, b, f, h, g, i, j, k, l], is_dual)
    } else {
        select_116([a, b, c, f, i, j, g, h, l, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_2069([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2070([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_2070([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_2068([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_2069([f, g, e, d, a, b, j, k, h, i, l, m], is_dual)
    } else {
        select_474([f, g, a, b, c, l, h, i, j, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_2073([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_465([a, b, c, d, e, h, i, g, j, k], is_dual)
    } else {
        select_465([a, b, c, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2072([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_74([a, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2073([a, b, c, k, d, e, i, j, h, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2071([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2072([a, b, d, f, g, c, i, h, j, k, l, m, n], is_dual)
    } else {
        select_469([a, b, h, c, e, j, k, i, m, l, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2067([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2068([a, g, h, f, d, b, c, e, j, k, i, l, m], is_dual)
    } else {
        select_2071([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2079([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_121([a, e, g, h, d, i, j], is_dual)
    } else {
        select_163([b, d, c, g, f, e, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2080([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_41([a, b, c, e, f, h, i, g], is_dual)
    } else {
        select_731([a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2078([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2079([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_2080([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2082([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_125([a, b, g, i, j], is_dual)
    } else {
        select_190([a, d, c, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2083([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_173([d, b, c, f, e, g, i], is_dual)
    } else {
        select_262([a, e, d, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2081([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2082([a, b, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_2083([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2077([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2078([a, b, d, e, c, f, g, h, j, i], is_dual)
    } else {
        select_2081([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 1
fn select_2085([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_135([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_305([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2086([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_282([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_282([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_2084([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2085([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2086([a, h, d, e, f, g, b, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2076([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2077([a, b, c, j, d, i, h, k, l, m], is_dual)
    } else {
        select_2084([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_2075([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_102([a, b, d, f, g, c, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2076([a, b, c, e, d, j, k, h, i, m, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2074([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2075([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2075([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2066([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2067([a, b, c, e, f, d, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_2074([a, b, c, d, f, e, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2065([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2066([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o], is_dual)
    } else {
        select_2066([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o], is_dual)
    }
}
/// n = 9, i = 4
fn select_2093([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_340([a, e, b, g, f, h, i], is_dual)
    } else {
        select_201([a, b, c, d, f, e, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_136([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_895([g, c, d, e, f, b, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2092([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2093([g, k, l, a, h, j, b, c, i], !is_dual)
    } else {
        select_2094([a, c, d, e, f, h, g, i, j, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2091([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_103([e, c, i, f, g, d, a, j, h, l, k, m], is_dual)
    } else {
        select_2092([a, b, c, d, j, k, h, i, m, n, o, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2097([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_201([d, h, i, a, g, e, f, b], !is_dual)
    } else {
        select_201([d, h, i, a, g, f, e, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2096([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_398([a, c, b, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_2097([a, c, i, g, h, b, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2095([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_103([e, b, i, f, g, c, a, j, h, l, k, m], is_dual)
    } else {
        select_2096([a, b, d, c, j, k, h, i, m, n, o, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2090([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2091([a, b, c, d, e, f, g, h, i, k, l, j, m, n, o], is_dual)
    } else {
        select_2095([a, b, d, c, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2089([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2090([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2090([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 2
fn select_2102([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_496([a, b, j, e, f, g, h, i, k, l], is_dual)
    } else {
        select_401([c, d, i, e, f, g, h, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_2103([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_21([d, a, b, e, f, c, g, i, h, j], is_dual)
    } else {
        select_301([c, a, b, i, h, j, g], is_dual)
    }
}
/// n = 13, i = 2
fn select_2101([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_2102([b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2103([b, c, a, l, d, e, j, i, k, m], is_dual)
    }
}
/// n = 13, i = 2
fn select_2100([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2101([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_1876([a, b, c, j, f, g, h, i, d, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2106([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_304([c, f, d, e, a, g, h], is_dual)
    } else {
        select_1034([a, b, g, d, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2105([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2106([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_2106([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2104([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_109([a, d, e, f, b, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2105([h, a, b, c, d, i, g, k, j, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_2099([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_2100([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2104([b, c, d, e, l, f, i, a, j, k, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_2109([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_360([d, g, h, a, f, e, b], !is_dual)
    } else {
        select_176([d, b, c, e, f], is_dual)
    }
}
/// n = 14, i = 4
fn select_2108([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_109([a, b, h, d, e, f, g, j, i, k, l, m], is_dual)
    } else {
        select_2109([g, j, n, a, h, m, c, l], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2112([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_606([b, a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_44([i, a, j, b, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2111([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2112([a, b, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_835([b, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_2110([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_103([e, b, i, f, g, c, a, j, h, l, k, m], is_dual)
    } else {
        select_2111([a, b, d, c, j, k, h, i, m, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2107([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_2108([b, c, i, e, f, g, h, k, j, a, l, m, n, o], is_dual)
    } else {
        select_2110([b, a, c, d, e, f, g, h, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2098([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2099([a, c, b, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_2107([a, c, e, d, f, g, h, i, j, k, b, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2088([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_2089([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o], is_dual)
    } else {
        select_2098([a, b, d, c, f, g, h, i, j, e, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 4
fn select_2115([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_443([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_443([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2114([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_803([a, b, h, d, f, g, c, i, j, k, l], is_dual)
    } else {
        select_2115([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2117([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1060([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_1060([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2119([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_644([a, b, c, f, g, e, h], is_dual)
    } else {
        select_814([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2118([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1675([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_2119([a, b, e, c, f, d, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2116([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2117([a, b, c, h, i, f, g, d], !is_dual)
    } else {
        select_2118([a, b, c, h, i, f, g, e], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2114([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2116([a, b, c, h, l, d, k, e, j], !is_dual)
    }
}
/// n = 15, i = 4
fn select_2087([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_2088([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2113([a, b, c, d, e, k, l, j, m, f, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2064([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_2065([a, b, c, d, e, f, g, i, k, j, l, m, n, o, p], is_dual)
    } else {
        select_2087([a, b, c, d, e, f, h, g, l, j, k, n, m, o, p], is_dual)
    }
}
/// n = 12, i = 2
fn select_2125([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_635([d, j, f, g, b, c, a, h, i, k, l], is_dual)
    } else {
        select_635([e, i, f, g, b, c, a, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2124([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2006([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    } else {
        select_2125([b, c, d, a, f, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2130([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([c, d, e, f, g], is_dual)
    } else {
        select_29([a, b, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_494([b, c, h, d, e, f, g, i, j, k], is_dual)
    } else {
        select_2130([a, i, d, e, f, g, h, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2132([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_32([a, i, b, g, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2131([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_496([b, h, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_2132([a, b, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2128([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2129([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_2131([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2134([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_910([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_124([e, a, d, b, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2133([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_855([c, b, d, a, e, f, g, h], is_dual)
    } else {
        select_2134([b, c, g, d, a, f, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_2127([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_2128([a, c, b, i, e, f, g, h, j, k, m, l], is_dual)
    } else {
        select_2133([a, c, b, k, d, l, i, m, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_2126([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2127([a, c, b, d, e, f, g, h, j, i, k, l, n], is_dual)
    } else {
        select_2127([b, d, a, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_2123([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2124([b, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_2126([a, b, c, d, e, f, g, k, i, j, m, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2122([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2123([a, c, b, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    } else {
        select_2123([b, c, a, d, e, f, g, h, i, k, l, j, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2121([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2122([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o], is_dual)
    } else {
        select_2122([b, c, d, e, f, g, h, i, a, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2120([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < m) || (is_dual && c > m) {
        select_1901([a, b, d, e, f, g, h, l, j, k, m, c, n, o], is_dual)
    } else {
        select_2121([a, b, d, e, f, c, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2063([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_2064([a, b, c, d, g, h, e, i, f, j, l, k, m, n, o, p], is_dual)
    } else {
        select_2120([a, b, c, d, e, f, g, h, l, j, k, m, o, p, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2062([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2063([g, h, i, d, e, f, b, c, a, k, m, j, n, l, o, p], is_dual)
    } else {
        select_2063([g, h, i, d, f, e, b, c, a, k, l, j, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2061([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2062([j, h, i, a, f, g, b, c, d, m, e, k, l, n, o, p], is_dual)
    } else {
        select_2062([j, h, i, e, f, g, b, c, d, m, a, k, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2060([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2061([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_2061([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2059([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2060([a, b, c, d, e, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_2060([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_2147([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_774([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1092([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2149([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_215([b, d, f, i, h, k], is_dual)
    } else {
        select_215([a, c, e, j, g, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2148([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2149([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1092([c, i, f, e, a, h, k, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_2146([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2147([a, c, j, e, f, i, l, g, k, n], is_dual)
    } else {
        select_2148([a, c, b, f, d, g, i, h, k, j, m, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2151([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_105([a, j, d, e, f, h, k, i, l], is_dual)
    } else {
        select_243([a, b, l, c, m, g, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_2150([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2151([a, b, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_866([a, c, e, f, g, l, i, j, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_2145([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2146([a, c, d, e, j, f, b, h, i, k, m, l, n, o], is_dual)
    } else {
        select_2150([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_2154([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_242([b, e, c, a, g, f], is_dual)
    } else {
        select_795([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2153([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_83([c, d, b, a, e, f, g, h, i], is_dual)
    } else {
        select_2154([b, c, d, h, a, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2152([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2153([a, b, c, d, e, h, g, j, i, k], is_dual)
    } else {
        select_698([a, c, d, f, b, e, g, h, i, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_2144([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_2145([a, b, d, c, f, e, g, i, h, j, k, l, m, o, n], is_dual)
    } else {
        select_2152([b, a, c, e, k, g, h, j, l, n, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_2158([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1062([a, c, d, b, e, f], is_dual)
    } else {
        select_345([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2157([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_349([b, a, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2158([a, j, f, k, c, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2156([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2157([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_2157([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2160([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_520([b, c, d, e, a, g, f, h], is_dual)
    } else {
        select_578([g, i, f, j, a, b, h, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2162([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_340([a, d, c, f, e, h, g], is_dual)
    } else {
        select_344([a, h, i, d, b, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2161([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1175([a, e, i, b, f, h, g, d, c], !is_dual)
    } else {
        select_2162([a, f, i, e, h, b, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2159([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2160([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_2161([g, f, i, j, a, b, c, h, d], !is_dual)
    }
}
/// n = 14, i = 4
fn select_2155([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2156([a, b, c, e, g, k, l, h, j, n, m], is_dual)
    } else {
        select_2159([c, a, b, d, f, m, n, i, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2143([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2144([c, b, d, e, a, g, f, h, j, i, l, n, k, o, m], is_dual)
    } else {
        select_2155([a, b, c, d, e, i, g, j, k, l, h, m, n, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_2167([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1191([b, c, f, a, d, e, g, h, i, j], is_dual)
    } else {
        select_1092([b, h, f, c, a, g, j, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_2166([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2167([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_215([a, i, e, f, c, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2170([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_360([a, b, f, d, e, g, h], is_dual)
    } else {
        select_42([a, c, e, d, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_2169([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2170([j, h, l, b, a, k, g, c], !is_dual)
    } else {
        select_1627([b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2172([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_360([d, e, h, a, b, g, f], !is_dual)
    } else {
        select_731([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_353([b, c, d, g, e, f, h, i], is_dual)
    } else {
        select_2172([h, g, j, b, a, i, e, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2168([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2169([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_2171([b, a, h, d, c, g, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2165([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2166([c, b, d, f, a, e, g, h, j, i], is_dual)
    } else {
        select_2168([b, a, c, f, d, e, g, i, j, h, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_2174([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_104([b, c, d, e, a, f, g, i, h, j], is_dual)
    } else {
        select_63([b, c, h, d, e, a, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2176([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_353([a, g, c, i, b, f, h, j], is_dual)
    } else {
        select_1466([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2177([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1387([c, a, d, e, f, b, g, h, j, i], is_dual)
    } else {
        select_1387([c, b, d, e, f, a, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2175([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2176([c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2177([a, b, c, e, f, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2173([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_2174([b, c, d, g, a, f, j, i, k, l], is_dual)
    } else {
        select_2175([b, a, c, e, d, i, h, l, k, m, j, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2164([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_2165([b, a, c, e, l, f, i, m, h, k, n, o], is_dual)
    } else {
        select_2173([a, b, c, d, f, g, h, i, j, k, n, l, m, o], is_dual)
    }
}
/// n = 10, i = 4
fn select_2182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_125([h, a, b, i, j], is_dual)
    } else {
        select_1027([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2183([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_211([d, b, c, e, f], is_dual)
    } else {
        select_269([d, g, h, e, a, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2181([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2182([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2183([e, c, d, a, f, g, h, j], is_dual)
    }
}
/// n = 7, i = 1
fn select_2185([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_215([d, a, b, g, e, f], is_dual)
    } else {
        select_215([d, a, c, f, e, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_2184([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2185([c, d, e, b, i, g, h], is_dual)
    } else {
        select_1536([a, b, c, d, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2180([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2181([a, b, c, h, g, i, j, k, f, l], is_dual)
    } else {
        select_2184([b, c, d, a, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2187([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_350([b, c, d, a, e, f, g], is_dual)
    } else {
        select_449([a, f, b, c, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2186([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_352([a, b, c, g, h, i, j, f, k], is_dual)
    } else {
        select_2187([a, c, f, e, d, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_2179([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2180([a, b, d, j, f, i, g, h, l, k, n, m], is_dual)
    } else {
        select_2186([a, b, c, e, k, g, i, m, j, n, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2191([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1093([b, e, d, f, h, i, g], is_dual)
    } else {
        select_1093([a, e, c, g, h, j, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_2192([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_281([b, c, a, e, g, h, i, f], is_dual)
    } else {
        select_269([e, a, f, d, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2190([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2191([b, c, a, e, d, f, g, i, h, j], is_dual)
    } else {
        select_2192([c, f, d, e, a, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2193([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_350([c, f, e, d, g, h, i], is_dual)
    } else {
        select_95([a, b, c, d, h, f, g, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2189([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2190([a, b, c, k, e, g, j, m, i, n], is_dual)
    } else {
        select_2193([b, c, d, i, f, g, j, h, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2195([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_934([a, c, d, e, h, g, i, j], is_dual)
    } else {
        select_1099([a, c, b, i, f, j, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_2194([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_349([g, a, b, k, d, h, m, j, n], is_dual)
    } else {
        select_2195([a, c, j, e, f, g, i, l, n, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_2188([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_2189([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2194([a, d, b, f, c, e, g, h, j, k, l, m, i, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2178([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2179([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2188([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2163([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_2164([b, c, d, e, a, f, g, h, i, j, k, m, n, l, o], is_dual)
    } else {
        select_2178([b, a, c, d, e, i, g, j, k, l, m, h, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2142([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2143([a, b, c, d, f, e, g, h, j, k, i, m, l, n, o], is_dual)
    } else {
        select_2163([a, b, c, e, f, d, g, h, i, k, l, j, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2141([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2142([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2142([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2140([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2141([a, b, c, e, d, f, g, h, j, k, l, i, m, n, o], is_dual)
    } else {
        select_2141([a, b, d, e, c, f, g, h, i, k, l, j, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2139([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2140([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o], is_dual)
    } else {
        select_2140([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2138([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < n) || (is_dual && k > n) {
        select_709([a, b, c, d, e, g, f, h, l, j, m, n, o, k], is_dual)
    } else {
        select_2139([a, b, c, d, e, g, f, h, i, j, k, l, m, o, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2137([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2138([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o], is_dual)
    } else {
        select_2138([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2136([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2137([a, b, c, d, e, f, g, i, j, k, h, l, m, n, o], is_dual)
    } else {
        select_2137([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o], is_dual)
    }
}
/// n = 9, i = 4
fn select_2208([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_98([f, g, h, i, a, e, d, c], !is_dual)
    } else {
        select_234([c, a, b, e, d, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2207([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2208([f, k, i, j, g, b, a, d, h], !is_dual)
    } else {
        select_1298([b, c, e, g, f, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2209([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_353([a, c, b, g, f, h, e, i], is_dual)
    } else {
        select_1092([b, c, d, a, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2206([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2207([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2209([b, d, g, e, f, c, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2211([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([a, c, e, d, f, g, h], is_dual)
    } else {
        select_453([b, a, c, d, g, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2210([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2211([b, c, d, e, a, g, f, i, h, j], is_dual)
    } else {
        select_1153([a, b, c, d, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2205([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2206([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_2210([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2213([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_490([a, b, d, e, c, f, h, g, j], is_dual)
    } else {
        select_358([d, a, c, b, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2212([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2213([b, d, c, a, e, f, h, g, j, i], is_dual)
    } else {
        select_338([a, j, i, b, h, f, g, d, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2204([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2205([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2212([a, c, d, e, h, g, b, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2203([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2204([a, b, d, c, e, f, h, i, g, j, k], is_dual)
    } else {
        select_2204([a, c, d, b, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2202([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2203([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2203([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2201([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2202([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_2202([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2200([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2201([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_2201([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2199([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2200([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2201([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2222([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([b, c, d, e, f, g], is_dual)
    } else {
        select_1194([f, h, i, a, b, c, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2221([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2222([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_2222([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2220([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2153([a, b, d, f, c, e, g, h, j, i], is_dual)
    } else {
        select_2221([a, b, c, e, d, g, i, k, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_2226([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([a, c, d, f, g], is_dual)
    } else {
        select_32([a, g, b, e, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_2225([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_774([a, f, b, d, g, h, e, i, j], is_dual)
    } else {
        select_2226([a, d, c, e, g, i, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2228([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_205([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_205([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2229([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_775([c, a, d, b, e, f, g, h], is_dual)
    } else {
        select_163([b, f, d, e, a, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2227([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2228([a, d, c, g, e, i, f, h, j], is_dual)
    } else {
        select_2229([a, f, d, b, h, e, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2224([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2225([a, g, b, d, h, f, e, i, k, j], is_dual)
    } else {
        select_2227([a, f, c, d, e, g, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_2231([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_300([a, e, d, f, g, b], is_dual)
    } else {
        select_1092([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_2232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_286([a, f, d, e, i, h], is_dual)
    } else {
        select_968([a, b, h, c, f, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2230([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2231([b, c, e, a, f, j, i, h], is_dual)
    } else {
        select_2232([a, e, d, b, c, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2223([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2224([b, d, c, e, g, h, f, a, i, j, k], is_dual)
    } else {
        select_2230([b, a, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2219([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2220([a, b, c, i, g, d, h, f, k, j, l], is_dual)
    } else {
        select_2223([a, b, d, c, e, h, i, f, j, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2218([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2219([a, b, c, d, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_2219([a, c, b, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2217([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2218([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2218([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2216([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2217([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_2217([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2215([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2216([a, b, c, d, e, f, g, h, j, i, l, k], is_dual)
    } else {
        select_2216([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2214([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2215([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_2201([a, b, c, d, e, j, f, h, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2198([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_2199([a, b, c, d, e, i, f, j, k, l, h], is_dual)
    } else {
        select_2214([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2197([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2198([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2198([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2242([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1705([b, a, e, d, g, f, i, j, h], is_dual)
    } else {
        select_798([b, a, f, c, h, e, j, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2244([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_286([a, b, d, e, g, h], is_dual)
    } else {
        select_1933([a, b, h, c, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2243([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_447([b, g, c, d, a, i, h], is_dual)
    } else {
        select_2244([b, a, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2241([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2242([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_2243([c, b, a, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2249([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_184([b, c, d, e, g, f, h], is_dual)
    } else {
        select_42([h, i, j, a, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2248([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2249([a, d, b, c, e, g, h, f, i, j], is_dual)
    } else {
        select_375([b, d, c, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2247([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1563([h, i, j, a, e, g, b, f, d], !is_dual)
    } else {
        select_2248([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2246([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2247([a, b, f, c, h, e, j, i, g, k], is_dual)
    } else {
        select_798([a, b, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2245([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2246([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_2243([c, b, a, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2240([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2241([a, c, d, b, e, f, h, i, g, j], is_dual)
    } else {
        select_2245([a, b, d, c, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2254([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, c, d, e, f, g, h], is_dual)
    } else {
        select_346([e, i, j, a, f, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2255([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_360([a, b, g, d, j, e, i], is_dual)
    } else {
        select_236([a, e, c, d, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2253([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2254([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2255([b, d, c, e, g, f, a, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2252([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2253([a, c, b, d, f, e, g, j, i, h], is_dual)
    } else {
        select_339([a, b, c, g, f, h, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2251([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2252([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_338([i, e, j, a, h, f, g, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2250([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_337([b, f, h, c, e, a, i, g, j], is_dual)
    } else {
        select_2251([b, a, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2239([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2240([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2250([a, c, d, h, f, i, g, j, b, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2238([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2239([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_2239([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2260([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_579([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_807([a, b, c, d, g, h, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2261([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_579([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_1046([a, b, i, f, j, c, h, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2259([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2260([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_2261([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2258([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_809([a, b, c, i, j, d, e, h, g], !is_dual)
    } else {
        select_2259([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2263([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2260([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_2260([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_2266([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1062([a, c, d, b, e, f], is_dual)
    } else {
        select_1062([b, c, d, a, e, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_2265([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_2266([a, b, c, g, e, f], !is_dual)
    } else {
        select_1629([a, b, e, g, c, f, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2267([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1865([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1865([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2264([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2265([a, b, c, g, d, h, i], is_dual)
    } else {
        select_2267([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2262([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2263([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2264([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2257([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2258([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2262([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2272([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_353([h, i, g, f, e, c, d, a], !is_dual)
    } else {
        select_353([g, i, h, e, f, d, c, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2273([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_718([g, d, h, a, f, b], !is_dual)
    } else {
        select_359([d, h, g, a, f, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2271([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2272([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_2273([h, g, c, e, i, d, f, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2270([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2271([a, c, d, b, f, g, e, h, i], is_dual)
    } else {
        select_2271([b, c, e, a, f, g, d, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2269([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_337([e, f, g, i, b, c, a, h, d], !is_dual)
    } else {
        select_2270([b, c, d, e, f, g, h, a, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2268([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2269([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_2269([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2256([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2257([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2268([a, b, c, d, j, g, e, i, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2237([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2238([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2256([a, b, c, d, e, h, i, j, k, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2237([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2237([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2278([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_469([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1303([a, b, c, d, e, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2277([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2278([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_2278([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2276([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2277([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1301([a, b, c, d, e, f, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2276([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1244([a, b, c, d, e, g, i, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2275([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2275([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2235([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2236([a, b, c, d, e, f, i, j, k, g, l], is_dual)
    } else {
        select_2274([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2287([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_340([d, f, c, h, e, i, g], is_dual)
    } else {
        select_345([a, b, g, d, i, j, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2286([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1175([d, e, c, g, a, f, h, j, i], is_dual)
    } else {
        select_2287([b, a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2285([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2286([c, a, d, e, b, g, f, h, i, j], is_dual)
    } else {
        select_2286([c, b, d, f, a, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2284([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2285([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2285([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2283([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2284([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_2284([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2292([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1981([h, e, b, c, a, g, f], !is_dual)
    } else {
        select_799([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2291([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1944([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2292([g, a, i, k, b, j, c, h], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2294([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_300([g, h, e, i, a, b], !is_dual)
    } else {
        select_644([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1279([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_2294([g, a, j, k, b, i, c, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2290([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2291([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_2293([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2289([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2290([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2290([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2297([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_577([c, e, b, a, f, d, g], is_dual)
    } else {
        select_2154([b, c, e, d, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_520([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_1046([a, g, i, f, j, b, h, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2297([a, g, i, j, f, b, c, h], !is_dual)
    } else {
        select_2298([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2295([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2296([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_2296([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2288([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2289([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2295([a, b, c, h, e, f, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2282([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2283([a, b, c, d, h, f, i, e, k, j], is_dual)
    } else {
        select_2288([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1381([a, b, c, e, f, h, i, j], is_dual)
    } else {
        select_814([a, h, c, d, f, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2305([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_211([a, c, d, e, f], is_dual)
    } else {
        select_477([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2303([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2304([b, c, a, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2305([a, f, b, g, h, j, e, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2308([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_547([a, c, d, e, f, h, g, j], is_dual)
    } else {
        select_393([g, h, i, b, a, f, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2309([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_228([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_262([g, i, e, h, a, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2307([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2308([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_2309([a, c, b, d, e, g, f, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2311([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1346([a, b, f, d, g, h, i], is_dual)
    } else {
        select_141([a, d, c, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2311([e, j, i, h, a, g, f, b, d], !is_dual)
    } else {
        select_128([b, a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2306([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2307([a, b, f, d, e, h, g, j, i, k], is_dual)
    } else {
        select_2310([b, a, g, c, e, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2303([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2306([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2314([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_911([a, g, b, f, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2313([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2314([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_587([a, c, d, e, b, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2312([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2313([a, b, d, c, g, f, i, j, h], is_dual)
    } else {
        select_579([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2302([a, b, c, e, d, g, h, i, f, j, k], is_dual)
    } else {
        select_2312([a, c, d, e, b, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2301([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2301([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2316([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_715([a, b, d, e, f, c, h, j, i], is_dual)
    } else {
        select_18([a, b, c, d, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2321([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_189([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_390([e, h, i, a, g, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2320([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2321([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_2321([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2319([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2320([a, b, e, c, g, h, f, j, i], is_dual)
    } else {
        select_2320([a, b, e, d, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2322([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2320([a, b, e, c, d, g, f, h, i], is_dual)
    } else {
        select_1589([a, b, f, e, c, g, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_2318([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2319([a, b, d, g, e, f, i, h, k, j], is_dual)
    } else {
        select_2322([a, b, f, h, c, j, g, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2324([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_551([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_545([a, g, c, d, i, f, h, e, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2323([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2324([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2324([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2317([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2318([a, b, e, c, f, d, g, h, i, j, k], is_dual)
    } else {
        select_2323([a, b, e, d, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2315([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2316([a, b, d, e, c, f, g, i, h, j, k], is_dual)
    } else {
        select_2317([a, b, d, e, f, g, h, i, c, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2299([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_2300([a, b, c, e, f, i, j, h, d, k, l], is_dual)
    } else {
        select_2315([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2281([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2282([a, b, c, d, e, f, i, j, k, h, l], is_dual)
    } else {
        select_2299([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2280([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2281([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_2281([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2329([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_481([a, b, c, d, f, g, h, j, k, l], is_dual)
    } else {
        select_469([a, b, c, d, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2332([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1373([a, g, b, c, d, f, h, i], is_dual)
    } else {
        select_1373([a, f, b, c, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2333([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_855([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_520([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2331([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2332([a, c, d, e, h, g, b, i, j], is_dual)
    } else {
        select_2333([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2330([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2331([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_818([a, b, g, d, h, i, c, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2328([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2329([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_2330([a, b, c, e, j, f, d, i, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_2336([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1271([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1271([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2335([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_811([a, b, c, d, k, i, j, h], !is_dual)
    } else {
        select_2336([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2334([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2335([a, b, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1302([a, b, c, d, e, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2327([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_2328([a, b, c, d, e, i, g, h, j, k, l, m, n], is_dual)
    } else {
        select_2334([a, b, c, d, f, e, k, i, l, j, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_2341([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_449([a, b, e, h, i, g, c, f], !is_dual)
    } else {
        select_814([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_2340([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_48([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2341([a, b, h, l, c, k, j, d, i], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2343([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_814([a, c, b, d, e, f, g], is_dual)
    } else {
        select_164([a, e, h, b, c, g, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2342([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2343([a, g, b, k, c, j, i, h], !is_dual)
    } else {
        select_483([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2339([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2340([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2342([a, b, h, e, f, g, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2338([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1681([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_2339([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2337([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1275([a, b, c, d, g, e, f, k, l, j, m, n], is_dual)
    } else {
        select_2338([a, b, c, d, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2326([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_2327([a, b, c, d, g, f, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_2337([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_2349([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_86([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_471([a, d, h, e, f, g, b, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2348([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2349([a, b, c, e, d, j, h, i, l, k, m, n], is_dual)
    } else {
        select_82([b, h, f, g, d, c, a, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2350([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1102([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_654([a, j, k, g, d, b, c, i], !is_dual)
    }
}
/// n = 14, i = 4
fn select_2347([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_2348([a, c, b, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2350([a, c, i, b, d, j, k, l, m, n, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_2352([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_635([c, i, f, g, d, e, a, h, k, j, l], is_dual)
    } else {
        select_2092([a, b, c, d, e, j, h, i, l, m, n, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2356([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_261([a, b, d, f, g, e, h, i], is_dual)
    } else {
        select_255([a, e, d, c, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2355([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_392([f, c, d, a, e, h, g, j], is_dual)
    } else {
        select_2356([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_2357([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_718([a, b, c, d, e, f], is_dual)
    } else {
        select_340([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2354([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2355([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_2357([e, j, f, a, b, i, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2360([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_360([a, c, g, e, f, h, j], is_dual)
    } else {
        select_98([a, b, d, f, e, g, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2359([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1088([a, b, d, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_2360([a, b, h, c, f, j, g, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2359([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1449([a, g, d, e, f, b, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2353([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_2354([a, b, h, c, j, g, k, i, l, f], is_dual)
    } else {
        select_2358([b, c, a, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2351([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_2352([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2353([b, c, d, e, j, h, i, l, k, a, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2346([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2347([a, b, c, e, d, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_2351([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2345([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2346([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_2346([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2344([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2345([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    } else {
        select_2345([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2325([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2326([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_2344([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2279([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_2280([a, b, c, d, e, f, h, k, l, g, m, n], is_dual)
    } else {
        select_2325([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2234([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_2235([a, b, c, d, e, f, h, k, l, m, g, n], is_dual)
    } else {
        select_2279([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2244([b, a, e, c, d, g, i, j, k, h], is_dual)
    } else {
        select_520([b, c, d, f, a, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2242([b, c, e, d, g, h, j, a, i, k], is_dual)
    } else {
        select_2369([b, c, a, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2367([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2368([a, b, d, e, c, f, g, i, j, h, k], is_dual)
    } else {
        select_2220([a, b, c, d, h, e, i, g, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2366([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2367([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_2367([a, c, b, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2365([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2366([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_2366([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2364([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2365([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_2365([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2376([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_606([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_453([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2375([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2158([a, b, h, i, c, d, g], !is_dual)
    } else {
        select_2376([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2374([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2375([a, b, c, d, e, f, h, j, g], is_dual)
    } else {
        select_2375([a, c, b, e, d, f, g, i, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_2379([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_36([a, c, b, d, e, g, f, h, i], is_dual)
    } else {
        select_62([c, f, d, e, g, b, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2380([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([b, c, d, e, f, g], is_dual)
    } else {
        select_345([f, h, i, a, b, c, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2378([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2379([a, c, e, b, d, f, g, h, i], is_dual)
    } else {
        select_2380([a, b, g, c, d, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2377([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2378([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2378([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2373([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2374([a, b, c, d, h, i, g, k, j, l], is_dual)
    } else {
        select_2377([a, c, b, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2372([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2373([a, b, d, c, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_2373([a, c, d, b, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2371([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2372([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_2372([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2370([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2371([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_2371([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2363([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2364([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2370([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_420([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_420([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2388([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_600([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1629([a, b, h, e, f, g, c], !is_dual)
    }
}
/// n = 11, i = 3
fn select_2386([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2387([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2388([a, b, i, d, c, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2390([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2320([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_115([a, b, h, c, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2392([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_833([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_833([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2391([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1589([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_2392([a, b, h, e, i, g, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2389([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2390([a, b, c, e, d, g, f, h, i], is_dual)
    } else {
        select_2391([a, b, f, e, c, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2385([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2386([a, b, c, h, e, f, g, i, j, l, k], is_dual)
    } else {
        select_2389([a, b, c, j, d, k, h, l, i, m], is_dual)
    }
}
/// n = 10, i = 1
fn select_2397([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_137([e, f, g, h, i], is_dual)
    } else {
        select_137([a, b, c, d, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2396([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_136([a, j, e, f, g, h, i, k, l, m], is_dual)
    } else {
        select_2397([b, c, d, i, e, f, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2395([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2396([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    } else {
        select_2396([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2399([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_671([b, h, c, a, g, i, j], is_dual)
    } else {
        select_136([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2398([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1646([a, g, d, e, f, b, h, i, j], is_dual)
    } else {
        select_2399([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2394([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2395([g, h, a, b, c, d, e, f, i, j, k, l, m], is_dual)
    } else {
        select_2398([g, h, k, a, b, c, i, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2401([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2106([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_2106([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2400([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2401([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_2401([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2393([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_2394([d, e, f, g, h, i, a, b, c, j, k, l, m], is_dual)
    } else {
        select_2400([a, b, c, d, e, f, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2384([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_2385([a, b, c, e, g, h, i, j, d, k, l, m, n], is_dual)
    } else {
        select_2393([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2404([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_482([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_482([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2403([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2386([a, b, c, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_2404([a, b, c, e, f, g, h, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_2408([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_243([a, c, e, b, h, f, g], is_dual)
    } else {
        select_243([a, b, d, c, h, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_2407([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2408([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_583([a, f, c, e, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2406([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1591([a, b, g, j, c, h, i, f, d], !is_dual)
    } else {
        select_2407([a, b, c, e, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2409([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1675([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_812([a, b, e, i, f, c, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2405([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2406([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2409([a, b, f, e, c, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2402([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2403([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2405([a, b, c, j, e, d, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2383([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2384([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2402([a, b, c, d, j, g, h, i, e, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2412([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_581([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_1255([a, b, d, g, f, h, c, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2415([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_243([a, c, d, b, f, e, g], is_dual)
    } else {
        select_164([a, e, h, b, f, g, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2414([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2415([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_2415([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2413([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_818([a, b, c, g, i, h, d, f, e], !is_dual)
    } else {
        select_2414([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2411([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2412([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_2413([a, b, c, j, f, i, d, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2300([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2411([a, b, c, g, e, i, h, j, d, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_2382([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_2383([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2410([a, b, c, d, f, k, l, j, e, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2381([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_2216([a, b, c, d, e, g, k, l, j, f, m, n], is_dual)
    } else {
        select_2382([a, b, c, d, e, g, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2362([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_2363([a, b, c, d, e, f, g, k, l, m, j, n], is_dual)
    } else {
        select_2381([a, b, c, d, e, g, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2361([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2362([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_2362([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2233([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_2234([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_2361([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2196([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_2197([a, b, c, d, e, f, g, k, l, m, h, n], is_dual)
    } else {
        select_2233([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2135([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && o < i) || (is_dual && o > i) {
        select_2136([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2196([a, b, c, d, e, f, g, h, j, l, m, n, o, i], is_dual)
    }
}
/// n = 16, i = 4
fn select_2058([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < j) || (is_dual && o > j) {
        select_2059([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_2135([a, b, c, d, e, f, g, h, i, k, m, n, o, j, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2057([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < o) || (is_dual && m > o) {
        select_2058([a, b, c, d, e, f, g, h, i, j, k, l, n, o, m, p], is_dual)
    } else {
        select_1236([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_947([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < p) || (is_dual && o > p) {
        select_948([a, b, c, d, e, f, g, h, i, j, l, k, m, n, p, o], is_dual)
    } else {
        select_2057([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 12, i = 3
fn select_2431([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_938([a, c, i, e, f, g, h, j, l], is_dual)
    } else {
        select_938([b, d, h, e, f, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2433([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_215([b, a, d, e, f, g], is_dual)
    } else {
        select_141([a, c, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2432([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2433([a, b, d, e, i, g, k, h, j], is_dual)
    } else {
        select_2433([a, c, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2430([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2431([b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2432([a, b, c, k, d, e, h, i, j, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_2436([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1093([a, g, b, c, f, i, h], is_dual)
    } else {
        select_37([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_2435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_304([c, h, d, e, f, g, i], is_dual)
    } else {
        select_2436([a, b, g, d, e, f, i, h, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_2437([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([b, c, d, g, f, h], is_dual)
    } else {
        select_190([a, b, h, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_2434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2435([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_2437([f, c, d, e, b, h, g, i, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_2429([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2430([a, b, c, d, e, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2434([a, c, f, g, j, h, k, i, m, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2441([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_27([a, c, j, e, f, i, h, l], is_dual)
    } else {
        select_182([b, e, f, d, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2440([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_301([c, a, b, j, i, k, h], is_dual)
    } else {
        select_2441([c, d, e, f, a, b, g, i, h, j, l, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_62([a, c, d, e, h, g, i], is_dual)
    } else {
        select_375([a, b, g, f, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2444([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_215([b, f, d, e, g, h], is_dual)
    } else {
        select_731([a, b, c, h, i, f, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2442([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2443([a, c, d, f, i, g, h, j, l, k, m], is_dual)
    } else {
        select_2444([a, b, c, e, k, g, j, m, i, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2439([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2440([b, g, c, d, e, f, i, h, j, k, m, l], is_dual)
    } else {
        select_2442([a, c, b, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_2447([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1346([a, c, f, e, g, d, h], is_dual)
    } else {
        select_130([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2448([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_997([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_1089([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2446([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2447([b, c, f, e, a, g, h, i], is_dual)
    } else {
        select_2448([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2449([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1178([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_32([e, i, g, a, b, h], !is_dual)
    }
}
/// n = 11, i = 3
fn select_2445([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2446([a, b, i, c, e, f, k, h, j], is_dual)
    } else {
        select_2449([a, b, h, d, e, g, j, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2438([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_2439([c, a, b, e, d, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_2445([a, c, b, e, h, j, i, l, k, g, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2428([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2429([b, c, a, e, d, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_2438([b, c, i, e, f, g, h, a, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2452([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1621([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1064([a, c, g, e, b, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2455([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_27([a, d, e, b, c, f, g, h], is_dual)
    } else {
        select_360([g, f, i, a, b, h, c], !is_dual)
    }
}
/// n = 8, i = 2
fn select_2456([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_106([b, a, d, e, f, h, g], is_dual)
    } else {
        select_269([b, a, g, c, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_2454([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2455([a, g, b, d, e, f, i, h, j], is_dual)
    } else {
        select_2456([f, a, c, d, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2458([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_106([a, c, d, e, f, h, g], is_dual)
    } else {
        select_627([h, f, i, a, g, b, c], !is_dual)
    }
}
/// n = 11, i = 3
fn select_2457([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_305([a, c, d, e, f, g, i, h], is_dual)
    } else {
        select_2458([a, h, b, c, d, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2454([a, c, h, e, f, g, b, i, j, k], is_dual)
    } else {
        select_2457([a, c, e, f, b, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2451([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2452([a, b, d, c, j, h, i, g, k], is_dual)
    } else {
        select_2453([c, a, d, b, e, f, h, g, j, i, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2460([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_151([b, h, d, e, f, g, a, i, j, k], is_dual)
    } else {
        select_1465([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2459([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1682([a, b, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2460([a, b, c, e, f, i, g, h, k, l, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_2450([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2451([a, c, b, d, e, l, i, h, k, n, m, o], is_dual)
    } else {
        select_2459([a, c, d, g, f, k, i, h, j, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2427([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2428([b, d, c, a, f, h, g, i, e, j, k, l, m, n], is_dual)
    } else {
        select_2450([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_2465([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_304([c, f, d, e, b, g, h], is_dual)
    } else {
        select_2019([a, b, g, d, e, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2464([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2465([a, b, c, h, i, j, g, l, k, m], is_dual)
    } else {
        select_1506([a, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_2466([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_104([a, b, d, c, i, j, h, k, m, l], is_dual)
    } else {
        select_1506([a, g, e, f, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2463([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2464([a, b, c, e, f, g, k, i, j, l, h, m, n], is_dual)
    } else {
        select_2466([a, c, b, d, f, g, e, h, i, j, l, k, m], is_dual)
    }
}
/// n = 12, i = 2
fn select_2468([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_866([a, b, c, h, i, j, g, l, k], is_dual)
    } else {
        select_1506([a, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_2467([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2468([c, a, b, e, f, g, k, i, j, l, h, m], is_dual)
    } else {
        select_2466([c, b, a, d, f, g, e, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2462([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2463([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_2467([a, d, b, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_2470([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1441([a, b, c, g, e, i, h, f, j, k], is_dual)
    } else {
        select_736([b, c, a, e, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2471([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_318([c, a, d, e, g, b, h, i, j, k], is_dual)
    } else {
        select_966([a, b, c, f, d, e, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2469([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2470([b, c, d, e, g, i, j, h, a, k, l], is_dual)
    } else {
        select_2471([b, c, d, a, e, g, f, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_2461([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_2462([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2469([a, c, b, d, e, f, j, m, l, k, i, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2426([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2427([a, b, c, d, e, k, g, h, j, l, i, m, n, o, p], is_dual)
    } else {
        select_2461([b, d, a, e, f, i, g, h, j, l, k, n, m, o], is_dual)
    }
}
/// n = 8, i = 2
fn select_2478([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_38([f, a, c, d, e, h, g], is_dual)
    } else {
        select_38([e, b, c, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2477([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_408([a, c, h, g, f, e, j, i], is_dual)
    } else {
        select_2478([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2480([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_261([c, a, e, f, d, h, i, g], is_dual)
    } else {
        select_173([d, b, c, g, f, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2479([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2480([a, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_326([f, e, c, d, i, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2476([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2477([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2479([b, d, c, e, a, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2475([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1786([a, b, c, h, d, g, f, j, k, i, l], is_dual)
    } else {
        select_2476([a, c, f, d, e, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2482([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1071([a, b, c, e, h, i, g, k, l, j], is_dual)
    } else {
        select_319([b, a, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2484([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_359([h, g, i, b, a, e, c], !is_dual)
    } else {
        select_353([b, c, d, g, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2483([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_490([a, b, c, d, f, h, i, g, k], is_dual)
    } else {
        select_2484([c, a, e, b, f, g, i, j, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_2481([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_2482([a, c, d, g, e, f, h, i, j, k, l, m], is_dual)
    } else {
        select_2483([a, b, c, l, d, h, g, k, m, j, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2474([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_2475([a, b, d, e, j, g, h, c, k, m, l, n], is_dual)
    } else {
        select_2481([a, b, d, e, c, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1178([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_406([j, h, f, e, b, a, i], !is_dual)
    }
}
/// n = 12, i = 3
fn select_2487([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_70([b, c, d, e, g, j, h, i, k], is_dual)
    } else {
        select_2488([a, b, c, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_2491([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_62([b, d, e, f, h, g, i], is_dual)
    } else {
        select_62([a, c, e, g, h, f, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2492([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_189([b, d, e, h, f, g, i, j], is_dual)
    } else {
        select_106([a, d, c, i, g, h, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2490([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2491([c, f, d, b, e, i, h, g, j, k], is_dual)
    } else {
        select_2492([a, d, g, b, e, i, h, f, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2489([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2490([b, a, c, e, d, h, g, f, i, k, j, l], is_dual)
    } else {
        select_2225([a, c, h, e, g, j, i, f, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2486([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2487([c, b, e, a, f, h, g, d, i, j, k, l], is_dual)
    } else {
        select_2489([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2495([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_21([k, a, b, c, d, f, i, j, h, m], is_dual)
    } else {
        select_876([h, a, b, c, d, e, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2497([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_54([b, f, c, d, e, g, h, i, j], is_dual)
    } else {
        select_37([a, h, c, d, e, f, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2498([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_228([a, h, b, e, f, i, g, j], is_dual)
    } else {
        select_2011([a, c, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2496([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2497([a, b, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_2498([a, b, c, j, f, h, i, g, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2494([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2495([a, d, e, f, c, b, h, g, i, k, j, l, m], is_dual)
    } else {
        select_2496([b, c, i, e, f, g, a, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2493([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2494([a, b, e, d, c, j, g, i, h, k, l, m, n], is_dual)
    } else {
        select_167([a, c, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2485([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < n) || (is_dual && l > n) {
        select_2486([a, b, d, c, j, i, g, h, k, m, n, l, o], is_dual)
    } else {
        select_2493([c, d, a, f, e, b, h, j, i, g, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2473([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2474([a, b, c, d, i, f, g, k, j, l, m, h, n, o], is_dual)
    } else {
        select_2485([a, b, d, c, f, e, g, h, j, i, l, m, k, n, o], is_dual)
    }
}
/// n = 8, i = 2
fn select_2504([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_215([e, c, a, d, f, g], is_dual)
    } else {
        select_215([a, b, d, f, e, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_2503([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_738([d, e, b, c, f, g, h, i, j], is_dual)
    } else {
        select_2504([a, e, b, d, j, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_2502([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1875([a, g, b, e, d, h, f, i, j], is_dual)
    } else {
        select_2503([b, a, d, c, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2506([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_59([c, b, g, d, e, f, h, i, j], is_dual)
    } else {
        select_61([a, b, h, j, g, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1527([a, h, f, c, d, e, g, i, j, k], is_dual)
    } else {
        select_1527([b, g, f, c, d, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_2507([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1191([a, h, c, e, f, g, j, k, i, l], is_dual)
    } else {
        select_2508([a, b, e, f, g, d, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_2505([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2506([c, d, h, e, f, g, i, b, j, k, l], is_dual)
    } else {
        select_2507([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_2501([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2502([b, c, j, d, e, h, a, i, l, k], is_dual)
    } else {
        select_2505([b, c, d, e, a, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_2500([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_2501([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    } else {
        select_965([a, b, c, j, f, g, h, d, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_2512([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_224([g, a, c, d, e, f, h, i, j, k], is_dual)
    } else {
        select_422([h, b, c, d, e, f, i, g, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2513([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_776([a, c, b, f, e, i, h, g, j], is_dual)
    } else {
        select_214([c, a, d, e, h, g, f, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_2511([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2512([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2513([a, k, c, b, h, i, g, l, j, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_2516([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_62([b, c, d, e, h, f, g], is_dual)
    } else {
        select_775([a, b, g, c, f, h, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2515([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_353([a, b, g, h, f, i, e, j], is_dual)
    } else {
        select_2516([b, c, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2518([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_215([a, c, d, e, g, h], is_dual)
    } else {
        select_189([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2517([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1079([a, c, b, g, h, i, f, j], is_dual)
    } else {
        select_2518([b, c, a, d, e, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_2514([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2515([a, c, i, e, f, g, h, k, j, l], is_dual)
    } else {
        select_2517([a, b, c, d, j, f, g, i, l, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_2510([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_2511([a, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_2514([a, b, d, l, c, g, i, j, h, k, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2522([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_62([d, e, b, c, g, h, i], is_dual)
    } else {
        select_2011([a, b, c, e, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2521([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2522([b, c, d, a, e, g, f, h, i, j, k], is_dual)
    } else {
        select_1386([a, b, h, g, j, i, k, f], is_dual)
    }
}
/// n = 13, i = 3
fn select_2520([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2521([a, b, d, j, c, g, h, i, l, k, m], is_dual)
    } else {
        select_1050([a, b, e, f, k, g, h, j, m, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2524([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_311([a, g, c, d, e, f, j, h, i], is_dual)
    } else {
        select_814([a, h, b, i, g, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2525([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_21([g, c, d, e, f, a, h, i, j, l], is_dual)
    } else {
        select_243([a, h, i, b, k, g, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2523([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2524([a, b, c, d, e, f, h, i, j, g, k, m], is_dual)
    } else {
        select_2525([b, a, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2519([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2520([b, a, d, h, e, f, i, g, j, l, k, m, n], is_dual)
    } else {
        select_2523([a, b, c, k, e, f, g, i, h, l, n, m, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2509([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2510([c, b, e, a, f, g, i, h, d, j, k, l, m, n], is_dual)
    } else {
        select_2519([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2499([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_2500([d, c, e, f, g, a, h, i, j, l, m, k], is_dual)
    } else {
        select_2509([a, b, c, d, g, e, f, h, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2472([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2473([a, c, d, e, f, g, h, i, j, k, b, l, m, n, o], is_dual)
    } else {
        select_2499([a, c, d, e, b, f, g, h, i, k, j, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2425([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_2426([b, c, a, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_2472([a, c, b, d, e, f, h, m, j, k, l, n, i, o, p], is_dual)
    }
}
/// n = 12, i = 3
fn select_2532([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_181([b, a, g, d, e, f, h, j, i, l], is_dual)
    } else {
        select_1092([a, f, i, c, h, g, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_2534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_22([a, b, c, d, i, g, h], is_dual)
    } else {
        select_739([e, h, a, b, f, g, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2533([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2534([b, c, g, h, a, f, j, k, i, m], is_dual)
    } else {
        select_2185([d, e, j, i, g, h, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2531([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2532([a, b, h, d, e, g, j, i, k, f, l, m], is_dual)
    } else {
        select_2533([b, d, e, a, c, g, f, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2530([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < a) || (is_dual && m > a) {
        select_2531([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1002([b, j, g, m, i, l, a, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_2538([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1027([f, a, c, d, e, g, h, j, i], is_dual)
    } else {
        select_1027([e, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2537([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1128([e, b, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_2538([a, f, c, d, e, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2536([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_220([b, e, f, a, c, d, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2537([i, b, e, f, a, g, k, h, j, m, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2541([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_65([a, b, e, f, i], is_dual)
    } else {
        select_27([b, e, f, c, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_2540([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2541([a, b, c, d, g, i, h, k, j], is_dual)
    } else {
        select_286([a, b, e, f, j, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_2542([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_350([a, b, d, g, i, j, l], is_dual)
    } else {
        select_169([c, e, f, a, b, g, h, j, i, k, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2539([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2540([a, b, e, f, d, j, g, k, i, m, l], is_dual)
    } else {
        select_2542([a, b, c, i, e, f, g, h, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2535([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_2536([a, d, b, c, f, g, i, j, l, k, h, m, n], is_dual)
    } else {
        select_2539([b, c, d, a, f, g, e, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2529([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_2530([a, d, c, f, g, h, i, k, j, b, l, m, n], is_dual)
    } else {
        select_2535([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_2546([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_724([b, f, d, e, a, g, h, i, k], is_dual)
    } else {
        select_384([b, c, d, a, e, g, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2547([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_984([a, b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_97([c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2545([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2546([a, b, c, g, e, f, h, i, k, j, l], is_dual)
    } else {
        select_2547([a, b, c, h, d, f, g, j, k, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2550([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_215([b, c, d, e, f, g], is_dual)
    } else {
        select_923([a, b, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2549([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2550([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_388([f, g, i, j, a, b, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2548([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_656([f, i, j, h, b, a, c, g], !is_dual)
    } else {
        select_2549([b, c, d, a, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2544([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_2545([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2548([b, a, c, g, h, i, k, j, l, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2552([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1646([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_2154([f, h, i, j, b, a, c, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2553([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_636([b, c, d, e, a, f, h, g, i], is_dual)
    } else {
        select_412([b, c, d, g, e, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2551([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2552([a, b, c, d, e, h, i, j, g, k], is_dual)
    } else {
        select_2553([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2543([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2544([a, b, c, e, d, g, h, j, k, l, i, m], is_dual)
    } else {
        select_2551([a, b, c, d, i, f, g, k, j, m, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2528([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_2529([a, d, b, e, c, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_2543([a, b, c, d, e, l, h, i, k, m, n, j, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_2558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_59([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_65([a, g, c, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2559([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_776([a, d, c, b, f, h, i, g, j], is_dual)
    } else {
        select_1092([b, d, e, a, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_2557([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2558([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2559([a, b, j, c, d, h, g, i, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2561([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_938([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2433([a, b, h, c, d, g, j, i, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_2560([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_2561([a, b, c, l, d, e, i, k, j, m, n], is_dual)
    } else {
        select_400([a, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2556([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2557([h, f, j, a, d, e, i, g, l, k, m, n], is_dual)
    } else {
        select_2560([h, f, a, d, e, b, c, g, i, l, k, j, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_2564([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_718([e, a, c, d, f, h], is_dual)
    } else {
        select_392([b, a, c, e, d, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2563([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2564([b, c, a, d, e, g, f, i, h], is_dual)
    } else {
        select_1099([d, c, f, e, a, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2567([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_65([b, g, d, e, j], is_dual)
    } else {
        select_375([a, b, c, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2568([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_184([b, c, d, e, f, g, h], is_dual)
    } else {
        select_29([a, c, d, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2566([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2567([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2568([b, f, d, e, g, a, h, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_2570([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_211([a, c, d, e, g], is_dual)
    } else {
        select_211([b, c, d, e, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_2569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_676([i, g, k, a, b, c, h], !is_dual)
    } else {
        select_2570([b, d, e, f, g, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2565([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2566([c, d, b, e, f, g, a, h, i, j], is_dual)
    } else {
        select_2569([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2562([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2563([j, g, k, a, b, h, i, c, d], !is_dual)
    } else {
        select_2565([b, a, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_2555([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2556([f, a, b, c, d, h, e, g, i, j, k, l, n, m], is_dual)
    } else {
        select_2562([g, h, f, e, j, k, i, n, m, o, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2575([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_129([b, c, d, f, e, g], is_dual)
    } else {
        select_269([f, h, i, d, a, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2574([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2575([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2575([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2576([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_242([d, e, c, b, g, f], is_dual)
    } else {
        select_1114([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2573([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2574([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_2576([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2579([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_27([a, c, f, d, e, h, g, j], is_dual)
    } else {
        select_849([b, g, d, e, f, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_2580([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_38([f, a, c, d, e, g, h], is_dual)
    } else {
        select_38([e, b, c, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2578([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2579([b, c, a, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2580([c, f, d, e, g, a, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_2582([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([e, b, c, f, h], is_dual)
    } else {
        select_62([a, d, b, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2581([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_36([b, c, a, d, e, g, f, h, i], is_dual)
    } else {
        select_2582([f, d, e, c, a, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2577([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2578([b, d, a, e, f, g, c, h, i, j], is_dual)
    } else {
        select_2581([b, d, c, e, f, g, a, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2572([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2573([j, g, k, b, h, a, d, i, c], !is_dual)
    } else {
        select_2577([c, b, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2584([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_264([a, b, d, e, c, h, k, j, l], is_dual)
    } else {
        select_1356([a, c, d, e, f, g, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2586([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_124([i, j, f, a, b, c], !is_dual)
    } else {
        select_1991([h, i, j, a, f, g, c, d, e], !is_dual)
    }
}
/// n = 13, i = 4
fn select_2585([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2222([a, b, d, f, g, j, i, l, k], is_dual)
    } else {
        select_2586([a, b, d, c, e, k, h, m, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2583([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2584([b, a, d, c, e, f, g, h, j, i, k, m], is_dual)
    } else {
        select_2585([a, c, b, e, d, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2571([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2572([a, b, d, c, e, j, h, k, l, i, m], is_dual)
    } else {
        select_2583([a, b, d, c, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_2554([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_2555([d, f, g, h, e, c, a, b, i, k, l, j, m, o, n], is_dual)
    } else {
        select_2571([a, b, c, d, f, e, l, i, j, m, n, k, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2527([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_2528([a, b, d, f, e, g, h, i, j, k, c, l, m, n, o], is_dual)
    } else {
        select_2554([a, b, d, e, f, c, g, h, i, k, j, l, m, o, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2592([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_108([a, b, l, c, d, e, f, j, k, i], is_dual)
    } else {
        select_1510([i, c, d, e, f, g, h, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_2593([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_1510([g, b, c, d, e, f, h, i, j, k, l, m], is_dual)
    } else {
        select_311([a, k, b, c, d, e, g, i, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_2591([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2592([a, f, b, c, d, e, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2593([h, b, c, d, e, g, f, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_2596([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1158([a, i, d, e, f, g, h, j, k, l], is_dual)
    } else {
        select_50([b, c, h, d, e, f, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2595([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2596([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1157([a, h, d, e, f, g, b, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2597([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2518([b, f, e, c, d, h, g, i, j], is_dual)
    } else {
        select_2309([a, i, b, e, f, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2594([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2595([a, b, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_2597([a, b, c, k, d, g, i, j, h, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2590([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_2591([d, a, e, f, g, c, b, i, h, j, l, k, m, n], is_dual)
    } else {
        select_2594([b, c, j, d, f, g, h, a, i, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_2600([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_453([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_453([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2601([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_606([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_606([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2599([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2600([a, c, d, e, f, g, b, h, j], is_dual)
    } else {
        select_2601([c, b, d, e, f, g, a, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2604([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_255([a, f, e, d, h, g, j], is_dual)
    } else {
        select_1570([a, b, e, c, g, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2605([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_969([b, d, c, e, f, g, i, h], is_dual)
    } else {
        select_72([a, c, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2603([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2604([b, a, c, e, d, g, h, f, j, i], is_dual)
    } else {
        select_2605([b, f, c, e, a, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2607([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_360([a, c, e, d, g, f, i], is_dual)
    } else {
        select_691([d, h, g, i, a, e, b, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2608([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_121([e, h, a, g, f, b, c], !is_dual)
    } else {
        select_249([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2606([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2607([g, i, j, a, e, h, f, b, c], !is_dual)
    } else {
        select_2608([a, e, b, d, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2602([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2603([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_2606([a, d, g, e, b, f, h, j, i, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_2598([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2599([b, a, i, e, f, g, j, k, l, n], is_dual)
    } else {
        select_2602([a, b, c, k, d, i, h, l, m, j, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2589([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_2590([b, c, d, f, g, a, h, i, j, k, m, l, n, o], is_dual)
    } else {
        select_2598([b, a, c, e, d, j, k, i, h, m, n, o, l, p], is_dual)
    }
}
/// n = 10, i = 2
fn select_2611([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_83([a, b, c, d, e, f, h, i, j], is_dual)
    } else {
        select_1539([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2614([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_281([c, b, a, e, g, h, f, i], is_dual)
    } else {
        select_190([a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2615([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_281([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_42([f, e, i, d, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2613([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2614([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_2615([c, f, b, e, a, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2612([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2613([a, d, f, e, b, g, h, i, j, k], is_dual)
    } else {
        select_2559([a, c, d, e, b, g, h, f, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_2610([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2611([i, c, b, e, f, g, j, h, k, l], is_dual)
    } else {
        select_2612([b, a, c, k, d, h, i, l, j, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2609([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_102([b, a, d, f, g, h, i, l, j, k, m, n, p], is_dual)
    } else {
        select_2610([a, b, c, e, d, j, k, h, i, l, n, o, m, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2588([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2589([a, b, e, f, d, g, h, c, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_2609([a, b, e, f, c, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_2619([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_58([c, e, f, a, b, d, g, h, i], is_dual)
    } else {
        select_2376([a, b, g, c, d, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2618([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2619([a, c, d, e, i, f, b, h, j, k, m, l], is_dual)
    } else {
        select_1543([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2622([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1446([a, d, c, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1446([b, d, c, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2621([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2622([a, b, e, c, f, d, g, h, i, j], is_dual)
    } else {
        select_2622([a, b, e, d, f, c, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2620([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2621([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1153([c, d, b, f, h, g, a, i, j], is_dual)
    }
}
/// n = 16, i = 4
fn select_2617([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2618([a, b, d, e, l, g, h, j, k, n, m, o, p], is_dual)
    } else {
        select_2620([a, b, c, d, m, f, i, o, l, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_2626([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_913([b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1194([i, j, h, b, a, c, d], !is_dual)
    }
}
/// n = 8, i = 2
fn select_2627([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_286([a, b, c, d, f, h], is_dual)
    } else {
        select_350([c, d, e, a, b, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2625([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2626([b, a, c, f, d, e, h, i, g, j], is_dual)
    } else {
        select_2627([b, c, d, e, a, g, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2630([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_72([b, e, d, a, f, h], is_dual)
    } else {
        select_89([b, c, d, a, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2629([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2630([a, b, c, f, e, h, g, i], is_dual)
    } else {
        select_42([c, d, g, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2632([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_89([a, f, d, b, h, e, g, i], is_dual)
    } else {
        select_89([a, e, d, c, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2634([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, b, c, e, g, h], is_dual)
    } else {
        select_33([c, d, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2633([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_38([a, d, c, e, g, f, i], is_dual)
    } else {
        select_2634([a, d, b, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2631([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2632([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_2633([c, d, b, e, f, a, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2628([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2629([b, c, a, e, g, f, i, j, h], is_dual)
    } else {
        select_2631([b, a, c, f, d, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2624([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2625([b, c, e, a, d, f, h, g, i, j], is_dual)
    } else {
        select_2628([b, c, e, f, d, g, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2639([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_184([a, c, d, e, g, h, j], is_dual)
    } else {
        select_44([b, c, d, f, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2638([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_61([c, d, e, j, g, i], is_dual)
    } else {
        select_2639([a, c, b, i, f, g, h, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_28([c, f, d, e, h, g], is_dual)
    } else {
        select_39([a, b, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2640([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2641([a, b, c, e, f, h, i, j, k, l], is_dual)
    } else {
        select_62([c, d, e, f, j, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2637([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2638([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_2640([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_104([a, c, d, e, f, g, i, k, j, l], is_dual)
    } else {
        select_2637([a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2642([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_58([c, d, f, a, e, h, g, i, j], is_dual)
    } else {
        select_1272([a, g, b, c, e, i, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2635([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2636([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2642([a, c, d, j, e, f, b, h, i, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2623([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2624([a, b, c, e, d, m, i, o, l, p], is_dual)
    } else {
        select_2635([a, b, e, f, l, g, h, i, j, k, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2616([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2617([a, c, b, d, f, e, g, h, i, j, k, m, n, l, o, p], is_dual)
    } else {
        select_2623([b, c, a, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2587([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2588([b, c, d, e, a, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_2616([b, a, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2526([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < n) || (is_dual && j > n) {
        select_2527([a, b, c, d, f, e, g, l, i, k, m, n, j, p, o], is_dual)
    } else {
        select_2587([a, b, c, d, f, g, e, h, i, k, j, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2424([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_2425([a, b, c, f, g, h, d, e, i, k, l, j, m, n, o, p], is_dual)
    } else {
        select_2526([a, b, c, d, f, e, g, h, i, k, j, l, m, o, p, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2423([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < o) || (is_dual && n > o) {
        select_2424([a, b, c, e, h, f, d, g, i, l, j, k, m, p, o, n], is_dual)
    } else {
        select_2424([a, b, d, e, h, g, c, f, i, l, k, j, m, p, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2422([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2423([e, b, f, h, a, g, d, c, k, m, j, i, n, l, o, p], is_dual)
    } else {
        select_2423([e, b, g, h, a, f, d, c, k, l, j, i, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2421([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_2422([b, c, a, d, e, f, g, h, i, j, k, l, m, o, n, p], is_dual)
    } else {
        select_2422([b, c, a, h, e, f, g, d, i, n, k, l, m, o, j, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2420([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2421([a, b, c, d, e, f, g, h, j, k, l, m, n, i, o, p], is_dual)
    } else {
        select_2421([a, b, c, d, e, f, g, i, j, k, l, m, n, h, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2419([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2420([a, b, c, d, e, f, g, h, i, k, l, m, n, j, o, p], is_dual)
    } else {
        select_2420([a, b, c, d, e, f, j, h, i, k, l, m, n, g, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2418([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2419([k, j, i, a, g, h, b, c, d, e, n, f, l, m, o, p], is_dual)
    } else {
        select_2419([k, j, i, f, g, h, b, c, d, e, n, a, l, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2417([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2418([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    } else {
        select_2418([a, b, c, d, e, f, h, i, j, k, l, g, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2416([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2417([a, b, c, d, e, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_2417([a, b, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_946([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < n) || (is_dual && k > n) {
        select_947([a, b, c, d, e, f, g, h, i, j, m, l, n, o, k, p], is_dual)
    } else {
        select_2416([a, b, c, d, e, f, g, h, i, j, k, l, m, o, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_946([a, b, c, d, e, f, g, h, i, j, k, m, n, l, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_2659([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_286([a, f, c, d, e, g], is_dual)
    } else {
        select_346([h, e, i, a, f, g, b], !is_dual)
    }
}
/// n = 8, i = 2
fn select_2661([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_255([a, b, c, d, g, h, f], is_dual)
    } else {
        select_255([a, b, c, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_2660([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_350([a, b, d, e, f, h, g], is_dual)
    } else {
        select_2661([a, b, c, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2659([a, d, b, c, h, g, i, f, j], is_dual)
    } else {
        select_2660([b, c, d, e, a, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2663([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_690([a, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_867([a, b, c, d, h, g, j, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_2664([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_22([c, d, a, e, f, g, h], is_dual)
    } else {
        select_215([a, b, e, g, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2662([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2663([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2664([b, g, e, f, d, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2657([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2658([a, c, d, h, f, g, b, i, j, k], is_dual)
    } else {
        select_2662([a, c, d, f, b, e, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_2666([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_116([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_116([a, b, d, e, f, g, h, c, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2667([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_420([a, i, d, e, f, g, h, b, j, k, l], is_dual)
    } else {
        select_400([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2666([a, c, d, e, b, g, i, h, j, k], is_dual)
    } else {
        select_2667([a, b, f, c, d, e, g, h, i, k, l, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_2656([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2657([a, b, c, d, h, l, i, j, n, k, m], is_dual)
    } else {
        select_2665([a, b, e, f, g, h, k, i, j, m, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2671([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_732([d, b, c, a, e, f, g, h, i], is_dual)
    } else {
        select_1164([c, d, a, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2674([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_190([a, b, d, e, f, i, j], is_dual)
    } else {
        select_190([b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2673([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_255([a, i, e, d, g, h, k], is_dual)
    } else {
        select_2674([a, b, e, c, h, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2672([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1723([c, f, e, d, a, g, h, i, j], is_dual)
    } else {
        select_2673([b, c, d, a, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2670([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2671([a, b, h, d, j, g, i, f, k], is_dual)
    } else {
        select_2672([b, a, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_2669([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2667([a, b, d, e, f, g, k, h, j, l, m, n], is_dual)
    } else {
        select_2670([a, b, l, c, d, h, i, j, k, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2668([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2669([a, b, f, g, c, d, e, h, i, j, k, l, n, m], is_dual)
    } else {
        select_410([k, a, c, d, e, b, j, h, m, l, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2655([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_2656([b, c, a, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_2668([b, c, e, f, g, d, h, i, j, k, a, l, m, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_2678([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1177([a, b, h, i, c, g, k, l], is_dual)
    } else {
        select_319([a, b, g, d, e, f, h, j, i, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2679([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_349([a, b, c, e, f, h, i, j, k], is_dual)
    } else {
        select_490([a, b, c, e, d, g, j, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2677([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2678([a, b, d, c, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_2679([a, b, c, d, e, j, h, k, l, i, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_2683([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_553([a, d, b, c, f, g, i, k, j, l], is_dual)
    } else {
        select_549([a, d, e, f, g, h, j, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_2684([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_61([b, a, d, f, e, h], is_dual)
    } else {
        select_215([a, c, d, e, f, g], is_dual)
    }
}
/// n = 13, i = 3
fn select_2682([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2683([f, c, d, a, b, h, i, g, j, l, m, k], is_dual)
    } else {
        select_2684([a, f, g, e, h, k, l, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_2681([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_1875([a, k, b, e, f, h, g, i, l], is_dual)
    } else {
        select_2682([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_2687([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_215([g, f, c, d, j, h], is_dual)
    } else {
        select_62([e, h, a, b, f, i, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_2686([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_2687([a, f, c, d, e, g, i, h, j, k], is_dual)
    } else {
        select_1092([a, h, g, b, j, f, l, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2689([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_22([c, i, d, e, f, g, j], is_dual)
    } else {
        select_1527([a, b, g, d, e, f, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2688([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_350([a, j, d, f, h, g, l], is_dual)
    } else {
        select_2689([b, c, e, a, f, g, h, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2685([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2686([a, b, c, d, f, i, h, j, g, k, l, m], is_dual)
    } else {
        select_2688([b, c, d, a, f, e, g, h, j, k, i, m, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2680([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2681([a, c, d, e, f, g, b, h, i, j, k, m, l], is_dual)
    } else {
        select_2685([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2676([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2677([a, b, d, g, h, e, f, j, i, k, l, m, n], is_dual)
    } else {
        select_2680([a, b, c, e, f, i, g, j, h, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2692([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_855([b, c, e, a, f, h, j, i], is_dual)
    } else {
        select_2244([b, a, d, c, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2691([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1704([c, b, h, d, a, g, k, i, j], is_dual)
    } else {
        select_2692([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2695([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_606([a, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1198([a, b, c, h, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2694([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_447([a, f, c, d, g, i, h], is_dual)
    } else {
        select_2695([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2697([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1455([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_664([b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_2699([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_65([a, b, c, f, h], is_dual)
    } else {
        select_24([d, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2698([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2699([b, c, f, d, e, h, g, j], is_dual)
    } else {
        select_38([a, g, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2697([b, c, d, g, f, a, h, i, j], is_dual)
    } else {
        select_2698([b, c, d, a, e, f, h, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2693([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2694([c, b, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_2696([c, a, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2690([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2691([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_2693([a, c, b, d, g, f, i, h, k, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_2675([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < h) || (is_dual && n > h) {
        select_2676([a, c, d, b, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_2690([a, c, b, d, k, j, l, i, n, m, h], is_dual)
    }
}
/// n = 14, i = 3
fn select_2654([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_2655([a, c, d, e, b, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2675([a, c, d, e, f, g, h, i, j, k, l, b, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_447([b, f, d, e, a, g, h], is_dual)
    } else {
        select_1193([b, a, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2707([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1462([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_753([b, e, c, a, h, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2706([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2707([a, b, c, d, f, g, e, h, j, i], is_dual)
    } else {
        select_2309([b, c, a, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2705([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1042([e, g, j, h, i, a, c, b, f], !is_dual)
    } else {
        select_2706([c, a, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2703([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2704([c, d, b, a, e, f, h, g, i], is_dual)
    } else {
        select_2705([b, c, d, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2709([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_284([c, b, a, d, e, f, g], is_dual)
    } else {
        select_779([f, a, h, b, c, g, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2712([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_233([a, b, c, h, f, g, i, j, k], is_dual)
    } else {
        select_2011([a, d, e, c, g, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2711([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2712([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2011([f, d, e, c, a, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2713([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2455([a, g, b, d, e, f, h, i, j], is_dual)
    } else {
        select_1199([f, a, c, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2710([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2711([a, d, c, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_2713([a, d, b, e, f, g, c, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2708([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2709([g, b, c, d, i, k, h, j], is_dual)
    } else {
        select_2710([c, a, b, e, f, h, g, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2702([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2703([g, i, b, c, d, a, h, j, k, l], is_dual)
    } else {
        select_2708([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2716([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_720([a, c, d, b, f, h, g, j, k], is_dual)
    } else {
        select_835([a, b, e, c, f, g, h, i, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2717([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_86([a, b, d, h, e, f, g, j, i, l, m], is_dual)
    } else {
        select_1177([a, b, g, i, c, h, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2715([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2716([a, b, c, j, g, f, k, h, i, l, n, m], is_dual)
    } else {
        select_2717([a, b, g, c, d, e, i, h, j, l, k, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2714([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2680([a, b, d, e, f, h, g, j, i, k, l, m, n], is_dual)
    } else {
        select_2715([a, b, c, e, f, i, g, j, h, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2701([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_2702([a, b, c, d, k, j, l, i, m, h, n, o], is_dual)
    } else {
        select_2714([a, c, b, d, e, f, g, h, i, j, k, l, n, m, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2700([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_2655([a, c, d, g, b, e, f, h, i, j, k, l, n, m], is_dual)
    } else {
        select_2701([a, c, d, g, e, f, h, i, j, k, l, b, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2653([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2654([a, b, c, e, h, f, g, i, d, j, k, l, n, m], is_dual)
    } else {
        select_2700([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 8, i = 2
fn select_2723([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1362([a, c, d, b, f, e, g], is_dual)
    } else {
        select_520([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2726([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_211([a, h, i, j, g], !is_dual)
    } else {
        select_137([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2725([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2726([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2726([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2724([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_447([a, b, h, i, j, c, g], !is_dual)
    } else {
        select_2725([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2722([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2723([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_2724([a, b, c, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_2727([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_660([a, b, g, d, e, f, h, i, k, j, l], is_dual)
    } else {
        select_1760([a, b, i, c, f, j, g, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2721([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2722([a, h, b, c, d, i, f, j, k, l], is_dual)
    } else {
        select_2727([a, b, e, c, d, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2730([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_807([a, g, b, c, d, h, i, f], is_dual)
    } else {
        select_520([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 5, i = 2
fn select_2733([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_125([a, b, d, c, e], is_dual)
    } else {
        select_125([a, c, d, b, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_2732([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2664([c, e, a, b, d, f, g, i, h], is_dual)
    } else {
        select_2733([a, b, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2735([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_997([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1228([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2734([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2735([a, b, f, e, h, i, j, k], is_dual)
    } else {
        select_1092([b, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2731([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2732([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2734([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2729([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2730([a, b, d, e, j, g, k, i, m], is_dual)
    } else {
        select_2731([a, b, c, i, f, g, h, l, m, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2739([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_405([a, b, g, f, e, h, i], is_dual)
    } else {
        select_143([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2738([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_120([a, b, g, f, h, i, e], is_dual)
    } else {
        select_2739([b, a, c, d, f, e, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2737([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2738([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_2738([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2740([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_349([a, b, d, c, e, f, g, i, j], is_dual)
    } else {
        select_1297([a, b, c, d, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2736([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2737([a, b, i, e, f, k, h, m, j], is_dual)
    } else {
        select_2740([a, b, j, c, d, g, l, m, i, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2728([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2729([a, b, e, c, d, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_2736([a, b, e, f, c, d, h, i, k, j, l, g, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2720([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_2721([a, b, d, e, h, g, i, l, c, j, k, m], is_dual)
    } else {
        select_2728([a, b, d, e, c, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2719([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2720([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_2720([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_2746([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_325([b, c, d, e, f, h], is_dual)
    } else {
        select_335([a, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2747([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_679([a, j, k, l, b, i], !is_dual)
    } else {
        select_325([c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2745([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2746([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    } else {
        select_2747([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2744([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2745([a, b, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_2160([a, b, c, d, k, i, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2743([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2744([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_410([b, a, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2751([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_767([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_272([b, f, a, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2750([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2751([b, a, c, d, e, g, f, h, j, i], is_dual)
    } else {
        select_583([g, j, k, f, b, a, i, h], !is_dual)
    }
}
/// n = 13, i = 4
fn select_2749([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2750([a, b, h, e, f, g, j, i, k, m, l], is_dual)
    } else {
        select_2160([a, b, c, d, k, g, l, h, j, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2748([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2749([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2749([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2742([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_2743([b, c, d, e, a, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_2748([b, c, d, e, f, g, i, j, k, l, a, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2741([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2742([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_2742([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2718([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_2719([a, b, c, e, g, h, f, k, d, j, m, l, n], is_dual)
    } else {
        select_2741([a, b, c, e, g, h, d, f, i, j, k, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2652([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_2653([a, b, c, e, f, g, h, d, i, j, k, l, n, m, o], is_dual)
    } else {
        select_2718([a, b, c, d, e, f, g, h, k, l, m, j, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_2760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_189([b, f, c, d, e, g, i, h], is_dual)
    } else {
        select_209([h, b, a, e, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2759([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1950([a, b, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_2760([a, b, c, h, e, g, i, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2763([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_131([b, c, d, f, g, h], is_dual)
    } else {
        select_45([a, d, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2762([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_390([e, i, j, f, a, g, d], !is_dual)
    } else {
        select_2763([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2761([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_84([a, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_2762([a, i, b, c, g, f, h, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2758([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2759([b, e, k, f, j, l, g, h, i, n, m], is_dual)
    } else {
        select_2761([a, g, h, c, d, i, j, m, k, n, o, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2765([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2687([f, g, a, b, e, h, k, i, j, m], is_dual)
    } else {
        select_2516([i, h, c, d, j, f, g, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2764([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2688([a, c, d, g, f, e, i, h, k, l, j, m, n], is_dual)
    } else {
        select_2765([c, d, a, b, f, j, g, h, k, l, i, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2757([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2758([a, c, d, e, h, f, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_2764([b, c, d, e, g, f, i, j, k, h, l, m, o, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_2769([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_61([c, d, e, i, f, h], is_dual)
    } else {
        select_739([c, h, a, b, f, g, j, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_2768([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2185([e, f, g, a, h, j, l], is_dual)
    } else {
        select_2769([b, c, d, a, h, g, i, k, j, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2767([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2768([a, c, d, f, g, e, h, i, k, l, j, m, n], is_dual)
    } else {
        select_2765([c, d, a, b, f, j, g, h, k, l, i, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2773([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_42([e, c, d, h, g, j], is_dual)
    } else {
        select_42([e, a, b, i, f, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2772([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1148([c, d, e, f, b, g, i, h, j, k, l], is_dual)
    } else {
        select_2773([c, d, e, f, a, j, h, i, k, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_2774([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1148([a, b, d, f, e, g, h, i, k, l, j], is_dual)
    } else {
        select_549([e, c, d, g, f, j, k, i], is_dual)
    }
}
/// n = 15, i = 4
fn select_2771([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2772([a, f, b, j, d, e, h, k, i, n, m, l, o], is_dual)
    } else {
        select_2774([d, e, c, i, f, g, h, k, j, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2776([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_163([b, d, c, g, f, e, h], is_dual)
    } else {
        select_269([g, i, j, d, a, h], !is_dual)
    }
}
/// n = 13, i = 4
fn select_2775([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2776([a, c, b, f, g, k, l, i, j, m], is_dual)
    } else {
        select_1665([j, a, d, e, f, h, m, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2770([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_2771([a, c, b, e, f, d, g, h, j, i, k, m, n, l, o], is_dual)
    } else {
        select_2775([a, b, h, e, f, j, g, k, l, i, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2766([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2767([b, c, d, e, g, f, i, j, k, h, l, m, n, o], is_dual)
    } else {
        select_2770([a, c, h, f, d, e, i, j, k, g, l, o, m, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2756([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2757([a, c, d, e, f, g, b, h, i, j, k, l, m, o, n, p], is_dual)
    } else {
        select_2766([b, c, d, e, f, g, a, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 3
fn select_2780([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_285([a, b, i, f, g, l], is_dual)
    } else {
        select_2689([c, d, e, a, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2782([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([c, d, e, g, f, i], is_dual)
    } else {
        select_29([a, b, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2781([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2782([a, h, f, d, e, g, j, k, i, l], is_dual)
    } else {
        select_1123([a, f, b, c, i, g, k, h, j, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2779([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2780([b, c, d, e, g, i, h, k, l, j, m, n], is_dual)
    } else {
        select_2781([a, d, e, f, j, g, h, k, i, l, m, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_2785([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_997([a, b, h, e, g, f, i, j], is_dual)
    } else {
        select_1774([a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2784([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1123([a, d, b, c, g, h, l, i, k, m], is_dual)
    } else {
        select_2785([a, d, e, f, g, h, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2783([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_1875([b, c, g, j, f, h, i, k, m], is_dual)
    } else {
        select_2784([a, d, e, f, b, c, g, h, j, i, k, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2778([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2779([a, b, c, d, e, f, g, i, h, j, k, l, m, n, o], is_dual)
    } else {
        select_2783([h, b, c, d, e, g, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_2790([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_28([c, d, e, f, h, i], is_dual)
    } else {
        select_28([a, b, e, f, g, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2789([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_27([a, b, k, e, f, j, h, m], is_dual)
    } else {
        select_2790([c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2791([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_182([c, d, e, f, h, g, i, k, j], is_dual)
    } else {
        select_106([a, c, b, j, g, h, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_2788([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_2789([a, f, b, c, g, h, i, l, j, k, m, o, n], is_dual)
    } else {
        select_2791([a, e, d, b, c, k, i, l, j, n, o, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2792([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_792([b, c, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_1950([a, b, e, f, g, h, k, j, m, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_2787([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_2788([b, d, e, f, c, a, g, h, i, k, l, j, m, n, o], is_dual)
    } else {
        select_2792([f, j, d, e, g, h, a, i, k, l, m, o, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_2794([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_301([c, a, b, d, j, g, i], is_dual)
    } else {
        select_272([a, b, c, e, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2795([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_350([a, b, c, h, i, g, k], is_dual)
    } else {
        select_59([d, e, f, a, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2793([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2794([b, c, a, f, d, g, h, j, k, i], is_dual)
    } else {
        select_2795([b, c, f, e, a, d, h, g, i, k, j], is_dual)
    }
}
/// n = 15, i = 3
fn select_2786([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_2787([a, d, g, e, f, h, b, c, i, k, l, j, n, m, o], is_dual)
    } else {
        select_2793([d, b, c, g, h, a, i, m, k, n, j], is_dual)
    }
}
/// n = 16, i = 4
fn select_2777([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2778([a, d, e, f, g, i, h, b, j, k, l, m, o, n, p], is_dual)
    } else {
        select_2786([a, d, e, c, f, g, b, h, j, k, i, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2755([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2756([b, c, d, e, f, g, h, i, j, k, a, l, m, n, o, p], is_dual)
    } else {
        select_2777([b, c, d, a, e, f, g, h, i, k, j, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_2799([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_467([a, d, e, f, b, c, g, h, i], is_dual)
    } else {
        select_1428([b, c, g, e, f, a, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2800([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_582([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_582([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2798([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2799([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_2800([a, b, c, d, f, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2803([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_208([a, c, b, f, g, h, e, i], is_dual)
    } else {
        select_1092([b, c, d, a, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2802([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2803([b, c, d, e, a, f, g, h, j], is_dual)
    } else {
        select_2803([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_2805([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_285([a, b, c, d, e, f], is_dual)
    } else {
        select_29([b, c, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_2804([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_48([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2805([a, b, c, d, i, j, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2801([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2802([b, c, d, i, e, a, j, h, k, l], is_dual)
    } else {
        select_2804([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2797([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2798([a, c, d, b, e, i, h, k, l, j], is_dual)
    } else {
        select_2801([a, b, c, d, h, f, g, j, i, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2809([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_776([a, c, d, b, f, e, g, h, i], is_dual)
    } else {
        select_208([b, c, a, f, g, h, e, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2810([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2522([b, e, f, a, d, g, i, h, k, j, l], is_dual)
    } else {
        select_1512([a, b, c, h, g, j, k, l, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_2808([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2809([b, c, j, d, g, a, l, i, k, m], is_dual)
    } else {
        select_2810([b, c, d, f, a, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2812([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1381([j, k, h, f, e, b, a, i], !is_dual)
    } else {
        select_114([b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2813([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_353([g, i, f, a, h, d, e, b], !is_dual)
    } else {
        select_353([f, i, g, a, h, e, d, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2811([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2812([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2813([j, i, k, e, f, a, c, b, h], !is_dual)
    }
}
/// n = 13, i = 4
fn select_2807([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2808([a, c, b, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_2811([a, b, c, f, j, i, h, k, g, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2816([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_779([a, b, i, e, j, f, h], is_dual)
    } else {
        select_114([a, c, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2817([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_353([a, c, b, e, g, f, d, h], is_dual)
    } else {
        select_1555([b, c, a, e, g, d, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_2815([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2816([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2817([a, c, h, e, j, f, b, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2819([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1933([b, a, c, g, j, i, k, h], is_dual)
    } else {
        select_780([b, d, e, a, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2818([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2053([a, b, c, d, j, i, l, g, k], is_dual)
    } else {
        select_2819([a, b, d, f, g, e, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2814([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2815([b, a, c, f, i, j, h, k, g, l], is_dual)
    } else {
        select_2818([b, c, a, d, f, e, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2806([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2807([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_2814([a, d, b, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2796([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < n) || (is_dual && l > n) {
        select_2797([a, d, b, c, i, e, f, k, j, n, m, o, l], is_dual)
    } else {
        select_2806([a, d, c, b, j, h, g, i, l, m, k, o, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2754([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_2755([a, c, d, b, e, f, g, h, i, j, k, l, m, o, n, p], is_dual)
    } else {
        select_2796([a, c, b, d, f, g, e, k, j, l, n, m, o, i, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2753([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2754([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    } else {
        select_2754([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 2
fn select_2826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_135([b, i, c, d, e, f, h, j], is_dual)
    } else {
        select_422([a, h, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2828([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_547([a, e, c, g, f, h, d, i], is_dual)
    } else {
        select_205([a, c, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2827([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1284([a, b, d, i, f, g, h, j], is_dual)
    } else {
        select_2828([a, c, d, g, e, f, i, h, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2825([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2826([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2827([a, k, c, b, i, h, g, j, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_2830([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_587([d, a, b, g, h, e, f, i], is_dual)
    } else {
        select_587([d, a, c, f, h, e, g, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_2829([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_75([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2830([c, d, j, a, h, i, b, g, k], is_dual)
    }
}
/// n = 15, i = 3
fn select_2824([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_2825([a, c, d, b, j, k, g, h, i, l, n, o, m], is_dual)
    } else {
        select_2829([a, b, e, f, i, l, g, j, k, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_2823([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2824([a, c, d, e, f, g, b, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2824([b, c, d, e, f, g, a, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 4
fn select_2834([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_458([a, j, b, k, e, h, l], is_dual)
    } else {
        select_162([a, h, c, d, i, f, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2834([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2834([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_2836([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_305([a, g, h, d, e, f, j, i], is_dual)
    } else {
        select_2185([b, c, i, a, g, h, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2835([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_2836([a, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_350([a, b, c, f, k, g, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2832([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2833([a, g, e, f, j, h, i, b, k, l, m, n], is_dual)
    } else {
        select_2835([a, b, c, e, f, d, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2839([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1667([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1667([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2838([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_467([a, d, e, f, b, c, g, h, i], is_dual)
    } else {
        select_2839([b, c, g, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2837([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_819([a, b, c, e, h, g, d, i, j, k], is_dual)
    } else {
        select_2838([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_2831([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2832([a, b, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2837([a, b, l, c, f, g, i, j, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2822([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2823([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2831([a, b, c, d, i, f, g, h, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_2844([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_62([b, c, d, e, g, f, h], is_dual)
    } else {
        select_691([a, b, d, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2843([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_301([a, b, c, f, g, i, h], is_dual)
    } else {
        select_2844([a, d, e, b, c, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_2842([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1877([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2843([a, b, c, k, d, i, h, j, l, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_2841([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_2842([a, b, c, e, d, j, k, h, i, l, n, o, m], is_dual)
    } else {
        select_2829([a, d, f, g, i, l, h, j, k, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_2840([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2841([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_2841([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2821([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_2822([a, b, e, d, f, g, h, i, j, k, l, c, m, n, o, p], is_dual)
    } else {
        select_2840([a, b, c, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_2850([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_690([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_362([a, b, c, h, f, i, j, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_2849([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2561([a, c, d, h, e, f, g, j, i, k, l], is_dual)
    } else {
        select_2850([a, b, i, e, f, g, h, j, l, m, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2852([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_59([a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2844([b, j, a, c, d, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2851([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2852([e, f, a, b, c, d, g, h, i, j, k, m], is_dual)
    } else {
        select_362([f, e, i, j, h, k, l, g], is_dual)
    }
}
/// n = 14, i = 4
fn select_2848([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2849([a, b, c, j, e, f, g, h, i, k, l, m, n], is_dual)
    } else {
        select_2851([d, i, e, f, b, a, h, g, j, k, m, n, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2853([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_103([e, b, d, f, g, c, a, i, h, j, k, l], is_dual)
    } else {
        select_1944([a, b, c, d, i, k, h, l, m, j], is_dual)
    }
}
/// n = 16, i = 4
fn select_2847([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_2848([a, b, c, e, d, k, h, l, i, j, n, o, m, p], is_dual)
    } else {
        select_2853([a, b, d, f, g, i, j, h, k, l, m, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2846([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2847([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_2847([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_2857([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_200([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_807([a, b, f, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2859([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_328([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_224([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2859([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_2859([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2856([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2857([a, b, c, d, j, h, i, k, l], is_dual)
    } else {
        select_2858([a, b, c, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_2855([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2856([a, b, c, e, d, j, k, h, i, m, n, l], is_dual)
    } else {
        select_1642([a, b, d, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_2864([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_129([a, b, e, d, g, h], is_dual)
    } else {
        select_141([d, a, c, f, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2863([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_676([a, b, e, d, g, h, i], is_dual)
    } else {
        select_2864([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([b, f, e, a, d, g, h], is_dual)
    } else {
        select_282([a, c, b, d, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2862([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2863([b, c, g, f, i, h, a, j, k], is_dual)
    } else {
        select_2865([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2867([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_1284([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_32([a, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_2869([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_61([a, b, c, j, h, k], is_dual)
    } else {
        select_137([d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_2868([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2869([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_895([i, d, e, f, g, a, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2866([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2867([b, j, d, c, a, h, k, i, l], is_dual)
    } else {
        select_2868([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2861([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2862([a, c, i, g, d, b, h, k, j, l, m], is_dual)
    } else {
        select_2866([a, c, d, g, b, e, f, h, j, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2873([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_627([e, h, i, a, f, g, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2872([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_301([a, b, c, f, e, g, h], is_dual)
    } else {
        select_2873([a, d, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2871([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2872([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_2872([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2876([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_62([a, e, c, d, g, f, h], is_dual)
    } else {
        select_141([a, b, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2875([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_114([f, c, d, e, a, g, h, i, j], is_dual)
    } else {
        select_2876([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_2877([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_305([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1363([a, b, e, f, h, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2874([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2875([a, g, e, f, d, b, h, i, j, k], is_dual)
    } else {
        select_2877([a, d, b, c, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2870([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2871([a, b, c, i, d, h, j, g, k], is_dual)
    } else {
        select_2874([a, b, d, c, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_2860([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2861([a, b, c, d, e, f, i, h, j, l, m, n, k], is_dual)
    } else {
        select_2870([a, b, d, g, c, j, h, i, k, m, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2854([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_2855([a, b, d, e, f, c, g, i, j, h, k, m, l, n], is_dual)
    } else {
        select_2860([a, b, c, d, e, k, f, i, j, l, h, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2845([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2846([a, b, c, d, e, g, f, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_2854([a, b, i, d, e, g, h, c, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2820([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2821([a, b, c, e, f, h, d, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_2845([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2752([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_2753([a, b, c, d, e, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_2820([a, b, c, e, f, g, h, i, d, k, l, j, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2651([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_2652([a, b, c, d, e, f, h, i, l, j, m, n, k, p, o], is_dual)
    } else {
        select_2752([a, b, c, d, e, g, h, i, f, j, l, k, n, m, o, p], is_dual)
    }
}
/// n = 13, i = 3
fn select_2884([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_965([a, c, d, f, g, i, h, j, l, k], is_dual)
    } else {
        select_569([a, b, c, e, d, j, g, h, i, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_2885([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_965([a, c, d, f, b, g, h, i, j, k], is_dual)
    } else {
        select_85([a, b, c, e, d, i, h, g, k, j, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2883([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2884([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_2885([a, b, c, d, i, f, k, h, j, g, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2882([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2883([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_2883([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_2887([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_158([g, f, e, a, b, c, d, h, j, i, k], is_dual)
    } else {
        select_158([g, f, e, c, d, a, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2891([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_560([a, c, b, d, e, g, h, f, i, k, j], is_dual)
    } else {
        select_2437([c, f, d, e, g, b, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2890([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_431([c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2891([a, b, e, c, d, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_559([a, e, d, b, c, g, h, j, k, i, l], is_dual)
    } else {
        select_431([b, c, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2889([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2890([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_2892([a, c, d, b, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2894([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_431([b, c, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_766([a, e, d, b, c, h, g, j, k, i, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_2896([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2541([a, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_28([d, i, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_2898([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_65([a, b, e, f, h], is_dual)
    } else {
        select_62([c, d, a, b, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_2897([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2898([a, b, d, g, f, c, h, i], is_dual)
    } else {
        select_436([a, b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_2895([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2896([a, b, f, e, c, g, h, j, i, k], is_dual)
    } else {
        select_2897([a, b, c, d, h, g, k, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2893([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2894([a, c, d, b, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_2895([c, d, b, a, e, f, g, i, k, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2888([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2889([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_2893([b, a, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2886([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2887([d, i, e, f, c, b, a, h, j, k, l], is_dual)
    } else {
        select_2888([a, b, c, e, f, d, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2881([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2882([a, b, d, e, c, g, f, h, j, i, k, l, m], is_dual)
    } else {
        select_2886([a, b, c, f, d, e, j, h, k, i, m, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2904([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_508([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_88([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2903([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_48([f, g, b, c, d, e, h, i, j, l], is_dual)
    } else {
        select_2904([g, f, a, j, b, c, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2902([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2903([c, d, i, e, f, b, a, h, k, j, l, m], is_dual)
    } else {
        select_965([a, c, d, g, b, j, h, i, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_2901([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_2152([a, c, b, d, j, e, h, i, l, m, k], is_dual)
    } else {
        select_2902([a, c, e, b, f, g, d, i, h, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2909([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_65([b, c, e, f, h], is_dual)
    } else {
        select_29([a, d, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2908([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_496([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2909([a, b, c, j, d, h, i, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2910([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1738([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_53([a, h, c, d, e, f, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2907([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2908([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2910([b, c, e, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_2912([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_172([a, b, c, d, f, g, h, i, j], is_dual)
    } else {
        select_52([g, b, c, d, e, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_2913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_59([c, a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_677([a, b, g, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_2911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2912([b, c, d, e, f, h, g, a, i, j], is_dual)
    } else {
        select_2913([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2906([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2907([a, d, c, b, e, f, g, i, h, j, l, k], is_dual)
    } else {
        select_2911([a, d, h, e, f, g, i, b, j, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_2905([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2906([a, b, d, c, e, j, k, i, h, m, n, l], is_dual)
    } else {
        select_905([a, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_2900([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_2901([a, c, b, d, e, f, k, i, j, m, l, h, n], is_dual)
    } else {
        select_2905([a, c, d, e, f, b, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2899([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2900([a, b, c, f, d, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_2900([a, b, c, f, e, g, h, i, j, d, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2880([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_2881([a, c, d, e, f, g, k, i, j, l, b, m, n], is_dual)
    } else {
        select_2899([a, c, d, e, f, g, b, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_2879([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2880([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_2880([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2920([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2053([a, b, c, i, d, j, g, h, k], is_dual)
    } else {
        select_83([b, c, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2922([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2170([e, i, j, a, b, h, f, c], !is_dual)
    } else {
        select_814([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_349([b, a, c, d, f, h, g, i, k], is_dual)
    } else {
        select_2922([a, b, c, e, g, i, f, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2919([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_2920([b, c, a, g, e, f, h, j, i, k, l], is_dual)
    } else {
        select_2921([b, a, c, i, d, g, k, h, l, j, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2924([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2177([a, b, c, d, e, k, h, j, l, m], is_dual)
    } else {
        select_791([c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2925([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_284([a, b, c, d, e, h, i], is_dual)
    } else {
        select_520([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_2923([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2924([b, a, c, d, e, f, g, j, i, l, m, k, n], is_dual)
    } else {
        select_2925([b, c, d, e, h, a, k, m, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_2918([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_2919([a, b, d, e, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_2923([b, a, d, c, e, g, h, f, j, i, l, k, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2928([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2663([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2738([b, h, e, f, g, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2929([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1843([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_407([k, g, l, h, a, b, j, i], !is_dual)
    }
}
/// n = 13, i = 4
fn select_2927([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2928([b, a, c, g, e, f, i, h, j, k, l], is_dual)
    } else {
        select_2929([a, b, d, h, e, f, i, g, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_2932([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_359([e, g, h, a, b, f, d], !is_dual)
    } else {
        select_1099([e, g, h, b, f, c, d], !is_dual)
    }
}
/// n = 11, i = 3
fn select_2933([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_940([a, b, h, d, e, f, g, i, k, j], is_dual)
    } else {
        select_940([a, c, g, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2931([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2932([a, h, b, i, f, j, k, g], is_dual)
    } else {
        select_2933([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2935([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_690([a, c, g, d, e, f, h, i, j, k], is_dual)
    } else {
        select_940([a, b, h, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2934([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_357([g, a, b, c, j, k, h, i], is_dual)
    } else {
        select_2935([a, d, b, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2930([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2931([b, g, d, e, f, i, a, h, j, k, l], is_dual)
    } else {
        select_2934([b, a, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2926([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_2927([a, c, e, d, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_2930([c, a, e, b, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_2917([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2918([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2926([a, b, c, d, i, g, h, e, k, j, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_938([b, c, g, d, e, f, h, i, j], is_dual)
    } else {
        select_37([a, h, d, e, f, g, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2939([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2940([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_95([b, h, d, e, f, g, a, i, k, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2942([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1268([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_361([b, a, c, g, h, f], is_dual)
    }
}
/// n = 11, i = 2
fn select_2941([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2600([a, c, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2942([a, b, c, d, j, h, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2938([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2939([a, c, i, e, f, g, h, b, j, k, l], is_dual)
    } else {
        select_2941([c, d, a, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2946([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_405([b, a, e, d, g, h, f], is_dual)
    } else {
        select_29([b, c, f, e], is_dual)
    }
}
/// n = 12, i = 3
fn select_2945([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_152([b, a, d, e, f, i, g, j, l, k], is_dual)
    } else {
        select_2946([a, b, c, g, h, k, i, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2944([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2945([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_2945([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2949([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1527([b, c, g, d, e, f, h, j, i, k], is_dual)
    } else {
        select_37([a, i, d, e, f, g, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2948([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2949([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_2949([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2950([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2497([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_2497([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2947([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2948([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2950([a, b, h, e, f, g, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2943([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2944([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_2947([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2937([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2938([b, c, a, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_2943([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_2936([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_929([a, c, d, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_2937([a, c, d, b, e, f, j, k, i, m, n, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_2916([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_2917([b, a, c, d, e, f, g, k, j, m, l, i, n, o], is_dual)
    } else {
        select_2936([c, b, d, e, f, g, a, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_2915([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2916([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o], is_dual)
    } else {
        select_2916([b, c, d, e, f, g, h, i, a, j, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 4
fn select_2956([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_86([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_35([a, g, d, e, f, b, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2955([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2956([g, a, b, e, c, d, i, h, k, j, l, m], is_dual)
    } else {
        select_1861([b, c, d, f, a, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2957([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_92([g, a, c, b, d, e, h, i, k, j, l], is_dual)
    } else {
        select_1861([c, d, e, f, b, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2954([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2955([a, c, d, e, b, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_2957([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2953([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2954([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_2954([a, c, d, e, f, g, h, i, b, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2952([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2953([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_2953([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2959([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2883([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_2883([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_2958([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2959([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_2959([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2951([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2952([a, b, c, d, g, e, f, j, k, i, m, l, n], is_dual)
    } else {
        select_2958([a, b, d, e, f, c, h, g, j, i, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_2914([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < c) || (is_dual && l > c) {
        select_2915([a, b, d, e, f, g, h, c, i, j, k, m, l, n, o], is_dual)
    } else {
        select_2951([a, b, d, e, f, g, h, k, j, l, c, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2878([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2879([a, b, c, e, f, g, h, d, i, j, l, m, k, n], is_dual)
    } else {
        select_2914([a, b, c, d, e, g, h, f, i, k, l, m, j, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_2650([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_2651([a, b, c, d, e, f, i, g, h, j, k, l, m, n, p, o], is_dual)
    } else {
        select_2878([a, b, c, d, e, f, g, h, l, j, k, m, o, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2649([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2650([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    } else {
        select_2650([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 3
fn select_2968([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2153([a, c, b, d, e, i, h, k, l, j], is_dual)
    } else {
        select_1776([b, h, f, g, e, a, c, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2967([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2968([a, b, d, c, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_2968([a, c, d, b, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2966([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_2967([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2240([a, c, d, e, j, h, i, k, b, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2965([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2966([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_2966([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_2974([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_359([g, f, d, e, a, h, b], !is_dual)
    } else {
        select_1065([a, c, b, e, d, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2973([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1624([b, d, a, f, e, c, g, h], is_dual)
    } else {
        select_2974([b, d, c, f, a, g, e, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2972([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2973([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_2973([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2971([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2117([a, b, f, c, i, h, g, d], !is_dual)
    } else {
        select_2972([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_2976([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_655([a, c, d, b, e, f, g], is_dual)
    } else {
        select_655([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2977([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1944([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_1944([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2975([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2976([a, b, d, h, c, i, j], is_dual)
    } else {
        select_2977([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2970([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2971([a, b, c, e, h, d, i, j, k], is_dual)
    } else {
        select_2975([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2969([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2328([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2970([a, b, c, d, e, f, j, k, l, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2964([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2965([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2969([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_2983([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_284([a, g, b, c, d, f, h], is_dual)
    } else {
        select_284([a, f, b, c, e, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_2982([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2983([a, c, d, e, i, h, b, j], is_dual)
    } else {
        select_514([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2984([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_635([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_635([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2981([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_2982([a, b, d, e, i, g, h, c, j, k], is_dual)
    } else {
        select_2984([c, f, g, h, d, e, a, b, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2985([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_418([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_418([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2980([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2981([a, b, d, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_2985([a, b, c, d, e, f, g, j, i, l, m, k, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_2989([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_937([a, d, i, e, f, g, h, j, l], is_dual)
    } else {
        select_1889([a, b, c, h, e, f, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2992([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_360([d, b, c, e, g, f, h], is_dual)
    } else {
        select_262([a, b, d, f, e, h, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_2991([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_259([a, c, d, e, g, f, h, i, k, j], is_dual)
    } else {
        select_2992([a, b, i, f, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2993([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_968([a, c, j, b, g, h, k, i, l], is_dual)
    } else {
        select_895([c, d, e, f, i, g, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2990([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2991([h, c, d, e, f, i, g, a, j, l, k], is_dual)
    } else {
        select_2993([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2988([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2989([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_2990([a, c, d, e, f, g, i, h, b, j, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_2996([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_496([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1882([b, d, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2995([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2408([a, b, c, j, d, h, i, k], is_dual)
    } else {
        select_2996([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2998([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1555([b, c, a, e, f, d, g], is_dual)
    } else {
        select_208([a, c, b, e, f, g, d, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_2999([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_224([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_224([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2997([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2998([b, c, i, g, a, j, h, k], is_dual)
    } else {
        select_2999([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2994([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2995([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2997([a, i, c, e, f, g, b, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2987([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2988([a, b, e, d, f, g, h, i, c, j, k, l], is_dual)
    } else {
        select_2994([a, b, e, c, f, g, h, i, d, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_2986([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2981([a, b, d, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_2987([a, b, d, c, e, f, g, j, i, l, m, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_2979([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2980([a, b, c, e, d, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_2986([a, b, d, e, c, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_2978([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2979([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_2979([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_2963([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < l) || (is_dual && e > l) {
        select_2964([a, b, c, d, f, g, h, k, j, l, e, m, n], is_dual)
    } else {
        select_2978([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3003([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_929([a, b, d, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_2985([a, b, c, d, e, f, j, k, i, m, n, l, o], is_dual)
    }
}
/// n = 7, i = 3
fn select_3009([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_125([c, a, e, d, g], is_dual)
    } else {
        select_123([a, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3008([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_245([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_3009([i, e, a, g, h, b, f], !is_dual)
    }
}
/// n = 12, i = 3
fn select_3007([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_420([a, c, d, e, f, h, g, i, j, l, k], is_dual)
    } else {
        select_3008([a, b, c, j, g, i, h, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3010([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_420([a, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2209([a, b, c, j, g, i, k, h, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3006([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3007([a, d, c, e, f, g, h, i, b, j, k, l], is_dual)
    } else {
        select_3010([a, d, b, e, f, g, h, i, c, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_3005([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_905([c, a, e, f, g, b, i, h, j, k, l, m], is_dual)
    } else {
        select_3006([a, c, b, d, e, j, k, h, i, m, n, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_3004([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3005([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_3005([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3002([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3003([a, b, c, e, d, f, g, h, j, k, l, i, m, n, o], is_dual)
    } else {
        select_3004([a, b, d, e, c, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3001([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3002([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o], is_dual)
    } else {
        select_3002([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3000([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < m) || (is_dual && e > m) {
        select_2964([a, b, c, d, f, g, k, l, j, m, e, n, o], is_dual)
    } else {
        select_3001([a, b, c, d, f, g, e, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_2962([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_2963([a, b, c, d, e, f, g, h, l, j, m, k, n, o], is_dual)
    } else {
        select_3000([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_3019([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_36([b, i, d, e, f, a, h, j, l], is_dual)
    } else {
        select_2441([b, c, d, a, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3018([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1206([a, b, c, i, j, k, m], is_dual)
    } else {
        select_3019([a, b, d, c, e, f, g, h, i, j, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_3022([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_61([b, a, c, d, e, f], is_dual)
    } else {
        select_65([a, e, c, d, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3021([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_432([b, c, d, f, h, g, i, j], is_dual)
    } else {
        select_3022([a, d, e, i, g, h, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3024([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_255([a, b, c, d, e, g, f], is_dual)
    } else {
        select_390([g, e, h, a, b, f, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3023([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_64([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3024([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3020([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3021([d, b, c, e, a, f, h, g, i, j, k], is_dual)
    } else {
        select_3023([b, c, g, f, e, a, h, i, j, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3017([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_3018([a, b, d, c, f, g, h, k, l, i, j, m, n], is_dual)
    } else {
        select_3020([a, b, d, c, i, e, h, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_3028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_61([h, d, e, f, a, i], is_dual)
    } else {
        select_1527([b, c, a, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3027([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_350([b, i, e, a, f, g, k], is_dual)
    } else {
        select_3028([a, c, d, b, f, g, h, i, j, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_3030([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_215([f, a, d, e, h, g], is_dual)
    } else {
        select_215([a, g, b, c, i, f], is_dual)
    }
}
/// n = 11, i = 3
fn select_3029([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3030([b, a, f, d, e, h, g, j, i], is_dual)
    } else {
        select_1092([a, g, b, c, i, f, k, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3026([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3027([c, b, d, e, a, f, g, i, j, h, l, k], is_dual)
    } else {
        select_3029([a, c, b, d, e, h, i, g, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3033([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_27([b, d, g, e, f, h, j, i], is_dual)
    } else {
        select_632([a, b, c, i, g, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3035([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_32([a, b, c, i, f, j], is_dual)
    } else {
        select_44([c, d, e, h, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1576([b, f, d, e, c, g, h, j, i], is_dual)
    } else {
        select_3035([a, g, c, d, e, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3032([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3033([a, b, c, g, e, f, h, i, k, l, j], is_dual)
    } else {
        select_3034([a, d, b, e, f, h, g, i, j, l, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_3036([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_301([c, a, b, d, g, h, f], is_dual)
    } else {
        select_867([c, d, e, a, b, g, f, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_3031([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3032([b, c, f, a, d, e, g, h, i, k, j, l], is_dual)
    } else {
        select_3036([a, j, b, c, f, g, h, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3025([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3026([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_3031([a, c, d, e, f, g, b, h, i, j, l, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_3016([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3017([a, b, c, e, i, f, g, h, k, l, m, j, o, n], is_dual)
    } else {
        select_3025([a, b, d, e, f, g, j, i, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_3040([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2582([c, d, e, a, f, b, g, h], is_dual)
    } else {
        select_2580([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_3039([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_1547([a, c, e, f, b, d, g, h], is_dual)
    } else {
        select_3040([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3042([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_676([b, c, f, e, a, g, h], is_dual)
    } else {
        select_468([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3041([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2176([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_3042([a, b, g, c, i, f, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3038([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3039([a, b, c, i, f, g, l, j], is_dual)
    } else {
        select_3041([a, b, c, d, e, j, h, k, l, i, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_3046([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_54([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_173([g, c, b, a, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3045([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_934([a, g, d, e, b, h, j, k], is_dual)
    } else {
        select_3046([a, c, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3044([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1766([a, b, c, f, j, g, h, k, l], is_dual)
    } else {
        select_3045([f, b, c, d, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3043([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2612([a, b, c, d, i, g, j, h, l, k, m], is_dual)
    } else {
        select_3044([a, b, c, e, f, h, g, k, i, l, j, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3037([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3038([a, b, d, f, g, e, i, k, l, j, m, o, n], is_dual)
    } else {
        select_3043([a, b, c, j, f, g, h, m, k, l, i, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3015([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3016([b, c, d, a, e, f, g, i, h, k, l, m, j, o, n], is_dual)
    } else {
        select_3037([a, b, d, c, e, f, g, i, k, j, l, m, h, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3014([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3015([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3015([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 8, i = 2
fn select_3052([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2478([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_141([e, c, g, f, a, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_3053([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1725([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_60([c, g, d, e, f, h, a, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_3051([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3052([b, c, i, d, g, a, h, j], is_dual)
    } else {
        select_3053([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3050([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1623([a, b, d, c, e, i, g, j, h, k], is_dual)
    } else {
        select_3051([a, c, d, f, b, e, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3055([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1183([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_1183([a, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3054([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_349([a, b, c, d, f, i, g, h, j], is_dual)
    } else {
        select_3055([a, b, c, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3049([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3050([a, b, d, c, f, e, h, i, g, j, k], is_dual)
    } else {
        select_3054([a, b, d, f, g, c, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3058([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1454([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1477([a, c, b, g, f, h, i, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_3057([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3058([g, a, b, c, e, h, i, f, j], is_dual)
    } else {
        select_1322([e, b, c, f, d, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3061([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_228([a, b, d, e, g, i, h, j], is_dual)
    } else {
        select_205([a, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3060([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3061([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1706([b, c, e, d, h, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3062([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1128([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_183([b, e, c, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3059([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3060([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_3062([a, b, c, d, f, g, h, i, e, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3056([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3057([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_3059([a, c, d, e, g, b, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3048([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3049([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3056([a, h, c, d, e, b, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3067([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_671([a, b, g, f, e, h, i], is_dual)
    } else {
        select_61([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3068([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_679([f, h, i, j, a, g], !is_dual)
    } else {
        select_40([a, b, c, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3066([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3067([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_3068([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3069([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_48([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_48([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3065([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3066([f, e, h, c, d, g, i, j, k, l], is_dual)
    } else {
        select_3069([e, f, c, d, a, b, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3070([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2401([d, e, f, a, b, i, g, h, j, k], is_dual)
    } else {
        select_2401([d, e, f, a, c, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3064([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3065([d, e, h, i, c, a, b, j, l, k, m, n], is_dual)
    } else {
        select_3070([f, g, j, a, b, c, h, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3075([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_98([h, e, i, j, f, g, a, b], !is_dual)
    } else {
        select_189([a, b, c, d, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3074([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_783([e, h, i, j, a, f, g, b], !is_dual)
    } else {
        select_3075([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3073([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3074([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3074([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3078([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_65([a, h, i, j, b], !is_dual)
    } else {
        select_143([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3079([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_211([f, b, c, d, g], is_dual)
    } else {
        select_211([h, e, i, j, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3077([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3078([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3079([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_3080([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_494([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_3022([b, i, c, d, a, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3076([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3077([a, h, e, f, g, b, i, j, k, l], is_dual)
    } else {
        select_3080([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3072([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3073([a, b, i, d, e, c, h, j, k, l], is_dual)
    } else {
        select_3076([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3084([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_141([d, b, c, e, f, g], is_dual)
    } else {
        select_731([d, h, i, a, e, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3083([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_162([e, b, c, d, f, g, h, i], is_dual)
    } else {
        select_3084([a, b, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3085([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_940([a, b, c, d, h, f, i, g, j, k], is_dual)
    } else {
        select_940([a, b, c, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3082([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3083([a, g, d, e, f, b, h, i, k, j, l], is_dual)
    } else {
        select_3085([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3081([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3082([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_3082([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3071([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3072([a, b, c, h, i, d, e, l, j, m, k, n], is_dual)
    } else {
        select_3081([a, b, c, j, f, g, k, h, i, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3063([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3064([a, b, c, e, f, g, h, i, j, l, m, k, o, n], is_dual)
    } else {
        select_3071([a, b, c, e, f, d, i, h, k, l, m, j, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3047([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < n) || (is_dual && j > n) {
        select_3048([a, b, d, c, i, l, k, m, h, n, j], is_dual)
    } else {
        select_3063([a, b, c, e, f, g, d, i, h, k, j, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3013([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3014([a, b, c, e, f, d, g, h, j, i, k, l, m, n, o], is_dual)
    } else {
        select_3047([a, b, c, f, e, g, h, j, i, k, d, l, m, n, o], is_dual)
    }
}
/// n = 9, i = 4
fn select_3093([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_45([b, c, f, g, e], is_dual)
    } else {
        select_39([h, i, d, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3092([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3093([a, b, e, d, h, g, f, i, j], is_dual)
    } else {
        select_44([b, c, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_3091([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2776([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_3092([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3090([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3091([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2776([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3089([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1212([a, e, i, j, g, b, c, h], !is_dual)
    } else {
        select_3090([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3088([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2117([a, j, k, e, i, f, b, c], !is_dual)
    } else {
        select_3089([a, f, b, d, e, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3096([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_807([a, f, b, c, e, h, j, g], is_dual)
    } else {
        select_1428([a, c, d, b, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3098([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_162([b, d, a, e, h, g, f, i], is_dual)
    } else {
        select_795([a, b, c, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3097([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3098([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_161([f, b, d, e, a, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3095([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3096([a, b, c, d, i, f, g, k, j, l], is_dual)
    } else {
        select_3097([a, c, d, g, e, f, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1061([e, d, i, h, g, f, b, a], !is_dual)
    } else {
        select_1978([e, i, h, g, d, f, b, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3101([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1344([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1945([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3099([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3100([a, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_3101([e, f, j, i, g, h, b, c, d], !is_dual)
    }
}
/// n = 13, i = 4
fn select_3094([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3095([f, b, c, d, e, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3099([a, b, c, d, f, g, h, l, m, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3087([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_3088([g, b, c, i, f, h, j, l, k, a, m], is_dual)
    } else {
        select_3094([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_3105([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_241([a, b, d, e, c, f, g], is_dual)
    } else {
        select_583([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_3108([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_61([c, d, e, f, g, h], is_dual)
    } else {
        select_1093([a, c, b, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_3107([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3108([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_40([f, c, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3106([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3107([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_807([a, g, b, e, f, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3104([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3105([a, h, b, c, j, k, g, i], is_dual)
    } else {
        select_3106([a, b, d, e, g, f, h, i, l, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3103([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3104([a, b, c, d, e, h, g, i, f, j, k, l], is_dual)
    } else {
        select_3104([a, c, b, d, e, h, f, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3110([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1588([a, b, i, c, g, f, k, l], is_dual)
    } else {
        select_3046([a, c, f, d, e, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3109([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_1337([a, b, c, i, f, k, l, g], is_dual)
    } else {
        select_3110([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3102([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3103([a, b, c, i, d, g, h, j, f, k, m, l], is_dual)
    } else {
        select_3109([a, b, c, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3086([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3087([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3102([a, b, d, e, f, g, c, h, i, j, l, k, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3012([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && o < c) || (is_dual && o > c) {
        select_3013([a, b, d, c, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3086([a, b, d, e, l, f, m, i, j, k, n, o, c], is_dual)
    }
}
/// n = 12, i = 2
fn select_3118([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_424([b, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_424([a, b, c, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_3117([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_1189([b, c, k, d, e, a, i, j, l], is_dual)
    } else {
        select_3118([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3121([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_211([c, e, f, g, j], is_dual)
    } else {
        select_341([a, b, d, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3122([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_341([a, b, c, i, j, k], is_dual)
    } else {
        select_137([d, e, f, g, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_3120([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3121([a, b, c, d, e, k, j, i, l, m, n], is_dual)
    } else {
        select_3122([a, b, d, f, g, h, i, j, k, l, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_3124([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_65([a, b, c, h, i], is_dual)
    } else {
        select_23([d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_3125([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1450([a, b, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1450([a, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3123([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3124([b, h, c, d, e, f, i, j, k], is_dual)
    } else {
        select_3125([a, b, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3119([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3120([a, b, c, d, e, f, g, h, j, i, k, m, l, n], is_dual)
    } else {
        select_3123([b, c, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3116([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3117([a, c, d, i, e, f, g, h, j, k, l, m], is_dual)
    } else {
        select_3119([a, b, d, j, e, f, g, h, i, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3115([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_3116([a, b, c, d, g, e, f, k, i, j, l, m, o, n, p], is_dual)
    } else {
        select_960([a, b, e, f, h, j, l, i, k, n, m, p], is_dual)
    }
}
/// n = 14, i = 4
fn select_3129([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_136([a, j, d, e, f, g, h, k, m, n], is_dual)
    } else {
        select_424([b, c, h, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3130([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_671([a, c, i, e, f, j, k], is_dual)
    } else {
        select_1092([b, c, f, d, e, g, h, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_3128([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_3129([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3130([b, c, k, d, a, h, i, l, j, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_3132([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_224([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1882([g, c, d, e, f, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3133([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_679([a, i, j, f, b, c], !is_dual)
    } else {
        select_1184([a, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3131([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3132([a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3133([a, b, j, c, h, g, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3127([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3128([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3131([a, b, i, e, f, g, h, j, c, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3126([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_960([a, b, d, e, g, c, k, h, j, l, m, o], is_dual)
    } else {
        select_3127([a, b, c, f, d, e, j, h, i, k, m, n, l, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3114([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_3115([a, b, c, d, e, f, g, h, j, i, k, l, n, m, o, p], is_dual)
    } else {
        select_3126([a, b, c, e, f, d, h, j, l, k, m, i, n, o, p], is_dual)
    }
}
/// n = 11, i = 2
fn select_3137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_48([a, b, d, h, e, f, g, i, j, k], is_dual)
    } else {
        select_1799([a, b, c, d, j, h, k, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3140([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_341([a, f, h, i, e, c], !is_dual)
    } else {
        select_143([g, f, h, i, a, d, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3139([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3140([g, k, l, h, j, a, b, c, i], !is_dual)
    } else {
        select_834([b, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3138([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2940([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_3139([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3136([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3137([a, c, d, h, e, f, g, i, j, k, l], is_dual)
    } else {
        select_3138([a, b, c, j, e, f, g, h, k, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3135([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_960([a, b, d, e, g, c, k, h, j, l, m, o], is_dual)
    } else {
        select_3136([a, b, c, f, d, e, j, h, i, k, m, n, l, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3134([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_3115([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_3135([a, b, c, e, f, d, h, i, l, k, m, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3113([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3114([a, d, c, e, f, g, h, i, b, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3134([a, d, b, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 4
fn select_3144([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_163([b, e, c, d, g, f, h], is_dual)
    } else {
        select_141([d, e, j, a, i, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3143([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_227([g, d, j, e, a, i, b, h], !is_dual)
    } else {
        select_3144([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3146([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_775([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_393([a, b, i, g, e, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3145([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3146([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_235([b, h, c, e, a, j, i, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3142([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3143([e, b, d, a, f, g, i, h, j, k], is_dual)
    } else {
        select_3145([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3149([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_137([c, d, e, f, i], is_dual)
    } else {
        select_1973([a, j, b, g, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3148([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_224([i, b, c, d, e, f, h, j, k, l], is_dual)
    } else {
        select_3149([a, h, c, d, e, f, g, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3150([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3122([a, b, j, d, e, f, g, i, k, m, n], is_dual)
    } else {
        select_422([c, i, d, e, f, g, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3147([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3148([b, c, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_3150([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3141([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_3142([a, c, k, d, b, h, i, j, l, m, n], is_dual)
    } else {
        select_3147([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_3112([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < c) || (is_dual && p > c) {
        select_3113([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3141([a, b, d, e, f, g, k, j, l, m, n, o, p, c], is_dual)
    }
}
/// n = 8, i = 2
fn select_3157([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2661([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_122([c, b, f, g, h, a], is_dual)
    }
}
/// n = 9, i = 2
fn select_3156([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_855([a, b, d, e, f, h, g, i], is_dual)
    } else {
        select_3157([a, b, c, d, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_3155([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_3156([a, b, d, e, h, g, c, i, j], is_dual)
    } else {
        select_3051([a, b, d, e, c, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_3158([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2007([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    } else {
        select_2007([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_3154([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3155([a, b, c, d, k, e, h, j, i, l], is_dual)
    } else {
        select_3158([a, h, b, c, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_3163([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_176([a, b, e, d, g], is_dual)
    } else {
        select_176([a, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_3162([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_652([a, c, b, d, f, e, h, g, i], is_dual)
    } else {
        select_3163([d, b, c, g, f, e, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_3161([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_2512([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3162([j, c, b, a, g, h, k, i, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3165([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1191([i, b, c, d, e, f, h, k, j, l], is_dual)
    } else {
        select_1738([a, h, d, e, f, g, j, k, i, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_3167([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1738([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_123([a, b, j, g, f, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3166([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3167([g, a, c, d, e, i, f, j, h, l, k], is_dual)
    } else {
        select_3167([f, b, c, d, e, h, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3164([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3165([b, a, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_3166([a, b, d, e, f, j, h, g, i, k, m, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3160([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3161([g, c, h, d, e, f, a, i, j, k, l, m], is_dual)
    } else {
        select_3164([b, c, a, d, e, f, g, i, j, h, k, m, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_3169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_894([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3036([b, c, a, d, j, i, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3172([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_37([a, c, d, e, f, h, g, j], is_dual)
    } else {
        select_2634([a, c, b, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_301([a, b, c, f, i, h, g], is_dual)
    } else {
        select_3172([a, d, e, b, c, f, g, i, j, h], is_dual)
    }
}
/// n = 13, i = 3
fn select_3170([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_894([b, c, h, e, f, g, i, j, k, l], is_dual)
    } else {
        select_3171([a, b, c, d, k, h, j, l, i, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3168([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3169([h, b, c, i, e, f, g, a, j, k, l], is_dual)
    } else {
        select_3170([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3159([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3160([b, d, c, e, f, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_3168([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_3153([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_3154([a, d, e, f, g, b, i, h, j, k, l, m], is_dual)
    } else {
        select_3159([a, b, c, f, d, e, k, h, j, i, m, n, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3178([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_477([a, b, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3179([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_129([i, j, k, a, b, h], !is_dual)
    } else {
        select_137([c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_3177([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3178([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3179([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3176([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_423([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3177([b, i, d, e, f, g, h, a, j, l, m, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_3182([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1527([a, b, c, d, e, f, h, j, i, k], is_dual)
    } else {
        select_1527([a, b, c, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3181([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_328([a, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3182([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_3180([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_423([a, b, i, d, e, f, g, j, h, k, m, l], is_dual)
    } else {
        select_3181([a, c, h, d, e, f, g, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3175([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3176([h, i, b, d, e, f, g, a, j, k, l, m, n], is_dual)
    } else {
        select_3180([a, b, c, d, e, f, g, j, h, i, k, m, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3185([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_913([f, g, b, c, d, e, h, j, k], is_dual)
    } else {
        select_1412([e, a, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3184([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_447([f, g, a, b, e, i, h], is_dual)
    } else {
        select_3185([c, d, a, b, f, e, g, h, j, i, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3188([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_129([e, a, b, g, d, h], is_dual)
    } else {
        select_361([d, a, c, f, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3187([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3188([a, b, e, d, g, f, i, h], is_dual)
    } else {
        select_1258([d, a, c, f, h, e, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3186([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2043([d, f, b, c, g, i, h, e, k, j], is_dual)
    } else {
        select_3187([e, a, c, d, g, i, h, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3183([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3184([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3186([c, d, b, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3174([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_3175([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3183([a, c, d, k, h, b, i, j, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3173([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_3154([a, d, e, f, g, b, j, h, i, k, l, m], is_dual)
    } else {
        select_3174([a, b, c, f, d, e, k, h, i, j, m, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3152([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3153([a, c, b, d, e, f, g, k, h, j, l, i, m, n], is_dual)
    } else {
        select_3173([a, b, c, d, e, f, g, j, k, i, l, h, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3151([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3152([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3152([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3111([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3112([a, b, c, e, f, g, h, d, i, j, l, k, m, n, o, p], is_dual)
    } else {
        select_3151([a, b, c, e, g, h, k, i, j, m, d, l, n, p, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3011([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < n) || (is_dual && d > n) {
        select_3012([a, b, c, e, f, g, h, l, j, k, m, n, d, o, p], is_dual)
    } else {
        select_3111([a, b, c, e, f, g, d, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2961([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_2962([a, b, c, d, e, f, g, i, k, j, l, m, n, o, p], is_dual)
    } else {
        select_3011([a, b, c, d, e, f, h, g, i, j, k, l, m, o, p, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_3198([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([a, c, b, d, e, f], is_dual)
    } else {
        select_351([a, b, c, d, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3197([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_284([c, a, d, e, g, i, h], is_dual)
    } else {
        select_3198([a, b, c, f, h, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3199([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2244([a, c, e, b, f, g, h, i, k, j], is_dual)
    } else {
        select_1428([a, b, d, c, f, h, j, l, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3196([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3197([a, b, c, d, g, f, i, h, k, j, l], is_dual)
    } else {
        select_3199([a, b, c, e, d, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([a, c, d, e, f, g], is_dual)
    } else {
        select_2864([f, i, j, a, h, b, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3201([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_447([c, f, d, e, a, g, h], is_dual)
    } else {
        select_3202([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3204([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_679([a, c, e, d, f, g], is_dual)
    } else {
        select_770([f, h, i, e, a, b, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3203([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3204([h, g, j, e, a, b, i, c, f], !is_dual)
    } else {
        select_798([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3200([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3201([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_3203([b, c, d, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3195([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3196([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3200([g, b, i, c, d, a, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3208([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_350([b, g, c, f, i, h, k], is_dual)
    } else {
        select_49([a, d, e, b, f, h, g, i, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3209([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_852([a, b, g, d, e, f, i, h, k], is_dual)
    } else {
        select_1092([b, a, h, c, f, g, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3207([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3208([a, c, b, e, f, d, g, h, j, i, k, l], is_dual)
    } else {
        select_3209([a, b, c, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3211([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_152([f, e, c, d, i, h, g, j, k, l], is_dual)
    } else {
        select_152([f, e, a, b, j, h, g, i, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3210([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_582([g, b, c, d, j, h, k, i], is_dual)
    } else {
        select_3211([c, d, e, f, b, a, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3206([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3207([c, b, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_3210([c, a, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3214([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_97([b, c, e, a, f, d, g, h, i], is_dual)
    } else {
        select_533([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3213([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_851([a, b, d, g, e, f, i, h, k], is_dual)
    } else {
        select_3214([a, c, b, d, h, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3215([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_48([a, c, f, g, b, e, h, i, j, m], is_dual)
    } else {
        select_51([a, b, d, c, e, i, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3212([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3213([a, c, b, d, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_3215([a, b, c, d, e, f, g, h, j, i, k, m, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3205([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3206([a, c, d, e, i, f, g, h, j, k, l, m], is_dual)
    } else {
        select_3212([a, b, c, d, j, f, g, h, i, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3194([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_3195([a, b, c, e, d, k, i, j, l, h, m, n], is_dual)
    } else {
        select_3205([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3193([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3194([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_3194([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_3222([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_129([a, b, c, d, e, f], is_dual)
    } else {
        select_129([a, b, c, d, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3221([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1363([b, c, a, d, e, f, g], is_dual)
    } else {
        select_3222([b, c, g, f, a, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3220([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_520([a, c, d, f, b, h, g, i], is_dual)
    } else {
        select_3221([a, b, e, c, d, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3224([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1588([a, b, c, d, f, e, g, i], is_dual)
    } else {
        select_1588([a, b, h, i, g, e, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3225([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1933([a, e, h, i, g, f, b, c], !is_dual)
    } else {
        select_770([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3223([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3224([a, e, b, d, g, f, i, h, j], is_dual)
    } else {
        select_3225([a, b, c, f, e, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3219([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3220([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3223([a, c, e, d, h, i, g, b, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3227([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2408([a, c, d, b, e, f, h, g], is_dual)
    } else {
        select_491([a, d, f, e, b, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3226([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3227([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_2023([a, f, c, d, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3218([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3219([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3226([a, b, g, d, f, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_3230([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_224([a, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_424([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3229([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3230([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2803([b, c, j, d, h, a, k, i, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3228([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2995([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_3229([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3217([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3218([a, b, d, e, j, f, c, k, i, l, m], is_dual)
    } else {
        select_3228([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3235([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_350([b, c, a, d, e, f, g], is_dual)
    } else {
        select_341([a, g, b, c, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_3234([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2561([a, b, f, g, d, e, h, i, j, k, l], is_dual)
    } else {
        select_3235([a, b, c, f, g, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3233([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3234([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_3234([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3237([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1072([a, f, c, d, e, g, h, j, i], is_dual)
    } else {
        select_1258([a, h, b, e, i, f, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3237([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3237([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3232([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3233([a, b, c, d, g, h, e, f, i, j, k, l], is_dual)
    } else {
        select_3236([a, b, d, g, h, j, c, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3231([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3232([a, b, c, e, d, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_684([a, b, c, i, g, h, d, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3216([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3217([a, b, c, d, f, i, g, h, j, k, l, m, n], is_dual)
    } else {
        select_3231([a, b, c, d, e, j, g, h, i, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3192([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3193([a, b, c, f, e, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_3216([a, b, c, f, d, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 2
fn select_3243([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_48([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_2085([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3246([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_341([a, b, j, k, i, h], !is_dual)
    } else {
        select_137([c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_3247([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_923([a, b, i, g, j, k, l], is_dual)
    } else {
        select_137([c, d, e, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3245([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3246([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_3247([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3244([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3245([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3245([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3242([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3243([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3244([a, b, i, e, f, g, h, c, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3250([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_641([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_641([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3249([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_447([a, b, i, j, g, c, h], !is_dual)
    } else {
        select_3250([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3248([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_3249([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1765([a, b, f, e, c, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3241([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3242([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3248([a, b, c, j, e, d, i, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_3253([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_58([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_644([a, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3252([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3253([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_3253([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3251([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_3248([a, b, c, i, e, d, h, j, k, l], is_dual)
    } else {
        select_3252([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3240([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3241([a, b, c, d, e, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_3251([a, b, c, d, e, f, k, i, j, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_3257([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_349([a, b, c, i, d, h, g, j, k], is_dual)
    } else {
        select_414([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_3259([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_111([f, a, i, d, e, h, g, j, k, l], is_dual)
    } else {
        select_49([f, d, e, b, c, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_3260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_21([i, c, d, e, f, g, j, k, h, l], is_dual)
    } else {
        select_108([a, b, h, c, d, e, f, j, k, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_3258([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3259([h, b, c, d, e, f, g, i, j, k, l, m], is_dual)
    } else {
        select_3260([a, g, b, c, d, e, f, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_3256([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_3257([a, b, c, d, j, k, h, i, m, l, n], is_dual)
    } else {
        select_3258([e, c, i, f, g, b, a, j, h, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_3255([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3256([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_3256([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_3264([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_724([a, c, f, d, e, g, h, i, j], is_dual)
    } else {
        select_584([a, e, b, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3265([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3146([a, g, b, d, f, h, e, j, i, k, l], is_dual)
    } else {
        select_1123([a, d, c, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3263([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3264([a, g, c, d, f, i, h, e, j, k, l], is_dual)
    } else {
        select_3265([a, c, b, d, f, e, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3262([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3263([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3263([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_3268([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_351([a, b, c, d, e, g, h], is_dual)
    } else {
        select_351([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_3267([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2320([a, b, c, d, j, h, k, i, l], is_dual)
    } else {
        select_3268([a, b, e, f, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_3266([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3267([a, b, c, i, e, f, g, h, j, k, l, m], is_dual)
    } else {
        select_48([a, b, d, j, e, f, g, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3261([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_3262([a, b, d, k, e, c, h, i, j, l, m, n], is_dual)
    } else {
        select_3266([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3254([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3255([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3261([a, b, c, i, f, g, h, k, j, d, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3239([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_3240([a, b, c, d, f, i, g, h, j, k, l, n, m, o], is_dual)
    } else {
        select_3254([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_3274([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_52([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_242([a, g, i, k, j, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3273([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3274([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_3274([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 1
fn select_3276([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_895([i, e, f, g, h, a, j], is_dual)
    } else {
        select_2397([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3277([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_934([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_934([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_3275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3276([g, a, b, c, d, e, f, h, i, j], is_dual)
    } else {
        select_3277([g, j, a, b, c, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3272([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3273([a, b, i, f, g, h, c, j, k, l, m], is_dual)
    } else {
        select_3275([c, d, e, f, g, h, a, b, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3271([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_469([a, b, c, d, h, g, j, i, k, l, m], is_dual)
    } else {
        select_3272([a, b, c, e, f, d, g, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3282([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_228([a, d, c, e, f, h, g, i], is_dual)
    } else {
        select_236([a, b, f, e, g, h, d, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3281([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2497([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3282([b, i, c, a, f, g, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3284([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_409([a, b, c, e, h, g, i], is_dual)
    } else {
        select_141([a, c, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3283([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3284([a, c, b, d, e, f, h, g, i], is_dual)
    } else {
        select_164([a, c, g, e, b, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3280([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3281([a, b, e, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3283([a, b, i, e, j, g, h, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3279([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3280([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_3280([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3278([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3248([a, b, c, i, d, j, g, k, h, l], is_dual)
    } else {
        select_3279([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3270([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3271([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3278([a, b, c, i, e, f, k, d, j, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3287([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1074([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1074([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3290([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2630([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_3009([c, b, f, e, g, h, a], is_dual)
    }
}
/// n = 10, i = 3
fn select_3289([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3290([a, h, b, c, g, f, i, j], is_dual)
    } else {
        select_1342([a, b, f, d, e, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_3293([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_211([a, b, c, d, j], is_dual)
    } else {
        select_50([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_3292([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3293([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_143([h, e, f, g, a, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_3294([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_662([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_271([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_3291([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3292([a, c, d, h, e, f, g, i, j, l], is_dual)
    } else {
        select_3294([a, b, i, e, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3288([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_3289([a, c, j, d, e, b, h, i, k, l], is_dual)
    } else {
        select_3291([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3286([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3287([a, b, l, h, m, c, i, k, j], !is_dual)
    } else {
        select_3288([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3285([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3286([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_3286([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3269([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3270([a, b, c, d, g, h, i, f, j, l, k, m, n, o], is_dual)
    } else {
        select_3285([a, b, c, d, e, k, g, h, i, l, n, m, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3238([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3239([a, b, c, d, g, e, h, i, j, f, k, l, m, n, o], is_dual)
    } else {
        select_3269([a, b, c, d, f, g, h, i, e, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3191([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_3192([a, b, c, d, f, e, g, h, l, j, n, p, m, o], is_dual)
    } else {
        select_3238([a, b, c, d, f, h, i, e, j, k, l, m, o, n, p], is_dual)
    }
}
/// n = 8, i = 3
fn select_3303([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_121([h, e, a, f, g, b, c], !is_dual)
    } else {
        select_121([h, f, a, e, g, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3302([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2607([g, j, h, a, i, e, b, f, c], !is_dual)
    } else {
        select_3303([a, b, d, e, i, h, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3302([a, b, g, c, h, f, i, e, j, k], is_dual)
    } else {
        select_733([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3305([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_301([a, c, d, g, f, i, h], is_dual)
    } else {
        select_88([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3306([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_265([c, d, b, a, f, h, g, i, e], is_dual)
    } else {
        select_1794([a, c, d, b, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3305([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3306([g, b, c, d, f, a, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3301([b, c, e, d, f, g, h, a, i, j, k], is_dual)
    } else {
        select_3304([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_215([b, e, d, g, f, h], is_dual)
    } else {
        select_37([a, c, b, d, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3309([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1191([b, c, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_3310([a, b, i, f, c, h, g, k, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3311([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_350([b, f, e, d, g, h, i], is_dual)
    } else {
        select_52([a, c, b, d, h, g, f, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3308([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3309([b, c, e, a, d, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3311([b, c, h, f, e, a, g, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_3314([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_62([d, e, b, c, f, g, h], is_dual)
    } else {
        select_176([h, a, f, e, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3313([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3314([b, a, f, d, e, g, h, i, k], is_dual)
    } else {
        select_1092([a, e, g, c, h, f, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_3316([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_623([a, b, c, f], is_dual)
    } else {
        select_673([b, c, d, e, g, f], is_dual)
    }
}
/// n = 11, i = 3
fn select_3317([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_553([b, g, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_1148([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3315([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3316([a, b, i, e, g, k, h], is_dual)
    } else {
        select_3317([c, e, d, a, b, g, f, h, k, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3312([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3313([c, b, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_3315([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3307([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3308([a, c, d, f, b, e, h, i, g, j, k, l], is_dual)
    } else {
        select_3312([a, c, b, d, f, h, j, i, g, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3299([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3300([a, b, c, d, i, h, k, j, g, l, m], is_dual)
    } else {
        select_3307([a, c, b, d, f, e, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3298([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3299([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_3299([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_3323([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_332([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_332([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3322([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_895([c, d, e, f, h, g, i], is_dual)
    } else {
        select_3323([a, b, i, c, g, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3325([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_61([b, c, d, e, g, h], is_dual)
    } else {
        select_335([a, b, f, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3324([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3325([a, g, c, d, e, f, h, i, j, k], is_dual)
    } else {
        select_22([b, h, c, d, e, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3321([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3322([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3324([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3320([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3321([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_3321([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3319([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3320([a, b, c, e, d, f, i, h, k, j, l], is_dual)
    } else {
        select_469([a, b, c, d, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3329([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_304([a, c, d, e, b, f, g], is_dual)
    } else {
        select_934([b, f, d, e, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3328([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3329([a, b, d, c, g, f, i, h, j], is_dual)
    } else {
        select_579([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3330([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1589([a, b, f, c, h, e, i, g], is_dual)
    } else {
        select_1589([a, b, e, d, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3327([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3328([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3330([a, b, d, g, f, i, h, c, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3326([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2263([a, b, c, i, d, f, h, j, k], is_dual)
    } else {
        select_3327([a, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3318([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3319([a, b, c, e, f, g, d, i, h, k, j, l], is_dual)
    } else {
        select_3326([a, b, c, d, f, e, i, j, k, h, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3297([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3298([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_3318([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3336([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1257([a, b, c, f, g, h, e], is_dual)
    } else {
        select_2044([a, c, d, b, e, f, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_3338([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_31([b, c, a, d, f, e, g], is_dual)
    } else {
        select_911([b, c, e, a, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3339([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_360([g, h, i, a, b, f, d], !is_dual)
    } else {
        select_393([h, g, i, a, b, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3337([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3338([a, b, d, c, h, j, g, k], is_dual)
    } else {
        select_3339([b, c, e, a, f, g, j, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3335([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3336([b, h, c, d, a, g, j, k], is_dual)
    } else {
        select_3337([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3342([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_106([a, b, d, f, e, g, h], is_dual)
    } else {
        select_477([b, c, g, e, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3341([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_64([c, a, e, d, b, f, g, h], is_dual)
    } else {
        select_3342([c, b, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3340([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_383([b, a, c, f, e, h, g, j, i, k], is_dual)
    } else {
        select_3341([a, b, c, g, d, i, j, h, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3334([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3335([a, b, c, i, e, h, g, k, j, l, m], is_dual)
    } else {
        select_3340([a, c, d, g, e, f, h, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3333([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3334([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_3334([b, a, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3332([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3333([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_3333([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3331([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3332([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_3332([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3296([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3297([a, b, c, d, f, e, h, i, j, k, m, l, n], is_dual)
    } else {
        select_3331([a, b, c, d, e, f, g, j, i, l, m, k, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_3348([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2158([a, b, c, d, e, f, g], is_dual)
    } else {
        select_164([a, c, d, e, f, g, b], is_dual)
    }
}
/// n = 9, i = 3
fn select_3350([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_353([a, c, b, f, h, g, e, i], is_dual)
    } else {
        select_1092([b, c, d, a, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3349([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3350([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2343([f, a, b, d, e, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3347([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_3348([a, f, b, h, g, i, j], is_dual)
    } else {
        select_3349([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3353([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1076([g, i, j, e, h, a, f, b, c], !is_dual)
    } else {
        select_1076([g, i, j, f, h, a, e, b, d], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3355([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_739([b, d, a, c, e, f, h, g], is_dual)
    } else {
        select_209([a, b, c, e, g, h, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3356([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_969([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_33([c, f, e, a], is_dual)
    }
}
/// n = 9, i = 3
fn select_3354([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3355([b, c, a, d, e, g, f, h, i], is_dual)
    } else {
        select_3356([b, c, f, e, a, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3352([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3353([b, d, c, e, a, f, g, i, h, j], is_dual)
    } else {
        select_3354([b, d, e, a, f, c, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_421([b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1076([h, k, l, g, j, b, a, c, i], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3360([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_126([f, b, g, a, h], is_dual)
    } else {
        select_38([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3359([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3360([b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_1076([g, h, j, e, i, b, a, c, f], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3357([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3358([a, b, d, c, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3359([a, b, d, i, g, c, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3351([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3352([a, b, c, d, i, j, h, g, k, l], is_dual)
    } else {
        select_3357([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3346([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_3347([b, c, i, d, g, j, h, k, a, l], is_dual)
    } else {
        select_3351([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3363([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3358([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3358([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3362([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_433([c, d, e, f, g, a, b, i, h, j], is_dual)
    } else {
        select_3363([a, b, c, d, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_3366([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1626([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1626([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_211([g, c, d, e, h], is_dual)
    } else {
        select_129([j, f, k, a, i, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3367([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_286([b, h, d, e, f, i], is_dual)
    } else {
        select_3368([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3365([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3366([c, g, d, e, f, b, h, i, j], is_dual)
    } else {
        select_3367([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3370([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_285([b, c, d, e, f, g], is_dual)
    } else {
        select_34([a, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3370([a, b, c, d, i, g, h, j, k], is_dual)
    } else {
        select_568([b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3364([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3365([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_3369([a, d, e, f, b, c, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3361([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3362([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3364([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3345([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_3346([a, c, d, e, f, g, h, i, j, b, k, l], is_dual)
    } else {
        select_3361([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3344([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3345([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_3345([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3376([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, c, d, e, f, g, h], is_dual)
    } else {
        select_393([a, d, g, f, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3375([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3376([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3376([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3379([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_247([a, h, i], is_dual)
    } else {
        select_1008([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3378([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3379([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_3379([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3377([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3378([i, k, g, j, a, b, h, c, d], !is_dual)
    } else {
        select_1455([b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3374([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3375([a, b, c, d, f, h, i, g, j, k], is_dual)
    } else {
        select_3377([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3373([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_1109([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_3374([b, c, d, e, g, j, h, a, i, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_3382([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_301([a, b, c, f, e, h, g], is_dual)
    } else {
        select_587([a, d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_3381([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1875([b, c, a, d, e, g, h, f, i], is_dual)
    } else {
        select_3382([f, b, c, e, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3384([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_997([a, c, d, e, g, f, i, j], is_dual)
    } else {
        select_115([a, h, b, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1954([b, a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_3384([b, e, c, d, f, g, h, a, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3380([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3381([a, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_3383([a, b, c, d, j, f, i, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3372([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3373([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_3380([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3371([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3372([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_3372([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3343([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3344([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3371([a, b, c, d, g, h, e, i, j, f, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3295([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3296([a, b, c, d, e, f, h, g, j, i, l, m, k, n], is_dual)
    } else {
        select_3343([a, b, c, d, e, f, g, k, l, i, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_3190([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < e) || (is_dual && n > e) {
        select_3191([a, b, c, d, f, g, h, e, i, j, k, l, m, n, p, o], is_dual)
    } else {
        select_3295([a, b, c, d, g, f, h, l, j, n, e, o, m, p], is_dual)
    }
}
/// n = 12, i = 3
fn select_3393([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_60([b, c, d, e, i, g, h, j], is_dual)
    } else {
        select_1446([a, b, j, c, f, g, h, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3395([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_65([b, c, d, e, g], is_dual)
    } else {
        select_98([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3394([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_286([b, c, e, f, i, h], is_dual)
    } else {
        select_3395([a, b, c, d, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_3392([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3393([a, d, f, b, c, g, h, i, j, k, m, l], is_dual)
    } else {
        select_3394([a, b, c, e, h, i, g, l, j, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_3398([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1093([b, e, c, d, f, g, h], is_dual)
    } else {
        select_89([b, a, d, f, h, e, i, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1363([b, c, d, e, h, g, i], is_dual)
    } else {
        select_3398([a, b, c, i, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3396([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3397([a, b, e, c, d, g, h, i, k, l, j], is_dual)
    } else {
        select_3394([a, c, d, f, b, h, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3391([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3392([a, c, d, b, f, e, h, g, i, k, l, j, m], is_dual)
    } else {
        select_3396([a, b, c, d, i, f, h, j, k, g, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_3401([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2541([b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_31([a, i, e, f, g, h, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3400([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2897([b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_3401([a, b, c, e, d, h, g, k, j, i, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2541([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_38([a, i, d, e, g, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_189([c, d, e, h, f, g, i, j], is_dual)
    } else {
        select_255([a, b, d, i, g, h, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3404([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3405([a, b, c, d, h, f, g, i, j, k, l], is_dual)
    } else {
        select_436([a, b, d, e, j, g, i, h, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3402([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_3403([a, b, c, h, i, d, g, l, k, j, m], is_dual)
    } else {
        select_3404([b, c, a, e, f, g, h, i, k, j, m, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3399([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3400([a, c, d, b, f, i, g, j, k, l, h, m], is_dual)
    } else {
        select_3402([a, c, d, f, b, e, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3390([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3391([c, b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_3399([c, a, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_3409([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_814([a, e, b, g, f, i, h], is_dual)
    } else {
        select_162([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3411([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_539([f, a, c, d, h, g, e, i, j], is_dual)
    } else {
        select_183([e, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2534([a, e, c, d, b, f, g, h, i, j], is_dual)
    } else {
        select_3411([g, b, c, d, a, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_3409([a, d, f, e, b, g, h, i, j], is_dual)
    } else {
        select_3410([a, d, b, c, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3414([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, e, c, d, f, g, h], is_dual)
    } else {
        select_1753([a, c, b, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3413([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_97([a, c, e, d, b, f, g, h, j], is_dual)
    } else {
        select_3414([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_3415([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_718([a, b, f, e, c, g], is_dual)
    } else {
        select_663([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3412([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3413([a, b, d, c, e, f, h, g, i, j], is_dual)
    } else {
        select_3415([a, d, c, b, h, g, f, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3407([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3408([a, b, d, c, e, g, f, h, i, j, k], is_dual)
    } else {
        select_3412([a, g, c, b, h, f, j, k, l, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3416([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3227([a, g, c, b, h, f, k, j, i], is_dual)
    } else {
        select_3408([a, b, d, c, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3406([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3407([a, b, c, h, d, f, k, g, i, j, l, m], is_dual)
    } else {
        select_3416([a, b, c, g, e, f, j, h, i, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3389([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_3390([a, c, d, b, e, g, f, h, i, j, l, k, m], is_dual)
    } else {
        select_3406([a, c, d, e, g, h, k, i, l, b, j, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3420([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1189([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2803([g, b, c, e, a, f, i, h, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_3422([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_718([f, a, b, g, h, e], is_dual)
    } else {
        select_64([a, c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_3421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3422([b, c, j, d, h, a, i, k], is_dual)
    } else {
        select_495([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3419([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_3420([a, c, j, d, e, b, h, i, k, l], is_dual)
    } else {
        select_3421([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3425([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_271([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1099([a, h, j, b, i, c, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3426([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3284([a, b, h, c, f, g, j, k, l], is_dual)
    } else {
        select_3046([a, c, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3424([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3425([a, h, b, d, e, f, j, i, l, m], is_dual)
    } else {
        select_3426([a, b, c, e, f, i, g, j, h, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_3428([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_285([a, b, h, d, i, k], is_dual)
    } else {
        select_169([c, e, f, a, b, d, g, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3429([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2541([d, e, a, b, c, k, i, j, m], is_dual)
    } else {
        select_2541([g, h, a, b, f, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3427([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3428([c, d, b, f, g, h, i, a, j, k, l, m], is_dual)
    } else {
        select_3429([g, h, e, a, b, f, c, d, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3423([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_3424([a, c, d, e, g, h, j, b, i, k, l, m, n], is_dual)
    } else {
        select_3427([a, c, b, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3418([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3419([a, b, e, i, f, g, h, c, j, k, l, m], is_dual)
    } else {
        select_3423([a, b, d, e, c, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_3431([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_698([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_698([a, b, c, e, f, g, h, d, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_3434([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([c, f, e, a, b, g, h], is_dual)
    } else {
        select_350([a, b, d, c, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_3433([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3434([c, d, a, e, b, h, g, i, f], is_dual)
    } else {
        select_3434([c, d, b, e, a, h, f, i, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_3432([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3433([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_3433([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_3430([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3431([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_3432([a, b, d, e, f, i, h, c, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_3417([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_3418([a, b, c, d, g, h, e, f, i, k, j, l, m, n], is_dual)
    } else {
        select_3430([a, b, c, g, e, f, i, k, l, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_3388([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3389([a, b, d, e, g, h, f, i, j, c, k, l, m, n], is_dual)
    } else {
        select_3417([a, b, d, e, c, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3439([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2517([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2517([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3438([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3439([a, b, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_2407([a, b, c, e, i, h, j, g, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3442([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([c, f, e, a, d, g, h], is_dual)
    } else {
        select_662([a, b, c, d, g, f, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3443([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_120([g, f, d, a, h, b, e], !is_dual)
    } else {
        select_2208([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3441([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3442([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3443([b, c, g, f, i, h, a, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3445([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([a, c, e, d, f, g, h], is_dual)
    } else {
        select_662([a, b, c, d, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3444([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1597([b, c, g, f, i, h, a, j, k], is_dual)
    } else {
        select_3445([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3440([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3441([a, b, c, i, e, f, h, k, j, m, l], is_dual)
    } else {
        select_3444([a, b, c, j, d, f, g, l, i, m, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3437([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3438([a, b, c, d, j, f, g, k, i, n, l], is_dual)
    } else {
        select_3440([a, b, d, c, e, i, g, h, l, j, m, n, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3450([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2011([a, b, h, c, e, f, i, k, l], is_dual)
    } else {
        select_173([c, i, d, f, g, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3452([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_39([a, g, c, i], is_dual)
    } else {
        select_1008([a, b, f, d, h, e, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3453([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_32([c, d, b, e, g, f], is_dual)
    } else {
        select_45([a, f, c, h, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_3451([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_3452([b, c, a, e, g, d, h, f, j, i], is_dual)
    } else {
        select_3453([d, c, a, f, e, g, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3449([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3450([b, c, a, d, f, e, g, h, i, k, j, l], is_dual)
    } else {
        select_3451([a, b, g, f, h, i, j, l, k, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_3456([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_184([b, c, d, f, g, h, i], is_dual)
    } else {
        select_42([a, c, d, e, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3457([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_229([a, d, c, g, e, h, i], is_dual)
    } else {
        select_39([e, f, b, d], is_dual)
    }
}
/// n = 11, i = 4
fn select_3455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3456([a, d, b, c, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3457([i, k, e, j, a, g, h, f, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3454([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_779([a, b, j, e, k, f, i], is_dual)
    } else {
        select_3455([a, d, f, c, e, g, i, h, l, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3448([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3449([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3454([a, c, e, d, b, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3447([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3448([a, b, d, c, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_812([a, b, d, j, k, f, c, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3462([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_229([c, b, e, d, g, f, h], is_dual)
    } else {
        select_1008([g, i, e, h, c, f, a, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3461([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_125([a, b, h, d, j], is_dual)
    } else {
        select_3462([b, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3464([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_184([c, d, f, e, g, h, j], is_dual)
    } else {
        select_39([a, b, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3465([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_184([a, c, h, e, g, j, l], is_dual)
    } else {
        select_44([b, d, i, f, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3464([a, f, b, d, g, e, h, j, i, k, l], is_dual)
    } else {
        select_3465([b, a, d, c, g, e, h, f, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3460([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3461([a, f, c, i, g, h, e, j, k, l], is_dual)
    } else {
        select_3463([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3459([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3460([a, d, c, f, e, g, h, i, k, j, m, l], is_dual)
    } else {
        select_2209([a, b, d, j, e, g, l, f, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3468([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_125([a, b, i, d, j], is_dual)
    } else {
        select_3457([b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3467([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3468([a, f, d, i, g, h, e, k, j, l], is_dual)
    } else {
        select_3463([a, d, b, c, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3466([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3467([a, d, f, c, e, g, h, i, k, j, m, l], is_dual)
    } else {
        select_2209([a, b, d, j, e, g, l, f, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3458([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3459([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3466([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3446([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3447([a, b, g, c, d, f, h, i, l, k, j, m], is_dual)
    } else {
        select_3458([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3436([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3437([a, b, e, d, f, c, h, i, g, j, k, l, n, m], is_dual)
    } else {
        select_3446([a, b, e, f, g, h, c, i, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3472([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_699([a, b, g, c, e, h, f, j], is_dual)
    } else {
        select_3409([a, d, c, b, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3473([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_447([a, g, c, d, f, i, h], is_dual)
    } else {
        select_661([a, b, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3471([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3472([a, c, e, d, f, h, g, b, i, j], is_dual)
    } else {
        select_3473([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3475([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_423([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_423([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3474([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3475([a, b, c, j, e, f, g, h, i, k, m, l], is_dual)
    } else {
        select_3475([a, b, d, i, e, f, g, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3470([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_3471([a, b, d, e, k, i, j, c, l, m], is_dual)
    } else {
        select_3474([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_3479([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_424([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_895([i, d, e, f, g, b, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_3478([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3479([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3479([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3481([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_277([a, b, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_277([a, b, c, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3480([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3481([b, i, d, e, f, g, h, a, j, l, k], is_dual)
    } else {
        select_3230([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3477([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_3478([a, d, b, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_3480([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3486([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_45([g, h, a, f, b], !is_dual)
    } else {
        select_29([e, c, d, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_3485([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_37([a, b, d, e, f, g, h, j], is_dual)
    } else {
        select_3486([a, b, c, h, g, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3484([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_36([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_3485([c, d, b, e, f, a, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3483([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_447([b, g, d, e, a, i, h], is_dual)
    } else {
        select_3484([b, a, c, f, d, e, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3489([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3486([a, b, c, f, g, e, i, h], is_dual)
    } else {
        select_38([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_353([e, a, c, g, i, f, j, h], is_dual)
    } else {
        select_3489([a, b, d, f, e, h, g, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3491([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1093([a, b, d, f, g, e, i], is_dual)
    } else {
        select_1093([a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3490([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3491([a, d, f, c, e, h, j, i, g], is_dual)
    } else {
        select_1144([d, a, b, e, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3487([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3488([c, d, e, a, b, f, g, h, i, j], is_dual)
    } else {
        select_3490([c, e, d, b, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3482([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3483([b, c, d, a, e, f, h, g, i, j], is_dual)
    } else {
        select_3487([b, c, d, f, e, g, h, a, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_3476([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3477([a, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3482([a, b, c, d, e, k, j, i, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3469([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_3470([a, b, c, g, e, d, h, k, i, j, m, o, l], is_dual)
    } else {
        select_3476([a, b, d, g, f, c, h, j, i, k, l, n, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3435([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_3436([a, c, d, f, g, e, i, k, j, l, b, m, n, o], is_dual)
    } else {
        select_3469([a, c, d, b, g, e, f, h, i, k, j, m, l, o, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_3387([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_3388([a, b, c, d, f, g, h, m, i, k, l, n, o, p], is_dual)
    } else {
        select_3435([a, b, c, d, e, f, g, l, i, j, k, m, o, n, p], is_dual)
    }
}
/// n = 9, i = 4
fn select_3500([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_45([a, c, d, g, i], is_dual)
    } else {
        select_45([b, c, e, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3499([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3500([i, k, j, f, g, a, b, h, c], !is_dual)
    } else {
        select_37([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3498([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3499([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_88([a, c, d, e, f, b, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3497([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3498([b, a, c, f, d, e, i, j, k, h, l], is_dual)
    } else {
        select_520([b, d, e, g, a, i, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3496([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3497([a, b, c, d, e, f, h, j, i, k, l, m], is_dual)
    } else {
        select_2105([b, a, d, e, g, i, j, h, k, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_3504([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_211([a, b, c, j, g], is_dual)
    } else {
        select_37([a, g, d, e, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_3503([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3504([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_222([g, d, e, f, h, a, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3502([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1362([b, c, i, a, f, j, g], is_dual)
    } else {
        select_3503([a, d, e, b, c, g, h, i, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_3506([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_350([d, e, a, c, l, i, n], is_dual)
    } else {
        select_350([g, h, b, f, k, j, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_3505([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_2660([d, e, k, h, g, a, j, m, l], is_dual)
    } else {
        select_3506([f, g, a, b, c, h, d, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_3501([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_3502([b, c, d, e, j, f, i, l, a, m, k, n], is_dual)
    } else {
        select_3505([b, c, d, a, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_3495([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_3496([a, b, c, e, f, l, h, k, i, n, m, p, o], is_dual)
    } else {
        select_3501([b, a, e, f, d, h, g, i, k, j, m, l, n, o], is_dual)
    }
}
/// n = 11, i = 3
fn select_3511([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_211([f, d, e, i, h], is_dual)
    } else {
        select_43([a, h, b, c, f, g, j, k, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3512([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_335([i, e, f, a, h], !is_dual)
    } else {
        select_539([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3510([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3511([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_3512([a, h, b, c, f, g, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3513([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_286([a, c, d, e, g, h], is_dual)
    } else {
        select_2630([a, c, b, h, f, i, j, g], is_dual)
    }
}
/// n = 14, i = 4
fn select_3509([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3510([a, b, i, c, d, g, k, h, m, l, n, j], is_dual)
    } else {
        select_3513([j, a, b, e, f, g, l, i, n, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3515([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1532([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1463([a, j, b, c, g, k, h, i, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_3514([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_3515([a, c, d, b, h, i, g, j, k, m, n, o], is_dual)
    } else {
        select_1049([e, f, g, b, k, h, i, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_3508([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_3509([a, b, d, e, c, i, g, j, l, k, h, m, n, o], is_dual)
    } else {
        select_3514([a, c, d, e, b, f, g, h, i, j, k, m, l, n, o], is_dual)
    }
}
/// n = 7, i = 2
fn select_3519([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_65([a, e, b, d, g], is_dual)
    } else {
        select_215([b, c, a, d, e, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_3518([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1111([a, b, g, d, e, f, i, h, k, l], is_dual)
    } else {
        select_3519([b, f, c, h, g, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3517([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2897([b, g, c, e, f, h, i, j, k], is_dual)
    } else {
        select_3518([a, b, d, c, h, f, g, k, j, l, i, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3521([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_792([d, b, c, a, h, g, i, k, j, m], is_dual)
    } else {
        select_2185([e, f, g, a, h, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3523([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_969([a, b, d, f, e, h, j, i], is_dual)
    } else {
        select_535([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3522([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_286([f, g, d, e, i, h], is_dual)
    } else {
        select_3523([a, b, c, h, f, g, j, k, i, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_3520([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_3521([b, d, e, c, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3522([a, c, k, d, e, h, g, j, n, m, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3516([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3517([a, b, c, j, f, g, k, i, m, h, l, n, o], is_dual)
    } else {
        select_3520([a, c, b, d, e, f, g, h, i, j, l, m, k, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3507([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3508([c, b, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3516([c, a, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3494([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < a) || (is_dual && m > a) {
        select_3495([b, c, d, e, a, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3507([b, c, d, e, f, k, g, i, j, m, a, l, o, n, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_3528([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1268([a, d, e, f, h, g, j, i], is_dual)
    } else {
        select_679([a, b, c, i, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2684([c, d, e, h, f, g, j, i], is_dual)
    } else {
        select_672([a, b, d, i, f, k, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_3527([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3528([a, b, g, c, f, e, h, j, k, i, l], is_dual)
    } else {
        select_3529([a, b, c, d, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3531([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_286([b, f, d, e, g, h], is_dual)
    } else {
        select_910([a, b, h, c, f, i, g, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3530([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_104([a, c, e, f, b, g, h, j, i, k], is_dual)
    } else {
        select_3531([a, b, d, c, h, g, j, k, l, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_3526([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3527([a, b, d, c, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_3530([a, c, d, b, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_3533([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_104([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_692([b, a, c, i, h, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_3535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_71([b, g, d, e, f, a, h, j], is_dual)
    } else {
        select_88([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3534([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2379([c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_3535([a, b, c, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3532([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3533([c, a, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3534([a, b, c, d, i, e, h, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3525([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3526([b, d, c, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_3532([b, d, a, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3539([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2447([b, a, c, d, e, g, f, h], is_dual)
    } else {
        select_377([e, b, f, d, a, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_3540([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_361([a, d, c, f, e, g], is_dual)
    } else {
        select_390([f, h, d, a, b, g, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3538([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_3539([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_3540([a, c, b, e, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_83([c, b, d, a, e, f, g, h, i], is_dual)
    } else {
        select_1044([b, c, d, h, g, a, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3537([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3538([a, b, c, d, g, j, h, k], is_dual)
    } else {
        select_3541([g, a, b, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3543([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_579([b, f, d, a, e, h, g, i], is_dual)
    } else {
        select_1193([b, a, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3544([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_656([b, a, c, h, f, i, j, g], is_dual)
    } else {
        select_797([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3542([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3543([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3544([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3537([b, c, d, e, a, f, g, i, h, j, k], is_dual)
    } else {
        select_3542([b, c, d, e, h, g, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3524([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3525([a, b, c, d, f, g, e, h, i, k, j, l], is_dual)
    } else {
        select_3536([a, b, c, d, e, f, h, j, k, i, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_3493([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_3494([a, c, b, f, g, d, h, e, i, k, j, m, l, p, o, n], is_dual)
    } else {
        select_3524([a, c, d, f, e, b, m, i, j, n, p, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3551([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_211([i, c, d, e, h], is_dual)
    } else {
        select_141([j, b, a, k, f, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_3550([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3551([a, f, c, d, e, g, h, j, i, k, l], is_dual)
    } else {
        select_221([h, b, c, d, e, i, f, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_3549([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_1049([e, f, g, a, b, k, i, l], is_dual)
    } else {
        select_3550([c, d, a, b, i, g, h, j, k, m, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_3554([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_121([a, b, i, f, e, j, h], is_dual)
    } else {
        select_998([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3555([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_65([d, e, c, g, f], is_dual)
    } else {
        select_969([a, b, f, d, e, h, i, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3553([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3554([b, f, c, d, e, g, h, j, k, i], is_dual)
    } else {
        select_3555([b, h, a, e, i, f, k, j, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3556([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_814([d, e, a, c, g, f, h], is_dual)
    } else {
        select_208([a, b, f, d, e, h, i, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_3552([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_3553([f, d, b, c, e, g, i, h, j, l, k], is_dual)
    } else {
        select_3556([e, h, a, j, k, f, m, g, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_3548([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_3549([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o], is_dual)
    } else {
        select_3552([c, b, i, d, g, h, j, l, k, a, n, m, o], is_dual)
    }
}
/// n = 8, i = 3
fn select_3559([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_676([d, g, h, e, f, a, b], !is_dual)
    } else {
        select_409([d, a, c, g, f, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3366([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_3559([b, h, c, a, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3557([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3558([a, b, d, c, h, i, g, k, l, j], is_dual)
    } else {
        select_1643([a, c, e, f, b, g, i, h, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_3547([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_3548([a, c, d, b, e, f, g, h, i, j, l, m, k, n, o], is_dual)
    } else {
        select_3557([a, b, c, j, e, f, k, i, l, g, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3546([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3547([a, b, d, e, f, g, c, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3547([a, c, d, e, f, g, b, h, i, j, k, l, m, o, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_3565([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_266([a, d, c, f, e, g, h, i], is_dual)
    } else {
        select_1692([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3564([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2497([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3565([b, i, c, a, f, g, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3566([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3284([a, c, b, d, e, f, h, g, i], is_dual)
    } else {
        select_1099([a, g, c, b, e, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3563([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3564([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3566([a, b, i, c, j, g, h, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3562([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3563([a, b, e, c, d, f, g, j, h, i, k, l], is_dual)
    } else {
        select_3563([a, b, e, c, d, f, g, j, i, h, l, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3570([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_65([b, c, a, h, j], is_dual)
    } else {
        select_65([e, f, d, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3571([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_233([h, j, i, g, f, a, e, d, c], !is_dual)
    } else {
        select_39([a, b, d, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3570([e, c, d, f, a, b, h, g, j, i], is_dual)
    } else {
        select_3571([c, d, b, e, g, a, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3572([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1794([b, c, d, g, f, a, h, i, j], is_dual)
    } else {
        select_1111([b, c, d, a, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3569([a, b, c, d, e, g, j, i, h, k, l], is_dual)
    } else {
        select_3572([b, a, c, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3575([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_405([f, g, h, e, a, b, c], !is_dual)
    } else {
        select_39([a, b, d, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3574([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3575([b, c, f, d, a, h, g, i], is_dual)
    } else {
        select_2661([b, c, a, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3576([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_344([a, h, i, j, f, g], !is_dual)
    } else {
        select_2321([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3573([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3574([a, b, c, e, f, h, g, j, i], is_dual)
    } else {
        select_3576([a, d, b, c, g, f, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3568([b, a, c, d, e, f, g, h, j, i, l, k], is_dual)
    } else {
        select_3573([b, c, d, g, e, i, h, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3561([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3562([a, b, c, d, f, h, g, j, l, i, k, m], is_dual)
    } else {
        select_3567([a, b, c, d, e, g, i, h, k, l, j, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_3580([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_644([a, f, b, g, h, e, i], is_dual)
    } else {
        select_162([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3582([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_360([a, b, e, d, g, h, i], is_dual)
    } else {
        select_173([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3581([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3582([e, h, i, a, g, b, c, f, d], !is_dual)
    } else {
        select_236([a, h, i, e, g, b, c, f, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3579([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3580([a, c, h, d, e, i, g, j, l], is_dual)
    } else {
        select_3581([e, k, l, i, a, h, f, j, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3583([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_340([a, g, b, i, d, j, f], is_dual)
    } else {
        select_340([a, f, c, h, e, j, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_3578([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_3579([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3583([e, b, g, f, j, h, k, i, a, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3586([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2170([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_731([d, e, i, a, b, h, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3585([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3586([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_3586([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3587([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_794([a, d, i, j, g, e, b, h], !is_dual)
    } else {
        select_2341([a, d, e, c, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3584([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3585([a, d, e, c, g, f, i, h, j], is_dual)
    } else {
        select_3587([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3577([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3578([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_3584([a, i, c, k, b, f, e, h, l, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3560([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3561([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    } else {
        select_3577([a, b, d, f, h, i, g, c, j, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_3545([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_3546([a, b, c, e, f, h, g, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_3560([a, b, c, d, m, f, i, o, h, k, p, l, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_3492([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_3493([a, c, d, b, e, f, g, h, i, j, k, l, m, o, n, p], is_dual)
    } else {
        select_3545([a, c, d, f, g, e, h, i, j, k, l, b, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3386([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_3387([a, b, d, e, f, g, c, h, j, k, i, l, m, o, n, p], is_dual)
    } else {
        select_3492([a, b, c, d, f, g, e, h, j, k, l, m, n, o, i, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3385([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3386([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3386([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3189([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < n) || (is_dual && j > n) {
        select_3190([a, b, c, d, e, g, f, i, h, l, k, m, o, n, j, p], is_dual)
    } else {
        select_3385([a, b, c, d, e, g, h, f, i, j, k, l, m, o, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2960([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2961([a, b, c, d, f, e, h, i, j, g, k, l, m, n, o, p], is_dual)
    } else {
        select_3189([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2648([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < m) || (is_dual && o > m) {
        select_2649([a, b, c, d, e, h, i, f, g, j, k, l, n, m, p, o], is_dual)
    } else {
        select_2960([a, b, c, d, e, f, g, h, j, i, l, k, n, p, o, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_2647([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2648([a, b, c, d, e, h, i, f, g, j, l, m, n, o, k, p], is_dual)
    } else {
        select_2648([a, b, c, d, e, h, i, g, f, j, k, m, n, o, l, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2646([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2647([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_2647([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2645([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2646([a, b, c, d, e, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_2646([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 2
fn select_3601([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_160([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_160([a, b, d, e, f, g, h, c, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3600([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2658([a, b, c, d, j, g, i, h, k, l], is_dual)
    } else {
        select_3601([i, a, b, c, e, f, h, g, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_3604([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2541([a, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_65([a, b, c, i, g], is_dual)
    }
}
/// n = 12, i = 2
fn select_3603([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_414([a, b, e, f, g, k, h, j], is_dual)
    } else {
        select_3604([a, b, e, c, d, j, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_3602([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_3603([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3028([a, d, e, b, c, j, i, k, l, h], is_dual)
    }
}
/// n = 13, i = 3
fn select_3599([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3600([b, c, d, i, f, g, h, a, j, k, l, m], is_dual)
    } else {
        select_3602([b, c, d, a, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3607([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_398([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_134([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3609([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_676([e, g, h, a, f, c, d], !is_dual)
    } else {
        select_124([b, c, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3608([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_583([b, c, d, a, f, e, g, h], is_dual)
    } else {
        select_3609([f, e, h, i, b, a, c, g], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3606([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3607([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3608([h, a, k, l, b, c, j, d, i], !is_dual)
    }
}
/// n = 13, i = 3
fn select_3610([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3258([e, a, b, c, d, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_3258([f, a, b, c, d, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3605([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_3606([a, b, c, d, e, f, k, i, l, m, j, n], is_dual)
    } else {
        select_3610([c, d, g, h, e, f, b, a, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3598([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_3599([a, b, e, f, c, g, h, i, j, d, k, l, m], is_dual)
    } else {
        select_3605([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3597([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3598([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_3598([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3596([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2088([a, b, c, d, e, h, i, f, g, j, k, l, m, n, o], is_dual)
    } else {
        select_3597([a, b, c, d, e, f, g, h, k, j, m, l, n, o], is_dual)
    }
}
/// n = 9, i = 2
fn select_3618([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_189([a, e, c, d, g, f, h, i], is_dual)
    } else {
        select_255([a, h, e, b, f, g, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_3617([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3618([a, h, c, d, e, g, j, i, k], is_dual)
    } else {
        select_1477([a, b, i, k, f, l, h, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3620([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_547([a, d, c, f, e, g, i, h], is_dual)
    } else {
        select_126([a, b, h, j, d], is_dual)
    }
}
/// n = 13, i = 4
fn select_3619([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_587([a, c, d, e, j, g, i, k], is_dual)
    } else {
        select_3620([a, b, c, f, g, h, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3616([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3617([a, b, c, i, d, f, h, j, g, k, l, m, n], is_dual)
    } else {
        select_3619([a, b, d, e, g, f, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 4
fn select_3622([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1306([a, b, k, l, f, m, i], is_dual)
    } else {
        select_780([a, c, i, d, e, g, h, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3621([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3622([e, d, h, a, b, i, f, g, j, k, l, m, n], is_dual)
    } else {
        select_62([a, b, c, k, f, g, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_3615([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_3616([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3621([b, e, f, c, a, d, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_3625([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_49([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_362([a, b, c, i, g, j, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3624([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3625([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_84([a, h, d, e, f, g, c, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_3623([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3624([a, b, c, d, i, j, g, h, l, m, n], is_dual)
    } else {
        select_302([c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3614([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3615([a, c, b, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    } else {
        select_3623([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3629([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_676([a, c, f, d, g, e, i], is_dual)
    } else {
        select_340([d, h, g, a, f, b, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3628([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1727([b, a, c, e, d, g, h, f, i], is_dual)
    } else {
        select_3629([a, c, b, e, f, g, h, d, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_3630([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2600([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_2600([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3627([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3628([h, k, l, a, b, c, j, d, i], !is_dual)
    } else {
        select_3630([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_3626([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_905([d, a, e, f, g, b, c, h, i, j, k, l], is_dual)
    } else {
        select_3627([a, b, c, d, e, i, j, h, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3613([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3614([b, c, d, e, f, g, h, i, j, k, a, l, m, n], is_dual)
    } else {
        select_3626([b, a, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3612([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3613([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_3613([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_3636([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_162([a, d, b, e, h, g, f, i], is_dual)
    } else {
        select_243([a, b, c, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 2
fn select_3635([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3636([a, b, c, j, d, h, i, g, k], is_dual)
    } else {
        select_160([a, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3638([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1268([a, c, f, d, e, g, h, i], is_dual)
    } else {
        select_201([a, b, c, h, f, i, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_3637([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1344([h, b, c, a, f, i, g, j], is_dual)
    } else {
        select_3638([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_3634([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_3635([b, a, g, d, e, f, i, h, k, j, l], is_dual)
    } else {
        select_3637([a, c, b, h, j, g, i, l, m, n], is_dual)
    }
}
/// n = 11, i = 2
fn select_3642([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_62([d, g, e, f, h, j, i], is_dual)
    } else {
        select_62([c, i, a, b, h, k, g], is_dual)
    }
}
/// n = 11, i = 2
fn select_3643([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_22([a, b, c, d, j, g, h], is_dual)
    } else {
        select_1576([a, b, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_3641([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3642([b, c, a, h, e, f, i, g, j, k, l], is_dual)
    } else {
        select_3643([d, g, e, f, b, c, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3645([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_539([a, c, b, h, g, f, i, j, k], is_dual)
    } else {
        select_54([a, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_3644([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3645([b, a, j, c, d, g, h, i, l, k, m], is_dual)
    } else {
        select_61([b, e, f, k, h, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_3640([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3641([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3644([b, e, c, d, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_3646([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_200([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_200([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_3639([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_3640([a, d, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3646([a, l, b, c, d, m, n, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_3633([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3634([b, d, c, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_3639([b, a, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3632([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3633([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_3633([a, c, b, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3631([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3632([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_3632([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3611([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_3612([a, b, c, d, e, f, h, j, i, k, l, m, n, o], is_dual)
    } else {
        select_3631([a, b, c, d, e, g, f, k, i, j, m, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3595([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3596([a, b, c, e, f, d, g, h, i, j, l, k, m, n, o], is_dual)
    } else {
        select_3611([a, b, c, e, f, h, g, i, j, k, l, d, m, n, o], is_dual)
    }
}
/// n = 13, i = 4
fn select_3654([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2497([a, c, d, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_3455([a, b, j, c, f, h, g, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3653([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2496([b, d, a, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_3654([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_3657([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_215([a, b, d, f, e, h], is_dual)
    } else {
        select_215([a, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_3656([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3657([a, b, c, e, f, g, i, j], is_dual)
    } else {
        select_162([a, e, c, d, i, g, h, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_3655([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_58([a, c, d, e, f, j, h, i, k], is_dual)
    } else {
        select_3656([a, b, c, d, k, g, h, i, j, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_3652([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_3653([a, b, c, d, i, j, g, h, k, m, l, n, o], is_dual)
    } else {
        select_3655([c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3651([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3652([a, b, c, d, e, f, h, i, j, k, l, g, m, n, o], is_dual)
    } else {
        select_3652([b, a, c, d, e, f, g, i, j, k, l, h, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3650([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3651([a, c, d, e, f, g, b, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3651([b, c, d, e, f, g, a, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3649([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3650([a, b, c, e, f, g, h, d, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3650([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 13, i = 2
fn select_3663([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_108([a, b, l, c, d, e, f, j, k, i], is_dual)
    } else {
        select_876([i, c, d, e, f, g, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 2
fn select_3662([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3663([a, g, b, c, d, e, f, i, h, j, k, l, m], is_dual)
    } else {
        select_180([h, b, c, d, e, f, i, g, j, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_3661([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_3653([a, b, c, d, j, l, h, i, k, n, m, o, p], is_dual)
    } else {
        select_3662([e, a, h, f, g, d, c, j, i, m, l, k, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_3660([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3661([a, b, c, d, e, f, g, i, j, k, l, m, h, n, o, p], is_dual)
    } else {
        select_3661([b, a, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3659([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3660([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3660([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3658([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3659([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3659([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3648([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_3649([a, b, c, d, e, g, h, l, j, k, f, m, n, o, p], is_dual)
    } else {
        select_3658([a, b, c, d, e, g, h, f, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_3670([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2185([a, d, e, c, h, i, g], is_dual)
    } else {
        select_1962([a, b, c, g, f, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3669([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3670([a, b, c, j, d, g, h, k, i, l, m, n], is_dual)
    } else {
        select_116([a, c, d, e, f, i, k, h, j, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_3672([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_676([a, b, c, d, e, f, g], is_dual)
    } else {
        select_115([a, e, f, b, d], is_dual)
    }
}
/// n = 14, i = 4
fn select_3671([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_104([c, d, i, e, f, g, h, k, j, l], is_dual)
    } else {
        select_3672([m, n, i, c, a, b, l], !is_dual)
    }
}
/// n = 14, i = 4
fn select_3668([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3669([c, b, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_3671([a, b, c, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3674([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_151([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_151([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_3673([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_314([e, b, h, f, g, a, d, i, k, j], is_dual)
    } else {
        select_3674([a, b, c, d, i, j, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3667([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3668([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_3673([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3666([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3667([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_3667([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3679([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_152([c, a, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_152([c, b, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3678([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3679([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_122([j, g, b, c, a, i], !is_dual)
    }
}
/// n = 13, i = 3
fn select_3677([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_103([e, b, c, f, g, d, a, i, h, j, k, l], is_dual)
    } else {
        select_3678([a, b, c, d, i, k, h, l, m, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_3676([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3677([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_3677([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_3684([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_163([b, e, c, d, g, f, h], is_dual)
    } else {
        select_126([d, a, h, i, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_3683([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3684([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_243([h, b, c, d, e, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3682([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_855([h, b, c, d, e, f, i, j], is_dual)
    } else {
        select_3683([a, b, c, d, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3687([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_61([g, c, d, e, b, h], is_dual)
    } else {
        select_1158([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3686([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3687([f, e, c, d, h, g, j, i, k, l], is_dual)
    } else {
        select_3687([f, e, a, b, i, g, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3685([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_3686([c, d, e, f, b, a, h, j, k, i, l, m], is_dual)
    } else {
        select_2595([a, b, c, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3681([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3682([f, e, i, c, d, g, h, k, j, l, m], is_dual)
    } else {
        select_3685([f, e, c, d, a, b, g, h, k, j, i, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_3689([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_58([b, c, h, d, e, f, g, i, j], is_dual)
    } else {
        select_1762([g, a, b, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3692([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_98([g, h, d, i, e, f, b, a], !is_dual)
    } else {
        select_269([e, a, d, c, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_3693([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_228([a, b, d, f, e, h, g, i], is_dual)
    } else {
        select_1027([a, c, b, d, f, g, h, i, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_3691([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3692([c, e, d, g, a, h, f, i, j], is_dual)
    } else {
        select_3693([b, c, a, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3690([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3691([f, a, b, c, g, e, h, i, j, k], is_dual)
    } else {
        select_3691([e, a, b, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3688([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3689([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3690([b, c, d, j, g, a, h, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3680([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3681([a, e, f, g, d, c, b, h, i, k, j, l, m], is_dual)
    } else {
        select_3688([b, c, d, i, f, g, a, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3675([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3676([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_3680([a, b, d, e, f, g, h, i, j, c, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3665([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3666([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_3675([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 2
fn select_3697([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_82([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_82([a, b, c, d, e, h, g, f, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3696([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_721([a, b, c, d, f, e, j, i, l, k, m, n], is_dual)
    } else {
        select_3697([c, i, g, h, e, a, b, d, k, j, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_3698([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_68([a, b, c, e, f, d, k, i, j, m, l], is_dual)
    } else {
        select_3697([g, h, i, j, d, a, b, c, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3695([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3696([a, b, c, d, e, j, g, h, k, l, i, m, n, o], is_dual)
    } else {
        select_3698([a, b, d, e, c, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3694([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3695([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o], is_dual)
    } else {
        select_3695([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3664([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_3665([a, b, c, d, e, f, j, g, h, k, l, n, o, m], is_dual)
    } else {
        select_3694([a, b, c, d, f, e, i, g, h, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3647([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_3648([a, b, c, d, f, g, h, e, i, k, j, l, m, n, o, p], is_dual)
    } else {
        select_3664([a, b, c, d, e, f, g, l, h, k, m, n, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3594([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < o) || (is_dual && n > o) {
        select_3595([a, b, c, d, e, f, h, g, l, j, k, m, o, n, p], is_dual)
    } else {
        select_3647([a, b, c, d, e, g, f, i, h, j, l, k, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3593([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3594([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o, p], is_dual)
    } else {
        select_3594([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    }
}
/// n = 13, i = 3
fn select_3706([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3243([a, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_465([a, b, c, k, d, e, i, j, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_3707([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_818([a, b, h, c, i, j, g, k, l], is_dual)
    } else {
        select_470([a, b, d, c, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3705([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3706([f, g, a, b, c, d, e, h, i, j, k, l, m], is_dual)
    } else {
        select_3707([f, g, a, k, b, c, i, h, j, l, m, n], is_dual)
    }
}
/// n = 12, i = 2
fn select_3709([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_48([g, h, c, d, e, f, i, j, k, l], is_dual)
    } else {
        select_48([g, h, c, d, a, b, k, j, i, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3708([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_464([i, b, c, d, e, f, g, h, j, k, l, m], is_dual)
    } else {
        select_3709([a, h, b, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3704([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3705([e, a, b, c, d, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3708([i, a, b, c, d, f, g, h, e, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3711([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_463([d, f, g, h, e, a, b, c, i, j, k, l], is_dual)
    } else {
        select_2336([a, b, c, d, e, f, j, k, l, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3710([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3711([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2278([a, b, c, i, e, g, h, d, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3703([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3704([a, g, h, i, f, b, c, d, e, j, k, l, m, n], is_dual)
    } else {
        select_3710([b, c, d, e, f, j, h, i, a, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3702([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_3703([a, b, c, d, e, g, i, f, j, k, l, m, n, o], is_dual)
    } else {
        select_3703([a, b, c, d, e, f, h, g, k, j, m, l, n, o], is_dual)
    }
}
/// n = 12, i = 4
fn select_3717([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3281([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_3281([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3716([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3717([a, b, c, e, d, h, g, j, k, i, l, m], is_dual)
    } else {
        select_167([a, d, e, f, b, c, g, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_3720([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_286([a, b, d, e, g, h], is_dual)
    } else {
        select_326([a, b, h, c, f, i, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_3719([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3720([a, c, d, b, e, f, h, g, i], is_dual)
    } else {
        select_1922([a, c, g, d, b, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3722([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1183([a, b, f, g, e, i, j, k], is_dual)
    } else {
        select_2185([c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3721([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3722([a, b, c, g, e, f, j, h, i, k, l], is_dual)
    } else {
        select_3722([a, b, d, f, e, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3718([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_3719([a, i, c, d, e, g, h, j, k], is_dual)
    } else {
        select_3721([a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3715([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3716([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_3718([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3714([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3715([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_3715([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3713([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_682([a, b, c, d, k, e, g, h, j, l, m, n], is_dual)
    } else {
        select_3714([a, b, c, h, e, f, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3712([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3713([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_3713([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3701([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_3702([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3712([a, b, c, d, e, g, j, i, l, k, f, m, n, o], is_dual)
    }
}
/// n = 11, i = 3
fn select_3729([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_661([a, b, d, c, h, f, g, j, k, i], is_dual)
    } else {
        select_579([a, g, c, e, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_3731([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_662([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_662([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_3730([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3731([a, b, e, f, j, g, i, l], is_dual)
    } else {
        select_3445([a, b, c, i, d, g, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3728([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3729([a, c, d, h, f, g, b, i, k, j, l], is_dual)
    } else {
        select_3730([a, c, d, f, b, e, g, i, h, j, k, l], is_dual)
    }
}
/// n = 8, i = 1
fn select_3734([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_286([e, f, c, d, g, h], is_dual)
    } else {
        select_286([e, f, a, b, h, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_3733([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_855([a, c, g, e, f, b, h, i], is_dual)
    } else {
        select_3734([b, d, e, f, a, c, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3732([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2153([a, c, b, d, e, h, g, j, k, i], is_dual)
    } else {
        select_3733([a, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3727([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3728([a, c, b, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3732([a, b, c, h, d, f, j, i, g, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3726([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3727([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_3727([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3740([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_22([b, c, d, e, g, h, i], is_dual)
    } else {
        select_539([a, i, b, c, f, h, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3739([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_172([b, f, d, e, a, g, h, i, j], is_dual)
    } else {
        select_3740([b, a, c, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3738([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_447([f, h, b, c, a, j, i], is_dual)
    } else {
        select_3739([a, d, e, b, c, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3742([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3555([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1063([a, b, c, e, f, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3744([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_593([c, a, e, f, h, d, g, i], is_dual)
    } else {
        select_173([d, b, c, g, f, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3743([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_548([b, c, d, a, e, g, f, h, i, j], is_dual)
    } else {
        select_3744([b, f, d, e, a, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3741([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3742([a, d, f, c, e, h, g, j, k, i], is_dual)
    } else {
        select_3743([a, d, g, b, e, i, f, k, j, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3738([b, a, c, d, e, g, h, i, f, k, j], is_dual)
    } else {
        select_3741([b, d, c, e, g, h, f, i, a, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3736([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3737([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2245([a, b, c, g, d, j, h, i, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3735([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3736([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_3736([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3725([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3726([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3735([a, b, c, e, i, f, h, k, d, j, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_3749([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_359([d, e, g, b, a, f, c], !is_dual)
    } else {
        select_1062([a, d, g, e, b, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3748([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1646([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3749([a, b, g, f, h, c, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3747([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2709([a, f, h, b, j, c, i, g], !is_dual)
    } else {
        select_3748([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3750([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1019([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1019([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3746([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3747([a, b, d, e, h, g, i, c, j, k], is_dual)
    } else {
        select_3750([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3751([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2975([a, b, c, d, e, f, h, j, k, i], is_dual)
    } else {
        select_469([a, b, c, e, g, d, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3745([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3746([a, b, c, h, e, g, d, i, j, k, l], is_dual)
    } else {
        select_3751([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3724([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_3725([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3745([a, b, c, d, e, f, i, h, k, l, m, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3758([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_21([d, b, c, e, f, a, g, i, h, k], is_dual)
    } else {
        select_65([b, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_255([b, c, e, h, f, g, i], is_dual)
    } else {
        select_106([a, e, d, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3759([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1455([f, b, c, e, a, g, h, i, j], is_dual)
    } else {
        select_3760([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3757([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3758([a, b, c, g, e, f, h, j, i, k, l], is_dual)
    } else {
        select_3759([a, b, c, i, d, k, g, h, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3761([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_855([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_578([f, i, g, j, a, b, h, c, e], !is_dual)
    }
}
/// n = 13, i = 4
fn select_3756([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_3757([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3761([b, a, c, i, g, k, j, l, m, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_3764([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_135([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_895([g, c, d, e, f, a, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3766([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_31([b, c, d, e, g, f, i], is_dual)
    } else {
        select_1753([g, i, j, e, h, a, b, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3767([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_765([a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_390([a, b, c, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3765([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3766([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_3767([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3763([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3764([b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3765([a, b, c, j, d, h, i, k, l, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_3768([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_871([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_871([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3762([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3763([a, b, c, f, d, e, i, h, j, l, k, m, n], is_dual)
    } else {
        select_3768([a, c, d, e, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3755([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_3756([b, c, d, f, e, i, h, j, l, k, a, m, n], is_dual)
    } else {
        select_3762([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3771([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1284([a, b, c, e, f, i, h, j], is_dual)
    } else {
        select_795([a, h, b, d, e, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3770([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_168([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3771([b, j, c, d, a, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_3769([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3770([a, b, e, d, c, i, h, g, j, l, k, m], is_dual)
    } else {
        select_167([a, c, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3754([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3755([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_3769([a, c, e, f, b, g, i, h, j, d, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3776([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1950([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1164([c, b, g, e, a, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3775([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2759([a, g, c, d, j, e, f, h, i, k, l], is_dual)
    } else {
        select_3776([e, a, h, b, k, f, g, i, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3778([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_724([h, b, c, a, f, e, g, i, j], is_dual)
    } else {
        select_724([g, b, d, a, f, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_3780([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_62([c, d, e, f, g, h, i], is_dual)
    } else {
        select_62([a, b, g, h, e, f, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_3779([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3780([a, f, c, d, e, j, g, h, i, k], is_dual)
    } else {
        select_3780([b, e, c, d, f, i, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3777([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3778([d, a, f, g, h, e, i, j, l, m], is_dual)
    } else {
        select_3779([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3774([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3775([c, d, a, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3777([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3784([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1576([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_43([f, c, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3783([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_776([a, f, d, e, b, g, h, i, j], is_dual)
    } else {
        select_3784([a, e, d, b, c, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3782([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_414([a, b, d, e, f, i, h, j], is_dual)
    } else {
        select_3783([a, b, c, j, d, g, h, i, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_3787([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_215([a, e, c, d, f, g], is_dual)
    } else {
        select_176([g, a, b, h, e], is_dual)
    }
}
/// n = 10, i = 2
fn select_3786([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1626([a, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3787([a, b, c, i, g, h, f, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_3785([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_873([b, d, a, e, f, g, c, h, i, j], is_dual)
    } else {
        select_3786([b, d, c, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3781([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3782([a, b, e, f, c, d, g, h, i, j, k, l], is_dual)
    } else {
        select_3785([b, c, d, e, a, h, g, i, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3773([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3774([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    } else {
        select_3781([b, c, a, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3791([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1268([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_779([g, i, f, b, a, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3792([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1268([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_1298([g, i, f, j, a, b, h, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3790([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_3791([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_3792([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3789([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3790([a, b, d, e, c, f, h, g, i, j], is_dual)
    } else {
        select_654([a, i, j, h, d, b, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3794([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_2355([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_1444([b, c, e, a, f, d, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3793([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3794([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_2357([a, j, f, b, c, i, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3788([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3789([a, b, g, c, d, f, i, h, j, k], is_dual)
    } else {
        select_3793([a, c, b, d, e, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3772([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_3773([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3788([a, c, b, d, h, i, j, k, l, m, g], is_dual)
    }
}
/// n = 14, i = 4
fn select_3753([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_3754([a, c, d, e, b, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3772([a, c, d, e, j, f, h, k, i, b, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3752([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3753([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_3753([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3723([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_3724([a, b, c, d, f, i, h, k, j, e, l, m, n], is_dual)
    } else {
        select_3752([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3700([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_3701([a, b, c, d, e, g, f, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3723([a, b, c, d, e, g, k, h, m, j, f, l, n, o], is_dual)
    }
}
/// n = 10, i = 4
fn select_3803([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_350([b, c, a, d, e, f, g], is_dual)
    } else {
        select_644([a, g, b, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3802([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3803([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_3803([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3801([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3802([a, b, c, d, e, i, h, j, k, l], is_dual)
    } else {
        select_719([a, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3800([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3801([a, b, c, d, e, f, j, h, i, k, l, m], is_dual)
    } else {
        select_3801([a, b, c, d, e, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3799([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3800([a, b, d, e, f, c, g, i, h, j, k, l, m], is_dual)
    } else {
        select_1269([a, b, i, c, d, e, j, k, l, m, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_3798([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3799([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_3799([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3804([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3240([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_3240([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3797([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_3798([a, b, c, d, f, g, k, h, e, j, l, m, n], is_dual)
    } else {
        select_3804([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_3810([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_577([c, b, d, a, f, e, g], is_dual)
    } else {
        select_1044([b, c, d, e, f, a, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3809([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1337([a, c, d, e, f, g, b, h], is_dual)
    } else {
        select_3810([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3812([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_583([a, e, h, i, f, b, g, c], !is_dual)
    } else {
        select_583([a, f, h, i, e, b, g, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_3811([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3812([a, b, c, i, h, j, k, l, g], is_dual)
    } else {
        select_2997([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3808([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_3809([a, j, g, l, h, b, c, k], !is_dual)
    } else {
        select_3811([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3807([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3808([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3808([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3806([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3807([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_3807([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3805([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3806([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_3806([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3796([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_3797([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3805([a, b, c, d, e, g, j, k, l, f, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_3816([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2116([a, b, c, d, k, i, j, e, h], !is_dual)
    } else {
        select_683([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3815([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_3240([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3816([a, b, c, d, e, j, k, l, m, i, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_3819([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2291([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2291([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3818([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2971([a, b, c, e, h, i, d, j, k], is_dual)
    } else {
        select_3819([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3823([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2932([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_2932([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3822([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3823([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_3823([a, b, c, e, d, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3821([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3822([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_3812([a, c, d, e, f, g, h, b, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3824([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_823([a, b, d, e, f, g, c, h], is_dual)
    } else {
        select_810([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3820([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3821([a, b, f, h, i, c, d, g, e], !is_dual)
    } else {
        select_3824([a, b, f, i, c, d, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3817([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3818([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_3820([a, b, c, e, h, i, j, d, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_3814([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_3815([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3817([a, b, c, d, e, j, k, l, m, n, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_3813([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3814([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_3814([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3795([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_3796([a, b, c, d, e, f, g, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3813([a, b, c, d, e, f, h, g, k, j, m, l, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3699([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_3700([a, b, c, d, e, f, g, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3795([a, b, c, d, e, f, g, h, k, j, m, l, o, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3592([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_3593([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_3699([a, b, c, d, e, f, h, i, j, k, l, m, n, g, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_3835([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_286([a, c, d, e, f, g], is_dual)
    } else {
        select_340([a, f, i, b, h, c, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3834([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1865([a, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3835([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3837([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_245([b, a, c, i, g, h, f, j, k], is_dual)
    } else {
        select_52([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3836([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1897([b, d, c, e, f, g, a, h, i, k, j, l], is_dual)
    } else {
        select_3837([b, d, a, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3833([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3834([a, b, c, e, f, g, h, j, l, m], is_dual)
    } else {
        select_3836([a, b, c, d, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_3841([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_341([a, b, e, f, h, i], is_dual)
    } else {
        select_62([c, d, a, b, e, f, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3840([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3841([a, i, d, e, g, h, f, j, k], is_dual)
    } else {
        select_2522([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_3839([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_75([a, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_3840([a, b, k, c, d, g, i, j, h, l, m], is_dual)
    }
}
/// n = 13, i = 2
fn select_3842([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_75([g, a, b, c, d, l, j, h, i, k, m], is_dual)
    } else {
        select_75([g, a, b, e, f, k, j, h, i, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_3838([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3839([f, j, c, d, a, b, k, g, h, i, l, m, n], is_dual)
    } else {
        select_3842([c, d, a, b, e, g, f, h, i, k, l, j, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_3832([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_3833([g, f, b, a, i, j, k, l, h, n, o, m, p], is_dual)
    } else {
        select_3838([b, h, c, d, e, f, g, i, j, k, l, m, n, p], is_dual)
    }
}
/// n = 9, i = 2
fn select_3846([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_64([a, d, c, e, h, f, g, i], is_dual)
    } else {
        select_64([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_3845([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1189([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_3846([b, c, e, f, a, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3848([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2360([b, d, c, e, f, a, g, i, h, j], is_dual)
    } else {
        select_248([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3849([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_340([a, g, j, b, h, c, d], !is_dual)
    } else {
        select_657([a, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3847([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3848([a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_3849([a, b, c, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3844([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3845([c, d, e, a, g, f, h, i, j], is_dual)
    } else {
        select_3847([a, b, c, e, h, f, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3851([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3107([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_2195([a, c, d, e, f, b, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3852([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_349([a, b, c, g, d, h, k, j, l], is_dual)
    } else {
        select_2904([a, b, c, g, e, f, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3850([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3851([a, c, b, k, f, g, h, j, m, n], is_dual)
    } else {
        select_3852([b, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3843([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3844([b, c, d, e, a, j, h, i, l, m, k, n], is_dual)
    } else {
        select_3850([b, a, c, d, e, f, g, h, i, j, k, m, n, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_3831([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < h) || (is_dual && n > h) {
        select_3832([e, d, a, f, g, c, b, j, h, k, l, i, m, n, o, p], is_dual)
    } else {
        select_3843([a, b, c, d, e, k, l, i, j, n, m, h, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_3856([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2859([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2817([a, c, i, g, j, h, b, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_3855([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_103([e, b, i, f, g, d, a, j, h, l, k, m], is_dual)
    } else {
        select_3856([a, b, c, d, j, k, h, i, m, n, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_3854([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_3855([a, b, c, e, g, d, j, h, i, k, m, l, n, o], is_dual)
    } else {
        select_3855([a, b, c, d, f, e, k, h, i, j, n, l, m, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_3853([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3854([a, b, c, d, f, e, g, h, i, k, l, m, j, n, o], is_dual)
    } else {
        select_3854([a, b, c, e, f, d, g, h, i, j, l, m, k, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3830([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < o) || (is_dual && m > o) {
        select_3831([a, b, c, d, e, f, g, h, i, j, k, l, n, o, m, p], is_dual)
    } else {
        select_3853([a, d, e, f, g, b, c, h, j, k, l, i, n, m, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3829([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_3830([e, f, g, b, a, c, d, k, m, h, i, j, l, n, o, p], is_dual)
    } else {
        select_3830([e, g, f, b, a, c, d, k, l, h, i, j, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3828([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3829([f, e, g, h, a, c, d, k, l, m, b, i, j, n, o, p], is_dual)
    } else {
        select_3829([f, e, g, h, b, c, d, k, l, m, a, i, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3827([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3828([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3828([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3826([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3827([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o, p], is_dual)
    } else {
        select_3827([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 2
fn select_3865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_299([a, b, c, i, d, h, g, j], is_dual)
    } else {
        select_414([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_3864([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2096([a, b, e, c, d, i, g, h, k, l, m, j], is_dual)
    } else {
        select_3865([a, c, d, f, b, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3863([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3864([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_3864([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_3866([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2331([a, b, d, e, g, f, i, h, j, k], is_dual)
    } else {
        select_200([a, b, l, i, k, g, c, j], !is_dual)
    }
}
/// n = 13, i = 4
fn select_3862([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3863([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3866([a, b, h, d, e, g, j, i, c, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_3868([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_2331([a, b, d, e, j, f, c, i, k, l], is_dual)
    } else {
        select_3158([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3870([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2077([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_2161([a, b, i, j, f, c, h, g, e], !is_dual)
    }
}
/// n = 11, i = 3
fn select_3873([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_399([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_485([a, h, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3875([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_627([a, b, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3874([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3875([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_140([h, a, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3872([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3873([a, c, d, e, f, g, b, h, i, j, l], is_dual)
    } else {
        select_3874([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3871([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3243([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3872([a, c, i, e, f, g, h, b, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3869([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3870([a, b, d, j, e, c, i, k, l, m], is_dual)
    } else {
        select_3871([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_3867([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3868([a, b, c, e, f, h, d, i, j, k, l, m], is_dual)
    } else {
        select_3869([a, b, c, d, g, e, f, j, i, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3861([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_3862([a, b, c, e, f, i, h, k, j, d, l, m, n], is_dual)
    } else {
        select_3867([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3882([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_341([a, f, c, d, g, i], is_dual)
    } else {
        select_731([h, f, j, a, e, i, b], !is_dual)
    }
}
/// n = 11, i = 3
fn select_3883([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_341([a, j, b, c, g, k], is_dual)
    } else {
        select_450([a, d, e, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3881([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3882([f, g, c, d, e, i, h, j, k, l], is_dual)
    } else {
        select_3883([f, c, d, a, b, e, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3880([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3881([c, d, e, f, a, b, h, i, g, j, k, l], is_dual)
    } else {
        select_2794([c, d, b, a, e, f, g, i, h, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_3879([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1309([a, b, c, d, g, h, k, i, l, m, n], is_dual)
    } else {
        select_3880([a, b, c, d, e, f, h, l, j, k, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3878([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3879([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_3879([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 2
fn select_3885([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2007([c, d, e, a, f, g, i, j, h, l, k], is_dual)
    } else {
        select_2007([c, f, g, b, d, e, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_3884([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3885([a, b, g, c, d, e, f, i, j, h, k, l], is_dual)
    } else {
        select_3885([a, b, h, c, d, e, f, i, j, g, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3877([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3878([a, b, c, f, g, d, e, h, j, k, i, l, m, n], is_dual)
    } else {
        select_3884([c, h, d, e, f, g, a, b, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3876([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3877([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_3877([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_3860([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_3861([a, b, c, d, g, h, f, i, j, k, e, l, m, n], is_dual)
    } else {
        select_3876([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_3890([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_3273([a, b, h, e, f, g, c, i, j, k, l], is_dual)
    } else {
        select_3069([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3889([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3890([a, b, c, e, d, f, i, h, k, j, l, m], is_dual)
    } else {
        select_469([a, b, c, d, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3894([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3061([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1519([a, b, f, d, h, g, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3895([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1767([a, f, b, d, h, e, i, g, j], is_dual)
    } else {
        select_2828([a, c, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3893([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3894([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3895([b, c, g, e, f, i, h, a, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3892([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3893([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_3893([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3891([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3248([a, b, c, g, d, i, f, j, h, k], is_dual)
    } else {
        select_3892([a, b, c, e, d, g, f, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3888([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3889([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3891([a, b, c, e, i, h, k, j, d, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3887([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3371([a, b, c, d, e, h, g, j, i, k, l, m], is_dual)
    } else {
        select_3888([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_3902([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_361([a, b, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3903([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_141([a, b, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3901([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3902([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3903([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3900([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3230([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3901([b, i, d, e, f, g, h, a, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3905([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_484([b, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_3122([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_3904([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3276([a, c, d, i, e, f, g, h, j, k], is_dual)
    } else {
        select_3905([a, b, j, e, f, g, h, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3899([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3900([a, b, j, e, f, g, h, i, c, k, l, m], is_dual)
    } else {
        select_3904([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3898([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3899([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_3899([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3907([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1634([a, b, c, h, e, d, g, i, j], is_dual)
    } else {
        select_2401([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3906([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_684([a, b, c, d, e, h, g, j, i, k, l], is_dual)
    } else {
        select_3907([a, b, c, g, e, f, i, h, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_3897([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_3898([a, b, c, j, e, f, g, h, i, k, l, m, n], is_dual)
    } else {
        select_3906([a, b, c, d, l, e, j, k, i, m, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_3910([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2320([a, b, c, d, g, f, i, h, j], is_dual)
    } else {
        select_341([a, b, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3909([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3719([a, b, f, e, d, h, g, j, i], is_dual)
    } else {
        select_3910([a, b, g, c, e, i, h, f, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_3914([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_62([a, b, c, j, h, i, l], is_dual)
    } else {
        select_137([d, e, f, g, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_3913([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_224([a, i, d, e, f, g, j, h, k, l], is_dual)
    } else {
        select_3914([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_3912([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3913([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_3913([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_3911([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3243([a, b, d, k, e, f, g, h, j, l, m], is_dual)
    } else {
        select_3912([a, b, c, j, e, f, g, h, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_3908([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < l) || (is_dual && c > l) {
        select_3909([a, b, l, d, e, c, i, j, k, m, n], is_dual)
    } else {
        select_3911([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3896([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3897([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o], is_dual)
    } else {
        select_3908([a, b, c, d, f, g, h, i, e, k, j, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3886([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < l) || (is_dual && e > l) {
        select_3887([a, b, c, d, f, l, g, e, j, k, m, n, o], is_dual)
    } else {
        select_3896([a, b, c, d, f, g, e, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3859([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_3860([a, b, c, d, e, f, g, h, k, j, m, l, n, o], is_dual)
    } else {
        select_3886([a, b, c, d, e, f, i, g, h, j, k, l, m, n, o], is_dual)
    }
}
/// n = 9, i = 3
fn select_3923([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_335([b, g, e, a, i], is_dual)
    } else {
        select_2011([b, a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3922([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1792([a, b, d, g, e, f, i, h, j], is_dual)
    } else {
        select_3923([a, e, c, d, h, f, i, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_3924([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_120([a, b, f, e, g, h, d], is_dual)
    } else {
        select_2021([b, a, c, e, d, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3922([a, b, c, d, e, f, h, g, i, k], is_dual)
    } else {
        select_3924([a, b, f, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3925([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_608([e, a, f, c, d, g, h, i, j, k], is_dual)
    } else {
        select_352([a, b, g, h, e, i, j, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3920([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3921([b, c, d, e, a, g, f, h, i, j, k], is_dual)
    } else {
        select_3925([b, a, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3930([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_32([d, h, i, g, a, f], !is_dual)
    } else {
        select_42([d, b, c, e, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3929([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_228([g, h, i, d, e, a, f, b], !is_dual)
    } else {
        select_3930([g, h, i, d, a, f, e, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3931([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_42([e, i, j, a, h, b], !is_dual)
    } else {
        select_44([b, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_3928([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3929([b, f, c, e, a, h, g, i, j], is_dual)
    } else {
        select_3931([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3927([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_655([c, b, g, e, a, i, j], is_dual)
    } else {
        select_3928([b, c, a, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3926([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3927([a, c, b, d, f, g, h, e, i, j], is_dual)
    } else {
        select_3927([b, c, a, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3919([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3920([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3926([b, g, c, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_3935([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_64([b, g, c, d, a, f, h, i], is_dual)
    } else {
        select_105([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3934([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_441([f, j, k, a, b, h, c, i, g], !is_dual)
    } else {
        select_3935([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3936([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2177([a, b, c, d, g, i, j, h, k, l], is_dual)
    } else {
        select_319([b, c, e, f, a, d, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3933([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3934([g, b, c, e, f, a, h, i, j, k, l], is_dual)
    } else {
        select_3936([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3940([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_121([g, h, a, f, e, b, c], !is_dual)
    } else {
        select_141([a, c, d, e, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3939([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_120([b, e, d, a, f, g, h], is_dual)
    } else {
        select_3940([b, a, d, c, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3939([a, b, i, j, f, h, c, g], !is_dual)
    } else {
        select_662([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3937([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2737([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_3938([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3932([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3933([a, c, b, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_3937([a, g, c, b, e, h, j, k, l, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3918([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3919([a, h, c, d, f, b, g, i, j, k, l], is_dual)
    } else {
        select_3932([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3943([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3777([h, a, b, c, l, e, f, g, i, j, k, m, n], is_dual)
    } else {
        select_3777([g, a, b, d, k, e, f, h, i, j, l, m, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_3946([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3645([a, b, h, d, e, f, g, j, i, k, l], is_dual)
    } else {
        select_316([b, c, i, d, e, f, h, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_3945([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_873([a, b, e, f, h, g, i, j, l, k], is_dual)
    } else {
        select_3946([b, c, d, a, i, f, g, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_3944([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3945([b, c, i, d, a, l, g, h, f, j, m, k, n], is_dual)
    } else {
        select_3945([b, c, h, e, a, k, g, i, f, j, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3942([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_3943([b, c, d, f, g, h, i, j, k, l, m, e, n, o], is_dual)
    } else {
        select_3944([a, e, b, c, d, f, g, h, i, k, l, m, j, n], is_dual)
    }
}
/// n = 13, i = 2
fn select_3948([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_870([a, b, c, f, d, h, i, g, l, j, m, k], is_dual)
    } else {
        select_870([a, b, c, f, e, g, i, h, k, j, m, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3952([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_739([b, e, c, d, g, h, j, i], is_dual)
    } else {
        select_163([a, e, b, f, i, g, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3951([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3952([a, b, d, e, h, f, g, i, k, j, l], is_dual)
    } else {
        select_28([c, j, d, e, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_3950([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3951([g, a, c, d, e, j, f, h, k, i, l, m], is_dual)
    } else {
        select_3951([f, b, c, d, e, i, g, h, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_3949([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_556([a, b, c, d, h, f, g, l, j, k, i], is_dual)
    } else {
        select_3950([c, d, e, a, b, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_3947([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < a) || (is_dual && m > a) {
        select_3948([b, c, a, d, e, f, g, h, i, l, j, k, m], is_dual)
    } else {
        select_3949([b, c, d, e, i, g, h, m, l, j, k, a, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3941([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3942([f, c, d, e, a, j, g, h, i, m, b, k, l, n, o], is_dual)
    } else {
        select_3947([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3917([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < n) || (is_dual && g > n) {
        select_3918([a, b, c, h, i, j, k, l, m, n, o, g], is_dual)
    } else {
        select_3941([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3916([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3917([a, b, c, e, f, g, d, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3917([a, b, d, e, f, g, c, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_3957([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1109([a, h, b, c, d, f, i, g, j, k, l], is_dual)
    } else {
        select_3400([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3956([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3957([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3957([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_3959([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3719([a, b, e, c, f, d, g, h, i], is_dual)
    } else {
        select_3719([a, b, e, d, f, c, g, h, i], is_dual)
    }
}
/// n = 12, i = 2
fn select_3958([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3431([a, b, c, d, e, g, h, k, j, l], is_dual)
    } else {
        select_3959([a, b, d, e, c, f, i, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_3955([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3956([a, b, e, f, d, j, g, c, i, l, k, m], is_dual)
    } else {
        select_3958([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3964([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3882([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3882([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3963([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2660([b, c, d, e, a, g, f, h, i], is_dual)
    } else {
        select_3964([a, d, b, c, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3962([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3963([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_3963([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3967([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_934([e, g, c, d, f, h, i, j], is_dual)
    } else {
        select_305([e, c, d, a, b, f, h, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_3966([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_855([a, b, c, d, h, g, j, i], is_dual)
    } else {
        select_3967([b, d, e, f, a, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3965([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_3966([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_2167([a, c, b, f, g, e, d, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3961([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_3962([a, b, d, e, h, g, c, i, j, k, l], is_dual)
    } else {
        select_3965([a, b, d, e, g, c, f, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3960([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3961([a, b, c, d, e, f, i, h, j, k, l, m], is_dual)
    } else {
        select_2400([a, b, c, d, e, g, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_3954([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_3955([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3960([a, b, c, e, f, i, h, k, j, d, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3953([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3239([a, b, c, d, h, g, e, f, j, i, m, l, k, n, o], is_dual)
    } else {
        select_3954([a, b, c, d, e, f, h, i, j, k, m, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3915([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3916([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o], is_dual)
    } else {
        select_3953([a, b, c, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3858([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_3859([a, b, c, d, e, g, f, h, i, j, l, k, m, n, o], is_dual)
    } else {
        select_3915([a, b, c, d, e, g, h, i, j, k, l, f, m, n, o], is_dual)
    }
}
/// n = 7, i = 3
fn select_3976([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_718([d, a, g, e, f, b], !is_dual)
    } else {
        select_653([d, e, g, a, f, b, c], !is_dual)
    }
}
/// n = 15, i = 4
fn select_3975([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_3976([a, b, m, n, o, g, j], is_dual)
    } else {
        select_1506([a, j, c, d, e, f, h, i, l, k, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_3979([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_211([f, c, d, g, a], !is_dual)
    } else {
        select_341([c, d, f, g, e, b], !is_dual)
    }
}
/// n = 7, i = 3
fn select_3978([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1647([c, d, f, a, e], !is_dual)
    } else {
        select_3979([b, a, c, d, f, g, e], is_dual)
    }
}
/// n = 12, i = 4
fn select_3981([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_62([c, d, b, h, f, g, i], is_dual)
    } else {
        select_335([a, j, e, k, l], is_dual)
    }
}
/// n = 8, i = 1
fn select_3982([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_62([a, b, c, h, e, f, g], is_dual)
    } else {
        select_62([a, b, d, g, e, f, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_3980([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3981([e, a, b, c, i, f, g, j, k, l, m, n], is_dual)
    } else {
        select_3982([a, b, c, d, k, f, g, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_3977([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < l) || (is_dual && e > l) {
        select_3978([d, l, e, m, n, i, j], is_dual)
    } else {
        select_3980([e, a, b, c, d, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_3974([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3975([f, e, a, b, c, d, j, g, h, k, i, l, m, n, o], is_dual)
    } else {
        select_3977([a, b, i, e, f, g, h, d, j, k, l, m, n, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_3986([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_62([c, d, b, e, f, g, h], is_dual)
    } else {
        select_450([a, b, f, g, e, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3985([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3986([e, a, b, c, i, f, g, j, k, l, m], is_dual)
    } else {
        select_3982([a, b, c, d, j, f, g, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_3984([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_655([d, e, l, i, m, n, j], is_dual)
    } else {
        select_3985([j, a, b, c, d, f, g, h, i, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 4
fn select_3988([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3986([a, j, b, c, f, g, h, i, k, l, m], is_dual)
    } else {
        select_60([b, c, d, e, i, g, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3989([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3986([d, g, a, b, h, e, f, i, j, k, l], is_dual)
    } else {
        select_62([a, b, c, i, e, f, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_3987([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3988([e, a, b, c, d, i, f, g, j, h, k, l, m], is_dual)
    } else {
        select_3989([a, b, h, e, f, g, d, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_3983([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3984([a, b, c, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3987([a, b, c, d, f, g, h, i, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3973([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_3974([a, b, c, d, e, f, g, h, i, j, l, k, m, n, o], is_dual)
    } else {
        select_3983([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 13, i = 2
fn select_3991([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_103([c, a, b, d, j, f, g, h, k, l, i, m], is_dual)
    } else {
        select_103([c, a, b, e, i, f, g, h, k, l, j, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_3994([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_718([f, d, c, a, e, g], is_dual)
    } else {
        select_3188([a, c, b, e, f, g, d, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3995([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_328([a, b, c, d, e, f, h, g, i, j, l], is_dual)
    } else {
        select_328([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3993([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3994([j, g, l, a, h, k, b, i], !is_dual)
    } else {
        select_3995([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3992([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3993([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_3993([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_3990([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_3991([f, g, a, b, c, d, e, h, i, j, k, l, m], is_dual)
    } else {
        select_3992([e, f, g, d, h, i, j, k, m, n, o, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_3972([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3973([a, b, c, d, e, f, h, i, j, k, l, g, m, n, o], is_dual)
    } else {
        select_3990([a, b, c, d, f, e, g, h, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3971([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3972([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o], is_dual)
    } else {
        select_3972([a, b, c, d, e, h, g, i, j, k, l, f, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3970([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3971([a, b, c, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    } else {
        select_3971([a, b, c, d, i, f, g, h, j, k, l, e, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3969([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < d) || (is_dual && m > d) {
        select_3970([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_3805([e, f, g, h, i, j, k, l, m, d, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_3968([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_3969([h, i, j, a, b, c, d, e, f, k, l, m, n, o, p], is_dual)
    } else {
        select_3813([a, b, c, d, e, f, g, k, l, j, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3857([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_3858([a, b, c, d, e, f, g, h, l, j, k, m, n, o, p], is_dual)
    } else {
        select_3968([a, b, c, d, e, f, i, g, h, l, j, k, m, o, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3825([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < g) || (is_dual && n > g) {
        select_3826([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3857([a, b, c, d, e, f, i, j, h, l, m, k, n, g, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3591([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < o) || (is_dual && k > o) {
        select_3592([a, b, c, d, e, f, g, h, i, j, l, m, n, o, k, p], is_dual)
    } else {
        select_3825([a, b, c, d, e, f, g, i, h, j, l, k, m, n, o, p], is_dual)
    }
}
/// n = 8, i = 3
fn select_4007([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_346([a, f, b, d, e, g, h], is_dual)
    } else {
        select_393([d, h, g, e, a, f, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4008([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_62([a, c, d, e, f, g, h], is_dual)
    } else {
        select_141([a, b, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4006([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4007([f, g, k, a, b, j, c, i], !is_dual)
    } else {
        select_4008([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4009([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_301([e, i, j, f, a, b, h], !is_dual)
    } else {
        select_1667([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4005([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4006([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4009([a, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4004([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_4005([a, b, f, d, e, h, i, g, j, k, l], is_dual)
    } else {
        select_3812([j, l, h, i, a, b, f, c, k], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4013([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_129([h, a, b, e, j, f], is_dual)
    } else {
        select_41([e, f, c, d, i, g, j, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4012([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_4013([b, e, c, d, f, i, g, h, k, j], is_dual)
    } else {
        select_491([h, a, b, j, f, e, l, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_4011([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_1970([h, b, j, a, f, k, i, e], is_dual)
    } else {
        select_4012([b, a, c, d, f, e, g, h, i, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4017([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_42([i, e, j, h, d, a], !is_dual)
    } else {
        select_29([g, b, c, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_4016([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_269([i, a, g, b, k, e], is_dual)
    } else {
        select_4017([a, c, d, e, h, f, j, i, k, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_4019([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_184([e, c, d, g, i, f, h], is_dual)
    } else {
        select_44([h, a, b, j, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_4018([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4019([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_4019([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4015([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4016([a, f, b, c, e, g, h, j, i, k, l], is_dual)
    } else {
        select_4018([b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4014([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4015([a, c, d, b, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_577([h, a, b, i, e, j, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_4010([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4011([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4014([a, c, d, e, b, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4003([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4004([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_4010([b, c, a, d, e, f, h, j, g, k, l, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_4002([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4003([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_4003([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4001([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4002([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_4002([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4000([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4001([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_4001([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3999([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4000([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_4000([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_4027([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1665([e, f, c, d, h, g, j, k], is_dual)
    } else {
        select_392([g, a, b, i, e, j, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4026([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2158([i, j, a, b, e, k, f], is_dual)
    } else {
        select_4027([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4029([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1665([d, e, b, c, f, g, h, j], is_dual)
    } else {
        select_1981([g, a, h, i, d, e, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4030([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_120([h, f, e, a, i, b, g], !is_dual)
    } else {
        select_1037([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4029([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_4030([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4025([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4026([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4028([e, f, c, d, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4024([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4025([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_4025([c, b, d, e, g, a, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4034([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_111([a, b, h, d, e, f, g, i, j, k], is_dual)
    } else {
        select_30([c, g, d, e, a, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4033([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4034([e, d, a, b, h, j, i, f, g, k, l], is_dual)
    } else {
        select_4034([e, d, a, c, g, j, i, f, h, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_4036([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_105([e, a, b, c, h, f, i, g, j], is_dual)
    } else {
        select_105([e, a, b, d, g, f, i, h, j], is_dual)
    }
}
/// n = 9, i = 1
fn select_4037([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_60([c, d, a, b, h, f, g, i], is_dual)
    } else {
        select_62([c, d, e, i, f, g, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_4035([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4036([i, a, b, c, e, f, g, h, j, k], is_dual)
    } else {
        select_4037([d, j, a, b, c, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_4032([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_4033([a, b, c, d, e, g, h, i, f, j, k, l], is_dual)
    } else {
        select_4035([a, b, c, f, e, g, h, i, d, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4039([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_605([a, b, c, d, e, f, g, h, j, k], is_dual)
    } else {
        select_2158([a, i, j, k, b, c, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4040([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_718([i, j, g, a, f, b], !is_dual)
    } else {
        select_351([a, g, c, d, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4038([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_4039([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4040([b, a, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4031([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4032([a, e, f, d, b, c, g, i, j, h, k, l], is_dual)
    } else {
        select_4038([b, a, c, d, i, j, h, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4023([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_4024([b, c, d, i, j, g, h, k, a, l, m], is_dual)
    } else {
        select_4031([b, c, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4022([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4023([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_4023([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4021([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4022([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_4022([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4020([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_4021([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1244([a, b, c, d, e, i, j, k, l, m, f], is_dual)
    }
}
/// n = 13, i = 4
fn select_3998([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3999([a, b, c, d, e, f, g, j, k, l, i, m], is_dual)
    } else {
        select_4020([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4048([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_855([a, c, e, d, f, g, h, i], is_dual)
    } else {
        select_2177([a, g, b, c, d, f, i, j, k, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4049([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_744([h, d, i, e, f, g, a, b, c], !is_dual)
    } else {
        select_744([h, e, i, d, f, g, b, a, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4047([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4048([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    } else {
        select_4049([j, k, i, b, g, f, a, c, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4052([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2455([a, h, c, d, e, f, i, j, l], is_dual)
    } else {
        select_748([f, a, b, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4053([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_432([a, h, c, d, e, f, i, k], is_dual)
    } else {
        select_904([c, a, b, f, i, g, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4051([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4052([b, d, c, e, f, a, g, h, i, k, j, l], is_dual)
    } else {
        select_4053([b, d, a, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4055([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_814([b, e, c, d, f, g, h], is_dual)
    } else {
        select_779([e, h, i, a, b, f, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4054([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_357([b, a, c, d, f, h, g, i], is_dual)
    } else {
        select_4055([a, b, c, e, g, i, f, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4050([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4051([a, b, c, f, e, g, h, j, i, k, l, m], is_dual)
    } else {
        select_4054([a, c, d, i, f, h, k, j, g, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4046([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_4047([b, a, c, d, h, i, j, l, k, g, m], is_dual)
    } else {
        select_4050([b, c, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_4060([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_211([a, b, c, j, k], is_dual)
    } else {
        select_175([d, e, h, f, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_4061([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_739([c, f, a, b, e, g, i, h], is_dual)
    } else {
        select_44([c, d, h, e, f], is_dual)
    }
}
/// n = 12, i = 3
fn select_4059([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4060([a, b, f, d, e, g, h, i, k, j, l], is_dual)
    } else {
        select_4061([c, i, d, e, g, h, f, k, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_4062([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_738([a, h, b, c, f, g, e, i, j], is_dual)
    } else {
        select_2437([b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4058([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4059([b, a, c, d, e, g, h, i, f, k, j, l], is_dual)
    } else {
        select_4062([f, c, d, e, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4063([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_58([b, e, f, a, d, g, h, i, j], is_dual)
    } else {
        select_720([a, b, c, d, h, i, g, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4057([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4058([b, a, c, e, f, j, g, h, i, k, l, m], is_dual)
    } else {
        select_4063([a, b, g, d, e, f, k, h, i, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4056([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_727([b, a, c, i, e, j, l, h, k, g, m, n], is_dual)
    } else {
        select_4057([b, c, e, d, a, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4045([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_4046([a, b, c, d, l, e, g, i, h, k, m, n, o], is_dual)
    } else {
        select_4056([a, b, d, h, e, f, g, i, j, m, k, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4044([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4045([d, e, f, c, a, b, i, k, g, h, m, l, j, n, o], is_dual)
    } else {
        select_4045([d, f, e, c, a, b, i, j, g, h, m, l, k, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4043([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4044([f, g, e, a, c, d, j, k, b, h, i, m, l, n, o], is_dual)
    } else {
        select_4044([f, g, e, b, c, d, j, k, a, h, i, m, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4042([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4043([a, b, c, e, f, g, h, d, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4043([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4041([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4042([a, b, c, d, e, g, h, i, f, j, k, l, m, n, o], is_dual)
    } else {
        select_4042([a, b, c, d, f, g, h, i, e, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_3997([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < n) || (is_dual && g > n) {
        select_3998([a, b, c, d, e, f, j, k, l, m, n, g, o], is_dual)
    } else {
        select_4041([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 13, i = 4
fn select_4071([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2349([a, b, c, e, d, i, g, h, k, j, l, m], is_dual)
    } else {
        select_965([a, c, d, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4070([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_2350([a, c, h, b, d, i, j, k, l, m, g], is_dual)
    } else {
        select_4071([a, c, b, d, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4069([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4070([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_4070([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_4077([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_360([a, c, e, d, h, f, i], is_dual)
    } else {
        select_41([d, g, h, i, a, e, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4078([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_360([a, c, e, d, g, f, i], is_dual)
    } else {
        select_355([h, g, i, d, a, e, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4076([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4077([e, h, i, a, f, g, b, c, d], !is_dual)
    } else {
        select_4078([a, h, i, e, f, g, c, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4076([a, f, j, k, b, h, i, c, g], !is_dual)
    } else {
        select_532([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4074([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4075([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_4075([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_4080([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1493([a, c, d, b, e, f, g], is_dual)
    } else {
        select_1493([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_4079([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_4080([a, b, d, g, c, h, i], is_dual)
    } else {
        select_1210([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4073([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4074([a, b, c, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_4079([a, b, c, d, e, g, i, j, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_4072([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3889([a, b, c, e, f, h, g, i, j, l, k, m, n], is_dual)
    } else {
        select_4073([a, b, c, d, k, f, i, h, m, n, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4068([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4069([a, b, c, d, e, i, g, k, j, h, l, m, n], is_dual)
    } else {
        select_4072([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 7, i = 2
fn select_4086([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1555([a, c, b, f, g, e, d], is_dual)
    } else {
        select_1555([b, c, a, f, g, d, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_4085([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2998([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_4086([a, c, d, b, g, e, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_4084([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_482([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_4085([a, b, j, k, c, d, i, h], !is_dual)
    }
}
/// n = 12, i = 2
fn select_4087([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_103([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_103([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4083([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_4084([a, b, c, d, e, i, k, l, m, n, j], is_dual)
    } else {
        select_4087([f, c, d, g, h, e, a, b, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_4093([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_184([a, b, h, f, g, j, k], is_dual)
    } else {
        select_23([c, d, e, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_4092([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4093([a, g, c, d, e, f, h, j, i, k, l], is_dual)
    } else {
        select_22([b, i, c, d, e, g, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_4094([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4093([a, i, d, e, f, g, h, k, j, l, m], is_dual)
    } else {
        select_50([b, c, j, d, e, f, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_4091([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4092([b, h, d, e, f, g, a, i, j, k, l, m], is_dual)
    } else {
        select_4094([b, a, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_4095([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1000([a, c, b, e, f, j, h, k, i], is_dual)
    } else {
        select_243([i, a, c, d, e, g, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_4090([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_4091([b, c, d, a, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_4095([b, c, j, d, a, g, h, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4089([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < g) || (is_dual && n > g) {
        select_4090([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_39([a, b, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4097([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_483([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3749([a, c, h, g, b, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_4096([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4097([a, b, c, d, i, j, h, l, m, n], is_dual)
    } else {
        select_314([e, b, h, f, g, a, d, i, k, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_4088([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_4089([a, c, d, e, f, g, h, i, j, k, b, l, m, n], is_dual)
    } else {
        select_4096([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4082([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_4083([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_4088([a, b, d, e, f, g, h, i, j, c, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_4081([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4082([a, b, c, d, f, h, e, j, i, k, l, m, n, o], is_dual)
    } else {
        select_4082([a, b, c, d, e, g, f, k, i, j, m, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4067([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < l) || (is_dual && d > l) {
        select_4068([a, b, c, e, f, j, h, i, l, k, d, m, n, o], is_dual)
    } else {
        select_4081([a, b, c, e, d, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4066([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < n) || (is_dual && l > n) {
        select_3814([a, b, c, d, e, g, f, k, i, j, m, n, l, o], is_dual)
    } else {
        select_4067([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 10, i = 4
fn select_4105([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_301([e, f, h, j, a, i, b], !is_dual)
    } else {
        select_934([e, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_4104([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4105([b, j, c, d, h, a, i, k, l, m], is_dual)
    } else {
        select_400([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4108([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_62([c, d, b, e, f, g, h], is_dual)
    } else {
        select_34([a, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4107([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3841([a, f, c, d, g, h, e, i, j], is_dual)
    } else {
        select_4108([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4106([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_75([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4107([b, j, c, d, g, a, h, i, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_4103([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4104([a, b, c, d, e, i, j, h, k, m, l, n, o], is_dual)
    } else {
        select_4106([a, b, f, g, e, k, h, i, j, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_4102([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4103([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4103([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 14, i = 3
fn select_4110([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4106([f, e, c, d, g, h, k, i, j, l, m, n], is_dual)
    } else {
        select_4106([f, e, a, b, i, j, k, g, h, m, l, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_4109([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4110([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    } else {
        select_4110([a, b, c, d, g, f, h, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4101([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4102([a, b, c, d, i, e, g, h, j, k, m, l, n, o, p], is_dual)
    } else {
        select_4109([d, f, g, h, a, b, c, l, i, j, k, m, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_4113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4033([b, c, d, a, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_4033([b, c, d, a, f, g, h, i, j, e, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4112([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_4113([g, b, c, d, e, f, h, i, j, k, l, m], is_dual)
    } else {
        select_644([e, f, a, l, g, k, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_4111([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_2068([b, c, d, a, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_4112([h, b, c, d, f, g, l, i, j, k, e, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4100([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_4101([a, b, c, e, d, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_4111([f, g, h, i, a, b, c, j, k, l, d, m, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_4116([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_470([a, b, i, d, f, g, c, h, j, k, l], is_dual)
    } else {
        select_466([d, c, e, f, g, a, b, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_4115([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_463([g, h, i, j, d, a, b, c, k, l, m, n], is_dual)
    } else {
        select_4116([a, b, c, e, f, d, k, i, j, m, l, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_4114([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4115([a, b, c, d, e, f, g, l, i, j, k, m, n, o], is_dual)
    } else {
        select_4115([a, b, c, d, e, f, h, k, i, j, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4099([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4100([a, b, c, f, e, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4114([a, b, c, f, d, g, h, i, e, j, k, l, m, n, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_4123([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1363([b, c, d, e, f, g, h], is_dual)
    } else {
        select_725([f, j, k, a, b, i, g, h, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4122([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4123([a, b, d, c, h, f, g, j, k, i, l], is_dual)
    } else {
        select_866([a, c, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4121([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4122([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_4122([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_4124([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_512([a, b, d, f, c, g, h, i, j, k], is_dual)
    } else {
        select_512([a, b, c, e, d, g, i, h, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4120([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4121([a, b, c, e, d, g, j, i, h, k, l, m], is_dual)
    } else {
        select_4124([a, b, d, e, c, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4119([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4120([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_4120([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4127([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_482([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_3105([a, b, c, j, k, d, i, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4126([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2117([a, b, c, k, l, h, j, d], !is_dual)
    } else {
        select_4127([a, b, c, h, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4130([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1297([a, h, k, g, l, b, j, i], !is_dual)
    } else {
        select_513([a, c, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_4130([a, c, b, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2297([a, h, k, l, g, b, c, j], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4128([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4129([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_4129([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4125([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4126([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_4128([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4118([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_4119([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4125([a, b, c, d, e, f, g, i, k, l, m, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4136([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3122([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_895([h, d, e, f, g, c, i], is_dual)
    }
}
/// n = 6, i = 1
fn select_4138([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_211([a, b, c, d, f], is_dual)
    } else {
        select_211([a, c, d, e, f], is_dual)
    }
}
/// n = 11, i = 3
fn select_4137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3687([a, b, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_4138([b, c, d, e, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4135([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4136([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4137([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4135([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_4135([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2118([a, b, c, e, i, d, j, k], is_dual)
    } else {
        select_4134([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4132([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_1335([a, b, c, e, i, j, d, k, l], is_dual)
    } else {
        select_4133([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4141([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_47([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_806([a, b, h, l, c, k, d, j, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4144([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_49([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1767([g, h, l, a, b, k, j, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4145([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2170([f, g, k, a, b, j, i, h], !is_dual)
    } else {
        select_84([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_4143([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4144([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4145([b, h, d, e, f, g, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4142([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_1682([a, c, b, e, f, g, h, d, i, j, k], is_dual)
    } else {
        select_4143([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4140([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4141([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4142([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4139([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4140([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_4140([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4131([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4132([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_4139([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_4117([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4118([a, b, c, d, e, f, k, i, j, m, l, n, o], is_dual)
    } else {
        select_4131([a, b, c, d, e, g, h, l, k, n, m, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4098([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_4099([a, b, c, d, f, g, h, e, i, k, j, l, m, n, o, p], is_dual)
    } else {
        select_4117([a, b, c, d, e, f, g, l, h, k, n, m, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4065([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < m) || (is_dual && e > m) {
        select_4066([a, b, c, d, f, g, k, i, j, m, l, e, n, o, p], is_dual)
    } else {
        select_4098([a, b, c, d, f, e, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4064([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4065([a, b, c, d, e, f, h, i, j, g, k, l, m, n, o, p], is_dual)
    } else {
        select_4065([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3996([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < n) || (is_dual && h > n) {
        select_3997([a, b, c, d, e, f, g, l, i, n, k, h, m, o, p], is_dual)
    } else {
        select_4064([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3590([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < k) || (is_dual && p > k) {
        select_3591([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3996([a, b, c, d, e, f, g, h, i, j, l, m, n, o, p, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_3589([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3590([a, b, c, d, e, f, g, h, j, k, i, l, m, n, o, p], is_dual)
    } else {
        select_3590([a, b, c, d, e, f, g, i, j, k, h, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 4
fn select_4151([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2236([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2236([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4156([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2331([a, b, d, e, f, c, h, g, i, j], is_dual)
    } else {
        select_1303([a, b, h, c, d, e, i, j, g, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_4160([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2130([h, a, c, d, e, f, g, i, j], is_dual)
    } else {
        select_2130([g, b, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_4159([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1820([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_4160([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_4158([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_4159([a, c, d, e, f, g, h, b, i, j], is_dual)
    } else {
        select_1819([a, c, b, e, f, g, h, d, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4163([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_340([a, b, f, e, g, h, i], is_dual)
    } else {
        select_2172([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4162([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4163([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_4163([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4161([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1765([a, b, g, j, c, i, h, d, e], !is_dual)
    } else {
        select_4162([a, b, g, j, c, i, h, e, f], !is_dual)
    }
}
/// n = 13, i = 4
fn select_4157([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4158([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4161([a, b, c, d, e, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4155([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_4156([a, b, d, e, f, j, i, c, k, l, m], is_dual)
    } else {
        select_4157([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4154([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_4155([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1245([a, b, c, e, f, j, i, k, d, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4153([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4154([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_4154([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4152([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4153([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4153([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4150([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_4151([a, b, c, d, e, f, j, k, g, l, m], is_dual)
    } else {
        select_4152([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4170([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_634([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_634([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4169([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1269([a, b, c, d, e, f, j, k, l, m, i], is_dual)
    } else {
        select_4170([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4168([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_4169([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1245([a, b, c, d, f, j, i, k, l, e, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4174([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_318([c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_3836([a, b, c, d, e, f, h, i, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4178([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_393([h, i, g, a, b, e, c], !is_dual)
    } else {
        select_393([g, i, h, a, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4177([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_779([h, j, e, b, a, i, c], !is_dual)
    } else {
        select_4178([c, b, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_4179([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_359([e, f, h, a, b, g, d], !is_dual)
    } else {
        select_340([e, f, h, b, g, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4176([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4177([a, f, b, d, e, g, i, h, j, k], is_dual)
    } else {
        select_4179([a, h, b, c, e, f, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_4181([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_214([b, a, d, e, h, g, f, i], is_dual)
    } else {
        select_1092([a, b, c, f, e, i, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4183([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1450([a, d, b, c, e, f, g, i, h, j, k], is_dual)
    } else {
        select_375([b, d, c, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4184([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_341([a, b, d, f, h, j], is_dual)
    } else {
        select_29([c, e, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_4182([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4183([a, b, e, d, h, f, i, j, g, k, l], is_dual)
    } else {
        select_4184([a, g, b, c, e, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4180([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4181([c, f, e, d, b, g, i, j, h], is_dual)
    } else {
        select_4182([a, c, b, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4175([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4176([b, c, g, e, f, a, h, i, j, k, l], is_dual)
    } else {
        select_4180([b, c, d, e, a, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4173([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_4174([b, c, d, e, a, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_4175([b, c, d, e, f, h, i, j, a, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4172([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4173([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_4173([a, c, b, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4171([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4172([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_4172([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4167([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_4168([a, b, c, d, e, f, g, h, i, k, l, m, j], is_dual)
    } else {
        select_4171([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4166([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4167([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_4167([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_4187([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_682([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_682([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4186([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4187([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_4187([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4185([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1243([a, b, c, d, e, f, g, h, j, k, l, i], is_dual)
    } else {
        select_4186([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4165([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4166([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4185([a, b, c, d, e, j, g, h, f, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4164([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_4165([a, b, c, d, e, f, h, i, k, g, l, m, n], is_dual)
    } else {
        select_2325([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4149([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_4150([a, b, c, d, e, f, g, i, k, l, m, h, n], is_dual)
    } else {
        select_4164([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4148([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_4149([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4149([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_4198([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_447([a, b, c, d, e, f, g], is_dual)
    } else {
        select_449([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4197([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2332([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4198([f, g, a, i, j, b, h, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4201([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_718([a, b, d, h, f, g], is_dual)
    } else {
        select_1099([g, i, h, a, e, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4200([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1331([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_4201([b, d, e, c, f, g, a, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_699([a, c, f, e, g, b, h, i], is_dual)
    } else {
        select_537([a, c, b, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4199([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4200([a, b, d, c, h, i, g, f, j], is_dual)
    } else {
        select_4202([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4196([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4197([a, b, c, d, h, g, i, j, k, f], is_dual)
    } else {
        select_4199([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_4206([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_300([a, b, c, g, f, i], is_dual)
    } else {
        select_304([b, f, d, e, a, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_4205([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2176([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_4206([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_4209([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_211([d, b, c, e, h], is_dual)
    } else {
        select_998([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4208([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1563([g, h, i, d, a, e, b, f, c], !is_dual)
    } else {
        select_4209([d, h, i, a, g, e, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4207([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4208([e, h, j, a, f, i, b, d, g], !is_dual)
    } else {
        select_1044([a, b, c, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4204([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4205([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_4207([a, c, d, h, f, b, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4203([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4204([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4207([b, c, d, h, f, i, g, a, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4195([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_4196([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_4203([a, c, d, b, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4213([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_104([a, c, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_4123([a, b, d, c, h, i, g, k, l, j, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_4214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_104([a, c, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_866([a, b, d, c, h, i, g, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4212([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4213([b, a, d, c, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_4214([b, c, d, a, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4211([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4212([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_4212([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4210([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4211([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_4211([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4194([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_4195([a, b, d, e, f, i, j, k, c, l, m], is_dual)
    } else {
        select_4210([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_4216([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1203([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_1203([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_4222([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_72([b, c, d, e, g, f], is_dual)
    } else {
        select_269([a, b, e, f, d, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4221([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4222([a, b, d, g, f, h, e, i], is_dual)
    } else {
        select_2229([a, b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_4224([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_129([e, c, f, d, a, h], is_dual)
    } else {
        select_173([b, a, c, e, d, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_4223([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4222([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_4224([a, c, b, e, f, g, d, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4220([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4221([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_4223([f, b, d, a, e, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_4225([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1554([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_4086([b, g, c, e, a, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4219([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_4220([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_4225([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4226([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_699([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_706([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4218([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4219([a, b, c, f, e, g, d, h, i], is_dual)
    } else {
        select_4226([a, b, c, f, d, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4229([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1272([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1306([a, c, h, i, g, b, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4228([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2723([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_4229([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4233([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_233([i, j, k, e, g, a, f, h, b], !is_dual)
    } else {
        select_222([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1729([j, g, k, e, i, f, b, a, h], !is_dual)
    } else {
        select_4233([b, a, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4231([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_4232([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3629([a, b, h, i, j, f, g, e, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_4235([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_65([a, g, d, h, e], is_dual)
    } else {
        select_1027([a, e, b, c, i, f, j, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4234([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1036([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_4235([b, c, d, a, e, h, i, j, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4230([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4231([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_4234([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4227([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4228([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_4230([a, c, d, e, f, g, h, i, b, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4218([a, b, d, e, c, g, h, j, i], is_dual)
    } else {
        select_4227([a, b, c, f, d, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4215([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_4216([a, b, d, f, g, c, e, h, j, i, l, k], is_dual)
    } else {
        select_4217([a, b, d, f, g, e, i, c, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4193([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_4194([a, b, c, d, f, g, i, h, j, l, k, m, n], is_dual)
    } else {
        select_4215([a, b, c, d, e, f, g, k, i, m, l, n], is_dual)
    }
}
/// n = 13, i = 2
fn select_4239([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_68([e, f, g, c, d, h, i, j, k, l, m], is_dual)
    } else {
        select_68([e, f, g, a, b, j, k, h, i, m, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4243([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_120([a, c, g, f, b, h, i], is_dual)
    } else {
        select_606([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_4242([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3679([a, b, c, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4243([a, b, c, d, i, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4244([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_104([c, a, b, d, e, f, h, g, i, j], is_dual)
    } else {
        select_475([a, g, d, e, f, b, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4241([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4242([c, d, b, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_4244([c, d, a, e, f, g, b, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_4240([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_68([a, c, d, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_4241([a, b, c, d, e, i, j, h, l, k, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_4238([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_4239([b, e, f, g, a, c, d, h, i, j, k, l, m], is_dual)
    } else {
        select_4240([a, b, c, d, i, f, g, l, j, k, h, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_4248([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2859([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1978([j, l, k, g, h, a, b, c, i], !is_dual)
    }
}
/// n = 13, i = 4
fn select_4247([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3865([b, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_4248([a, b, c, d, e, i, h, g, k, l, j, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_4251([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_795([g, h, i, f, a, d, b, e], !is_dual)
    } else {
        select_164([a, c, d, g, f, e, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4250([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1944([a, c, d, e, f, h, g, i, j, l], is_dual)
    } else {
        select_4251([j, k, l, g, h, a, c, b, i], !is_dual)
    }
}
/// n = 13, i = 4
fn select_4249([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4250([a, c, b, d, e, i, g, h, k, l, j, m], is_dual)
    } else {
        select_3865([c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4246([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4247([a, c, b, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_4249([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_4253([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2013([a, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3856([a, b, c, d, e, i, j, h, l, m, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_4252([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4253([c, a, b, d, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_4253([c, b, a, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4245([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4246([b, j, c, d, e, g, h, a, i, k, l, m, n], is_dual)
    } else {
        select_4252([b, c, a, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4237([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_4238([a, b, d, e, g, c, f, h, k, i, j, l, m, n], is_dual)
    } else {
        select_4245([a, b, c, d, e, f, k, h, i, j, l, n, o, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4236([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4237([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4237([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4192([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_4193([a, b, c, d, j, e, f, h, l, k, m, i, n, o], is_dual)
    } else {
        select_4236([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4191([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4192([a, b, c, d, f, g, h, i, e, j, k, l, m, n, o], is_dual)
    } else {
        select_4192([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o], is_dual)
    }
}
/// n = 13, i = 4
fn select_4254([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1013([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_1013([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4190([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < f) || (is_dual && n > f) {
        select_4191([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4254([a, b, c, d, e, j, g, k, l, m, n, f, o], is_dual)
    }
}
/// n = 13, i = 4
fn select_4255([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_973([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_973([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4189([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < g) || (is_dual && n > g) {
        select_4190([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4255([a, b, c, d, e, f, j, k, l, m, n, g, o], is_dual)
    }
}
/// n = 11, i = 3
fn select_4265([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2746([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3009([b, i, j, g, a, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4267([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_259([b, c, d, e, f, g, a, h, i, k], is_dual)
    } else {
        select_3179([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4266([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4267([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_241([j, k, l, h, b, a, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4264([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_4265([c, a, d, e, f, g, h, b, i, j, l], is_dual)
    } else {
        select_4266([a, c, b, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_4263([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_102([c, a, d, f, g, b, e, h, i, j, k, l, m], is_dual)
    } else {
        select_4264([a, b, c, d, e, i, j, h, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4262([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_4024([b, c, d, i, j, h, k, l, a, m, n], is_dual)
    } else {
        select_4263([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_4273([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_341([a, b, c, d, h, i], is_dual)
    } else {
        select_106([a, e, c, d, f, g, h], is_dual)
    }
}
/// n = 14, i = 4
fn select_4272([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4273([a, b, d, k, e, h, j, m, n], is_dual)
    } else {
        select_2518([c, e, f, g, j, h, i, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4274([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_350([b, i, e, d, g, h, k], is_dual)
    } else {
        select_1157([a, c, b, d, h, f, g, i, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4271([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_4272([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4274([b, c, e, g, f, j, h, i, a, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4276([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1665([a, b, c, f, h, i, j, g], is_dual)
    } else {
        select_162([a, d, c, e, h, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4277([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3284([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_34([a, i, b], is_dual)
    }
}
/// n = 10, i = 3
fn select_4275([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_4276([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_4277([a, f, d, e, b, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_4270([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_4271([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4275([a, c, k, e, f, b, h, j, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_4269([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4270([a, c, b, d, h, f, g, i, j, k, m, l, n, o], is_dual)
    } else {
        select_4270([a, b, c, d, i, e, g, h, j, l, m, k, n, o], is_dual)
    }
}
/// n = 13, i = 3
fn select_4280([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_107([c, e, f, g, a, b, h, i, j, k], is_dual)
    } else {
        select_835([a, b, d, c, i, j, h, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_4281([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_835([a, b, c, i, j, k, h, m, n], is_dual)
    } else {
        select_295([d, e, f, g, a, b, h, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_4279([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < n) || (is_dual && l > n) {
        select_4280([a, b, c, d, e, j, k, h, i, n, m, l, o], is_dual)
    } else {
        select_4281([a, b, d, f, g, c, i, h, j, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_4284([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_22([b, c, d, e, j, g, h], is_dual)
    } else {
        select_3035([f, a, h, b, c, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4283([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4284([b, c, h, e, f, a, g, j, i, k, l, m], is_dual)
    } else {
        select_4284([b, d, g, e, f, a, h, j, i, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_4286([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_215([b, d, e, f, i, h], is_dual)
    } else {
        select_249([a, b, c, d, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4285([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_304([d, j, e, f, b, g, i], is_dual)
    } else {
        select_4286([a, b, c, g, e, f, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4282([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4283([a, c, e, f, b, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_4285([a, b, c, d, h, i, g, j, m, k, l, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_4278([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_4279([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o], is_dual)
    } else {
        select_4282([b, c, h, e, f, g, i, j, k, l, a, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4268([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_4269([a, b, c, d, j, e, g, l, i, k, h, m, n, o, p], is_dual)
    } else {
        select_4278([a, c, d, e, g, b, f, i, k, h, j, m, n, l, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4261([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < o) || (is_dual && n > o) {
        select_4262([a, b, c, d, i, f, k, h, j, l, m, o, p, n], is_dual)
    } else {
        select_4268([a, b, c, d, e, g, f, h, i, k, j, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4260([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4261([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4261([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_4293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1298([a, b, c, i, f, k, h, j], is_dual)
    } else {
        select_114([a, e, h, d, f, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4294([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2208([f, l, j, k, h, b, a, c, i], !is_dual)
    } else {
        select_114([b, d, h, e, f, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4292([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4293([a, c, d, f, e, b, g, h, i, j, k], is_dual)
    } else {
        select_4294([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4295([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3636([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_706([a, f, d, e, b, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4291([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_4292([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    } else {
        select_4295([a, b, g, e, f, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4290([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4291([a, c, d, e, b, f, g, h, j, i, k, l], is_dual)
    } else {
        select_2212([a, c, d, e, i, g, b, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4289([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4290([a, b, d, c, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_4290([a, c, d, b, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4288([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4289([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_4289([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4300([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3924([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1942([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4302([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_795([d, g, i, h, a, e, b, f], !is_dual)
    } else {
        select_584([a, d, c, e, h, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_83([b, d, c, a, e, f, g, h, i], is_dual)
    } else {
        select_4302([a, j, k, b, g, i, c, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4299([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4300([a, c, d, h, g, i, b, j, k], is_dual)
    } else {
        select_4301([a, c, b, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4306([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_269([a, c, e, d, g, f], is_dual)
    } else {
        select_390([g, h, e, a, b, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4305([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4306([d, h, e, i, f, g, a, b], !is_dual)
    } else {
        select_1974([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4304([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_4305([j, f, k, b, a, g, i, c, h], !is_dual)
    } else {
        select_3535([b, c, a, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4303([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4304([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_4304([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4298([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4299([a, b, c, e, f, g, d, h, i, k, j], is_dual)
    } else {
        select_4303([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_4308([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_200([a, b, g, i, e, h, f, c], !is_dual)
    } else {
        select_409([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4307([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_4308([a, b, i, e, f, h, c, g, d], !is_dual)
    } else {
        select_1294([a, b, h, i, e, f, g, d, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4297([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_4298([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4307([a, b, k, c, e, i, j, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4311([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1384([a, d, b, e, f, g, c, h, i, k, j], is_dual)
    } else {
        select_1384([a, d, c, e, f, g, b, h, j, k, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4315([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_547([a, b, c, e, f, i, h, j], is_dual)
    } else {
        select_731([a, c, d, h, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4316([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_267([a, b, c, e, f, i, h, j], is_dual)
    } else {
        select_731([b, c, d, h, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4314([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4315([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_4316([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_4317([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1402([a, b, c, h, e, f, g, i], is_dual)
    } else {
        select_1402([a, b, d, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4313([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4314([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_4317([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4312([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_159([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_4313([a, b, c, e, i, g, h, d, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4310([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4311([a, b, c, d, e, i, h, j, g, k, l], is_dual)
    } else {
        select_4312([a, d, c, e, b, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4309([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4310([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_4310([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4296([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4297([a, b, c, e, d, f, i, j, k, l, h], is_dual)
    } else {
        select_4309([a, b, c, e, d, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4287([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4288([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4296([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_4259([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < i) || (is_dual && o > i) {
        select_4260([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4287([a, b, c, e, d, f, l, n, o, p, i, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_4258([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4259([a, b, c, d, f, e, g, h, j, k, l, m, i, n, o, p], is_dual)
    } else {
        select_4259([a, b, c, e, f, d, g, h, i, k, l, m, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4257([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4258([a, b, c, d, f, g, h, i, e, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4258([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4256([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4257([a, b, c, d, e, f, h, i, j, g, k, l, m, n, o, p], is_dual)
    } else {
        select_4257([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4188([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_4189([a, b, c, d, e, f, g, k, j, m, l, h, n, o, p], is_dual)
    } else {
        select_4256([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4147([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < o) || (is_dual && k > o) {
        select_4148([a, b, c, d, e, f, g, h, i, n, o, k, m, p], is_dual)
    } else {
        select_4188([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 13, i = 4
fn select_4329([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_640([e, d, a, b, h, j, i, f, g, k, l, m], is_dual)
    } else {
        select_640([e, d, a, c, g, j, i, f, h, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4331([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_718([h, e, i, a, f, b], !is_dual)
    } else {
        select_362([a, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4330([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_686([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_4331([b, a, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_4328([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_4329([b, d, e, c, a, h, i, j, g, f, k, l, m], is_dual)
    } else {
        select_4330([g, a, b, i, j, f, k, l, h, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4327([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4328([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4328([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_4334([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1103([a, b, c, d, j, g, i, h, k, l], is_dual)
    } else {
        select_3625([a, b, c, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4333([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4334([a, b, j, c, e, f, g, i, h, k, l, m], is_dual)
    } else {
        select_865([c, d, h, e, f, a, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4332([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4333([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_4333([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4326([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4327([e, f, d, j, a, b, g, k, h, i, l, m, n], is_dual)
    } else {
        select_4332([e, f, d, a, b, c, g, k, h, i, j, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_4337([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1230([a, b, d, e, c, f, g], is_dual)
    } else {
        select_3105([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4340([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_325([b, c, d, e, f, g], is_dual)
    } else {
        select_211([a, i, j, k, h], !is_dual)
    }
}
/// n = 7, i = 2
fn select_4341([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_301([a, b, c, d, f, e, g], is_dual)
    } else {
        select_301([a, b, c, e, f, d, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4339([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4340([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4341([g, a, i, j, k, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4338([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4339([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_4339([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4336([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_4337([a, b, c, i, j, k, d, h], !is_dual)
    } else {
        select_4338([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_4345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_587([a, b, c, i, f, g, h, j], is_dual)
    } else {
        select_84([a, b, d, e, h, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_4344([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_75([f, c, d, a, b, i, j, g, h, k, l], is_dual)
    } else {
        select_4345([f, c, d, e, k, j, g, h, i, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4343([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4329([a, b, c, j, e, g, h, i, f, k, l, m, n], is_dual)
    } else {
        select_4344([d, f, a, b, c, e, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4342([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_4343([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    } else {
        select_4343([a, b, c, d, g, f, h, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4335([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4336([e, f, g, a, h, i, j, l, m, k, n], is_dual)
    } else {
        select_4342([a, b, c, d, e, f, g, k, h, i, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4325([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4326([a, b, c, e, f, g, h, i, j, k, d, l, m, n], is_dual)
    } else {
        select_4335([d, a, b, c, f, g, h, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_4351([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_301([a, b, c, d, e, f, h], is_dual)
    } else {
        select_829([a, b, c, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4350([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_452([a, c, g, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_4351([f, k, l, h, a, g, b, j], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4349([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4350([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_4350([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4348([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4349([a, b, d, c, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_803([a, b, g, c, e, f, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4355([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_285([a, c, d, e, f, g], is_dual)
    } else {
        select_662([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4354([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4355([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_1597([b, c, d, f, g, h, a, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4353([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2153([a, g, c, b, e, f, h, i, k, j], is_dual)
    } else {
        select_4354([a, b, d, c, i, g, j, k, l, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_4359([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_211([a, b, c, e, g], is_dual)
    } else {
        select_215([b, d, a, c, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_4358([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1298([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_4359([e, h, i, f, a, b, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4360([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1381([a, c, b, e, g, h, i, f], is_dual)
    } else {
        select_4359([e, b, d, a, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4357([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4358([e, f, b, d, a, h, g, i, j], is_dual)
    } else {
        select_4360([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_4356([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2153([a, g, b, f, d, e, h, i, k, j], is_dual)
    } else {
        select_4357([a, b, c, i, g, f, j, k, l, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4352([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4353([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_4356([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4347([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_4348([a, b, e, d, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_4352([a, b, e, c, f, g, h, d, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4346([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4347([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_4347([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4324([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_4325([f, g, h, e, a, b, c, d, i, j, k, l, n, m], is_dual)
    } else {
        select_4346([a, b, c, d, e, f, j, k, l, m, i, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4323([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_4324([a, b, c, d, f, e, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_785([a, b, c, d, f, e, j, k, l, m, n, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4365([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2857([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3105([a, b, h, j, f, c, i, g], !is_dual)
    }
}
/// n = 13, i = 4
fn select_4364([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_4157([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4365([a, b, d, e, j, i, k, c, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4368([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_1304([i, a, b, j, k, g, l, m, h, n], is_dual)
    } else {
        select_3839([a, c, b, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4367([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4368([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4368([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_4373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_228([h, e, j, f, i, a, g, b], !is_dual)
    } else {
        select_2011([a, c, d, b, f, e, h, g, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_4372([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4373([b, i, c, d, a, h, k, j, l, m], is_dual)
    } else {
        select_142([b, c, d, a, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4371([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4372([a, b, c, i, e, f, g, h, k, j, l, m, n], is_dual)
    } else {
        select_305([a, d, j, e, f, g, i, k], is_dual)
    }
}
/// n = 11, i = 1
fn select_4375([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_108([c, d, e, a, b, f, g, i, k, j], is_dual)
    } else {
        select_108([f, g, h, a, b, c, d, i, j, k], is_dual)
    }
}
/// n = 10, i = 1
fn select_4376([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_59([a, b, c, e, f, g, h, i, j], is_dual)
    } else {
        select_59([a, e, f, b, c, d, h, j, i], is_dual)
    }
}
/// n = 11, i = 1
fn select_4374([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4375([a, h, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_4376([i, b, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_4370([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4371([a, b, l, c, f, g, h, i, j, k, m, n, o, p], is_dual)
    } else {
        select_4374([c, d, e, k, f, g, h, a, j, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_4380([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_65([b, d, c, e, f], is_dual)
    } else {
        select_41([d, e, h, i, a, g, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4379([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3841([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4380([g, e, j, a, b, i, h, c, f], !is_dual)
    }
}
/// n = 13, i = 4
fn select_4378([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_4034([a, c, d, e, f, i, g, h, j, k, l], is_dual)
    } else {
        select_4379([a, b, c, d, g, h, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_4382([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_401([c, d, i, e, f, g, h, j, k], is_dual)
    } else {
        select_3122([a, b, j, e, f, g, h, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_4383([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3122([a, b, k, f, g, h, i, j, l, m, n], is_dual)
    } else {
        select_2397([c, d, e, j, f, g, h, i, k, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_4381([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_4382([a, b, c, l, f, g, h, i, k, j, m, n, o], is_dual)
    } else {
        select_4383([a, b, d, e, j, f, g, h, i, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4377([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < m) || (is_dual && a > m) {
        select_4378([b, c, m, d, e, f, a, j, k, l, n, o, p], is_dual)
    } else {
        select_4381([b, c, d, e, f, a, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4369([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_4370([a, c, d, e, f, g, h, i, j, k, b, l, m, n, o, p], is_dual)
    } else {
        select_4377([a, b, c, d, e, f, g, h, i, k, j, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4366([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_4367([g, h, f, l, a, d, e, k, i, j, m, n, o, p], is_dual)
    } else {
        select_4369([g, h, f, a, d, e, b, c, i, k, j, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4363([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < n) || (is_dual && l > n) {
        select_4364([a, b, c, d, e, f, k, m, j, n, l, o, p], is_dual)
    } else {
        select_4366([g, e, f, h, i, d, a, b, c, k, j, l, m, n, o, p], is_dual)
    }
}
/// n = 14, i = 4
fn select_4384([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3955([a, b, c, e, f, g, d, h, i, k, j, l, m], is_dual)
    } else {
        select_3867([a, b, c, d, f, g, e, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4362([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_4363([a, b, c, d, g, h, i, e, f, j, k, m, l, n, o, p], is_dual)
    } else {
        select_4384([a, b, c, d, g, e, f, k, j, m, n, l, o, p], is_dual)
    }
}
/// n = 11, i = 2
fn select_4391([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_285([a, b, h, e, i, k], is_dual)
    } else {
        select_108([a, b, e, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_4392([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2541([f, g, d, e, a, h, i, j, k], is_dual)
    } else {
        select_22([d, e, b, c, j, i, h], is_dual)
    }
}
/// n = 12, i = 2
fn select_4390([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4391([a, b, c, i, d, f, g, h, j, k, l], is_dual)
    } else {
        select_4392([d, e, h, f, g, a, b, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_4394([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_432([a, b, d, c, j, h, i, k], is_dual)
    } else {
        select_895([d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_4393([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2896([a, b, c, d, e, j, h, i, k, l], is_dual)
    } else {
        select_4394([a, b, c, d, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_4389([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_4390([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_4393([b, c, e, a, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_4397([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_644([a, e, c, d, g, f, h], is_dual)
    } else {
        select_468([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4396([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4397([a, d, e, h, f, g, j, k], is_dual)
    } else {
        select_1291([a, b, c, d, g, f, i, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4395([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2989([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4396([a, c, d, e, j, h, b, i, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4388([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_4389([a, c, d, e, h, g, b, i, j, k, l, m], is_dual)
    } else {
        select_4395([a, b, c, d, f, e, j, i, l, m, k, n, o], is_dual)
    }
}
/// n = 12, i = 4
fn select_4401([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2360([g, a, b, d, i, f, j, k, h, l], is_dual)
    } else {
        select_2360([f, a, c, e, h, g, j, k, i, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4400([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4401([a, b, c, h, d, f, g, i, j, k, l, m], is_dual)
    } else {
        select_874([a, c, d, e, i, g, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4404([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_593([a, b, f, e, g, d, h, i], is_dual)
    } else {
        select_184([a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4403([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4404([c, a, b, d, f, e, g, h, i], is_dual)
    } else {
        select_341([d, g, e, j, i, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4405([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_65([b, d, c, e, f], is_dual)
    } else {
        select_390([a, b, f, d, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4402([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_4403([b, c, a, e, f, d, g, i, h, j], is_dual)
    } else {
        select_4405([i, j, g, e, f, d, h, a], !is_dual)
    }
}
/// n = 13, i = 4
fn select_4399([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_4400([b, c, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4402([c, d, k, f, g, a, i, l, j, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2170([i, h, k, b, a, j, f, c], !is_dual)
    } else {
        select_1767([h, i, k, a, b, j, g, d, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4409([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1183([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1183([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4408([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4409([b, a, d, e, h, j, g, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_4406([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_4213([a, b, c, e, g, f, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4407([b, a, e, d, l, h, g, k, j, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4398([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4399([b, c, h, d, f, j, g, i, a, k, l, m, n], is_dual)
    } else {
        select_4406([b, a, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_4387([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_4388([a, c, b, d, e, f, h, g, i, j, l, k, m, n, o], is_dual)
    } else {
        select_4398([a, c, e, f, d, h, i, k, j, b, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_4414([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_169([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1951([b, h, d, e, f, a, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4413([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_168([b, c, f, a, e, h, g, i, j, k, l], is_dual)
    } else {
        select_4414([a, c, d, b, e, i, g, h, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_4416([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3284([h, a, c, d, e, g, i, j, k], is_dual)
    } else {
        select_174([b, c, d, i, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4416([b, c, a, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_549([c, d, h, f, g, a, i, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_4412([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_4413([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4415([b, h, c, f, k, g, i, a, j, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_4417([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_807([a, h, b, d, g, k, l, i], is_dual)
    } else {
        select_1134([a, c, e, b, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_4411([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_4412([a, c, d, e, g, f, h, i, j, k, m, l, n], is_dual)
    } else {
        select_4417([a, b, d, l, e, h, i, k, g, m, n, o], is_dual)
    }
}
/// n = 8, i = 3
fn select_4422([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_61([d, a, b, c, e, f], is_dual)
    } else {
        select_341([a, b, c, e, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4421([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_432([c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_4422([a, b, i, e, g, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4423([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_285([b, c, h, e, g, j], is_dual)
    } else {
        select_1157([a, d, b, c, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4420([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4421([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_4423([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4419([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1682([a, b, e, f, g, j, h, i, k, m, n], is_dual)
    } else {
        select_4420([a, b, c, d, e, k, h, i, j, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4418([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_4389([a, c, d, e, h, g, i, j, k, m, l, n], is_dual)
    } else {
        select_4419([a, b, c, d, f, e, k, i, j, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4410([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_4411([a, c, e, d, f, h, i, l, j, k, b, n, m, o, p], is_dual)
    } else {
        select_4418([a, c, b, d, e, f, h, g, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4386([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_4387([a, b, c, d, e, j, g, h, l, k, m, i, n, o, p], is_dual)
    } else {
        select_4410([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 8, i = 3
fn select_4431([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([a, e, b, d, g, h], is_dual)
    } else {
        select_25([c, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_4430([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, e, d, c, f, g, h], is_dual)
    } else {
        select_4431([a, b, d, g, f, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4429([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4430([a, b, f, d, e, h, g, i, j], is_dual)
    } else {
        select_114([a, c, g, d, e, h, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_229([a, b, d, e, h, i, j], is_dual)
    } else {
        select_123([b, c, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4433([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4434([a, b, d, g, e, f, h, i, j, k], is_dual)
    } else {
        select_1973([a, c, d, h, f, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4432([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2898([b, e, c, d, h, g, f, i], is_dual)
    } else {
        select_4433([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4428([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4429([a, b, g, d, e, i, f, h, j, k, l], is_dual)
    } else {
        select_4432([a, b, h, c, e, f, g, j, i, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_4436([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_64([a, e, c, d, h, f, g, i], is_dual)
    } else {
        select_42([a, b, i, g, e, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4438([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2011([a, c, d, e, h, g, i, k, l], is_dual)
    } else {
        select_4434([a, b, e, i, f, g, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4437([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4438([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2011([h, c, d, e, a, g, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4435([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4436([b, c, j, e, g, h, f, i, k], is_dual)
    } else {
        select_4437([a, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4427([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4428([f, b, d, e, a, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4435([a, b, d, c, e, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4426([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4427([e, d, h, a, b, l, i, f, g, j, k, m, n], is_dual)
    } else {
        select_4427([e, d, g, a, c, k, i, f, h, j, l, m, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_4440([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1842([a, b, e, f, c, d, h, g, i, j, k, l], is_dual)
    } else {
        select_567([a, b, c, d, g, i, h, k, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_4439([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4440([a, b, c, d, i, e, k, g, h, l, j, m], is_dual)
    } else {
        select_4440([a, b, c, d, h, f, j, g, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4425([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_4426([c, e, f, d, a, g, i, j, h, b, k, l, m, n], is_dual)
    } else {
        select_4439([a, d, b, c, e, f, h, i, j, k, l, g, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4424([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_3918([a, b, c, i, j, d, k, l, h, m, n, g], is_dual)
    } else {
        select_4425([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4385([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < c) || (is_dual && n > c) {
        select_4386([a, b, d, e, c, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4424([a, b, d, e, f, k, i, m, j, n, l, c, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4361([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_4362([a, b, c, e, d, f, g, h, i, j, l, k, m, n, o, p], is_dual)
    } else {
        select_4385([a, b, c, e, g, f, h, i, j, k, l, d, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4322([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < o) || (is_dual && k > o) {
        select_4323([a, b, c, d, e, f, g, l, j, m, n, o, p, k], is_dual)
    } else {
        select_4361([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4321([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4322([a, b, c, d, e, g, h, i, j, f, k, l, m, n, o, p], is_dual)
    } else {
        select_4322([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4320([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4321([a, b, c, d, e, f, g, i, j, k, h, l, m, n, o, p], is_dual)
    } else {
        select_4321([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_4449([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1263([a, b, e, c, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_1263([a, b, e, d, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4448([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1270([i, a, b, c, d, e, g, j, k, l, h], is_dual)
    } else {
        select_4449([a, c, d, e, f, b, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4447([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4448([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_4448([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4446([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4447([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_4447([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 1
fn select_4453([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_314([d, a, e, f, g, b, c, h, i, j], is_dual)
    } else {
        select_302([b, c, d, i, f, g, h, a, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_4454([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_298([b, c, d, j, e, h, a, i, k], is_dual)
    } else {
        select_296([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_4452([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_4453([a, c, d, b, f, g, h, e, i, j], is_dual)
    } else {
        select_4454([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_4456([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1646([a, b, c, d, e, g, h, i, j], is_dual)
    } else {
        select_1646([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4459([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([b, c, d, e, g], is_dual)
    } else {
        select_269([f, i, j, k, a, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4458([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4459([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4459([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_4460([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_335([a, h, f, i, j], is_dual)
    } else {
        select_137([b, c, d, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4457([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4458([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_4460([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4456([a, b, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_4457([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4451([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_4452([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_4455([a, b, c, d, e, f, j, k, l, m, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_4450([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4451([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    } else {
        select_4451([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4445([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_4446([a, b, c, d, f, g, h, j, e, k, l, m], is_dual)
    } else {
        select_4450([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4444([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_4445([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3805([a, b, c, d, e, g, h, j, k, f, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4443([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3999([a, b, c, d, e, f, h, j, k, l, g, m], is_dual)
    } else {
        select_4444([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4442([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_4443([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3999([a, b, c, d, e, f, h, j, k, l, m, g], is_dual)
    }
}
/// n = 15, i = 4
fn select_4462([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1168([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o], is_dual)
    } else {
        select_1168([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4461([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4462([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o], is_dual)
    } else {
        select_4462([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4441([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < n) || (is_dual && h > n) {
        select_4442([a, b, c, d, e, f, g, i, l, m, n, h, o], is_dual)
    } else {
        select_4461([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4319([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < m) || (is_dual && o > m) {
        select_4320([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4441([a, b, c, d, e, f, g, h, i, j, l, n, o, m, p], is_dual)
    }
}
/// n = 10, i = 2
fn select_4473([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2408([a, b, c, d, i, h, j, g], is_dual)
    } else {
        select_83([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4472([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_4473([b, a, d, g, e, f, h, j, i, k], is_dual)
    } else {
        select_3637([a, c, b, d, i, g, h, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_4476([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2314([a, b, e, f, j, g, i, l, k], is_dual)
    } else {
        select_1580([a, e, f, c, d, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_4477([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_286([a, g, c, d, k, h], is_dual)
    } else {
        select_36([a, b, h, e, f, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4475([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4476([c, b, f, g, d, e, a, i, h, k, j, l], is_dual)
    } else {
        select_4477([c, a, f, g, d, e, b, i, h, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4474([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_3646([a, k, b, c, d, l, m, h], is_dual)
    } else {
        select_4475([a, d, e, b, c, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4471([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4472([b, d, c, e, f, g, h, a, i, j, k, l, m], is_dual)
    } else {
        select_4474([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4470([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4471([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_4471([a, c, b, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4469([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4470([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_4470([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4468([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4469([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_4469([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4478([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4169([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_4169([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4467([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4468([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_4478([a, b, c, d, e, h, i, f, g, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_4487([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([e, c, d, f, g], is_dual)
    } else {
        select_129([a, b, g, e, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_4486([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_340([i, f, j, a, g, b, c], !is_dual)
    } else {
        select_4487([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4485([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_686([b, f, d, e, g, a, h, i, j, k], is_dual)
    } else {
        select_4486([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4489([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_340([a, b, c, f, g, e, h], is_dual)
    } else {
        select_326([a, b, d, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4488([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4489([a, h, i, e, b, c, g, f], !is_dual)
    } else {
        select_1589([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4484([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4485([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4488([a, i, g, k, b, f, j, c, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4491([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_583([a, b, d, c, e, f, h, g], is_dual)
    } else {
        select_583([a, c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2641([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_673([a, b, h, c, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_28([c, f, d, e, h, g], is_dual)
    } else {
        select_45([j, k, a, b, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4495([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_125([a, b, c, k, l], is_dual)
    } else {
        select_4496([b, c, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4493([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4494([a, c, d, e, f, h, g, i, k, j], is_dual)
    } else {
        select_4495([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_4499([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_184([b, c, d, g, h, f, j], is_dual)
    } else {
        select_123([a, b, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4498([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4499([a, e, c, d, f, g, i, k, j, h, l], is_dual)
    } else {
        select_190([a, e, b, h, j, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4500([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_173([b, c, a, i, j, f, l], is_dual)
    } else {
        select_183([a, f, d, e, h, g, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_4497([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4498([b, c, d, e, a, f, g, j, i, k, h, l], is_dual)
    } else {
        select_4500([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4492([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4493([a, b, c, d, e, f, h, g, j, k, i, l], is_dual)
    } else {
        select_4497([d, b, c, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4490([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4491([a, c, i, d, k, b, g, l], is_dual)
    } else {
        select_4492([a, c, d, b, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_4483([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_4484([a, b, g, e, f, c, i, h, k, j, l], is_dual)
    } else {
        select_4490([a, b, d, c, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_4503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_608([a, b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_520([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4502([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4503([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_4330([a, b, c, d, e, h, i, j, g, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4505([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2320([a, b, e, c, d, f, g, i, h], is_dual)
    } else {
        select_2392([a, b, c, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4504([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_823([a, g, j, i, b, f, c, h], !is_dual)
    } else {
        select_4505([a, b, d, e, c, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4501([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4502([a, b, c, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_4504([a, b, c, d, i, h, k, g, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4482([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_4483([a, c, b, d, e, f, h, i, j, k, l, g], is_dual)
    } else {
        select_4501([a, c, b, d, e, f, h, g, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4481([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4482([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_4482([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4510([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_447([a, b, c, d, h, i, g], is_dual)
    } else {
        select_3967([c, d, e, f, a, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4509([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3812([a, i, g, k, b, c, j, d, h], !is_dual)
    } else {
        select_4510([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4513([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_271([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1665([a, f, d, e, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4512([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1589([a, b, h, c, i, f, j, g], is_dual)
    } else {
        select_4513([a, b, f, d, e, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4511([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_823([a, i, k, g, b, f, c, j], !is_dual)
    } else {
        select_4512([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4508([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4509([a, g, b, d, e, f, i, h, j, k, l], is_dual)
    } else {
        select_4511([a, b, c, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4517([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_64([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_523([f, b, d, a, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_4519([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_215([a, b, e, f, g, i], is_dual)
    } else {
        select_62([c, d, a, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4518([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_523([h, c, d, a, g, f, i, j], is_dual)
    } else {
        select_4519([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4516([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4517([a, d, f, e, h, b, g, j, i], is_dual)
    } else {
        select_4518([a, c, d, e, b, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4515([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2452([a, b, e, c, h, g, i, f, k], is_dual)
    } else {
        select_4516([a, c, e, d, b, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4520([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2105([a, b, c, d, f, h, g, i, j, k], is_dual)
    } else {
        select_2460([a, b, e, c, d, f, g, h, j, k, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_4514([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4515([a, c, b, j, f, h, i, l, g, m, k], is_dual)
    } else {
        select_4520([a, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4507([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < m) || (is_dual && g > m) {
        select_4508([a, b, c, i, d, e, h, j, k, l, m, g], is_dual)
    } else {
        select_4514([a, c, b, d, e, f, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4506([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4507([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_4507([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4480([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4481([a, b, c, d, i, e, f, j, k, h, l, m], is_dual)
    } else {
        select_4506([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4479([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4480([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_4480([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4466([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_4467([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4479([a, b, c, d, e, h, i, g, j, f, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4465([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4466([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_4466([a, b, c, d, e, f, h, i, j, g, k, m, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4530([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_718([g, d, i, a, e, b], !is_dual)
    } else {
        select_427([g, h, i, e, d, a, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4529([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1492([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4530([e, i, j, a, f, h, b, g, c], !is_dual)
    }
}
/// n = 9, i = 2
fn select_4532([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_36([b, c, d, e, f, a, g, h, i], is_dual)
    } else {
        select_105([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4531([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1071([a, b, d, c, f, h, g, j, k, i], is_dual)
    } else {
        select_4532([b, a, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4528([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4529([a, c, i, e, h, b, g, k, j, l], is_dual)
    } else {
        select_4531([a, c, d, e, f, b, g, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_4535([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_940([a, d, e, b, c, f, h, g, i, j], is_dual)
    } else {
        select_2321([a, g, d, e, f, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4534([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_357([i, a, c, d, b, j, g, h], is_dual)
    } else {
        select_4535([a, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4537([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_833([a, b, d, e, f, h, g, i], is_dual)
    } else {
        select_1298([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4538([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3940([a, c, b, d, g, h, f, i], is_dual)
    } else {
        select_611([a, c, b, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4537([a, d, b, f, i, g, k, h, j], is_dual)
    } else {
        select_4538([a, d, c, e, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4533([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4534([a, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_4536([a, b, d, c, e, h, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4527([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_4528([b, a, h, d, c, e, j, i, k, g, l, m], is_dual)
    } else {
        select_4533([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4542([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_3355([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_190([c, e, d, f, b, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_4544([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_215([c, b, d, e, f, g], is_dual)
    } else {
        select_361([a, b, c, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4543([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2455([a, f, c, d, e, g, h, i, k], is_dual)
    } else {
        select_4544([b, g, a, d, e, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4541([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4542([b, c, d, i, g, f, h, j, k], is_dual)
    } else {
        select_4543([a, b, d, e, h, g, f, i, k, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_4547([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_65([b, e, c, d, f], is_dual)
    } else {
        select_143([a, b, c, d, e, g, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_4546([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4547([b, a, c, k, h, l, i, j], is_dual)
    } else {
        select_3618([b, d, e, i, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4545([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3305([b, a, c, j, e, h, i, g, k, l], is_dual)
    } else {
        select_4546([a, b, e, d, f, c, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4540([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_4541([b, c, d, h, e, a, j, g, i, k, l, m], is_dual)
    } else {
        select_4545([b, c, d, f, e, a, g, j, i, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4539([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_4047([b, a, c, h, d, i, j, l, k, g, m], is_dual)
    } else {
        select_4540([b, c, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4526([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4527([a, b, d, e, h, f, g, j, l, k, i, m, n], is_dual)
    } else {
        select_4539([a, b, c, d, i, f, g, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4525([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4526([d, e, f, b, c, a, i, k, h, g, l, j, m, n], is_dual)
    } else {
        select_4526([d, f, e, b, c, a, i, j, h, g, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4524([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4525([g, e, f, a, c, d, k, j, b, h, i, l, m, n], is_dual)
    } else {
        select_4525([g, e, f, b, c, d, k, j, a, h, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4523([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4524([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_4524([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4522([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4523([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_4523([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_4556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3940([a, b, i, c, j, h, g, k], is_dual)
    } else {
        select_95([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4555([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4556([a, b, h, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_3504([b, c, g, d, e, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4554([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4555([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_4555([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_579([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_2341([a, b, f, j, c, i, h, d, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4559([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1286([a, b, d, c, g, f, i, j, h, k], is_dual)
    } else {
        select_579([a, f, c, b, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_4558([a, f, g, c, e, b, h, i, j, k], is_dual)
    } else {
        select_4559([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4553([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_4554([a, b, d, g, c, e, f, h, k, i, j, l], is_dual)
    } else {
        select_4557([a, b, d, i, g, c, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4552([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4553([a, b, c, d, f, g, e, i, j, k, h, l, m], is_dual)
    } else {
        select_4553([a, b, c, e, f, g, d, h, j, k, i, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4563([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_706([a, c, d, e, b, f, g, h, j], is_dual)
    } else {
        select_706([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4562([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4563([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2119([a, f, j, b, c, i, h, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4566([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_340([a, b, f, e, c, g, h], is_dual)
    } else {
        select_1665([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_4565([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_577([a, b, d, e, c, f, g], is_dual)
    } else {
        select_4566([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_4564([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1230([a, b, c, e, d, f, g], is_dual)
    } else {
        select_4565([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4561([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_4562([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_4564([a, b, i, j, f, d, c, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4568([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3934([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_3934([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4567([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4568([a, b, d, c, e, f, g, h, i, k, j], is_dual)
    } else {
        select_3937([a, b, d, c, e, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4560([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_4561([a, b, g, d, f, c, h, i, j, k], is_dual)
    } else {
        select_4567([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4551([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_4552([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4560([a, b, c, d, j, e, k, i, l, m, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_4571([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_410([a, b, d, e, f, c, i, h, j, k, l], is_dual)
    } else {
        select_2076([a, b, c, g, d, e, f, h, i, k, l, j, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_4574([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_636([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_350([b, c, g, e, f, d, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4573([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2096([a, b, f, c, d, e, g, h, j, k, l, i], is_dual)
    } else {
        select_4574([a, c, d, e, b, h, g, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_4578([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_65([f, g, c, d, a], !is_dual)
    } else {
        select_341([c, d, f, g, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4577([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_718([a, j, f, h, e, b], !is_dual)
    } else {
        select_4578([i, h, a, f, g, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_4580([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_65([b, c, d, e, f], is_dual)
    } else {
        select_34([a, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4579([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_359([e, f, j, a, b, h, g], !is_dual)
    } else {
        select_4580([a, c, d, f, e, i, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4576([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4577([a, b, c, d, f, g, h, i, e, j], is_dual)
    } else {
        select_4579([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4583([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_65([b, f, c, g, e], is_dual)
    } else {
        select_989([a, b, e, d, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4582([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4583([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_4583([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4585([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_228([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_228([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4584([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_3378([g, j, f, i, a, b, h, c, d], !is_dual)
    } else {
        select_4585([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4581([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4582([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_4584([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4575([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_4576([a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_4581([f, b, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4572([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4573([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4575([b, h, c, d, e, g, i, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4570([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_4571([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4572([a, c, d, e, f, i, h, j, b, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_4590([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_496([b, c, h, d, e, f, g, i, j, k], is_dual)
    } else {
        select_2130([a, i, d, e, f, g, h, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4589([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_4590([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3376([b, c, d, j, h, a, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4588([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_433([c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_4589([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4587([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4588([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_4588([b, a, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4586([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4587([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_4587([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4569([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_4570([a, b, d, f, g, h, e, i, j, c, k, l, m], is_dual)
    } else {
        select_4586([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4550([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_4551([a, b, c, e, f, g, h, i, j, k, d, l, m], is_dual)
    } else {
        select_4569([a, b, c, e, f, d, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4549([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4550([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_4550([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4593([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_702([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_702([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4597([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1398([a, c, b, d, e, g, f, h, i, k, j], is_dual)
    } else {
        select_4488([a, b, c, h, g, i, j, k, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_4596([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4597([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_4597([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4602([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_269([e, a, i, j, b, h], !is_dual)
    } else {
        select_1089([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4601([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1106([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_4602([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4600([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4601([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_4601([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4603([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1865([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_3749([a, c, g, f, b, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4599([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_4600([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_4603([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4598([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2117([a, b, c, j, k, g, i, d], !is_dual)
    } else {
        select_4599([a, b, c, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4595([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_4596([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_4598([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4594([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_4595([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_808([a, b, c, d, h, i, j, k, e], is_dual)
    }
}
/// n = 13, i = 4
fn select_4592([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_4593([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4594([a, b, c, d, e, i, j, k, l, f, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4591([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2275([a, b, c, d, e, f, g, j, k, i, l, m], is_dual)
    } else {
        select_4592([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4548([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4549([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_4591([a, b, c, d, e, f, h, i, j, k, g, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4521([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_4522([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_4548([a, b, c, d, e, f, l, h, j, k, g, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4464([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_4465([a, b, c, d, e, f, g, k, h, l, m, j, n], is_dual)
    } else {
        select_4521([a, b, c, d, e, f, h, g, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4463([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4464([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_4464([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4318([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_4319([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4463([a, b, c, d, e, f, g, h, i, n, o, j, m, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4146([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_4147([a, b, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    } else {
        select_4318([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_3588([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < n) || (is_dual && p > n) {
        select_3589([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4146([a, b, c, d, e, f, g, h, i, j, k, l, m, o, p, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_2644([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_2645([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_3588([a, b, c, d, e, f, g, h, i, k, l, m, n, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2643([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2644([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    } else {
        select_2644([a, b, c, d, e, f, g, h, i, j, l, m, k, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_2([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < m) || (is_dual && p > m) {
        select_3([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_2643([a, b, c, d, e, f, g, h, i, j, k, l, n, o, p, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_4621([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_86([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_319([a, c, e, b, f, g, d, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4620([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4621([a, b, c, e, f, d, h, i, k, j, m], is_dual)
    } else {
        select_966([c, a, d, g, b, e, i, h, j, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4619([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2470([d, e, a, c, g, j, i, h, b, k, l], is_dual)
    } else {
        select_4620([a, c, d, e, b, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4618([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4619([a, b, e, f, d, g, c, h, j, k, i, l, m], is_dual)
    } else {
        select_4619([b, a, f, e, c, g, d, i, k, j, h, m, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_4627([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_215([b, a, c, d, e, f], is_dual)
    } else {
        select_39([a, f, b, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_4626([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1198([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_4627([a, b, d, e, c, f, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_4625([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_86([a, b, d, c, e, f, g, h, i, k, j], is_dual)
    } else {
        select_4626([a, g, b, c, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_4624([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4625([a, b, e, c, f, g, d, h, i, j, k], is_dual)
    } else {
        select_4625([a, b, e, d, f, g, c, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4628([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_3243([a, b, d, e, c, f, g, h, i, j, l], is_dual)
    } else {
        select_2313([a, b, j, d, e, c, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4623([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4624([h, a, f, g, j, d, e, i, k, l, m], is_dual)
    } else {
        select_4628([h, f, g, d, e, b, c, i, k, j, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_4632([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_285([b, c, d, g, h, j], is_dual)
    } else {
        select_49([a, e, f, b, c, d, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4634([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1148([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_664([a, i, d, e, f, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4635([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_125([h, a, b, e, i], is_dual)
    } else {
        select_42([b, c, d, g, f, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_4633([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4634([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4635([a, b, c, d, g, h, k, l, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4631([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4632([b, c, d, g, e, f, h, j, i, k, l], is_dual)
    } else {
        select_4633([b, a, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_4637([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_833([a, b, e, h, f, i, g, k], is_dual)
    } else {
        select_4580([a, c, d, g, f, j, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4638([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2497([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2497([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4637([a, b, c, d, j, g, h, i, k, l, m], is_dual)
    } else {
        select_4638([a, c, d, e, f, h, g, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4630([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4631([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_4636([c, b, d, e, f, g, h, a, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4642([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_173([b, g, c, d, f, i, h], is_dual)
    } else {
        select_130([a, b, h, e, d, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4641([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4642([a, b, c, f, d, g, e, h, i, j, k], is_dual)
    } else {
        select_4642([a, b, c, f, e, g, d, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4640([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4641([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4642([a, c, d, f, b, g, e, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4643([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_168([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_341([a, b, i, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4639([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_4640([a, c, j, d, g, b, h, i, k, l, m], is_dual)
    } else {
        select_4643([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4629([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_4630([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4639([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4622([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4623([c, d, j, g, h, b, e, a, i, l, k, n, m], is_dual)
    } else {
        select_4629([a, b, c, d, f, e, k, i, j, m, o, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_4617([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4618([a, c, d, e, b, f, k, i, j, m, n, l, o], is_dual)
    } else {
        select_4622([c, b, e, a, f, d, g, h, j, i, k, l, n, m, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4616([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4617([a, c, d, b, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    } else {
        select_4617([b, c, d, a, e, f, g, h, i, k, l, j, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4615([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4616([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o], is_dual)
    } else {
        select_4616([b, c, d, e, f, g, h, i, a, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4614([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4615([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o], is_dual)
    } else {
        select_4615([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 2
fn select_4650([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_82([c, i, f, g, d, b, a, h, k, j, l], is_dual)
    } else {
        select_965([a, b, c, e, d, j, h, i, l, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_4649([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4650([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_4650([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4648([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3696([a, b, c, d, f, e, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_4649([a, b, d, e, f, c, g, h, i, k, j, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_4647([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_461([a, b, i, d, e, f, g, h, j, k, l, m, n], is_dual)
    } else {
        select_4648([a, b, c, j, e, f, g, h, i, k, l, m, n, o], is_dual)
    }
}
/// n = 11, i = 3
fn select_4657([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_61([c, d, e, i, g, h], is_dual)
    } else {
        select_2011([a, b, h, c, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4656([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1510([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_4657([a, c, h, e, f, g, b, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4655([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_3686([b, i, f, g, c, a, h, l, j, k, m, n], is_dual)
    } else {
        select_4656([a, b, d, e, c, j, h, i, m, k, l, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_4658([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3686([a, h, e, f, c, b, g, k, j, i, l, m], is_dual)
    } else {
        select_1511([a, b, d, c, j, g, h, i, l, m, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_4654([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4655([b, c, d, e, a, f, g, i, h, k, l, j, m, n], is_dual)
    } else {
        select_4658([a, b, d, c, f, g, i, j, l, k, h, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_4653([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4654([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_4654([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_4660([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_19([a, b, d, e, c, j, h, i, l, m, k], is_dual)
    } else {
        select_1776([f, g, h, i, c, a, b, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4659([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < c) || (is_dual && m > c) {
        select_4660([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_115([a, b, m, c, h], is_dual)
    }
}
/// n = 14, i = 3
fn select_4652([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_4653([a, b, c, e, f, d, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4659([a, b, c, f, j, g, h, i, d, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_4666([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_72([g, h, e, a, f, b], !is_dual)
    } else {
        select_632([a, e, c, d, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_4665([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_271([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_4666([b, f, d, e, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4664([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_4665([a, b, d, c, e, f, g, i, h], is_dual)
    } else {
        select_34([a, h, c], is_dual)
    }
}
/// n = 12, i = 3
fn select_4663([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4664([a, b, c, d, j, i, h, k, l], is_dual)
    } else {
        select_914([a, b, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_4667([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_318([h, g, e, f, j, c, d, i, k, l], is_dual)
    } else {
        select_1834([e, f, h, c, d, a, b, i, k, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_4662([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4663([a, b, c, f, d, e, k, j, i, m, l, n], is_dual)
    } else {
        select_4667([b, i, g, h, d, e, c, a, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_4672([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_112([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_112([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4673([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_31([h, i, e, f, g, c, a], !is_dual)
    } else {
        select_115([e, f, b, d, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4671([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4672([a, b, d, e, g, f, h, j], is_dual)
    } else {
        select_4673([i, j, g, h, a, b, e, c, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4675([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_775([e, b, c, d, g, h, f, i], is_dual)
    } else {
        select_1925([a, f, d, b, g, e, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4674([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1178([b, c, e, d, f, g, h, j], is_dual)
    } else {
        select_4675([a, c, d, b, e, g, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4670([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4671([a, e, b, d, g, h, f, i, j, k], is_dual)
    } else {
        select_4674([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_4679([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([e, i, j, h, a, b], !is_dual)
    } else {
        select_44([b, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_4678([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_997([a, c, d, e, g, h, f, j], is_dual)
    } else {
        select_4679([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_4680([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_129([d, b, c, f, e, g], is_dual)
    } else {
        select_38([f, d, h, i, a, e, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4677([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4678([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_4680([e, i, j, f, h, a, g, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4682([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_173([b, a, c, d, e, f, g], is_dual)
    } else {
        select_393([a, b, e, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4681([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4682([a, c, b, f, g, h, e, i, j], is_dual)
    } else {
        select_672([b, e, c, d, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_4676([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4677([a, c, d, h, e, f, g, j, i, k], is_dual)
    } else {
        select_4681([a, b, c, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4669([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4670([a, c, d, e, f, b, h, g, j, i, k], is_dual)
    } else {
        select_4676([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4668([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4669([a, b, c, i, d, k, g, h, j, l, m], is_dual)
    } else {
        select_662([a, c, e, f, j, h, i, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_4661([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < b) || (is_dual && m > b) {
        select_4662([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4668([a, c, d, f, e, k, i, j, m, l, b, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4651([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4652([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    } else {
        select_4661([a, b, c, e, f, d, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4646([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4647([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o], is_dual)
    } else {
        select_4651([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4687([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_103([e, a, h, f, g, d, c, j, i, l, k, m], is_dual)
    } else {
        select_150([a, b, c, d, j, k, h, i, m, n, o, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_4686([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4687([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o], is_dual)
    } else {
        select_4687([b, a, c, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4685([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4686([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4686([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4684([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_4685([a, b, c, d, f, h, e, k, i, j, l, m, n, o, p], is_dual)
    } else {
        select_4685([a, b, c, d, e, g, f, l, i, j, k, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4683([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_4684([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    } else {
        select_4684([a, b, c, e, f, g, h, i, j, d, k, l, m, n, p, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4645([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < o) || (is_dual && m > o) {
        select_4646([a, b, c, e, f, g, d, h, l, j, k, n, o, m, p], is_dual)
    } else {
        select_4683([a, b, c, d, e, f, h, g, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4644([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4645([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_4645([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4613([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < p) || (is_dual && m > p) {
        select_4614([a, b, c, d, f, e, h, g, i, l, k, n, o, p, m], is_dual)
    } else {
        select_4644([a, b, c, d, f, g, e, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 13, i = 3
fn select_4694([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_18([a, h, b, c, e, d, j, i, l, k, m], is_dual)
    } else {
        select_56([a, c, d, f, g, b, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_4698([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_135([c, j, d, e, f, g, i, k], is_dual)
    } else {
        select_424([a, b, i, d, e, f, g, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_4699([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_401([c, d, k, e, f, g, h, j, l], is_dual)
    } else {
        select_424([a, b, j, e, f, g, h, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 2
fn select_4697([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_4698([a, c, j, e, f, g, h, i, b, k, l, m], is_dual)
    } else {
        select_4699([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 2
fn select_4696([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_4697([b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4214([a, b, c, d, m, e, j, k, i, l, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4702([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_304([c, f, d, e, a, g, h], is_dual)
    } else {
        select_913([a, b, g, d, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4701([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4702([a, b, d, c, h, i, g, k, j, l], is_dual)
    } else {
        select_104([b, c, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 15, i = 3
fn select_4700([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_4697([a, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4701([a, b, c, d, m, e, j, k, i, l, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_4695([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_4696([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_4700([b, c, d, e, f, g, h, i, a, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_4693([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_4694([a, c, d, e, f, l, g, b, j, k, m, n, o], is_dual)
    } else {
        select_4695([a, c, d, e, f, g, b, h, i, j, k, m, l, n, o], is_dual)
    }
}
/// n = 12, i = 2
fn select_4706([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_303([c, a, i, f, g, b, h, k, j], is_dual)
    } else {
        select_3734([b, j, d, e, a, h, l, i], is_dual)
    }
}
/// n = 12, i = 2
fn select_4707([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_303([e, a, i, f, g, b, h, k, j], is_dual)
    } else {
        select_305([a, c, d, b, h, j, i, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_4705([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_4706([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_4707([b, c, e, f, a, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4708([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_74([a, b, e, f, c, d, k, i, j, m, n], is_dual)
    } else {
        select_1834([a, c, d, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4704([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_4705([a, c, d, e, b, j, g, h, l, k, i, m], is_dual)
    } else {
        select_4708([a, b, d, e, c, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_4712([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1867([a, f, b, d, g, e, h, i], is_dual)
    } else {
        select_4359([e, a, c, d, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4711([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4712([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_393([f, b, g, e, i, h, a], is_dual)
    }
}
/// n = 11, i = 3
fn select_4714([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3178([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_421([h, a, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4713([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4714([b, i, d, e, f, g, h, a, j, k, l], is_dual)
    } else {
        select_1857([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4710([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_4711([a, c, j, d, h, b, i, l, k], is_dual)
    } else {
        select_4713([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4709([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4710([a, b, c, f, d, e, k, i, j, m, l, n], is_dual)
    } else {
        select_4667([b, j, g, h, d, e, c, a, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_4703([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_4704([a, c, b, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_4709([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_4692([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_4693([a, b, c, d, g, h, i, e, f, j, k, l, m, n, o], is_dual)
    } else {
        select_4703([a, b, c, d, e, f, h, g, k, j, n, m, l, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_4721([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_215([a, c, d, g, f, h], is_dual)
    } else {
        select_222([b, a, d, f, e, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4720([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4721([a, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_234([b, c, i, f, e, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_4723([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_215([b, d, e, h, g, j], is_dual)
    } else {
        select_176([a, c, i, f, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4722([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4723([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_4723([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4719([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4720([b, a, c, e, g, f, h, j, k, i, l], is_dual)
    } else {
        select_4722([a, g, b, e, d, f, i, h, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4724([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3554([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_184([g, c, d, a, f, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_4718([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_4719([a, b, c, h, e, g, f, i, j, l, k, m], is_dual)
    } else {
        select_4724([a, c, d, k, f, g, j, h, m, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4728([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_539([d, c, a, f, g, e, i, h, j], is_dual)
    } else {
        select_775([e, b, c, d, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_4727([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_60([b, c, d, e, i, g, h, j], is_dual)
    } else {
        select_4728([a, b, j, c, f, g, h, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4730([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_969([a, b, c, e, f, h, i, j], is_dual)
    } else {
        select_163([b, c, d, f, h, g, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4729([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_60([b, c, d, e, i, g, h, j], is_dual)
    } else {
        select_4730([a, b, j, c, f, g, h, i, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4726([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4727([c, a, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_4729([c, b, d, e, f, g, a, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_4725([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4726([a, b, d, e, c, i, g, h, j, l, k, m], is_dual)
    } else {
        select_167([b, c, d, f, a, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4717([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4718([b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4725([h, a, c, d, e, f, g, i, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4734([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2314([g, b, d, e, a, f, h, j, i], is_dual)
    } else {
        select_105([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4733([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_579([a, g, b, e, f, h, i, j], is_dual)
    } else {
        select_4734([a, c, d, b, h, f, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_4737([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_61([a, c, d, e, f, h], is_dual)
    } else {
        select_126([a, g, b, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4738([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_22([a, b, c, d, e, f, g], is_dual)
    } else {
        select_115([a, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4736([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4737([g, a, c, d, e, f, i, h, j], is_dual)
    } else {
        select_4738([f, b, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4739([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([a, b, e, d, f, g, h], is_dual)
    } else {
        select_282([a, c, b, d, g, f, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_4735([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4736([b, c, d, e, k, g, h, j, m, n], is_dual)
    } else {
        select_4739([g, a, c, j, f, h, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4732([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4733([g, b, d, j, f, h, a, i, l, k, m], is_dual)
    } else {
        select_4735([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_4742([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1178([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1198([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4743([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_350([b, f, e, d, g, h, i], is_dual)
    } else {
        select_84([a, c, b, d, h, f, g, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_4741([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4742([a, b, d, k, e, g, h, j, m, n], is_dual)
    } else {
        select_4743([b, c, e, j, f, g, h, i, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_4747([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_32([a, c, d, e, f, h], is_dual)
    } else {
        select_32([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_4746([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_61([c, d, e, g, f, h], is_dual)
    } else {
        select_4747([a, b, h, c, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4745([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4746([a, g, c, d, e, h, f, i, j, k], is_dual)
    } else {
        select_105([f, b, c, d, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4744([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4745([a, c, d, b, i, f, g, h, j, k, l], is_dual)
    } else {
        select_579([f, g, b, e, h, i, k, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_4740([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4741([a, c, d, b, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_4744([c, d, h, e, f, g, b, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4731([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4732([a, c, b, d, i, f, g, h, j, l, m, k, n, o], is_dual)
    } else {
        select_4740([h, a, b, c, e, f, g, k, i, j, m, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_4716([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4717([c, a, d, e, f, g, h, b, i, j, k, m, l, n], is_dual)
    } else {
        select_4731([c, b, d, e, f, g, a, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 11, i = 3
fn select_4752([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_49([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_277([b, h, d, e, f, g, a, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4751([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4752([b, c, f, a, d, e, g, h, i, k, j], is_dual)
    } else {
        select_2376([g, a, b, d, e, h, j, i, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_4753([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_4752([a, b, d, c, e, i, g, h, k, j, l], is_dual)
    } else {
        select_116([b, c, f, a, e, h, g, i, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_4750([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4751([a, b, c, e, l, f, h, i, k, n, m, o], is_dual)
    } else {
        select_4753([b, c, d, f, k, g, h, i, j, m, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_4757([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_27([b, a, c, d, e, g, f, h], is_dual)
    } else {
        select_477([f, d, e, a, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_476([a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_4757([a, b, g, c, d, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4755([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_4756([a, b, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_383([a, b, c, e, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_4758([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_116([a, c, e, b, f, h, g, i, j, k], is_dual)
    } else {
        select_116([a, b, d, c, f, i, g, h, k, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_4754([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4755([a, c, b, g, e, l, h, j, k, n, m], is_dual)
    } else {
        select_4758([c, a, d, g, f, k, h, j, i, m, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_4749([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_4750([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4754([c, b, a, e, f, h, g, d, j, i, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_4761([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_48([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_1913([a, b, h, e, f, g, c, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4760([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_512([a, c, d, g, b, f, h, i, j, k], is_dual)
    } else {
        select_4761([a, b, c, e, d, f, i, h, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4764([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_136([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_669([g, c, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4763([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3764([a, b, d, e, f, g, c, h], is_dual)
    } else {
        select_4764([a, c, d, e, f, g, b, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4762([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4763([a, b, d, c, e, f, h, j, i, l], is_dual)
    } else {
        select_4761([a, b, c, g, d, e, f, h, i, k, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_4759([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4760([a, b, c, e, g, k, h, i, j, m, l, n], is_dual)
    } else {
        select_4762([a, b, c, d, f, l, g, i, k, n, m, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4748([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4749([a, b, c, d, e, i, g, h, j, k, l, n, m, o, p], is_dual)
    } else {
        select_4759([a, b, d, c, e, j, f, h, i, k, m, n, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4715([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_4716([a, c, d, e, i, g, h, l, j, k, b, m, n, o, p], is_dual)
    } else {
        select_4748([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4691([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_4692([a, b, d, e, c, f, g, h, i, k, l, j, m, n, o], is_dual)
    } else {
        select_4715([a, b, d, e, g, f, h, i, j, k, l, c, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 2
fn select_4770([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2558([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_3422([b, c, i, d, g, a, h, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_4772([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_938([h, a, j, e, f, g, i, k, l], is_dual)
    } else {
        select_401([e, f, g, b, c, d, i, k, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_4771([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2558([b, j, c, f, g, h, a, i, k, l], is_dual)
    } else {
        select_4772([c, a, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_4769([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4770([g, f, i, a, d, e, h, k, j, l], is_dual)
    } else {
        select_4771([g, f, a, d, e, b, c, h, k, j, i, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_4768([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4769([f, d, i, g, h, c, a, b, l, k, j, m], is_dual)
    } else {
        select_697([a, b, c, d, e, k, j, i, m, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_4773([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3719([a, b, c, e, d, i, h, l, k], is_dual)
    } else {
        select_698([a, b, c, e, f, g, k, i, j, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_4767([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4768([a, b, c, d, f, e, g, h, j, i, k, l, m], is_dual)
    } else {
        select_4773([a, b, d, f, i, g, h, j, e, k, l, m], is_dual)
    }
}
/// n = 14, i = 2
fn select_4766([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_1812([a, b, c, e, f, g, d, h, i, k, j, l, m, n], is_dual)
    } else {
        select_4767([a, b, c, e, d, g, f, l, i, k, n, m, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_4780([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_281([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_209([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4779([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3339([e, a, b, d, f, g, h, i, j], is_dual)
    } else {
        select_4780([a, f, c, d, h, g, e, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4778([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_168([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4779([b, c, j, d, a, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_4777([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4778([a, c, d, b, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_3720([a, b, d, c, j, h, i, k, g], is_dual)
    }
}
/// n = 12, i = 2
fn select_4781([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_82([c, d, g, h, e, b, a, i, k, j, l], is_dual)
    } else {
        select_318([a, b, c, d, f, e, j, i, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_4776([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_4777([a, c, e, d, g, h, i, j, b, k, l, m], is_dual)
    } else {
        select_4781([a, c, b, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4785([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_691([f, a, c, d, e, g, h, i], is_dual)
    } else {
        select_691([e, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4784([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_59([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4785([a, i, b, c, g, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_303([f, a, b, c, d, g, e, h, i], is_dual)
    } else {
        select_4784([e, a, b, c, d, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_4782([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4783([d, j, e, f, c, a, b, l, i, k, m], is_dual)
    } else {
        select_1776([c, i, g, h, d, a, b, k, j, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4775([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4776([a, b, c, e, d, j, g, h, i, l, k, m, n], is_dual)
    } else {
        select_4782([a, b, d, e, g, h, f, i, k, j, m, l, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_4774([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_1812([a, b, d, e, f, g, c, h, j, k, i, l, m, n], is_dual)
    } else {
        select_4775([a, b, d, c, e, g, f, l, j, k, n, m, i, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_4765([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4766([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_4774([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4690([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_4691([a, b, c, d, e, f, h, g, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_4765([a, b, c, e, f, g, h, d, i, k, j, m, l, n, o], is_dual)
    }
}
/// n = 13, i = 3
fn select_4792([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3528([a, b, c, d, f, e, h, j, l, k, m], is_dual)
    } else {
        select_1267([a, d, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_4793([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_855([a, d, e, b, c, f, g, h], is_dual)
    } else {
        select_447([a, f, b, c, d, h, g], is_dual)
    }
}
/// n = 14, i = 3
fn select_4791([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_4792([a, c, d, e, h, f, g, i, j, k, m, l, n], is_dual)
    } else {
        select_4793([a, c, d, b, l, n, k, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_4795([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3422([a, b, c, g, e, f, i, h], is_dual)
    } else {
        select_2805([e, f, a, d, h, g, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_4797([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4723([a, b, c, d, f, g, h, j, l, k, m], is_dual)
    } else {
        select_2185([d, e, f, b, h, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_4798([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2518([b, e, d, f, j, g, i, m, k], is_dual)
    } else {
        select_1092([a, e, k, c, g, h, l, j], is_dual)
    }
}
/// n = 15, i = 3
fn select_4796([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_4797([a, b, c, e, f, g, i, j, k, l, n, m, o], is_dual)
    } else {
        select_4798([a, b, c, e, d, g, h, i, j, l, m, o, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_4794([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < m) || (is_dual && a > m) {
        select_4795([b, e, m, d, h, a, i, o, l], is_dual)
    } else {
        select_4796([b, c, d, e, f, g, a, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_4790([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4791([a, c, b, i, d, f, g, h, j, k, m, n, l, o], is_dual)
    } else {
        select_4794([b, a, d, c, e, f, g, i, h, j, k, l, n, m, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_4789([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4790([a, c, b, d, e, f, g, i, j, k, l, h, m, n, o], is_dual)
    } else {
        select_4790([b, c, a, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_4788([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4789([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4789([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_4804([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_59([d, b, c, a, e, f, g, h, i], is_dual)
    } else {
        select_2582([i, b, c, d, a, g, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_4803([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_847([c, d, b, e, f, g, a, h, j, i, k], is_dual)
    } else {
        select_4804([a, c, d, h, f, g, b, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_4802([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_314([d, e, h, f, g, a, b, i, j, k], is_dual)
    } else {
        select_4803([a, b, c, j, d, f, g, i, h, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4808([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_129([a, b, h, f, i, j], is_dual)
    } else {
        select_23([c, d, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_4807([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4808([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_4808([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_4809([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_662([g, a, c, d, e, f, h, i], is_dual)
    } else {
        select_1402([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4806([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_4807([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_4809([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4805([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_4806([a, c, h, e, f, g, b, i, j, k], is_dual)
    } else {
        select_2804([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_4801([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4802([a, c, e, f, g, b, i, h, j, k, l, m], is_dual)
    } else {
        select_4805([a, h, b, d, c, j, k, i, m, n, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4812([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_107([a, d, b, h, e, f, g, i, j, k], is_dual)
    } else {
        select_805([a, b, c, i, k, h, l, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_4811([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4812([h, g, a, b, e, f, k, j, i, m, l, n, o], is_dual)
    } else {
        select_4812([h, g, a, b, c, d, l, j, i, m, k, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_4814([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_303([d, b, g, e, f, a, h, j, i], is_dual)
    } else {
        select_805([a, b, c, h, i, g, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4813([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4812([a, b, c, d, f, g, j, h, i, l, k, m, n], is_dual)
    } else {
        select_4814([a, b, c, d, e, k, h, i, j, l, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_4810([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_4811([d, e, c, f, g, h, b, a, j, i, k, l, m, n, o], is_dual)
    } else {
        select_4813([a, b, d, e, k, g, h, i, j, c, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_4800([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4801([g, f, e, a, k, b, c, h, l, i, j, m, n, o], is_dual)
    } else {
        select_4810([g, f, e, a, b, c, d, h, l, i, j, k, m, n, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_4818([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3077([a, g, d, e, f, b, h, i, j, k], is_dual)
    } else {
        select_3294([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4821([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_341([a, i, j, k, f, b], !is_dual)
    } else {
        select_222([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 2
fn select_4822([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1527([e, f, g, b, c, d, i, j, l, k], is_dual)
    } else {
        select_62([a, g, e, f, h, k, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_4820([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4821([a, i, b, c, d, k, h, j, l, m, n], is_dual)
    } else {
        select_4822([a, b, c, d, f, g, e, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_4819([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4820([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_4820([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4817([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_4818([a, b, j, f, g, h, c, k, m, l, n], is_dual)
    } else {
        select_4819([a, b, f, g, h, c, d, e, i, k, j, l, m, n], is_dual)
    }
}
/// n = 13, i = 4
fn select_4825([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_641([a, c, j, b, g, h, k, i, l, m], is_dual)
    } else {
        select_2726([a, d, e, f, i, g, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_4826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3078([a, g, c, d, e, f, h, i, j, k], is_dual)
    } else {
        select_54([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_4824([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_4825([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4826([a, i, d, e, f, g, b, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4823([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4824([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_4824([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4816([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_4817([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4823([a, b, c, i, f, g, h, d, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_4830([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_350([c, d, a, e, f, g, i], is_dual)
    } else {
        select_350([e, f, b, c, d, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_4831([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1096([b, c, d, e, f, h, g], is_dual)
    } else {
        select_1099([g, h, i, a, e, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_4829([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4830([e, f, b, c, a, d, h, i, g], is_dual)
    } else {
        select_4831([b, c, e, d, h, g, a, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4828([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_4829([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_1922([a, d, f, b, i, g, h, c], is_dual)
    }
}
/// n = 9, i = 3
fn select_4834([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_833([a, b, d, f, g, e, i, h], is_dual)
    } else {
        select_991([a, b, c, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4833([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_4834([a, b, d, c, f, g, h, e, i], is_dual)
    } else {
        select_4834([a, c, d, b, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4836([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1706([a, c, d, b, g, e, h, f], is_dual)
    } else {
        select_3339([a, b, d, c, g, f, h, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4835([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4836([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1402([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_4832([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4833([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_4835([b, d, a, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4827([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_4828([a, c, d, b, e, f, h, g, i, j], is_dual)
    } else {
        select_4832([a, c, d, g, e, b, i, h, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_4815([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_4816([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4827([a, b, d, c, k, e, i, l, m, j], is_dual)
    }
}
/// n = 16, i = 4
fn select_4799([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_4800([f, c, g, h, e, d, a, b, i, k, l, j, m, n, o], is_dual)
    } else {
        select_4815([a, b, d, c, f, e, k, l, j, m, n, i, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4787([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4788([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o], is_dual)
    } else {
        select_4799([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 7, i = 2
fn select_4845([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_131([a, b, c, e, f, g], is_dual)
    } else {
        select_131([a, b, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_4844([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_137([d, e, f, g, i], is_dual)
    } else {
        select_4845([a, b, c, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4846([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_775([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_72([a, b, e, g, h, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_4843([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4844([a, b, h, d, e, f, g, i, k, j, m, n], is_dual)
    } else {
        select_4846([a, b, j, c, h, i, l, m, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_4848([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1738([a, b, c, d, e, g, h, j, i, k, l], is_dual)
    } else {
        select_1738([a, b, c, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_4847([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4848([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1882([a, c, d, e, f, i, g, j, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4842([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_4843([b, a, c, d, e, f, g, i, h, k, j, l, m, n], is_dual)
    } else {
        select_4847([h, c, d, e, f, g, a, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_4851([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_627([j, k, l, a, g, i, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4850([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4851([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1882([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_4854([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_131([a, b, c, d, e, f], is_dual)
    } else {
        select_45([a, c, d, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_4853([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_137([c, d, e, f, h], is_dual)
    } else {
        select_4854([a, b, i, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4852([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_671([a, b, c, k, l, h, m], is_dual)
    } else {
        select_4853([b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4849([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_4850([a, h, d, e, f, g, b, i, j, l, k, m], is_dual)
    } else {
        select_4852([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4841([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4842([b, a, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4849([a, b, i, d, e, f, g, j, h, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_4858([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([c, d, e, f, g], is_dual)
    } else {
        select_477([i, j, k, a, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_4857([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_834([g, c, d, e, f, b, h, i], is_dual)
    } else {
        select_4858([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_4856([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_4857([a, b, c, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_4857([a, b, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_4860([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_211([f, a, h, i, g], !is_dual)
    } else {
        select_849([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4859([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_299([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_4860([g, j, f, i, b, a, h, c, d], !is_dual)
    }
}
/// n = 14, i = 4
fn select_4855([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4856([a, b, e, f, g, h, j, i, k, m, l, n], is_dual)
    } else {
        select_4859([a, b, c, d, k, i, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4840([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4841([b, c, d, e, f, g, h, i, j, a, k, l, m, n], is_dual)
    } else {
        select_4855([b, c, a, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4839([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_2005([a, b, e, f, g, h, c, j, i, k, l, m, n, o], is_dual)
    } else {
        select_4840([a, b, c, d, e, f, k, l, i, j, n, o, p, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4865([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_374([b, a, d, c, e, f, h, i, g], is_dual)
    } else {
        select_735([a, d, b, c, e, g, h, i, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_4867([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_346([a, b, d, e, f, g, h], is_dual)
    } else {
        select_390([a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4869([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_42([g, h, i, a, d, b], !is_dual)
    } else {
        select_123([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4868([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, e, c, d, f, g, h], is_dual)
    } else {
        select_4869([a, b, c, g, f, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4866([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4867([a, c, b, f, e, h, i, g], is_dual)
    } else {
        select_4868([a, b, d, c, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4864([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4865([a, e, c, d, g, h, f, i, j], is_dual)
    } else {
        select_4866([a, b, f, d, h, g, e, j, k, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4871([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_359([a, b, c, f, g, h, i], is_dual)
    } else {
        select_3303([b, a, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_4872([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_991([f, h, i, e, b, a, g, c], !is_dual)
    } else {
        select_2044([b, c, d, a, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_4870([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_4871([b, a, e, c, h, i, g, f, j], is_dual)
    } else {
        select_4872([a, b, f, d, g, i, e, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4863([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4864([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_4870([b, a, c, g, i, f, h, e, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4875([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_152([a, b, d, e, f, g, i, j, k, m], is_dual)
    } else {
        select_1166([a, b, c, g, h, k, l, i, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4877([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_281([a, c, b, e, f, h, i, g], is_dual)
    } else {
        select_32([e, d, b, g, h, f], is_dual)
    }
}
/// n = 13, i = 4
fn select_4876([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4877([a, b, j, c, g, h, k, l, m], is_dual)
    } else {
        select_2910([a, b, d, e, f, g, h, i, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4874([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4875([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_4876([a, c, b, d, e, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_4880([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_911([e, b, a, f, h, i, d], is_dual)
    } else {
        select_89([g, h, f, i, d, e, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4879([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_4880([a, c, b, e, f, d, g, h, i], is_dual)
    } else {
        select_124([d, f, c, a, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_4878([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4879([a, b, c, e, g, f, i, j, h], is_dual)
    } else {
        select_408([b, d, a, e, g, h, i, f], is_dual)
    }
}
/// n = 13, i = 4
fn select_4873([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4874([a, b, c, d, e, f, h, g, i, j, l, k, m], is_dual)
    } else {
        select_4878([a, c, j, b, h, i, k, l, g, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4862([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_4863([a, b, k, c, g, l, h, m, i, n, j], is_dual)
    } else {
        select_4873([a, b, h, d, e, f, g, i, j, k, m, n, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_4884([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_662([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_45([b, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4883([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1646([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_4884([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4882([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4883([i, a, d, e, f, g, j, k, l, m], is_dual)
    } else {
        select_1593([k, l, g, i, m, a, h, b, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4888([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_153([f, b, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_278([a, h, c, d, e, f, i, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_4889([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_89([e, b, c, d, f, g, h, j], is_dual)
    } else {
        select_156([h, i, j, e, g, f, a, b, d], !is_dual)
    }
}
/// n = 13, i = 4
fn select_4887([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_4888([b, a, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_4889([b, a, j, c, g, k, h, l, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4886([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_4887([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3629([a, b, j, k, l, h, i, g, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_4891([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_671([a, e, c, f, h, d, i], is_dual)
    } else {
        select_1411([g, h, f, i, a, e, d, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4893([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_503([a, b, c, d, e, f, i, g], is_dual)
    } else {
        select_262([a, b, f, d, i, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_4892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_259([b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_4893([a, b, i, g, h, f, k, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_4890([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_4891([a, b, i, j, g, h, f, k, l], is_dual)
    } else {
        select_4892([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4885([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4886([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_4890([a, h, d, e, f, g, b, i, j, k, m, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_4881([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4882([a, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_4885([a, b, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_4861([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4862([b, c, d, e, f, g, h, i, a, j, k, l, m, n], is_dual)
    } else {
        select_4881([b, c, a, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4838([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < b) || (is_dual && n > b) {
        select_4839([a, c, d, e, b, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4861([a, c, d, e, f, k, l, i, j, m, n, b, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_4899([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_502([a, b, i, g, f, h, j, k, l], is_dual)
    } else {
        select_895([b, c, d, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_4898([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3322([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4899([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4897([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_4456([a, b, d, e, f, g, h, j, k, l], is_dual)
    } else {
        select_4898([a, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 1
fn select_4902([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_325([a, b, c, d, e, f], is_dual)
    } else {
        select_26([g], is_dual)
    }
}
/// n = 12, i = 2
fn select_4901([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1547([a, b, d, k, c, i, l, j], is_dual)
    } else {
        select_4902([a, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_4904([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_259([g, c, d, e, f, h, a, i, j, k], is_dual)
    } else {
        select_328([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_4903([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_4904([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_824([a, k, l, i, b, h, c], !is_dual)
    }
}
/// n = 13, i = 3
fn select_4900([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4901([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_4903([a, b, c, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_4896([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_4897([a, b, j, e, f, g, h, i, c, k, l, m, n], is_dual)
    } else {
        select_4900([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_4895([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_2005([a, c, e, f, g, h, b, j, i, k, l, m, n, o], is_dual)
    } else {
        select_4896([a, c, b, d, e, f, k, l, i, j, n, o, m, p], is_dual)
    }
}
/// n = 10, i = 4
fn select_4910([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_121([i, j, a, h, g, e, b], !is_dual)
    } else {
        select_163([a, c, d, f, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_4909([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_944([a, d, e, g, f, b, i, h], is_dual)
    } else {
        select_4910([a, c, d, b, f, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4912([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_202([a, b, d, f, g, e, i, j], is_dual)
    } else {
        select_141([a, e, c, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_4912([a, c, b, d, f, g, e, h, j, i], is_dual)
    } else {
        select_594([a, e, d, b, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4908([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4909([a, b, f, d, h, e, i, j, g, k], is_dual)
    } else {
        select_4911([b, e, a, c, g, f, j, i, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_4914([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_265([a, b, c, e, f, g, h, i, j], is_dual)
    } else {
        select_268([a, b, d, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4916([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_255([a, b, e, g, h, f, j], is_dual)
    } else {
        select_1093([c, e, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_4915([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1794([f, b, c, e, a, h, g, j, i], is_dual)
    } else {
        select_4916([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4914([c, d, b, a, e, f, h, i, j, g], is_dual)
    } else {
        select_4915([a, c, d, e, b, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4907([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4908([b, c, d, e, g, f, h, a, i, j, k], is_dual)
    } else {
        select_4913([c, b, a, d, e, g, h, f, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_4920([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_281([e, b, d, a, f, g, h, i], is_dual)
    } else {
        select_775([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4919([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4920([a, b, e, d, h, f, g, j, i], is_dual)
    } else {
        select_922([a, f, c, g, i, e, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_4918([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2843([b, a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_4919([b, d, c, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4922([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_254([b, c, d, i, g, k, j, h], is_dual)
    } else {
        select_179([d, b, c, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_4923([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_560([a, b, g, d, e, f, h, j, i, l, k], is_dual)
    } else {
        select_562([a, b, i, c, f, g, h, k, l, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4921([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4922([b, a, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_4923([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_4917([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_4918([a, b, c, i, d, g, h, k, l, m], is_dual)
    } else {
        select_4921([a, b, d, c, e, f, h, g, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4906([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_4907([a, b, c, d, i, h, k, l, j, g, m], is_dual)
    } else {
        select_4917([a, b, d, c, e, f, h, g, i, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_4927([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_359([f, g, h, a, b, e, d], !is_dual)
    } else {
        select_345([f, g, h, a, b, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4928([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_795([b, c, e, a, f, g, h, i], is_dual)
    } else {
        select_795([a, c, d, b, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4926([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_4927([c, d, e, f, b, h, i, g], is_dual)
    } else {
        select_4928([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_4931([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_405([d, g, h, e, a, f, b], !is_dual)
    } else {
        select_190([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_4930([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_944([c, a, d, e, b, f, g, h], is_dual)
    } else {
        select_4931([c, d, b, e, f, a, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_4932([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4077([e, i, f, a, h, g, b, c, d], !is_dual)
    } else {
        select_4077([e, i, g, a, h, f, b, d, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_4929([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_4930([d, c, a, b, e, f, h, g], is_dual)
    } else {
        select_4932([e, h, f, i, a, b, d, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_4925([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4926([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_4929([c, g, b, d, h, a, f, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4936([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_23([c, d, e, g], is_dual)
    } else {
        select_131([a, b, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_4935([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1957([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_4936([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4934([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_4935([a, b, c, e, f, g, j, i, k, l], is_dual)
    } else {
        select_223([a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_676([a, b, h, f, i, j, g], is_dual)
    } else {
        select_4138([f, c, d, e, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_4937([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4938([b, g, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_3883([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4933([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_4934([a, c, d, b, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_4937([a, b, d, e, f, g, i, h, j, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4924([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4925([a, d, b, c, j, h, k, l, m, i], is_dual)
    } else {
        select_4933([a, d, b, c, e, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_4905([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_4906([a, b, c, d, e, f, h, i, k, j, l, m, n], is_dual)
    } else {
        select_4924([a, b, i, c, e, f, g, h, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_4894([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < b) || (is_dual && n > b) {
        select_4895([a, c, d, e, b, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4905([a, c, d, e, f, k, l, i, j, m, n, b, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4837([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_4838([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4894([a, b, e, c, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4786([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4787([a, b, c, d, f, g, e, h, i, j, l, m, k, n, o, p], is_dual)
    } else {
        select_4837([a, b, c, d, e, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4689([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_4690([a, b, c, f, g, h, i, d, e, j, l, m, k, n, o, p], is_dual)
    } else {
        select_4786([a, b, c, d, f, e, g, h, i, j, k, l, m, o, p, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_4949([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_123([a, c, e, h, i, k], is_dual)
    } else {
        select_190([b, c, d, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_4948([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_266([a, g, d, f, e, h, i, k], is_dual)
    } else {
        select_4949([d, a, b, c, f, e, h, g, j, k, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_4947([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2497([a, c, d, e, f, g, h, j, i, k, m], is_dual)
    } else {
        select_4948([a, b, i, c, g, h, f, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_4950([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_408([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_334([d, c, e, f, a, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_4946([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_4947([a, b, c, d, e, g, f, h, i, j, l, k, m], is_dual)
    } else {
        select_4950([a, b, i, g, j, k, f, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4953([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_593([h, i, j, e, a, f, b, g], !is_dual)
    } else {
        select_143([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_4954([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_184([a, b, c, d, e, f, g], is_dual)
    } else {
        select_39([a, g, i, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_4952([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4953([a, b, c, d, f, i, h, j, k, l], is_dual)
    } else {
        select_4954([j, k, l, f, a, i, b, g, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_4956([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1093([e, b, c, d, f, g, h], is_dual)
    } else {
        select_130([a, b, c, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_4955([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_4956([a, g, b, c, e, f, h, i, j], is_dual)
    } else {
        select_1089([a, c, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4951([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4952([a, g, d, e, c, f, h, i, j, l, k, m], is_dual)
    } else {
        select_4955([a, b, i, c, f, g, h, k, l, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4945([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4946([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_4951([b, a, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_4959([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_242([e, f, b, d, h, g], is_dual)
    } else {
        select_40([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_4958([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2809([a, b, d, h, f, g, i, e, k, j], is_dual)
    } else {
        select_4959([b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4961([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_94([a, c, d, g, e, h, f, i, k], is_dual)
    } else {
        select_1796([a, c, b, f, e, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_4960([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4930([g, a, c, h, f, i, k, e], is_dual)
    } else {
        select_4961([c, a, b, d, f, g, e, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_4957([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4958([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_4960([c, d, b, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_4944([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4945([b, c, a, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_4957([b, a, c, d, i, g, k, h, l, m, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_4965([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_359([d, j, e, a, g, h, b], !is_dual)
    } else {
        select_2255([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_4966([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_4848([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_421([a, i, c, d, e, f, g, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4964([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4965([b, j, c, g, a, h, i, k, l, m], is_dual)
    } else {
        select_4966([b, c, a, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_4968([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_671([a, d, g, f, e, i, j], is_dual)
    } else {
        select_255([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_4969([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_496([b, c, h, d, e, f, g, i, j, k], is_dual)
    } else {
        select_136([a, i, d, e, f, g, h, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4967([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_4968([b, c, d, j, h, a, i, k, l, m], is_dual)
    } else {
        select_4969([b, c, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_4963([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_4964([a, c, d, e, f, g, h, i, b, j, k, l, m], is_dual)
    } else {
        select_4967([a, c, b, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_4962([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4963([b, a, c, d, e, f, k, i, j, m, n, o, l], is_dual)
    } else {
        select_3610([a, j, g, h, e, f, c, b, i, l, k, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_4943([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < m) || (is_dual && a > m) {
        select_4944([b, c, d, e, f, k, i, j, m, l, a, n, o], is_dual)
    } else {
        select_4962([b, c, d, e, a, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 7, i = 3
fn select_4974([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_120([a, b, c, d, f, e, g], is_dual)
    } else {
        select_115([a, d, e, c, f], is_dual)
    }
}
/// n = 11, i = 3
fn select_4973([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3679([a, h, b, d, e, f, g, i, j, k], is_dual)
    } else {
        select_4974([a, b, c, g, j, h, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_4972([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_103([e, a, i, f, g, d, c, j, h, l, k, m], is_dual)
    } else {
        select_4973([a, c, b, d, j, k, h, i, m, n, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_4971([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_4972([a, b, c, e, g, d, j, h, i, k, m, l, n, o], is_dual)
    } else {
        select_4972([a, b, c, d, f, e, k, h, i, j, n, l, m, o], is_dual)
    }
}
/// n = 14, i = 3
fn select_4977([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_107([c, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_160([a, b, d, c, j, k, h, i, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_4976([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4977([a, b, d, e, g, c, j, h, i, k, l, n, m, o], is_dual)
    } else {
        select_4977([a, b, c, e, f, d, k, h, i, j, m, n, l, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_4980([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_21([e, a, b, c, d, f, h, i, g, j], is_dual)
    } else {
        select_316([g, a, b, c, d, e, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_4979([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4980([b, h, e, f, c, a, g, j, i, k], is_dual)
    } else {
        select_866([a, b, d, c, i, g, h, k, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_4983([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_211([a, d, e, i, h], is_dual)
    } else {
        select_27([a, f, h, b, c, g, j, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_4982([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_304([d, j, e, f, a, g, i], is_dual)
    } else {
        select_4983([a, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_4981([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4982([b, e, f, d, a, g, h, i, j, l, k], is_dual)
    } else {
        select_4982([a, e, f, c, b, h, g, i, k, l, j], is_dual)
    }
}
/// n = 13, i = 2
fn select_4978([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_4979([a, b, c, e, f, g, k, i, j, l, m], is_dual)
    } else {
        select_4981([a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_4975([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_4976([a, b, d, e, c, f, g, h, i, j, k, m, n, l, o], is_dual)
    } else {
        select_4978([d, e, c, f, g, a, h, j, k, l, m, n, i], is_dual)
    }
}
/// n = 15, i = 3
fn select_4970([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_4971([b, d, c, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    } else {
        select_4975([b, d, a, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4942([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < o) || (is_dual && l > o) {
        select_4943([a, c, b, d, f, e, g, k, i, j, n, m, o, p, l], is_dual)
    } else {
        select_4970([a, c, e, f, b, g, d, h, j, i, k, m, l, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_4989([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_732([b, c, f, e, a, g, h, i, j], is_dual)
    } else {
        select_2760([b, c, a, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_4990([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_560([b, c, a, d, e, g, h, f, i, k, j], is_dual)
    } else {
        select_172([c, f, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_4988([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4989([a, c, j, b, k, f, g, i, h, l], is_dual)
    } else {
        select_4990([f, a, c, d, e, h, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_4991([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_349([a, b, c, h, d, g, f, i, j], is_dual)
    } else {
        select_350([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 3
fn select_4987([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4988([a, c, d, b, h, f, g, i, j, k, m, l], is_dual)
    } else {
        select_4991([j, a, b, e, f, i, h, l, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_4994([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_408([b, h, c, f, a, g, i, j], is_dual)
    } else {
        select_221([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_4993([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2660([b, c, e, f, a, i, g, h, j], is_dual)
    } else {
        select_4994([a, e, d, b, c, h, i, j, g, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_4997([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_215([e, f, c, d, h, g], is_dual)
    } else {
        select_215([e, g, a, b, i, f], is_dual)
    }
}
/// n = 12, i = 3
fn select_4996([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2185([a, e, f, b, i, g, j], is_dual)
    } else {
        select_4997([b, g, c, d, a, k, h, l, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_4998([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_300([b, c, e, g, i, l], is_dual)
    } else {
        select_2149([a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_4995([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_4996([a, d, b, c, f, g, i, j, h, l, k, m], is_dual)
    } else {
        select_4998([d, b, c, f, a, g, e, i, h, k, j, m, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_4992([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_4993([a, c, d, e, k, g, j, m, h, l, n], is_dual)
    } else {
        select_4995([a, c, d, b, g, f, h, j, i, l, k, n, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_4986([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_4987([b, d, e, c, f, h, k, i, j, a, l, m, n], is_dual)
    } else {
        select_4992([b, d, a, c, e, f, g, h, i, j, l, k, n, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_5003([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_65([a, b, d, i, k], is_dual)
    } else {
        select_215([c, e, f, h, g, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5002([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2661([b, c, i, e, f, g, k, j], is_dual)
    } else {
        select_5003([b, c, a, f, d, g, h, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_5004([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_300([b, g, a, e, h, f], is_dual)
    } else {
        select_304([b, f, c, d, a, i, g], is_dual)
    }
}
/// n = 13, i = 3
fn select_5001([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5002([c, a, b, e, d, h, g, i, k, j, m, l], is_dual)
    } else {
        select_5004([g, c, f, j, e, i, h, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_5005([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_579([f, i, b, a, e, k, h, j], is_dual)
    } else {
        select_3739([a, c, d, b, h, f, g, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_5000([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_5001([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5005([g, c, b, e, f, h, j, i, a, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_5007([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_349([a, b, c, j, d, g, k, i, l], is_dual)
    } else {
        select_1177([a, b, f, i, e, h, l, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5008([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2313([a, b, d, c, g, f, i, h, j], is_dual)
    } else {
        select_579([a, f, c, b, e, h, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_5006([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_5007([a, b, d, f, e, c, h, g, j, i, k, l], is_dual)
    } else {
        select_5008([a, b, d, i, f, c, h, k, j, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_4999([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_5000([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_5006([a, b, h, c, d, f, g, i, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_4985([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_4986([a, b, d, e, f, g, c, i, j, k, h, l, m, n], is_dual)
    } else {
        select_4999([a, b, e, f, h, g, i, c, j, k, m, l, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_5012([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2859([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2273([a, c, i, g, b, h, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_5014([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2630([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_3009([h, g, a, f, b, c, e], !is_dual)
    }
}
/// n = 10, i = 3
fn select_5013([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5014([b, c, d, h, a, g, i, j], is_dual)
    } else {
        select_1599([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5011([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5012([b, a, e, c, d, f, g, h, i, k, j], is_dual)
    } else {
        select_5013([a, c, d, b, f, h, g, j, i, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5018([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_255([b, g, d, c, f, h, i], is_dual)
    } else {
        select_4434([a, b, d, e, h, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5017([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3684([b, f, d, a, e, g, h, i, k], is_dual)
    } else {
        select_5018([b, c, a, d, e, g, h, f, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5016([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5017([a, b, c, d, f, g, i, j, h, k, l], is_dual)
    } else {
        select_3445([a, b, d, e, g, f, h, j, i, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_5021([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([e, c, d, h, g], is_dual)
    } else {
        select_163([a, g, b, e, i, f, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_5022([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_255([a, i, e, d, f, g, k], is_dual)
    } else {
        select_553([a, e, b, c, g, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5020([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5021([f, c, d, e, a, g, h, j, i], is_dual)
    } else {
        select_5022([b, d, e, a, c, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_5019([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2167([a, c, g, e, f, d, h, j, i, k], is_dual)
    } else {
        select_5020([a, b, c, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5015([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5016([a, c, d, b, j, g, h, i, l, m, k, n], is_dual)
    } else {
        select_5019([b, d, a, g, e, f, h, i, k, j, m, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5010([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5011([a, c, b, k, d, e, n, h, i, l, m, o], is_dual)
    } else {
        select_5015([a, c, b, d, f, g, i, h, l, j, m, n, k, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_5026([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([b, c, e, d, f, g, h], is_dual)
    } else {
        select_453([a, g, b, c, d, f, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5025([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_414([b, c, d, e, f, i, h, j], is_dual)
    } else {
        select_5026([a, b, c, j, d, g, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_5027([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2593([e, a, b, c, d, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_2593([f, a, b, c, d, g, e, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_5024([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5025([b, c, d, i, f, g, h, a, j, k, l, m], is_dual)
    } else {
        select_5027([a, e, f, g, c, d, b, h, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5031([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_121([i, g, a, e, h, b, d], !is_dual)
    } else {
        select_409([a, c, d, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5032([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1158([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_130([b, g, c, f, a, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5030([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_5031([a, c, g, d, f, b, h, i, j, k], is_dual)
    } else {
        select_5032([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5029([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1445([a, c, d, f, b, g, h, j, k, i], is_dual)
    } else {
        select_5030([a, b, d, e, c, g, i, j, h, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5028([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4135([a, b, c, f, g, h, k, j, l, m, o], is_dual)
    } else {
        select_5029([a, b, c, d, e, l, i, j, m, k, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5023([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_5024([c, d, e, f, h, a, k, i, j, l, m, n, o], is_dual)
    } else {
        select_5028([a, b, c, d, g, e, f, j, i, k, l, n, o, m, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5009([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < m) || (is_dual && a > m) {
        select_5010([b, c, d, e, g, f, j, i, k, m, a, l, n, o, p], is_dual)
    } else {
        select_5023([b, c, d, e, a, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4984([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_4985([a, b, e, f, g, i, h, j, d, k, l, n, m, o], is_dual)
    } else {
        select_5009([a, b, c, e, f, g, d, h, j, k, i, m, n, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4941([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_4942([a, c, b, d, f, e, g, h, j, k, l, m, i, n, o, p], is_dual)
    } else {
        select_4984([a, c, d, e, f, b, g, h, j, i, l, m, k, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4940([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_4941([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4941([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4939([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4940([a, b, c, d, e, f, g, h, i, j, k, m, n, l, o, p], is_dual)
    } else {
        select_4940([a, b, c, d, e, f, g, i, h, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4688([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_4689([a, b, c, e, g, f, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_4939([a, b, c, e, g, d, h, i, j, k, f, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4612([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < o) || (is_dual && k > o) {
        select_4613([a, b, c, d, f, e, g, h, i, j, l, m, n, o, k, p], is_dual)
    } else {
        select_4688([a, b, c, d, f, g, h, i, e, j, l, k, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4611([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_4612([g, h, i, j, d, e, c, f, b, a, l, n, k, m, o, p], is_dual)
    } else {
        select_4612([g, h, i, j, d, f, c, e, b, a, l, m, k, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4610([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_4611([k, j, i, a, g, h, b, c, d, e, n, f, l, m, o, p], is_dual)
    } else {
        select_4611([k, j, i, f, g, h, b, c, d, e, n, a, l, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4609([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_4610([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    } else {
        select_4610([a, b, c, d, e, f, h, i, j, k, l, g, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4608([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_4609([a, b, c, d, e, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_4609([a, b, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4607([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_4608([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_4608([a, b, c, d, e, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 10, i = 4
fn select_5047([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2222([a, d, e, b, c, f, g, j, h], is_dual)
    } else {
        select_4243([b, c, a, d, e, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_5051([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_32([b, d, c, e, f, h], is_dual)
    } else {
        select_34([a, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5050([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_246([a, c, f, g, d, i], is_dual)
    } else {
        select_5051([j, g, i, h, f, a, e, d, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5052([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_346([a, g, b, h, d, f, j], is_dual)
    } else {
        select_390([i, h, g, d, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5049([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5050([c, d, b, a, e, g, h, f, j, i], is_dual)
    } else {
        select_5052([c, a, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5053([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2630([a, b, d, f, e, h, g, j], is_dual)
    } else {
        select_390([d, c, g, e, i, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5048([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5049([b, a, d, c, f, h, g, i, j, e], is_dual)
    } else {
        select_5053([b, d, c, a, e, f, h, i, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5046([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5047([c, a, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_5048([c, d, b, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5057([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2249([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_664([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5056([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_120([b, a, g, e, h, i, f], is_dual)
    } else {
        select_5057([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5055([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_4314([b, a, c, d, g, e, f, h, i, j], is_dual)
    } else {
        select_5056([a, b, c, h, e, g, i, f, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_5059([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_342([a, e, b, i, f, j], is_dual)
    } else {
        select_724([a, c, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5058([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1121([a, c, b, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_5059([a, g, c, d, f, i, h, e, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5054([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5055([a, b, g, d, e, i, f, h, k, j, l], is_dual)
    } else {
        select_5058([b, c, a, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5045([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_5046([i, c, a, b, j, e, g, f, l, k], is_dual)
    } else {
        select_5054([a, c, d, b, e, g, h, f, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_5063([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_64([b, d, h, e, f, g, j, i], is_dual)
    } else {
        select_637([a, b, f, c, i, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5062([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2812([b, a, c, d, h, f, g, j, k, l, i], is_dual)
    } else {
        select_5063([b, c, e, d, a, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5065([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2498([a, d, c, f, e, h, i, g, j, k], is_dual)
    } else {
        select_3455([a, b, g, d, e, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5067([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_98([a, b, c, i, f, k, h, l], is_dual)
    } else {
        select_106([b, d, e, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5066([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2504([c, h, e, d, a, g, j, i], is_dual)
    } else {
        select_5067([b, c, a, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5064([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5065([a, b, c, e, f, i, g, h, k, j, l, m], is_dual)
    } else {
        select_5066([g, a, b, d, e, f, h, j, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5061([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_5062([b, a, c, d, j, g, h, f, l, k, m, n], is_dual)
    } else {
        select_5064([b, c, d, f, e, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_5070([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_724([a, d, h, e, g, f, j, i, l], is_dual)
    } else {
        select_770([a, b, c, i, g, k, h, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5069([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5070([b, a, f, d, e, g, h, i, j, l, m, k], is_dual)
    } else {
        select_798([b, a, j, c, k, f, m, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5072([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3940([a, b, c, f, e, h, i, g], is_dual)
    } else {
        select_799([a, e, b, d, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5074([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_503([b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_115([a, h, c, e, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5073([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5074([a, b, f, c, i, h, k, j, g, l], is_dual)
    } else {
        select_4108([b, d, a, e, h, g, f, j, i, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5071([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5072([b, a, j, c, k, f, m, h, i], is_dual)
    } else {
        select_5073([a, b, f, e, d, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5068([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5069([a, c, b, d, e, g, h, j, f, k, l, i, m], is_dual)
    } else {
        select_5071([c, b, a, e, d, f, h, i, g, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5060([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < f) || (is_dual && m > f) {
        select_5061([c, b, d, a, e, h, g, f, i, j, l, k, m, n], is_dual)
    } else {
        select_5068([b, c, a, d, i, g, h, j, k, l, m, n, f], is_dual)
    }
}
/// n = 14, i = 4
fn select_5044([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < m) || (is_dual && a > m) {
        select_5045([b, d, c, j, f, h, g, m, n, a, l, k], is_dual)
    } else {
        select_5060([b, d, c, a, e, f, h, g, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5043([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5044([a, c, b, d, e, h, g, i, j, k, f, l, m, n], is_dual)
    } else {
        select_5044([b, c, a, d, e, h, f, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5042([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5043([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5043([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5041([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5042([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5042([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5040([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_5041([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5041([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5080([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3127([a, b, c, g, d, e, f, h, i, j, k, m, l, n], is_dual)
    } else {
        select_410([a, b, d, e, f, c, j, h, l, k, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_5084([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3338([a, c, d, b, g, h, f, j], is_dual)
    } else {
        select_1933([c, b, e, a, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_5085([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1383([f, h, i, e, b, a, g, c], !is_dual)
    } else {
        select_2022([c, b, d, a, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_5083([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5084([c, a, b, e, d, g, f, h, j, i], is_dual)
    } else {
        select_5085([f, b, c, e, a, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5082([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1384([a, c, b, e, f, h, g, i, k, l, j], is_dual)
    } else {
        select_5083([a, b, c, i, d, j, h, k, g, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5088([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_934([a, e, c, d, f, g, i, j], is_dual)
    } else {
        select_458([a, g, b, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5087([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5088([a, e, c, d, f, h, g, i, j, k], is_dual)
    } else {
        select_242([a, i, j, b, e, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5090([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_934([e, f, c, d, h, g, j, k], is_dual)
    } else {
        select_934([e, g, a, b, i, f, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5089([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_520([a, b, i, e, f, j, g, k], is_dual)
    } else {
        select_5090([b, g, c, d, a, k, h, l, j, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5086([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_5087([a, g, c, d, j, b, h, l, i, k, m], is_dual)
    } else {
        select_5089([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5081([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5082([a, c, b, i, e, f, l, g, j, k, n, m], is_dual)
    } else {
        select_5086([a, c, e, f, g, d, h, j, k, i, m, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5079([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_5080([a, c, d, b, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5081([a, c, d, g, e, f, h, i, k, j, b, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_5093([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_447([a, h, b, c, g, j, i], is_dual)
    } else {
        select_1134([a, d, e, b, c, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5092([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1126([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5093([a, c, d, g, f, j, h, b, i, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5095([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_447([a, f, c, d, b, g, h], is_dual)
    } else {
        select_1428([a, b, e, c, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_5094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1281([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_5095([a, c, d, e, g, b, i, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5091([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_5092([a, b, d, e, f, c, h, g, i, j, l, k], is_dual)
    } else {
        select_5094([a, b, c, d, e, j, k, i, g, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5078([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < c) || (is_dual && l > c) {
        select_5079([a, b, d, c, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5091([a, b, d, e, f, i, h, j, k, l, c, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_5100([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_579([a, b, c, e, f, g, h, i], is_dual)
    } else {
        select_4513([a, b, d, c, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5099([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5100([a, b, c, e, d, f, h, i, g, j], is_dual)
    } else {
        select_5100([a, b, d, e, c, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5101([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3328([a, b, c, e, d, h, g, i, f, j], is_dual)
    } else {
        select_3328([a, b, d, e, c, h, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5098([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_5099([a, b, e, f, d, c, g, h, i, j], is_dual)
    } else {
        select_5101([a, b, e, f, c, g, h, d, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_5102([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3719([a, b, c, e, d, h, g, i, f], is_dual)
    } else {
        select_3719([a, b, d, e, c, h, f, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_5097([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_5098([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_5102([a, b, e, f, c, h, i, g, d], is_dual)
    }
}
/// n = 7, i = 3
fn select_5107([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_671([b, c, d, a, e, f, g], is_dual)
    } else {
        select_627([e, f, g, b, c, d, a], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5106([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5107([a, b, c, g, h, f, i], is_dual)
    } else {
        select_351([a, b, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5105([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5106([a, b, c, d, h, i, j, g, k], is_dual)
    } else {
        select_2174([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5109([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_4243([a, b, c, d, g, f, i, j, h], is_dual)
    } else {
        select_866([c, d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5111([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_997([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_65([b, f, c, d, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_5110([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3060([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_5111([a, b, c, g, f, h, i, j, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_5108([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5109([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_5110([b, c, d, e, g, f, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5104([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5105([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_5108([a, b, c, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5116([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_632([b, c, e, f, g, h], is_dual)
    } else {
        select_632([a, c, d, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5115([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_4867([f, c, b, e, a, g, h, i], is_dual)
    } else {
        select_5116([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5114([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5115([a, d, c, b, f, g, i, h, j], is_dual)
    } else {
        select_5115([a, d, b, c, e, h, i, g, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_5118([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_340([a, b, d, f, e, h, g], is_dual)
    } else {
        select_344([a, g, h, f, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5117([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_284([a, c, d, f, e, h, g], is_dual)
    } else {
        select_5118([a, b, c, d, g, h, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5113([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5114([a, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_5117([a, c, d, b, i, h, g, k, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5121([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_991([a, b, e, d, g, i, f, h], is_dual)
    } else {
        select_3303([a, b, c, f, i, h, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_5120([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5121([a, b, c, g, f, h, i, e, j], is_dual)
    } else {
        select_545([a, c, b, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5123([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_944([b, c, h, f, g, a, i, j], is_dual)
    } else {
        select_277([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5122([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_636([b, c, d, f, a, g, h, i, j], is_dual)
    } else {
        select_5123([a, b, e, c, d, h, g, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5119([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5120([b, c, e, d, h, g, i, a, j, k], is_dual)
    } else {
        select_5122([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5112([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5113([a, b, d, c, e, f, g, i, j, h, k], is_dual)
    } else {
        select_5119([a, b, d, e, c, f, h, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5103([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_5104([a, c, e, b, f, g, h, d, i, j, k], is_dual)
    } else {
        select_5112([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5096([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_5097([a, b, c, d, f, i, h, j, e, k], is_dual)
    } else {
        select_5103([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5077([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5078([a, b, c, d, e, f, g, h, i, k, j, l, n, m], is_dual)
    } else {
        select_5096([a, b, d, e, f, c, k, h, l, m, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5131([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_228([a, b, c, e, f, h, i, j], is_dual)
    } else {
        select_176([c, b, d, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5132([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_228([a, c, d, e, f, h, g, j], is_dual)
    } else {
        select_688([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5130([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5131([a, b, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_5132([a, b, c, g, e, i, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_228([a, b, d, e, g, h, j, k], is_dual)
    } else {
        select_5051([a, b, c, e, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5134([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_388([b, h, c, d, g, f, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5129([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5130([a, d, b, c, f, g, h, k, l, j, m], is_dual)
    } else {
        select_5133([a, c, d, e, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_5137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_215([b, c, d, e, g, h], is_dual)
    } else {
        select_1228([a, b, c, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5136([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5137([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1021([j, k, g, i, a, f, h, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5135([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5136([a, b, g, d, e, f, i, h, j, l, k], is_dual)
    } else {
        select_3691([a, b, c, h, f, k, j, g, l, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5128([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5129([b, c, a, d, e, g, h, f, i, k, l, j, m], is_dual)
    } else {
        select_5135([a, b, c, d, i, g, h, j, k, l, f, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5127([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5128([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5128([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_5142([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_121([a, e, c, g, d, h, f], is_dual)
    } else {
        select_29([c, b, f, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_5141([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1000([b, a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_5142([e, c, g, a, f, d, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5144([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_249([a, b, g, d, e, h, j, k], is_dual)
    } else {
        select_535([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5143([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5144([b, c, d, a, e, g, h, f, i, j, k], is_dual)
    } else {
        select_3565([b, f, d, a, e, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5140([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5141([a, c, d, e, g, h, j, i, k], is_dual)
    } else {
        select_5143([e, c, b, d, g, f, h, i, j, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5146([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_340([e, i, h, a, f, b, g], !is_dual)
    } else {
        select_1033([a, c, d, f, e, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_5145([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5146([a, b, c, g, e, f, h, j, k], is_dual)
    } else {
        select_3657([a, c, d, f, e, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5139([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_5140([a, c, b, d, e, g, f, h, i, j, l, k], is_dual)
    } else {
        select_5145([a, c, h, b, i, g, f, k, l, j, e], is_dual)
    }
}
/// n = 12, i = 4
fn select_5138([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5139([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5139([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5126([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_5127([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5138([a, b, e, d, i, h, g, j, c, k, m, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5150([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3445([a, b, c, k, e, g, h, m, j, n], is_dual)
    } else {
        select_3445([a, b, d, j, f, g, i, l, k, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5149([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_5007([a, b, d, f, e, g, i, h, k, l, j, m], is_dual)
    } else {
        select_5150([a, c, b, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5154([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1692([b, c, a, e, d, f, h, i, g], is_dual)
    } else {
        select_1002([b, a, e, d, h, i, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_5155([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_623([a, b, g, h], is_dual)
    } else {
        select_739([c, d, a, b, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5153([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_5154([b, d, c, e, f, a, g, h, i], is_dual)
    } else {
        select_5155([a, b, d, c, f, e, h, i, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_5152([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5153([a, b, j, d, f, g, l, i, m], is_dual)
    } else {
        select_3445([a, b, c, i, e, f, h, k, j, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5157([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3284([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1588([a, e, c, d, f, g, i, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_5156([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_349([a, f, b, i, e, h, k, j, m], is_dual)
    } else {
        select_5157([a, c, j, d, f, g, l, m, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5151([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5152([a, b, c, d, e, g, f, h, i, k, j, l, m], is_dual)
    } else {
        select_5156([a, c, d, b, e, f, g, h, j, k, i, m, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5148([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_5149([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5151([a, c, d, h, f, j, g, i, b, l, k, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5162([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1462([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_754([a, c, e, b, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5163([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_205([a, c, d, g, e, f, h, j, k], is_dual)
    } else {
        select_141([a, f, b, i, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5161([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5162([a, g, c, d, f, h, k, i, j], is_dual)
    } else {
        select_5163([a, c, f, b, i, e, h, j, g, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_5165([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_27([a, c, h, d, e, i, g, k], is_dual)
    } else {
        select_739([b, g, d, e, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5164([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_301([c, a, b, g, i, j, h], is_dual)
    } else {
        select_5165([c, d, e, a, b, f, i, g, h, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5160([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5161([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_5164([a, c, b, e, d, g, i, f, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5166([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1427([a, b, i, d, h, g, k, j, m], is_dual)
    } else {
        select_1134([a, c, e, b, g, f, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5159([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5160([a, b, c, h, d, f, g, j, i, l, m, k], is_dual)
    } else {
        select_5166([a, b, d, e, c, g, h, f, i, j, k, m, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5168([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2078([a, b, f, d, e, g, i, h, j, k], is_dual)
    } else {
        select_583([a, b, c, h, e, j, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5170([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_340([a, d, b, g, e, h, i], is_dual)
    } else {
        select_1257([a, e, c, f, d, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5170([e, c, g, i, f, h, a, j, k], is_dual)
    } else {
        select_3743([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5167([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5168([a, e, b, d, h, f, g, i, j, l, k], is_dual)
    } else {
        select_5169([a, g, c, b, i, e, f, l, k, j, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_5158([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_5159([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_5167([a, c, h, d, j, f, g, b, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5147([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_5148([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5158([a, b, d, e, i, g, h, k, j, c, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5125([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_5126([a, b, c, e, d, i, h, g, k, l, m, n, j], is_dual)
    } else {
        select_5147([a, b, c, e, d, f, h, g, i, j, k, m, n, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5176([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1462([a, d, b, c, f, e, h, g, i], is_dual)
    } else {
        select_1027([a, d, b, c, f, g, h, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5176([b, c, e, d, h, g, f, j, i], is_dual)
    } else {
        select_3693([a, b, f, d, i, e, g, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5178([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_121([a, e, c, g, d, h, i], is_dual)
    } else {
        select_141([c, d, b, f, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5179([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_346([a, d, c, f, e, i, g], is_dual)
    } else {
        select_390([f, h, d, a, b, g, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5177([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_5178([i, j, e, f, h, d, g, a, c], !is_dual)
    } else {
        select_5179([d, i, j, e, h, f, g, a, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5174([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5175([c, b, d, a, g, e, f, j, i, h], is_dual)
    } else {
        select_5177([c, f, d, h, a, e, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1178([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_593([h, j, k, e, a, f, b, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_5182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2309([a, b, c, g, e, h, i, f, j], is_dual)
    } else {
        select_4316([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5180([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_5181([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_5182([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5173([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5174([a, b, d, c, f, g, h, i, e, j, k], is_dual)
    } else {
        select_5180([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_5186([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_65([a, d, c, e, g], is_dual)
    } else {
        select_998([b, a, c, d, e, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5185([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5186([a, b, e, h, d, f, i, g], is_dual)
    } else {
        select_392([f, b, c, g, d, e, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5187([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2518([b, c, f, d, e, g, h, j, i], is_dual)
    } else {
        select_204([a, c, b, g, f, i, j, k, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5184([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5185([b, d, i, f, a, g, h, k, j, l], is_dual)
    } else {
        select_5187([b, c, d, a, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5183([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5180([a, b, c, d, h, g, j, i, f, k, l], is_dual)
    } else {
        select_5184([a, b, d, c, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5172([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5173([g, b, c, d, a, f, h, j, i, k, l], is_dual)
    } else {
        select_5183([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_5191([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([a, c, e, b, f, g, h], is_dual)
    } else {
        select_350([a, b, d, c, g, f, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_5190([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5191([a, b, f, e, c, h, g, j, i], is_dual)
    } else {
        select_1822([a, b, g, e, d, i, h, f, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_5189([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3719([a, g, b, e, c, h, i, j, f], is_dual)
    } else {
        select_5190([a, c, e, d, b, g, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5188([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5189([a, c, d, e, b, h, f, g, j, i], is_dual)
    } else {
        select_700([a, f, b, c, d, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5171([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5172([a, d, c, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_5188([a, d, b, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5124([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < g) || (is_dual && n > g) {
        select_5125([a, b, c, e, d, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_5171([a, b, d, e, c, k, l, h, j, n, g, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5076([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_5077([a, b, d, e, c, f, g, h, j, i, k, l, n, m], is_dual)
    } else {
        select_5124([a, b, d, e, f, g, h, i, j, c, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5199([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_300([a, b, d, e, g, f], is_dual)
    } else {
        select_998([c, a, b, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5198([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1279([g, a, b, d, e, f, h, i, j], is_dual)
    } else {
        select_5199([a, b, c, i, g, h, f, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_5202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_62([b, e, c, d, g, f, h], is_dual)
    } else {
        select_122([a, h, e, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5201([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5202([b, g, c, d, f, h, e, i, j, l], is_dual)
    } else {
        select_88([f, a, e, c, d, h, g, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5200([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5201([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_5201([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5197([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5198([c, d, e, a, b, f, g, h, i, j, k], is_dual)
    } else {
        select_5200([a, b, e, c, d, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_5206([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([a, c, d, f, g], is_dual)
    } else {
        select_141([a, g, b, h, e, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5205([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_814([a, b, c, d, h, i, k], is_dual)
    } else {
        select_5206([c, e, a, b, f, i, g, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5204([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5205([b, c, a, i, d, g, k, j, h, l, m], is_dual)
    } else {
        select_1599([b, c, a, e, f, h, j, i, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_5208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_300([b, c, a, e, g, h], is_dual)
    } else {
        select_5206([a, d, b, c, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5207([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1279([a, b, c, e, f, h, j, i, k], is_dual)
    } else {
        select_5208([a, b, c, d, i, g, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5203([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_5204([c, a, b, f, d, e, g, i, j, k, h, l, m], is_dual)
    } else {
        select_5207([c, d, e, f, a, b, g, i, h, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5196([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_5197([b, c, d, e, g, i, j, a, h, k, l, m], is_dual)
    } else {
        select_5203([b, c, a, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_5211([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3679([c, d, b, e, f, g, a, h, i, j], is_dual)
    } else {
        select_1599([c, d, a, e, f, g, b, h, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_5213([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_120([a, c, f, e, b, h, g], is_dual)
    } else {
        select_1198([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_5215([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_335([b, c, e, f, g], is_dual)
    } else {
        select_121([h, g, e, d, f, a, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5214([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5215([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_5215([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_5212([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_5213([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_5214([b, c, a, e, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5210([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_5211([g, c, e, f, a, b, d, h, i, j], is_dual)
    } else {
        select_5212([g, e, f, c, h, d, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5209([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_715([a, d, e, f, g, b, c, h, i], is_dual)
    } else {
        select_5210([f, g, b, c, d, e, a, i, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5195([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_5196([f, a, b, c, d, e, g, h, j, k, i, m, l], is_dual)
    } else {
        select_5209([f, a, b, c, d, j, k, h, l, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5220([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1298([a, b, e, h, f, j, g, i], is_dual)
    } else {
        select_770([a, c, g, d, i, f, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_5222([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_969([a, c, b, d, e, f, h, g], is_dual)
    } else {
        select_262([a, c, f, e, d, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_5221([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_5222([b, h, c, e, g, j, f, k], is_dual)
    } else {
        select_770([e, a, d, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5219([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5220([e, b, a, f, d, i, h, g, k, j], is_dual)
    } else {
        select_5221([b, c, g, d, e, f, j, h, i, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5223([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1346([a, f, d, h, i, e, j], is_dual)
    } else {
        select_184([d, b, c, e, g, f, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_5218([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5219([b, a, f, d, g, h, e, i, l, k, j, m], is_dual)
    } else {
        select_5223([b, c, j, e, k, f, m, g, h, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5225([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_284([f, a, b, e, d, g, h], is_dual)
    } else {
        select_922([a, c, b, g, f, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5227([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_121([b, c, g, f, e, i, h], is_dual)
    } else {
        select_262([a, c, d, h, g, j, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_5226([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_373([d, e, b, c, f, h, g, j, i], is_dual)
    } else {
        select_5227([f, a, c, g, e, i, d, h, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5224([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_5225([h, a, c, i, d, f, j, e, k], is_dual)
    } else {
        select_5226([c, b, e, d, f, g, h, k, i, l, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5217([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5218([b, c, d, a, f, g, i, j, e, h, k, l, m], is_dual)
    } else {
        select_5224([c, d, e, h, f, a, g, i, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_5232([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1093([a, b, c, d, e, f, g], is_dual)
    } else {
        select_269([a, e, f, h, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5231([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5232([a, c, d, e, g, h, f, j], is_dual)
    } else {
        select_680([a, i, h, j, g, e, b, c, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5230([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1095([a, e, d, h, i, f, j, g], is_dual)
    } else {
        select_5231([a, b, c, f, e, g, j, h, k, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5234([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_934([a, f, d, e, b, g, i, j], is_dual)
    } else {
        select_271([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5233([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2379([b, c, d, a, e, g, f, h, i], is_dual)
    } else {
        select_5234([f, a, b, c, e, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5229([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5230([e, a, j, c, f, g, h, l, m, i, k], is_dual)
    } else {
        select_5233([h, a, b, d, i, e, f, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5237([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_71([b, a, c, d, f, e, g, h], is_dual)
    } else {
        select_32([f, i, e, a, b, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_5236([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5237([a, b, d, f, h, e, g, i, j], is_dual)
    } else {
        select_4221([a, b, c, g, e, i, h, f, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5240([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1346([a, c, d, e, f, g, i], is_dual)
    } else {
        select_123([h, i, d, f, a, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5241([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1411([a, b, c, e, f, h, g, i], is_dual)
    } else {
        select_731([b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5239([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_5240([k, i, h, j, d, e, a, g, b], !is_dual)
    } else {
        select_5241([e, a, d, c, f, i, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5243([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_547([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_141([a, f, j, b, i, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5242([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1381([a, d, b, j, e, k, g, i], is_dual)
    } else {
        select_5243([g, a, d, c, f, i, h, l, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5238([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_5239([a, f, d, h, j, g, i, k, e, l, m], is_dual)
    } else {
        select_5242([e, b, d, c, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5235([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5236([h, b, i, d, e, a, g, k, j, l], is_dual)
    } else {
        select_5238([b, c, a, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5228([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5229([c, a, d, b, e, f, g, j, k, i, l, h, m], is_dual)
    } else {
        select_5235([a, b, d, c, e, g, f, j, k, h, l, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5216([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_5217([b, d, a, e, f, c, g, h, j, k, i, l, m], is_dual)
    } else {
        select_5228([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5194([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5195([a, c, d, e, f, b, h, g, i, j, k, l, m], is_dual)
    } else {
        select_5216([b, d, e, c, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5247([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3143([a, b, c, f, g, h, k, i, l, m], is_dual)
    } else {
        select_3281([f, b, c, d, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5246([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1019([a, b, c, d, j, f, g, k, i, m], is_dual)
    } else {
        select_5247([a, b, e, c, d, f, g, h, j, i, l, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5245([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_5246([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_1920([a, b, c, d, j, f, g, k, l, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5244([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5245([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5245([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5193([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_5194([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_5244([a, b, c, d, e, f, g, h, j, k, l, i, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_5254([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_162([e, c, a, d, f, h, g, i], is_dual)
    } else {
        select_243([f, a, b, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5253([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5254([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_706([e, g, c, d, a, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5255([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_579([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_5234([a, b, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5252([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_5253([a, c, f, d, e, i, g, h, j, k], is_dual)
    } else {
        select_5255([e, a, b, g, d, f, h, i, k, l, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5258([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1563([i, f, j, g, a, h, b, e, d], !is_dual)
    } else {
        select_3940([b, a, e, c, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5257([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5258([b, c, e, d, f, a, g, h, i, j], is_dual)
    } else {
        select_3036([a, d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5259([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1427([a, b, c, e, f, g, h, j, i], is_dual)
    } else {
        select_3329([a, b, d, c, g, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5256([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5257([a, b, c, d, g, f, i, j, h, k], is_dual)
    } else {
        select_5259([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5251([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5252([a, c, d, b, e, g, h, f, i, k, j, l], is_dual)
    } else {
        select_5256([e, a, b, c, h, g, j, i, l, f, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5263([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2630([a, b, c, h, f, i, g, k], is_dual)
    } else {
        select_4580([c, d, e, g, f, j, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5264([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1794([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1794([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5262([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5263([c, e, d, a, b, f, i, h, j, k, g], is_dual)
    } else {
        select_5264([a, b, c, e, f, g, i, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5267([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_202([a, b, c, f, e, g, i, j], is_dual)
    } else {
        select_141([a, e, d, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5266([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1984([a, c, f, e, b, h, i, g, j], is_dual)
    } else {
        select_5267([a, c, d, b, e, g, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5265([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_729([a, c, e, d, f, h, g, i, k, j], is_dual)
    } else {
        select_5266([a, f, b, g, e, j, i, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5261([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5262([b, h, a, c, f, g, i, j, e, l, k], is_dual)
    } else {
        select_5265([b, c, d, a, g, h, e, i, j, f, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_5270([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_344([a, b, c, f, h, e], is_dual)
    } else {
        select_344([b, a, d, e, g, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_5271([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1122([a, g, c, d, f, h, e, j, i, l], is_dual)
    } else {
        select_5144([a, b, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5269([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_5270([a, i, f, b, k, g, e, l], is_dual)
    } else {
        select_5271([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_190([c, d, g, e, f, i, j], is_dual)
    } else {
        select_29([a, b, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5274([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_547([a, b, d, h, f, i, g, k], is_dual)
    } else {
        select_5275([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5273([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_552([b, c, e, d, g, h, f, i, k, j], is_dual)
    } else {
        select_5274([a, f, d, c, h, g, e, j, k, i, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5277([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([b, c, d, e, f, h, g], is_dual)
    } else {
        select_269([a, b, c, g, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5278([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2011([b, c, d, a, f, e, h, g, i], is_dual)
    } else {
        select_503([h, i, j, e, a, f, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5276([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5277([b, c, d, a, f, e, g, i, h], is_dual)
    } else {
        select_5278([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5272([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5273([a, c, d, b, e, g, h, f, k, j, i, l], is_dual)
    } else {
        select_5276([a, c, b, i, e, g, k, f, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5268([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5269([a, b, c, d, e, f, g, h, j, k, l, i], is_dual)
    } else {
        select_5272([a, c, d, b, e, f, h, g, i, l, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5261([b, a, d, c, g, h, i, e, j, f, l, k], is_dual)
    } else {
        select_5268([b, d, c, a, g, h, i, f, j, e, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5250([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_5251([a, b, d, c, f, h, i, g, k, j, l, e], is_dual)
    } else {
        select_5260([a, b, c, d, f, e, h, g, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5249([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5250([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5250([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_5283([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_447([a, b, c, d, e, f, g], is_dual)
    } else {
        select_644([a, b, d, f, g, c, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5282([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1655([a, f, b, d, j, k, g, h, i], is_dual)
    } else {
        select_5283([a, h, i, k, j, f, e, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_5285([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2292([e, b, f, d, a, g, h, i], is_dual)
    } else {
        select_798([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5287([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_458([a, i, c, j, e, g, k], is_dual)
    } else {
        select_243([a, b, g, d, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5289([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_549([b, a, c, e, d, f, g, h], is_dual)
    } else {
        select_209([a, b, f, e, h, g, d, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_5290([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_549([b, a, c, e, d, f, g, h], is_dual)
    } else {
        select_375([a, b, f, e, h, g, d], is_dual)
    }
}
/// n = 9, i = 3
fn select_5288([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5289([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_5290([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5286([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5287([a, b, c, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_5288([a, b, d, e, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5284([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_5285([a, b, h, e, i, c, g, j, k], is_dual)
    } else {
        select_5286([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5281([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_5282([a, c, d, g, f, h, j, b, k, i, l], is_dual)
    } else {
        select_5284([a, b, c, d, e, f, g, h, i, l, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5294([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_254([b, c, d, a, f, e, g, h], is_dual)
    } else {
        select_3882([a, d, b, c, f, g, h, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5293([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5294([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_5294([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5292([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2871([a, b, e, f, c, d, g, h, i], is_dual)
    } else {
        select_5293([a, b, e, f, d, c, g, h, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_5296([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_718([a, b, d, f, e, g], is_dual)
    } else {
        select_1647([a, g, f, b, c], !is_dual)
    }
}
/// n = 8, i = 2
fn select_5295([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1331([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_5296([a, c, d, f, h, g, b], is_dual)
    }
}
/// n = 10, i = 4
fn select_5291([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_5292([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5295([a, b, e, f, c, g, h, d], is_dual)
    }
}
/// n = 12, i = 4
fn select_5280([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5281([a, b, c, e, d, g, f, i, j, k, l, h], is_dual)
    } else {
        select_5291([a, b, i, c, d, h, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5299([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2077([a, b, c, i, d, f, k, h, l, j], is_dual)
    } else {
        select_4563([a, b, c, h, e, j, g, i, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5300([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2260([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_2260([a, b, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5298([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5299([a, c, b, e, d, g, f, i, h, k, l, j], is_dual)
    } else {
        select_5300([a, c, i, b, d, k, j, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5306([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([f, c, b, e, h, g], is_dual)
    } else {
        select_123([a, c, d, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5305([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1695([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_5306([c, b, a, e, d, g, h, i, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_5307([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1695([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_361([a, b, d, i, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5304([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5305([b, f, c, h, e, a, g, j, i], is_dual)
    } else {
        select_5307([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5308([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3284([a, c, e, d, g, f, i, h, j], is_dual)
    } else {
        select_5232([a, h, b, c, e, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5303([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5304([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_5308([a, c, b, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5310([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1519([a, c, b, d, f, g, e, h, i], is_dual)
    } else {
        select_2309([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5309([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1256([b, c, g, e, f, h, a, i, j], is_dual)
    } else {
        select_5310([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5303([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_5309([a, e, f, d, h, b, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5302([a, b, d, c, e, f, g, h, j, k, i], is_dual)
    } else {
        select_5300([a, b, e, c, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5297([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5298([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_5301([a, c, d, g, h, j, f, b, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5279([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5280([a, b, c, d, e, f, g, i, j, l, k, h], is_dual)
    } else {
        select_5297([a, b, c, d, e, f, g, i, h, j, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5248([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_5249([a, b, c, h, d, j, k, f, g, l, i, m], is_dual)
    } else {
        select_5279([a, b, f, d, e, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5192([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_5193([a, b, d, c, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_5248([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5075([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < d) || (is_dual && m > d) {
        select_5076([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_5192([a, b, c, e, f, j, h, i, k, l, m, d, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5039([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5040([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_5075([a, b, c, d, e, g, h, f, i, j, k, m, n, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5038([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5039([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_5039([a, b, c, d, e, g, f, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5037([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5038([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_5038([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5036([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5037([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_5037([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_5323([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_124([a, b, j, h, k, l], is_dual)
    } else {
        select_325([c, d, e, f, g, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5324([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_325([c, d, e, f, g, i], is_dual)
    } else {
        select_1099([a, j, b, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5322([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5323([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5324([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5321([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5322([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_5322([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5320([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5321([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    } else {
        select_5321([a, b, d, e, f, g, h, i, c, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5319([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_3821([a, b, k, l, m, c, d, e, j], !is_dual)
    } else {
        select_5320([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_5326([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2006([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_2006([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_5325([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_292([a, b, d, e, c, g, h, i, f, j, k, l], is_dual)
    } else {
        select_5326([a, b, d, e, f, g, h, i, c, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5318([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5319([a, b, c, d, e, f, g, h, j, l, m, k, n], is_dual)
    } else {
        select_5325([a, b, d, f, g, h, i, c, e, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_5333([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_335([g, e, c, b, f], !is_dual)
    } else {
        select_4747([a, c, d, b, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5332([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1485([h, g, j, a, i, b, f, d, e], !is_dual)
    } else {
        select_5333([b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5331([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2600([c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_5332([a, b, d, c, j, h, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5334([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_656([h, i, j, f, b, a, c, g], !is_dual)
    } else {
        select_2549([b, c, a, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5330([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5331([b, c, a, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_5334([b, a, c, d, j, i, k, l, m, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_5329([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5330([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_5330([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_5339([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_121([a, b, f, d, g, h, i], is_dual)
    } else {
        select_390([d, a, c, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5338([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1754([f, h, g, i, a, e, d, c], !is_dual)
    } else {
        select_5339([a, c, b, e, g, f, d, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5341([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_547([d, h, i, f, g, e, a, c], !is_dual)
    } else {
        select_32([d, f, i, g, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5340([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2447([h, i, f, a, g, e, d, b], !is_dual)
    } else {
        select_5341([h, i, g, a, f, e, d, c, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5337([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5338([e, g, i, f, h, a, c, b, d], !is_dual)
    } else {
        select_5340([e, i, f, h, g, c, b, a, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5336([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5337([g, e, h, i, b, a, c, f, d], !is_dual)
    } else {
        select_768([a, h, g, i, e, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_267([a, b, d, f, e, h, i, j], is_dual)
    } else {
        select_141([a, b, c, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5344([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_5345([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_124([f, a, d, b, h, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_5348([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_32([e, d, g, f, a, b], !is_dual)
    } else {
        select_45([b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_5347([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_360([f, g, h, a, d, e, c], !is_dual)
    } else {
        select_5348([f, d, i, b, a, g, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5349([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_121([h, f, e, g, d, a, b], !is_dual)
    } else {
        select_121([h, g, d, f, e, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5346([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_5347([b, a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_5349([f, d, i, g, h, a, b, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5343([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5344([a, b, d, c, f, g, e, i, h, j], is_dual)
    } else {
        select_5346([e, b, d, a, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5342([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_5343([a, c, d, e, b, f, h, g, i, j], is_dual)
    } else {
        select_1628([a, c, b, e, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5335([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5336([a, c, d, f, h, i, g, b, j], is_dual)
    } else {
        select_5342([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5328([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_5329([a, b, c, e, d, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_5335([a, b, c, e, j, k, i, l, d, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5327([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5328([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5328([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5317([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < c) || (is_dual && l > c) {
        select_5318([a, b, d, e, f, c, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5327([a, b, d, e, f, g, h, j, k, l, c, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_5356([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_242([i, j, d, h, e, b], !is_dual)
    } else {
        select_362([g, h, i, j, d, f, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5358([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_122([c, b, e, f, d, h], is_dual)
    } else {
        select_262([a, d, c, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5357([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_5358([c, b, f, d, g, h, e, j, i], is_dual)
    } else {
        select_362([i, j, g, h, e, f, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5355([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5356([c, b, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_5357([c, a, d, b, e, f, i, j, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5360([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_120([g, f, d, a, h, c, e], !is_dual)
    } else {
        select_1076([a, b, c, e, d, f, g, i, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_5359([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3679([b, c, a, e, f, g, i, j, k, l], is_dual)
    } else {
        select_5360([k, m, i, h, l, a, b, c, d], !is_dual)
    }
}
/// n = 13, i = 4
fn select_5354([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5355([b, d, c, j, h, k, i, l, a, m], is_dual)
    } else {
        select_5359([b, a, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5363([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3303([b, a, d, e, h, g, f, i], is_dual)
    } else {
        select_1076([h, j, g, i, e, a, b, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5362([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5360([b, f, c, e, g, i, a, j, h], is_dual)
    } else {
        select_5363([b, a, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5361([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5362([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_5362([a, b, c, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_5353([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_5354([a, c, b, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_5361([a, c, d, j, h, k, b, l, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5352([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5353([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5353([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_5369([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_346([d, g, h, e, f, a, c], !is_dual)
    } else {
        select_346([e, g, h, d, f, b, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5368([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5369([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_163([c, d, a, e, f, b, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_5367([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5368([a, c, d, b, f, e, h, g], is_dual)
    } else {
        select_2392([a, f, h, e, i, g, b, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5370([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_5368([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_115([a, e, g, c, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_5366([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5367([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_5370([a, d, b, e, f, c, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_5374([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_53([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_53([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_5373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5374([a, b, c, d, e, f, h, i, j], is_dual)
    } else {
        select_5374([a, b, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_5372([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5373([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2027([b, c, d, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5376([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_325([c, d, e, f, g, h], is_dual)
    } else {
        select_829([a, j, k, l, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5378([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_137([b, c, d, e, g], is_dual)
    } else {
        select_632([f, i, j, k, a, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5377([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_5378([a, b, c, d, e, g, h, i, j, k, l], is_dual)
    } else {
        select_5378([a, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5375([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5376([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5377([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5371([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5372([a, b, d, e, f, g, h, c, i, j], is_dual)
    } else {
        select_5375([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5365([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5366([a, b, c, d, j, k, i, l, m], is_dual)
    } else {
        select_5371([a, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5364([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_4452([a, b, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_5365([a, b, c, d, e, f, g, j, i, l, m, n, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5351([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < l) || (is_dual && c > l) {
        select_5352([a, b, d, e, f, g, j, i, k, l, c, m, n], is_dual)
    } else {
        select_5364([a, b, d, e, c, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5380([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1262([a, b, c, d, f, j, g, i, k, l, m, n], is_dual)
    } else {
        select_3279([a, b, g, c, i, e, h, j, l, m, k, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5385([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_65([a, f, c, g, e], is_dual)
    } else {
        select_503([a, b, e, d, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_5384([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5385([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1985([b, e, d, h, f, g, a, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5386([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_300([a, b, d, g, f, h], is_dual)
    } else {
        select_5206([a, c, b, f, e, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_5384([a, f, c, h, e, b, j, g, i], is_dual)
    } else {
        select_5386([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5388([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2828([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_2828([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_5387([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5388([a, b, j, c, k, g, l, h, i], is_dual)
    } else {
        select_835([a, b, h, d, e, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_5382([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_5383([a, b, d, i, g, c, h, k, j, l], is_dual)
    } else {
        select_5387([a, b, d, c, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_5381([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5382([a, b, c, d, e, i, g, j, h, k, l, m], is_dual)
    } else {
        select_5382([a, b, c, d, f, h, g, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5379([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_5380([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5381([a, b, d, f, c, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5350([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_5351([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5379([a, b, c, f, g, e, h, i, j, k, d, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5316([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_5317([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5350([a, b, c, e, f, g, h, i, j, k, d, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5394([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_4967([a, b, c, d, e, f, i, h, j, l, k, m, n], is_dual)
    } else {
        select_3768([c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5393([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5394([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_5394([b, a, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5392([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5393([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_5393([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5391([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5392([a, b, c, e, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_5392([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_5398([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_4818([a, b, c, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_2086([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5400([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1670([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1670([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5399([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5400([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_5400([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5397([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_5398([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5399([a, b, i, d, c, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5396([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1261([a, b, c, d, e, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5397([a, b, c, f, d, e, i, h, k, l, j, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5406([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_739([d, c, a, b, e, f, g, h], is_dual)
    } else {
        select_115([a, g, b, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5405([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3582([e, c, d, a, f, g, h, i, j], is_dual)
    } else {
        select_5406([a, b, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5407([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_934([a, c, d, e, g, f, h, i], is_dual)
    } else {
        select_5232([a, c, b, f, g, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5404([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5405([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_5407([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5403([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_5404([a, b, c, j, d, i, h, k, l, m], is_dual)
    } else {
        select_2084([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5402([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_634([a, b, d, e, g, c, i, h, j, k, l, m, n], is_dual)
    } else {
        select_5403([a, b, c, f, d, e, j, h, i, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5401([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5402([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_5402([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5395([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_5396([a, b, c, e, f, i, h, k, j, d, l, m, n], is_dual)
    } else {
        select_5401([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5390([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_5391([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5395([a, b, c, d, g, h, f, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_5413([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_286([b, c, a, d, e, f], is_dual)
    } else {
        select_129([a, g, h, b, c, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5412([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2158([a, b, g, h, c, d, f], !is_dual)
    } else {
        select_5413([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_5411([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_47([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_5412([a, b, c, d, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5411([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    } else {
        select_5411([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_5409([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_1246([a, b, c, d, k, e, i, l], is_dual)
    } else {
        select_5410([a, b, c, d, i, f, g, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5418([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1706([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_3339([a, c, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_5420([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_360([d, b, c, e, f, g, h], is_dual)
    } else {
        select_34([g, a, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_5419([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1710([a, c, d, b, e, f, g], is_dual)
    } else {
        select_5420([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_5417([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5418([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_5419([a, b, c, g, e, h, i, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_5416([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5417([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_5417([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5423([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_359([f, g, j, a, b, i, h], !is_dual)
    } else {
        select_834([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_5422([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3625([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_5423([b, h, d, e, f, g, a, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5425([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1104([e, h, c, d, g, f, i, j, k], is_dual)
    } else {
        select_49([e, c, d, a, b, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5424([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5425([c, d, e, f, b, a, h, i, j, k, l], is_dual)
    } else {
        select_1865([a, b, e, f, g, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_5421([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5422([a, c, i, e, f, g, h, b, j, k, l], is_dual)
    } else {
        select_5424([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_5415([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5416([a, b, c, d, j, h, k, i, l], is_dual)
    } else {
        select_5421([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_5429([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_408([c, a, d, e, b, g, f, h], is_dual)
    } else {
        select_392([b, c, d, a, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5428([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_4836([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_5429([a, b, c, g, f, h, i, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5427([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5428([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_5428([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5430([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_831([a, b, c, i, e, f, g, h, j, k, l], is_dual)
    } else {
        select_48([a, b, d, h, e, f, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5426([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5427([a, b, c, d, j, i, k, h, l, m], is_dual)
    } else {
        select_5430([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5414([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5415([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_5426([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5408([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_5409([a, b, c, e, d, g, h, i, f, j, k, l], is_dual)
    } else {
        select_5414([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5389([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5390([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5408([a, b, c, d, e, f, g, h, k, l, m, j, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5315([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5316([a, b, c, d, f, g, h, i, j, e, k, l, m, n], is_dual)
    } else {
        select_5389([a, b, c, d, f, e, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5436([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_721([a, b, c, h, e, d, j, i, l, k, m, n], is_dual)
    } else {
        select_56([a, b, d, f, g, c, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_5438([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_57([a, c, e, f, b, i, g, h, j, k, l], is_dual)
    } else {
        select_965([h, a, b, d, c, j, g, i, l, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_5437([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5438([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_5438([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5435([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5436([a, b, c, e, d, f, g, j, i, k, h, l, m, n], is_dual)
    } else {
        select_5437([a, b, d, e, c, f, g, j, h, k, i, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5441([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_882([e, a, h, f, g, d, c, j, i, l, k, m], is_dual)
    } else {
        select_3836([a, b, c, d, j, k, h, i, m, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5440([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5441([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o], is_dual)
    } else {
        select_5441([b, a, c, d, e, f, g, h, j, k, l, i, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5439([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5440([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o], is_dual)
    } else {
        select_5440([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5434([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < n) || (is_dual && l > n) {
        select_5435([a, b, c, d, e, f, m, i, j, k, n, l, o, p], is_dual)
    } else {
        select_5439([a, b, c, k, d, e, g, h, i, j, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5433([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5434([a, b, c, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5434([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 2
fn select_5446([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_167([a, c, d, f, b, h, g, i, j, k, l], is_dual)
    } else {
        select_167([a, b, d, e, c, i, g, h, j, l, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_5445([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5446([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    } else {
        select_5446([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5448([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1721([a, c, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_722([a, g, h, d, e, f, b, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_5449([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3156([a, b, c, j, d, g, i, h, k], is_dual)
    } else {
        select_512([a, g, b, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5447([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5448([a, b, d, e, c, j, g, h, i, l, k, m, n], is_dual)
    } else {
        select_5449([a, c, d, f, b, i, g, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5444([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5445([a, c, d, e, b, f, h, j, g, k, i, l], is_dual)
    } else {
        select_5447([a, b, d, e, c, f, h, j, i, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5443([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5444([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5444([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 2
fn select_5456([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_22([a, b, c, d, k, h, i], is_dual)
    } else {
        select_1527([a, b, i, e, f, g, h, j, l, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_5455([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5456([d, i, f, g, a, b, c, h, j, k, l, m], is_dual)
    } else {
        select_5456([e, h, f, g, a, b, c, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 2
fn select_5457([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_1191([a, e, i, b, c, d, h, j, l, k], is_dual)
    } else {
        select_1363([a, e, f, g, k, h, i], is_dual)
    }
}
/// n = 14, i = 2
fn select_5454([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_5455([e, f, g, c, d, a, h, i, j, k, l, n, m], is_dual)
    } else {
        select_5457([a, e, f, g, b, i, j, h, m, l, n, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_5458([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_5457([b, e, f, g, d, a, h, i, j, l, m, k], is_dual)
    } else {
        select_5457([a, e, f, g, c, b, i, h, k, l, m, j], is_dual)
    }
}
/// n = 14, i = 2
fn select_5453([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5454([b, d, a, c, e, f, g, j, h, i, l, m, k, n], is_dual)
    } else {
        select_5458([a, b, i, d, e, f, g, k, j, h, l, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_5462([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_27([a, b, k, c, d, i, h, m], is_dual)
    } else {
        select_1527([c, d, h, e, f, g, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_5463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1527([b, c, g, d, e, f, h, i, k, j], is_dual)
    } else {
        select_31([a, j, b, c, g, h, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_5461([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_5462([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5463([h, c, d, e, f, g, a, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_5460([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5461([a, c, b, i, e, f, g, h, k, l, m, j, n], is_dual)
    } else {
        select_5457([b, e, f, g, d, a, h, i, j, l, m, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_5465([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5462([a, i, c, d, e, f, g, h, j, k, l, m, n], is_dual)
    } else {
        select_5456([b, h, c, d, e, f, g, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 3
fn select_5464([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_5465([a, c, b, j, e, f, g, h, i, k, l, n, m, o], is_dual)
    } else {
        select_5457([b, e, f, g, d, h, i, j, m, l, n, k], is_dual)
    }
}
/// n = 15, i = 3
fn select_5459([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5460([a, b, i, d, e, f, g, k, j, h, l, m, n, o], is_dual)
    } else {
        select_5464([a, b, c, d, e, f, g, h, i, j, l, m, k, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_5452([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5453([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5459([a, b, c, d, e, f, g, h, j, k, i, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_5451([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5452([b, d, c, e, f, g, h, i, a, j, k, l, m, n, o], is_dual)
    } else {
        select_5453([b, d, a, e, f, g, h, i, c, k, j, l, m, n], is_dual)
    }
}
/// n = 15, i = 3
fn select_5450([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5451([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o], is_dual)
    } else {
        select_5451([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5442([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < l) || (is_dual && d > l) {
        select_5443([a, b, c, e, f, l, g, d, j, n, k, m, o, p], is_dual)
    } else {
        select_5450([a, b, c, e, f, g, d, h, i, j, k, m, l, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5432([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5433([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o, p], is_dual)
    } else {
        select_5442([a, b, c, d, f, g, e, i, j, k, h, m, l, n, o, p], is_dual)
    }
}
/// n = 15, i = 4
fn select_5472([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4123([f, g, a, j, k, i, h, m, n, l, o], is_dual)
    } else {
        select_3260([b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 2
fn select_5473([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_3260([a, b, c, d, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_4345([g, e, f, k, l, j, h, i, n, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5471([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_5472([h, b, c, d, e, f, g, m, i, k, l, j, n, o, p], is_dual)
    } else {
        select_5473([b, c, d, e, a, g, f, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5470([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5471([e, a, b, c, d, f, g, i, j, h, k, l, m, n, o, p], is_dual)
    } else {
        select_5471([e, a, b, c, d, f, h, i, j, g, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5469([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5470([b, c, d, e, a, f, g, h, j, i, k, l, m, n, o, p], is_dual)
    } else {
        select_5470([b, c, d, e, a, i, g, h, j, f, k, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_5477([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3329([a, f, d, b, c, g, i, h, j], is_dual)
    } else {
        select_520([a, b, c, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5478([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5388([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2341([a, b, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5476([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_5477([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_5478([a, f, c, e, i, g, b, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_5479([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_3267([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_835([a, b, i, e, f, g, c, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5475([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_5476([a, b, d, j, e, c, h, i, k, l, m], is_dual)
    } else {
        select_5479([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5474([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_5475([a, b, c, e, i, g, h, j, d, k, l, m, n], is_dual)
    } else {
        select_462([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5468([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < k) || (is_dual && n > k) {
        select_5469([f, e, g, h, i, a, b, c, d, j, k, m, l, n, o, p], is_dual)
    } else {
        select_5474([a, b, c, d, e, f, g, m, j, l, n, k, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5467([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < f) || (is_dual && n > f) {
        select_5468([a, b, c, d, e, g, f, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_3714([a, b, c, d, e, g, n, j, f, l, k, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_5488([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_32([a, d, b, e, h, i], is_dual)
    } else {
        select_190([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_5487([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5488([h, a, e, b, f, g, i, j, k], is_dual)
    } else {
        select_106([i, e, c, d, g, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5486([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5487([a, b, c, d, e, g, h, i, f, j, k], is_dual)
    } else {
        select_436([a, f, e, c, d, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5485([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_583([g, k, l, f, i, a, j, h], !is_dual)
    } else {
        select_5486([a, b, c, d, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5491([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_106([g, e, c, d, f, h, i], is_dual)
    } else {
        select_4747([a, h, b, e, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5490([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_5491([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_44([j, a, k, h, i], !is_dual)
    }
}
/// n = 10, i = 1
fn select_5492([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_135([b, c, d, e, f, g, i, j], is_dual)
    } else {
        select_59([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_5489([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5490([a, k, b, c, d, i, h, j, l, m, n], is_dual)
    } else {
        select_5492([d, b, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5484([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5485([b, k, c, d, e, h, a, i, j, l, m, n], is_dual)
    } else {
        select_5489([b, c, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_5496([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_632([a, h, d, e, j, g], is_dual)
    } else {
        select_4747([a, g, c, b, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_5495([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5496([b, a, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_272([a, f, b, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5494([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_583([g, j, k, f, h, a, i, b], !is_dual)
    } else {
        select_5495([a, b, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5497([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3582([f, j, k, a, i, h, b, g, e], !is_dual)
    } else {
        select_2010([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5493([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_5494([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_5497([b, c, e, f, a, g, d, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5483([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_5484([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_5493([a, b, c, d, i, k, h, l, m, j, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5482([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5483([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_5483([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_5501([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_134([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2109([a, c, i, g, h, b, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_208([i, g, k, a, b, j, c, h], !is_dual)
    } else {
        select_4138([c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5505([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_360([a, b, i, g, j, k, l], is_dual)
    } else {
        select_137([c, d, e, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5504([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_5505([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_236([a, c, i, g, b, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5502([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5503([a, h, b, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_5504([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5500([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_5501([b, c, a, e, f, g, h, d, i, j, k], is_dual)
    } else {
        select_5502([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5499([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5500([a, b, c, d, e, f, i, h, k, j, l, m], is_dual)
    } else {
        select_960([a, b, e, f, g, c, d, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5498([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5499([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_5499([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5481([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5482([a, b, c, d, e, h, f, g, i, j, l, k, m, n], is_dual)
    } else {
        select_5498([a, b, c, d, e, f, g, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 2
fn select_5509([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_294([a, d, g, h, i, b, c, k, j, l, m], is_dual)
    } else {
        select_1834([a, b, c, e, f, d, j, l, k, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_5511([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_465([a, g, b, c, e, f, i, h, k, l], is_dual)
    } else {
        select_412([a, b, c, d, h, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5514([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([a, c, d, f, g], is_dual)
    } else {
        select_627([h, f, i, a, e, g, b], !is_dual)
    }
}
/// n = 13, i = 3
fn select_5513([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_2689([b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_5514([a, d, b, c, h, l, i, k, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_5512([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5513([a, d, e, b, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_5513([a, d, e, c, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5510([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_5511([b, c, d, j, e, f, a, i, l, k, m, n], is_dual)
    } else {
        select_5512([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5508([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5509([a, c, d, e, f, g, b, h, i, j, k, l, n, m], is_dual)
    } else {
        select_5510([a, b, c, d, e, l, f, g, m, k, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5507([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5508([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    } else {
        select_5508([a, c, d, e, f, g, h, i, j, b, k, l, m, n, o, p], is_dual)
    }
}
/// n = 15, i = 3
fn select_5516([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_3708([g, d, k, h, i, a, b, c, j, m, l, n, o], is_dual)
    } else {
        select_463([e, f, j, l, d, a, b, c, k, n, m, o], is_dual)
    }
}
/// n = 15, i = 3
fn select_5515([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5516([a, b, c, d, g, h, e, i, j, f, k, l, m, n, o], is_dual)
    } else {
        select_5516([a, b, c, d, g, h, f, i, j, e, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5506([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5507([a, b, c, d, e, h, f, g, i, j, l, m, n, k, o, p], is_dual)
    } else {
        select_5515([a, b, c, h, f, g, i, j, d, e, m, k, n, l, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5480([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < n) || (is_dual && d > n) {
        select_5481([a, b, c, e, f, g, h, m, n, k, d, l, o, p], is_dual)
    } else {
        select_5506([a, b, c, e, f, g, h, d, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5466([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_5467([a, b, c, d, g, h, f, i, j, k, l, e, m, n, o, p], is_dual)
    } else {
        select_5480([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5431([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5432([a, b, c, d, f, e, h, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_5466([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5314([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < o) || (is_dual && l > o) {
        select_5315([a, b, c, d, e, f, g, h, i, m, n, o, p, l], is_dual)
    } else {
        select_5431([a, b, c, d, e, h, i, f, g, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_5523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2975([a, b, c, d, e, f, h, j, k, i], is_dual)
    } else {
        select_721([a, b, c, e, g, d, f, h, i, l, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_5527([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_473([b, c, d, e, f, a, g, h, j], is_dual)
    } else {
        select_473([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5526([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_414([b, c, a, e, f, g, d, h], is_dual)
    } else {
        select_5527([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5528([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5368([a, h, i, e, b, g, c, f], !is_dual)
    } else {
        select_3225([a, h, i, g, b, e, f, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5525([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_5526([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_5528([a, b, i, k, c, j, d, e, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5524([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5525([a, b, c, e, f, d, g, h, k, i, j], is_dual)
    } else {
        select_2975([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5522([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5523([a, b, d, c, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_5524([a, b, c, d, e, f, h, j, k, l, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5533([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_340([d, b, c, e, f, g, h], is_dual)
    } else {
        select_770([d, g, i, h, e, a, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_352([g, h, j, a, e, i, b, f, d], !is_dual)
    } else {
        select_5533([g, e, j, a, h, i, b, c, f], !is_dual)
    }
}
/// n = 10, i = 3
fn select_5534([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2053([a, b, c, d, g, h, f, i, j], is_dual)
    } else {
        select_582([b, a, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5531([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5532([b, c, d, g, f, i, h, a, j, k], is_dual)
    } else {
        select_5534([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5530([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_5531([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1798([a, c, d, b, f, e, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_5538([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_867([g, a, b, d, e, f, h, i], is_dual)
    } else {
        select_867([f, a, c, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5537([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5538([b, c, e, a, d, f, g, h, i], is_dual)
    } else {
        select_578([f, j, h, k, a, g, i, b, d], !is_dual)
    }
}
/// n = 8, i = 2
fn select_5540([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2582([b, a, c, d, e, g, f, h], is_dual)
    } else {
        select_175([b, d, f, e, g, a], is_dual)
    }
}
/// n = 10, i = 3
fn select_5539([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_349([f, a, b, d, e, g, h, i, j], is_dual)
    } else {
        select_5540([b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_5537([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_5539([b, c, f, e, a, g, d, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5544([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_997([b, a, c, d, f, e, g, i], is_dual)
    } else {
        select_754([f, h, i, g, d, a, b, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5543([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1984([e, h, i, g, f, a, b, d, c], !is_dual)
    } else {
        select_5544([e, h, f, g, i, a, d, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5545([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5358([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_5358([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_5542([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_5543([a, b, c, e, g, h, d, f, i], is_dual)
    } else {
        select_5545([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5541([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5542([a, c, d, b, f, e, g, h, i], is_dual)
    } else {
        select_1174([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5535([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_5536([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_5541([a, c, g, d, h, i, b, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5530([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_5535([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5521([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_5522([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5529([a, b, d, e, f, h, j, i, c, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_5548([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2982([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_807([a, h, c, d, i, j, b, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_5552([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2130([a, j, e, f, g, h, i, k, l], is_dual)
    } else {
        select_2397([b, c, d, i, e, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_5551([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5552([a, c, d, e, f, g, h, i, b, j, k, l], is_dual)
    } else {
        select_5552([b, c, d, e, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_5550([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_5551([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_914([a, b, j, f, g, h, i, c, k, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_5549([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_5550([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_804([a, b, c, k, e, f, d, j, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_5547([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5548([g, h, f, e, j, c, d, i, k, l, m], is_dual)
    } else {
        select_5549([f, g, h, e, c, d, a, b, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5554([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1757([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_1329([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5559([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_390([e, g, i, d, b, f, c], !is_dual)
    } else {
        select_1753([a, b, c, e, f, d, g, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5558([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5559([f, g, i, a, e, h, b, c, d], !is_dual)
    } else {
        select_202([a, g, i, f, e, h, b, c], !is_dual)
    }
}
/// n = 7, i = 2
fn select_5561([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1093([a, d, b, c, f, g, e], is_dual)
    } else {
        select_33([d, e, g, b], is_dual)
    }
}
/// n = 8, i = 3
fn select_5560([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5561([a, b, d, c, e, f, g], is_dual)
    } else {
        select_1194([e, b, c, a, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_5557([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5558([a, h, g, i, e, c, b, f, d], !is_dual)
    } else {
        select_5560([a, h, i, e, g, c, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5556([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1337([a, b, g, i, f, h, c, d], !is_dual)
    } else {
        select_5557([a, f, g, i, b, h, c, d, e], !is_dual)
    }
}
/// n = 11, i = 3
fn select_5563([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_134([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_420([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5562([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5563([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    } else {
        select_5563([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5555([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_5556([a, b, d, e, i, c, j, k, l], is_dual)
    } else {
        select_5562([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5553([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_5554([a, b, c, e, f, i, d, j, k, l], is_dual)
    } else {
        select_5555([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5546([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_5547([d, f, h, i, g, e, a, b, c, j, k, l, m], is_dual)
    } else {
        select_5553([a, b, c, d, e, f, g, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5520([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < l) || (is_dual && d > l) {
        select_5521([a, b, c, e, f, g, k, l, j, d, m, n], is_dual)
    } else {
        select_5546([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_5566([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1335([a, b, c, d, e, g, h, i, f], is_dual)
    } else {
        select_2116([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5571([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_718([a, h, j, g, i, b], !is_dual)
    } else {
        select_662([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_5570([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5571([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_5571([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5572([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1197([a, b, e, c, d, f, g, h, i], is_dual)
    } else {
        select_1747([a, g, e, b, f, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5569([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5570([a, b, g, c, d, i, h, j, k, l], is_dual)
    } else {
        select_5572([a, b, f, h, e, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5574([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_114([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_114([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_5575([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_449([a, b, g, h, i, e, c, f], !is_dual)
    } else {
        select_449([a, b, g, h, i, f, d, e], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5573([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5574([a, b, e, h, f, g, j, i, k], is_dual)
    } else {
        select_5575([a, b, j, l, h, k, c, d, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_5569([a, b, e, f, d, g, c, h, i, j, k, l], is_dual)
    } else {
        select_5573([a, b, e, f, g, c, d, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_5579([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_340([f, a, b, d, g, h, e], is_dual)
    } else {
        select_679([d, b, e, c, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_5581([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_632([e, f, c, d, h, g], is_dual)
    } else {
        select_632([e, g, a, b, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_5580([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5581([c, f, d, e, a, g, h, j], is_dual)
    } else {
        select_271([a, b, g, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5578([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5579([j, k, f, g, h, a, i, b], !is_dual)
    } else {
        select_5580([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5577([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5578([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_5578([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_5582([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3101([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1292([a, c, d, e, f, g, h, i, b], is_dual)
    }
}
/// n = 11, i = 4
fn select_5576([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5577([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_5582([a, b, g, k, i, j, h, c, d], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5567([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_5568([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_5576([a, b, d, h, e, f, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5565([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_5566([a, b, c, i, h, j, k, d, l], is_dual)
    } else {
        select_5567([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_5586([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_581([a, b, c, d, i, g, j, h, k], is_dual)
    } else {
        select_705([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5585([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_5586([a, b, d, c, e, f, h, g, i, j, k], is_dual)
    } else {
        select_4562([a, b, c, d, i, h, j, k, l, g], is_dual)
    }
}
/// n = 13, i = 4
fn select_5587([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_1863([a, c, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1654([a, c, d, j, i, h, k, b, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5584([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_5585([a, b, i, d, f, g, c, h, j, k, l, m], is_dual)
    } else {
        select_5587([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_5592([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_934([a, e, c, d, f, g, h, i], is_dual)
    } else {
        select_29([a, b, h, e], is_dual)
    }
}
/// n = 11, i = 3
fn select_5591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2167([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_5592([a, g, d, e, i, b, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5590([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3719([a, b, c, f, d, g, h, j, i], is_dual)
    } else {
        select_5591([a, b, f, c, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5589([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5590([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_5476([a, b, c, e, d, h, j, g, i, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_5594([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_48([a, b, e, i, f, g, h, k, j, l], is_dual)
    } else {
        select_3967([c, d, e, j, a, b, i, l, k, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_5595([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_48([a, b, c, h, e, f, g, i, j, k], is_dual)
    } else {
        select_579([a, b, c, d, j, h, k, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_5593([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5594([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_5595([a, b, c, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5588([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_5589([a, b, d, k, e, f, c, i, j, l, m, n], is_dual)
    } else {
        select_5593([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5583([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_5584([a, b, c, i, f, g, h, d, j, k, l, m, n], is_dual)
    } else {
        select_5588([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5564([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_5565([a, b, c, d, e, m, f, j, i, l, n, o], is_dual)
    } else {
        select_5583([a, b, c, d, f, i, g, h, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5519([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5520([a, b, c, d, j, k, e, g, h, i, l, m, n, o], is_dual)
    } else {
        select_5564([a, b, c, d, e, f, g, h, i, k, l, j, m, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_5604([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_129([a, b, i, f, j, g], is_dual)
    } else {
        select_163([c, g, d, f, h, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5605([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_215([d, c, b, e, f, g], is_dual)
    } else {
        select_998([a, b, f, d, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5603([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_5604([b, a, c, d, f, h, e, g, i, j], is_dual)
    } else {
        select_5605([e, c, d, g, a, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5606([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1604([a, b, c, g, e, h, i, f], is_dual)
    } else {
        select_679([a, b, f, d, i, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_5602([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_5603([a, b, c, d, e, f, h, g, i, k], is_dual)
    } else {
        select_5606([a, c, b, f, e, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5609([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_211([c, d, e, f, j], is_dual)
    } else {
        select_53([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_5610([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_228([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_1228([a, b, c, e, f, g, d, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5608([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_5609([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_5610([j, k, g, a, h, b, i, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5607([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1493([a, b, h, g, i, c, j], is_dual)
    } else {
        select_5608([a, b, d, c, e, f, g, j, h, k, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5601([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5602([a, b, c, d, j, g, h, k, l, i, m], is_dual)
    } else {
        select_5607([a, b, i, c, e, f, h, l, m, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5613([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_770([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3024([a, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5612([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1297([a, f, b, d, h, g, j, k], is_dual)
    } else {
        select_5613([a, b, c, e, g, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5615([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_32([b, d, c, g, f, i], is_dual)
    } else {
        select_73([a, c, e, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5614([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2546([f, a, b, d, e, i, g, h, k, j, l], is_dual)
    } else {
        select_5615([a, b, g, c, h, i, j, k, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5611([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5612([a, b, c, g, d, f, i, j, h, k, l], is_dual)
    } else {
        select_5614([a, c, d, b, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5600([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_5601([a, b, c, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5611([a, c, d, k, f, l, h, i, j, g, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_5618([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_4285([a, c, d, b, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_4286([a, b, d, e, c, j, h, l, k, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5621([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_65([b, k, e, f, h], is_dual)
    } else {
        select_1899([a, b, c, d, g, j, i, l, k, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_5622([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_215([c, h, e, f, i, g], is_dual)
    } else {
        select_341([a, b, d, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5620([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5621([a, b, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_5622([a, i, b, c, f, g, j, h, l, k, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_5623([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_718([a, b, c, g, h, i], is_dual)
    } else {
        select_1762([b, a, d, e, f, h, i], is_dual)
    }
}
/// n = 15, i = 4
fn select_5619([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_5620([a, c, d, e, f, g, h, i, k, j, l, m, n, o], is_dual)
    } else {
        select_5623([a, b, d, e, f, i, k, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5617([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5618([b, c, d, f, j, g, h, k, i, l, n, m, o], is_dual)
    } else {
        select_5619([b, a, d, f, e, i, g, h, k, l, j, m, n, o, p], is_dual)
    }
}
/// n = 13, i = 4
fn select_5627([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_27([b, d, j, e, f, i, h, l], is_dual)
    } else {
        select_113([a, c, h, e, f, g, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5626([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_105([b, d, h, e, f, c, i, j, l], is_dual)
    } else {
        select_5627([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_5625([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_4980([b, i, f, g, d, c, j, m, k, l], is_dual)
    } else {
        select_5626([a, c, b, e, d, k, h, i, j, l, n, m, o], is_dual)
    }
}
/// n = 9, i = 3
fn select_5629([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_718([g, a, b, e, h, i], is_dual)
    } else {
        select_3787([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_5630([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3687([a, b, c, d, i, g, h, k, l, m], is_dual)
    } else {
        select_305([c, e, f, b, d, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_5628([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_5629([a, b, d, k, h, i, g, m, n], is_dual)
    } else {
        select_5630([a, b, c, g, e, f, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5624([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_5625([b, c, d, e, a, f, g, h, j, i, k, l, m, n, o], is_dual)
    } else {
        select_5628([b, c, e, i, f, g, a, h, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5616([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5617([a, b, d, e, c, f, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_5624([a, b, c, d, e, g, h, k, i, m, l, n, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5599([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < n) || (is_dual && a > n) {
        select_5600([b, c, d, e, f, l, i, n, j, a, k, m, o, p], is_dual)
    } else {
        select_5616([b, c, d, e, a, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_5634([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1286([a, b, g, e, f, i, h, j, l, k], is_dual)
    } else {
        select_1297([a, b, c, d, j, k, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5633([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_2297([a, j, c, d, b, k, l, g], is_dual)
    } else {
        select_5634([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5636([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1095([a, c, d, g, e, f, h, i], is_dual)
    } else {
        select_583([a, g, i, j, b, h, e, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5635([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1623([a, b, f, d, e, h, g, i, k, j], is_dual)
    } else {
        select_5636([a, b, i, c, j, f, k, h, g, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5632([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_5633([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_5635([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_5639([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1095([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_1292([a, c, d, b, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5638([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5404([a, b, d, e, c, f, g, i, h, j], is_dual)
    } else {
        select_5639([a, b, c, d, g, h, j, f, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5637([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_3933([a, b, d, g, e, f, i, h, j, k, l, m], is_dual)
    } else {
        select_5638([a, b, d, c, k, j, l, g, m, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5631([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_5632([a, c, b, d, e, h, g, i, k, l, m, j], is_dual)
    } else {
        select_5637([a, c, d, b, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_5598([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < i) || (is_dual && o > i) {
        select_5599([a, c, d, e, b, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5631([a, c, b, d, e, l, k, n, m, j, o, p, i], is_dual)
    }
}
/// n = 16, i = 4
fn select_5597([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_5598([a, b, d, e, f, g, h, i, c, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5598([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_5647([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([a, f, d, e, h, g, j, i], is_dual)
    } else {
        select_89([g, a, c, b, i, h, f, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5646([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_30([c, d, e, f, a, h, i, g, j], is_dual)
    } else {
        select_5647([a, b, g, c, d, f, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5645([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_5254([b, c, g, e, f, a, h, i, j], is_dual)
    } else {
        select_5646([b, c, a, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_5644([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_5645([a, b, d, c, k, g, h, l, j, i, m], is_dual)
    } else {
        select_3635([a, b, d, h, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5649([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3445([a, c, d, f, e, g, h, j, i, k], is_dual)
    } else {
        select_2154([b, a, c, i, k, g, f, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5650([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_349([b, a, c, h, e, g, j, i, k], is_dual)
    } else {
        select_3042([a, b, i, d, k, f, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5648([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_5649([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_5650([a, b, d, c, e, g, h, i, j, f, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5643([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_5644([b, a, d, h, e, f, i, g, j, l, k, m, n], is_dual)
    } else {
        select_5648([g, a, c, b, k, j, h, m, i, n, o, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_5654([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_718([a, f, c, i, g, j], is_dual)
    } else {
        select_1077([a, b, d, e, g, h, f, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5656([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_215([a, c, d, e, f, g], is_dual)
    } else {
        select_998([b, a, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5655([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5656([a, b, d, c, e, g, f, h, i], is_dual)
    } else {
        select_1076([e, i, j, h, g, f, a, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5653([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5654([a, f, d, b, i, e, h, j, g, k], is_dual)
    } else {
        select_5655([a, e, d, c, g, h, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5659([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3930([h, g, j, d, a, i, e, f, b], !is_dual)
    } else {
        select_205([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_5659([b, a, c, e, d, f, g, j, h, i], is_dual)
    } else {
        select_1386([i, j, g, e, d, b, a, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5657([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1292([i, l, k, e, j, a, b, g, d], !is_dual)
    } else {
        select_5658([b, a, c, j, e, f, k, h, i, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5652([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5653([a, f, c, g, i, e, j, k, l, m, h], is_dual)
    } else {
        select_5657([e, a, b, d, h, f, g, i, j, l, m, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5662([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1563([a, b, h, e, g, f, i, j, k], is_dual)
    } else {
        select_257([a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_5663([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_408([a, b, h, e, g, f, i, j], is_dual)
    } else {
        select_282([e, b, c, d, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5661([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5662([b, c, d, e, a, g, f, h, i, j, k], is_dual)
    } else {
        select_5663([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5660([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_5661([a, b, d, c, j, g, h, k, i, l, m], is_dual)
    } else {
        select_965([b, a, c, h, e, f, g, i, j, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_5651([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_5652([a, b, c, k, f, g, m, i, j, l, h, n, o], is_dual)
    } else {
        select_5660([j, a, h, c, d, e, l, f, i, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5642([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_5643([a, b, c, d, e, f, g, h, i, k, l, j, m, n, o], is_dual)
    } else {
        select_5651([b, c, d, e, f, g, h, i, k, j, l, a, m, n, o], is_dual)
    }
}
/// n = 12, i = 4
fn select_5666([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3893([a, b, f, d, e, h, g, j, i, k, l], is_dual)
    } else {
        select_1656([a, b, c, i, e, f, k, l, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5666([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5666([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5664([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5665([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_5665([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5641([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < b) || (is_dual && n > b) {
        select_5642([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_5664([a, g, c, l, k, h, m, i, j, n, b, o], is_dual)
    }
}
/// n = 10, i = 4
fn select_5673([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_341([a, h, i, j, e, b], !is_dual)
    } else {
        select_450([g, h, i, j, a, f, c, d], !is_dual)
    }
}
/// n = 6, i = 2
fn select_5674([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_623([b, c, d, e], is_dual)
    } else {
        select_335([e, f, a, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5672([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5673([a, d, b, c, e, g, h, i, f, j], is_dual)
    } else {
        select_5674([a, b, c, f, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_5676([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_163([c, g, d, e, h, f, i], is_dual)
    } else {
        select_269([e, a, b, i, j, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_5675([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_5676([a, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_243([i, c, d, e, f, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5671([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_5672([f, b, c, g, j, a, h, k, i, l], is_dual)
    } else {
        select_5675([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5670([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1212([a, f, b, c, j, k, l, h], is_dual)
    } else {
        select_5671([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5680([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_266([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_115([a, g, d, e, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5679([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5680([e, a, b, f, j, g, h, k, l, i], is_dual)
    } else {
        select_243([h, i, c, d, e, f, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5681([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_286([g, h, c, d, e, i], is_dual)
    } else {
        select_266([a, b, i, j, f, k, g, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5678([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5679([a, b, i, c, l, f, g, j, k, h, m, n], is_dual)
    } else {
        select_5681([a, b, d, e, h, g, j, k, i, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_5684([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_341([a, b, d, e, j, k], is_dual)
    } else {
        select_2568([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5683([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1647([a, b, i, c, k], is_dual)
    } else {
        select_5684([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5685([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_172([d, j, e, f, l, g, h, i, k], is_dual)
    } else {
        select_5684([a, b, d, c, k, g, h, j, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5682([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5683([a, b, c, e, d, h, i, l, n, m, o], is_dual)
    } else {
        select_5685([b, c, d, e, f, g, h, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5677([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5678([b, c, e, f, g, h, k, i, j, a, m, l, n, o], is_dual)
    } else {
        select_5682([a, b, c, d, e, f, g, h, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5669([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < n) || (is_dual && i > n) {
        select_5670([a, b, c, d, j, h, l, k, m, n, o, i], is_dual)
    } else {
        select_5677([a, b, c, e, d, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_5689([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_4433([a, c, b, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_764([e, d, c, a, g, f, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5692([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_184([b, c, d, e, f, g, h], is_dual)
    } else {
        select_229([a, b, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_5691([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5692([a, d, b, c, e, g, f, h, i, j], is_dual)
    } else {
        select_595([f, d, a, h, e, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5690([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_328([a, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5691([a, c, j, b, h, g, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5688([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_5689([a, k, c, b, l, h, g, j, i, m, n], is_dual)
    } else {
        select_5690([a, c, g, d, e, f, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_5695([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_54([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_141([a, c, b, j, g, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_5694([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1363([a, b, f, g, k, h, i], is_dual)
    } else {
        select_5695([a, b, i, c, d, e, h, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_5697([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_215([a, g, b, c, k, h], is_dual)
    } else {
        select_1527([b, c, g, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_5696([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_305([e, a, b, c, d, l, i, j], is_dual)
    } else {
        select_5697([e, a, b, f, g, h, j, i, k, m, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_5693([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < n) || (is_dual && k > n) {
        select_5694([a, c, d, e, f, b, j, i, n, l, m, k, o], is_dual)
    } else {
        select_5696([a, i, g, h, b, d, e, f, k, j, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5687([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_5688([b, j, c, d, e, f, l, i, a, k, m, n, o, p], is_dual)
    } else {
        select_5693([b, a, c, d, e, f, g, h, i, j, k, m, n, l, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5686([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < l) || (is_dual && o > l) {
        select_5687([a, b, f, c, d, e, g, h, i, j, k, m, l, n, o, p], is_dual)
    } else {
        select_1605([a, b, c, d, e, m, k, o, p, l, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5668([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_5669([a, c, d, i, e, g, h, j, b, k, l, m, n, o, p], is_dual)
    } else {
        select_5686([a, b, c, d, e, f, g, h, i, k, j, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 4
fn select_5702([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1667([a, f, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_362([e, j, g, k, a, f, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5701([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_1493([a, b, i, e, j, k, f], is_dual)
    } else {
        select_5702([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_5700([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5701([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_5701([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_5705([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3140([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_98([a, f, h, i, g, d, e, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_5705([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_5296([a, b, c, d, f, e, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_5703([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_5704([a, b, l, i, k, g, c, d, j], !is_dual)
    } else {
        select_1677([a, b, g, e, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5699([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5700([a, b, c, e, f, g, i, h, k, j, l], is_dual)
    } else {
        select_5703([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5698([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_1335([a, b, j, l, i, g, c, d, k], !is_dual)
    } else {
        select_5699([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_5667([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < i) || (is_dual && o > i) {
        select_5668([a, b, c, d, f, e, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5698([a, b, c, d, e, m, l, o, n, p, i, j], is_dual)
    }
}
/// n = 16, i = 4
fn select_5640([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_5641([a, b, d, e, g, h, i, k, c, m, j, l, n, o, p], is_dual)
    } else {
        select_5667([a, b, c, d, e, f, g, h, i, j, l, k, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5596([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_5597([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5640([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5518([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_5519([a, b, c, d, g, k, h, i, j, l, f, m, n, o, p], is_dual)
    } else {
        select_5596([a, b, c, d, e, g, f, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 13, i = 4
fn select_5710([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_721([a, b, c, d, f, e, i, h, k, j, l, m], is_dual)
    } else {
        select_853([a, b, d, e, g, c, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_5711([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_68([a, b, c, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_853([a, b, c, d, e, i, j, h, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5709([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5710([a, b, c, d, e, i, g, k, j, h, l, m, n], is_dual)
    } else {
        select_5711([a, b, d, e, g, c, f, j, h, i, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5708([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5709([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_5709([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5707([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_3658([a, b, c, d, e, g, f, h, i, k, j, l, m, n, o, p], is_dual)
    } else {
        select_5708([a, b, c, d, e, f, g, m, k, n, l, j, o, p], is_dual)
    }
}
/// n = 13, i = 3
fn select_5716([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2829([a, d, e, f, b, h, g, i, j, k, l], is_dual)
    } else {
        select_3856([a, b, c, d, i, j, g, h, l, m, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_5715([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5716([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_5716([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_5719([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2859([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2097([g, k, l, a, b, j, h, c, i], !is_dual)
    }
}
/// n = 14, i = 4
fn select_5718([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5719([a, b, c, d, i, j, g, h, l, m, k, n], is_dual)
    } else {
        select_2829([a, d, e, f, b, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5717([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5718([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5718([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5714([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5715([a, b, d, c, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_5717([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5713([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5714([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_5714([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5720([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2328([a, b, c, d, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_4119([a, b, c, d, e, f, k, g, j, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5712([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_5713([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5720([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5706([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < l) || (is_dual && o > l) {
        select_5707([a, b, c, d, f, g, e, h, i, k, j, l, m, n, o, p], is_dual)
    } else {
        select_5712([a, b, c, d, e, f, g, m, j, k, n, o, p, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_5517([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_5518([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    } else {
        select_5706([a, b, c, d, f, g, e, i, j, k, h, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5313([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_5314([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5517([a, b, c, d, e, g, h, i, j, k, l, f, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5312([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5313([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    } else {
        select_5313([a, b, c, d, e, f, h, i, j, k, l, g, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5311([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < o) || (is_dual && i > o) {
        select_4148([a, b, c, d, e, f, g, h, j, m, n, o, i, p], is_dual)
    } else {
        select_5312([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5035([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < o) || (is_dual && j > o) {
        select_5036([a, b, c, d, e, f, g, h, i, m, n, o, j, p], is_dual)
    } else {
        select_5311([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 2
fn select_5733([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1831([c, a, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_1831([c, b, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_5734([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_168([a, d, b, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_168([a, d, c, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_5732([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5733([d, e, f, g, a, b, c, h, i, j, k, l], is_dual)
    } else {
        select_5734([a, b, c, f, d, e, i, h, j, l, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5738([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_137([d, e, f, g, k], is_dual)
    } else {
        select_2011([a, c, j, b, h, i, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5737([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5738([a, b, k, e, f, g, h, i, j, m, l, n, o, p], is_dual)
    } else {
        select_401([c, d, l, e, f, g, h, k, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5736([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5737([a, b, c, d, e, f, g, h, i, j, l, k, m, n, o, p], is_dual)
    } else {
        select_4382([a, k, c, d, e, f, g, h, i, l, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5735([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_5734([b, c, d, e, h, i, l, j, k, n, m], is_dual)
    } else {
        select_5736([a, e, f, g, b, c, d, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5731([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5732([d, e, f, b, c, g, i, j, m, k, n, l], is_dual)
    } else {
        select_5735([a, d, e, f, g, b, c, h, i, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 11, i = 4
fn select_5742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_359([e, j, k, a, h, i, f], !is_dual)
    } else {
        select_2437([a, d, b, c, e, f, g, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5743([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5505([a, h, c, d, e, f, g, i, j, k, l, m], is_dual)
    } else {
        select_135([b, i, c, d, e, f, h, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_5741([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_5742([a, b, k, c, g, i, j, h, l, m, n], is_dual)
    } else {
        select_5743([a, c, d, e, f, h, g, i, j, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_5745([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_285([b, c, d, e, f, h], is_dual)
    } else {
        select_3395([a, b, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5744([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_568([b, c, d, f, g, j, i], is_dual)
    } else {
        select_5745([a, b, c, d, e, i, h, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5740([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5741([a, e, f, b, c, d, h, i, j, k, m, n, l, o], is_dual)
    } else {
        select_5744([a, b, c, d, g, i, j, h, l, k, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5739([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5740([a, b, c, d, j, e, g, h, l, i, m, k, n, o, p], is_dual)
    } else {
        select_5740([a, b, c, d, i, f, g, h, k, j, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5730([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_5731([b, a, c, d, e, f, g, h, i, k, l, j, m, n, o, p], is_dual)
    } else {
        select_5739([b, d, e, f, c, g, h, i, j, k, a, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_5748([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_661([a, b, g, d, e, f, h, i, j, k], is_dual)
    } else {
        select_1761([a, b, i, c, f, j, g, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5747([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5748([a, d, e, b, c, f, g, h, i, j, k], is_dual)
    } else {
        select_3646([a, h, b, c, f, k, l, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5752([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3456([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3379([a, b, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_5753([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_632([a, f, c, d, i, g], is_dual)
    } else {
        select_393([h, i, f, a, g, e, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5751([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_5752([b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_5753([a, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5750([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1922([a, c, j, d, k, h, g, i], is_dual)
    } else {
        select_5751([a, b, d, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_5756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_129([i, d, j, a, e, h], !is_dual)
    } else {
        select_163([b, d, c, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5755([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_5756([e, b, c, g, d, f, h, i, j, k], is_dual)
    } else {
        select_718([j, k, g, d, e, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5757([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_125([h, a, i, d, j], is_dual)
    } else {
        select_1009([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5754([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_5755([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_5757([a, b, f, e, g, i, h, j, k, d], is_dual)
    }
}
/// n = 13, i = 4
fn select_5749([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_5750([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5754([b, h, c, i, f, g, j, k, l, a, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5746([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5747([a, b, g, c, e, h, i, j, f, k, l, m], is_dual)
    } else {
        select_5749([a, b, c, e, d, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5729([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < b) || (is_dual && n > b) {
        select_5730([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5746([a, c, d, n, h, i, b, j, k, l, m, o, p], is_dual)
    }
}
/// n = 13, i = 4
fn select_5763([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_399([a, h, c, d, e, f, g, i, j, k, m], is_dual)
    } else {
        select_2130([b, i, c, d, e, f, h, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5764([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3122([a, b, h, d, e, f, g, i, j, k, m], is_dual)
    } else {
        select_2130([c, i, d, e, f, g, h, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5762([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5763([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    } else {
        select_5764([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5761([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5762([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_2666([c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_5766([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_493([a, d, b, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_493([a, d, c, e, f, g, h, b, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_5765([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1819([b, c, i, e, f, g, h, d, j], is_dual)
    } else {
        select_5766([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_5760([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5761([a, b, c, d, e, f, m, j, k, l, n, o, p], is_dual)
    } else {
        select_5765([c, d, e, f, g, h, i, l, k, m, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_5770([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_285([a, b, c, e, f, h], is_dual)
    } else {
        select_432([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_5769([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5770([a, b, c, d, e, i, h, j, k], is_dual)
    } else {
        select_568([a, b, c, f, g, j, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_5768([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_5769([b, c, d, a, e, f, g, h, j, i, k], is_dual)
    } else {
        select_433([a, i, b, c, d, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5773([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2497([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3930([j, h, l, f, a, k, g, i, b], !is_dual)
    }
}
/// n = 13, i = 4
fn select_5772([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5773([b, c, e, f, g, h, i, a, j, k, l, m], is_dual)
    } else {
        select_2908([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5771([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_5422([a, c, i, e, f, g, h, b, j, k, m], is_dual)
    } else {
        select_5772([a, c, d, b, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5767([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5768([c, d, e, f, g, a, i, j, h, k, l], is_dual)
    } else {
        select_5771([h, a, b, c, d, e, f, i, j, l, m, k, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5759([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_5760([b, c, d, e, f, g, a, h, i, j, k, m, l, n, o, p], is_dual)
    } else {
        select_5767([b, c, d, e, f, g, l, a, j, k, m, n, o, p], is_dual)
    }
}
/// n = 15, i = 4
fn select_5776([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_4097([a, i, b, c, d, l, j, m, n, o], is_dual)
    } else {
        select_294([c, d, e, a, j, f, g, h, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5780([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_27([a, c, f, d, e, g, h, i], is_dual)
    } else {
        select_141([a, f, k, b, j, i], !is_dual)
    }
}
/// n = 13, i = 4
fn select_5779([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_5780([a, b, c, e, f, g, i, j, k, l, m], is_dual)
    } else {
        select_105([a, c, d, e, f, h, j, i, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_5778([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5779([a, b, m, c, d, e, i, j, k, l, n, o, p], is_dual)
    } else {
        select_5492([c, d, e, f, g, h, l, j, k, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5777([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5778([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_5778([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5775([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5776([b, c, d, e, k, g, h, i, a, j, l, m, n, o, p], is_dual)
    } else {
        select_5777([b, c, d, e, a, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 9, i = 4
fn select_5782([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1175([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_242([a, d, c, e, g, f], is_dual)
    }
}
/// n = 13, i = 4
fn select_5781([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3834([a, b, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_5782([a, i, m, b, h, l, c, k, d], !is_dual)
    }
}
/// n = 16, i = 4
fn select_5774([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < k) || (is_dual && n > k) {
        select_5775([a, b, c, e, f, d, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5781([a, b, c, d, e, f, m, j, l, n, k, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5758([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_5759([a, b, c, d, g, h, i, e, f, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5774([a, b, c, d, e, f, g, h, i, j, k, m, n, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5728([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_5729([a, c, d, e, g, h, i, f, j, k, l, b, m, n, o, p], is_dual)
    } else {
        select_5758([a, c, d, e, b, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 8, i = 1
fn select_5789([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_325([b, c, d, e, f, g], is_dual)
    } else {
        select_25([a, h], is_dual)
    }
}
/// n = 9, i = 1
fn select_5788([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_5789([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3764([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5791([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5488([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_73([g, d, a, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5790([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_359([a, h, b, j, k, e, g], is_dual)
    } else {
        select_5791([a, e, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 15, i = 4
fn select_5787([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5788([a, c, d, e, f, g, k, i, l], is_dual)
    } else {
        select_5790([a, b, l, c, h, i, j, m, k, n, o], is_dual)
    }
}
/// n = 10, i = 4
fn select_5795([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_65([b, c, d, f, h], is_dual)
    } else {
        select_73([a, g, e, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_5794([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([b, c, d, e, f, j, i], is_dual)
    } else {
        select_5795([a, b, c, d, g, h, k, j, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_5793([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_5794([g, e, f, i, c, d, h, k, j, l, m, n, o], is_dual)
    } else {
        select_638([e, f, c, d, a, b, l, j, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_5796([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5794([a, b, c, h, e, f, g, i, j, k, l, m, n], is_dual)
    } else {
        select_3734([d, k, e, f, b, c, h, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_5792([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_5793([b, e, f, g, c, d, a, h, i, k, j, l, m, n, o], is_dual)
    } else {
        select_5796([a, c, d, i, f, g, h, b, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5786([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_5787([a, b, f, c, d, e, j, h, i, k, l, n, o, m, p], is_dual)
    } else {
        select_5792([b, c, d, e, g, a, i, h, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 14, i = 4
fn select_5799([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5794([a, b, c, d, e, i, g, j, h, k, l, m, n], is_dual)
    } else {
        select_5794([a, b, c, d, f, h, g, j, i, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 4
fn select_5800([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_359([f, k, a, l, m, g, h], is_dual)
    } else {
        select_1951([g, b, c, d, e, f, h, i, j, l, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_5798([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5799([a, b, c, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_5800([a, d, b, c, i, g, h, k, l, m, n, j, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_5801([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1362([a, b, i, d, e, g, h], is_dual)
    } else {
        select_254([a, b, c, d, f, g, i, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_5797([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < d) || (is_dual && l > d) {
        select_5798([a, b, c, e, d, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_5801([b, c, e, f, l, g, i, d, j, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5785([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_5786([a, b, c, d, e, f, g, h, i, j, l, m, k, n, o, p], is_dual)
    } else {
        select_5797([b, c, d, e, i, g, k, h, j, a, l, m, n, o, p], is_dual)
    }
}
/// n = 15, i = 4
fn select_5806([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_305([b, f, g, e, i, j, k, m], is_dual)
    } else {
        select_2596([a, c, d, b, e, k, h, i, j, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5805([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_5806([a, d, b, c, e, f, g, h, i, j, k, m, l, n, o], is_dual)
    } else {
        select_2794([b, c, d, i, f, g, l, k, j, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5808([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5795([a, b, c, j, g, h, i, k, l, m], is_dual)
    } else {
        select_484([a, d, e, f, i, g, h, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5807([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_434([b, c, d, f, e, i, h, j, k, l], is_dual)
    } else {
        select_5808([a, b, c, d, e, h, g, i, j, l, k, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5804([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5805([a, b, c, d, f, e, g, h, j, k, i, l, m, n, o], is_dual)
    } else {
        select_5807([a, b, c, d, f, i, h, e, j, k, l, m, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_5812([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_27([a, c, f, d, e, g, h, i], is_dual)
    } else {
        select_126([a, b, i, j, f], is_dual)
    }
}
/// n = 14, i = 4
fn select_5811([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2541([c, d, f, g, e, j, i, k, m], is_dual)
    } else {
        select_5812([a, b, k, f, g, h, i, j, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5813([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_350([a, b, d, g, j, k, m], is_dual)
    } else {
        select_4094([c, e, f, a, b, g, h, i, j, k, l, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5810([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5811([h, a, b, c, g, e, f, i, k, j, l, n, m, o], is_dual)
    } else {
        select_5813([b, c, a, d, e, f, g, i, j, k, h, l, m, n, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_5814([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1356([a, b, c, d, f, g, i, h, j], is_dual)
    } else {
        select_4830([e, h, a, b, c, d, g, i, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_5809([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5810([a, d, e, f, b, c, g, h, i, j, k, m, l, n, o], is_dual)
    } else {
        select_5814([d, e, b, c, f, j, h, l, m, k], is_dual)
    }
}
/// n = 15, i = 4
fn select_5803([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5804([b, c, d, e, f, h, a, i, g, j, k, l, m, n, o], is_dual)
    } else {
        select_5809([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 11, i = 2
fn select_5816([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_314([e, a, b, f, g, c, d, h, i, j], is_dual)
    } else {
        select_568([a, b, h, c, d, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_5815([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5816([b, c, d, e, f, g, h, a, i, j, k], is_dual)
    } else {
        select_3768([b, c, d, e, a, g, h, f, i, j, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_5802([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5803([a, b, c, d, e, f, g, j, i, k, l, m, n, o, p], is_dual)
    } else {
        select_5815([a, c, d, e, f, g, h, m, l, j, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5784([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_5785([a, c, e, f, g, d, h, i, j, k, b, l, m, n, o, p], is_dual)
    } else {
        select_5802([a, c, b, d, e, f, g, h, i, k, l, j, m, n, o, p], is_dual)
    }
}
/// n = 9, i = 3
fn select_5821([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_97([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_121([e, i, a, g, h, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5823([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_121([g, i, d, f, e, a, c], !is_dual)
    } else {
        select_503([h, i, d, f, a, g, e, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_5824([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2011([a, c, f, d, e, g, h, i, k], is_dual)
    } else {
        select_32([b, h, d, g, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5822([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_5823([j, e, k, a, h, i, f, b, g], !is_dual)
    } else {
        select_5824([b, a, c, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5820([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5821([a, c, d, i, e, h, g, k, j], is_dual)
    } else {
        select_5822([a, b, g, d, e, f, h, i, j, l, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_5826([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1706([a, c, b, d, f, g, e, h], is_dual)
    } else {
        select_1706([b, c, a, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_5825([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_357([f, b, c, d, e, g, h, i], is_dual)
    } else {
        select_5826([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5819([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_5820([a, b, c, d, f, g, i, j, h, l, k, m], is_dual)
    } else {
        select_5825([a, c, d, e, h, f, k, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_5830([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_137([c, d, e, f, i], is_dual)
    } else {
        select_175([a, b, j, g, h, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_5829([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_224([a, h, c, d, e, f, i, g, j, k], is_dual)
    } else {
        select_5830([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5828([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_5141([a, b, k, g, h, l, i, m, n], is_dual)
    } else {
        select_5829([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_5832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1088([b, a, c, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_5823([j, e, k, a, g, i, f, b, h], !is_dual)
    }
}
/// n = 14, i = 4
fn select_5831([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_5832([a, b, c, k, g, h, i, l, m, n, j], is_dual)
    } else {
        select_116([a, c, i, d, e, f, g, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5827([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_5828([a, b, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_5831([a, b, c, d, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5818([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_5819([a, b, c, d, m, h, i, k, j, n, l, o, p], is_dual)
    } else {
        select_5827([a, b, d, e, f, g, j, h, i, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5817([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5818([a, c, d, e, f, g, h, b, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5818([b, c, d, e, f, g, h, a, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5783([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < k) || (is_dual && n > k) {
        select_5784([a, b, c, d, f, g, h, e, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5817([a, b, c, d, e, f, g, h, i, j, l, m, n, k, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5727([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < c) || (is_dual && m > c) {
        select_5728([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5783([a, b, d, e, f, g, h, i, j, k, l, m, c, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_5839([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_3481([b, a, d, e, f, g, h, c, i, k, j], is_dual)
    } else {
        select_3873([b, c, d, e, f, g, h, a, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5838([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_5839([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_4135([b, a, d, e, f, g, h, c, i, j, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_5841([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_718([a, b, c, d, e, f], is_dual)
    } else {
        select_1647([a, b, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_5840([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_5841([e, a, h, f, g, b, c], !is_dual)
    } else {
        select_1283([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_5837([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_5838([a, c, d, b, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_5840([a, b, k, l, c, d, j, i], !is_dual)
    }
}
/// n = 13, i = 4
fn select_5836([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4452([a, b, e, f, g, h, c, d, i, j, k], is_dual)
    } else {
        select_5837([a, b, c, d, e, f, g, i, k, l, m, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_5846([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_399([a, b, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3122([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_5847([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_494([a, b, k, f, g, h, i, j, l, m], is_dual)
    } else {
        select_2397([c, d, e, j, f, g, h, i, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_5845([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5846([b, k, c, f, g, h, i, a, j, l, m, n], is_dual)
    } else {
        select_5847([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_5849([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_87([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_782([k, l, g, a, h, b, j, c, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_5848([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5849([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2850([g, b, d, e, f, a, h, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_5844([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_5845([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5848([a, c, l, d, e, f, b, j, k, m, n, o], is_dual)
    }
}
/// n = 10, i = 4
fn select_5852([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_453([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_1933([f, a, i, j, h, b, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5851([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1646([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_5852([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5853([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1646([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_3835([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5850([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_5851([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_5853([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 15, i = 4
fn select_5843([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5844([a, b, c, d, e, f, g, h, i, j, k, l, n, o, m], is_dual)
    } else {
        select_5850([a, b, c, d, k, l, m, n, o, j], is_dual)
    }
}
/// n = 6, i = 2
fn select_5856([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_718([a, b, d, c, e, f], is_dual)
    } else {
        select_718([a, c, d, b, e, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_5855([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3348([a, b, c, d, e, f, g], is_dual)
    } else {
        select_5856([a, b, f, e, c, g], !is_dual)
    }
}
/// n = 7, i = 3
fn select_5858([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_655([b, c, d, e, a, f, g], is_dual)
    } else {
        select_779([e, f, g, b, c, d, a], !is_dual)
    }
}
/// n = 8, i = 3
fn select_5857([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2709([a, c, d, b, e, g, f, h], is_dual)
    } else {
        select_5858([a, c, d, f, g, b, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_5854([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_5855([a, b, c, h, f, d, g], !is_dual)
    } else {
        select_5857([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 15, i = 4
fn select_5842([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < d) || (is_dual && n > d) {
        select_5843([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_5854([a, b, m, o, j, c, d, n], !is_dual)
    }
}
/// n = 15, i = 4
fn select_5835([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_5836([a, b, c, d, e, f, g, k, l, j, m, n, o], is_dual)
    } else {
        select_5842([a, b, c, d, h, i, e, f, g, j, k, m, l, n, o], is_dual)
    }
}
/// n = 11, i = 4
fn select_5863([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2998([g, j, k, a, b, c, i, h], !is_dual)
    } else {
        select_3268([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_5862([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2013([c, d, e, f, g, a, b, h, j, i, k], is_dual)
    } else {
        select_5863([c, a, b, d, e, h, j, k, l, m, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_5866([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_135([c, i, d, e, f, g, h, j], is_dual)
    } else {
        select_3122([a, b, h, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_5865([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_5866([a, b, k, f, g, h, i, c, j, l, m, n], is_dual)
    } else {
        select_4383([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_5867([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_5866([a, b, i, e, f, g, h, c, j, k, l, m], is_dual)
    } else {
        select_4382([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_5864([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_5865([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5867([a, b, c, j, f, g, h, i, d, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5861([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < m) || (is_dual && j > m) {
        select_5862([b, c, a, d, e, m, f, k, l, j, n, o, p], is_dual)
    } else {
        select_5864([b, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5860([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5861([a, c, d, e, f, g, h, i, j, b, k, l, m, n, o, p], is_dual)
    } else {
        select_5861([b, c, d, e, f, g, h, i, j, a, k, l, m, n, o, p], is_dual)
    }
}
/// n = 8, i = 2
fn select_5872([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_285([b, c, d, e, f, g], is_dual)
    } else {
        select_637([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_5871([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5872([a, b, c, d, e, i, h, j], is_dual)
    } else {
        select_568([b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5870([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_5871([c, d, e, f, g, a, b, i, h, j], is_dual)
    } else {
        select_5863([c, a, b, d, e, f, i, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 3
fn select_5873([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5867([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_5867([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_5869([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_5870([b, c, a, d, e, f, l, k, j, m, n, o], is_dual)
    } else {
        select_5873([b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5868([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5869([a, c, d, e, f, g, h, i, j, b, k, l, m, n, o], is_dual)
    } else {
        select_5869([b, c, d, e, f, g, h, i, j, a, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5859([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_5860([a, b, c, d, h, i, j, e, f, g, k, l, m, n, o, p], is_dual)
    } else {
        select_5868([a, b, c, d, e, f, g, h, i, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5834([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && c < n) || (is_dual && c > n) {
        select_5835([a, b, d, e, f, g, h, i, k, l, n, c, m, o, p], is_dual)
    } else {
        select_5859([a, b, d, e, f, g, h, c, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5833([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_5834([a, b, c, d, e, h, i, j, f, g, l, m, n, k, o, p], is_dual)
    } else {
        select_5834([a, b, c, d, e, h, i, j, g, f, k, m, n, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5726([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_5727([a, b, c, e, f, g, h, i, j, k, l, m, d, n, o, p], is_dual)
    } else {
        select_5833([a, b, c, d, e, f, g, h, i, j, l, m, k, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5725([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5726([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    } else {
        select_5726([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 4
fn select_5883([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_833([a, b, d, f, e, g, h, i], is_dual)
    } else {
        select_1258([e, h, j, a, f, i, b, c, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5885([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([a, b, c, d, e, f], is_dual)
    } else {
        select_65([a, f, h, i, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5884([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_301([a, c, d, b, e, f, g], is_dual)
    } else {
        select_5885([e, f, h, i, a, b, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_5882([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_5883([a, b, d, c, e, g, f, i, h, j], is_dual)
    } else {
        select_5884([e, i, f, j, a, g, h, b, c], !is_dual)
    }
}
/// n = 13, i = 4
fn select_5881([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_133([b, c, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5882([b, c, j, d, h, a, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5880([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_960([a, b, d, e, g, c, i, h, j, k, l, m], is_dual)
    } else {
        select_5881([a, b, c, f, d, e, j, h, i, l, m, k, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_5889([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_71([a, b, d, g, f, e, h, i], is_dual)
    } else {
        select_1844([a, b, c, h, e, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_5888([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_5889([a, b, c, d, f, e, g, h, j, i], is_dual)
    } else {
        select_583([f, j, k, e, g, a, i, h], !is_dual)
    }
}
/// n = 14, i = 4
fn select_5890([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_400([a, c, i, d, e, f, g, h, j, k, l, m], is_dual)
    } else {
        select_139([a, b, j, d, e, f, g, h, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5887([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5888([b, k, c, d, h, a, i, j, l, m, n], is_dual)
    } else {
        select_5890([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5886([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5887([a, b, e, f, c, d, k, h, i, j, m, n, l, o], is_dual)
    } else {
        select_960([a, b, c, d, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5879([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_5880([a, b, c, d, e, j, g, h, l, k, i, m, n, o], is_dual)
    } else {
        select_5886([a, b, d, e, c, f, g, h, i, j, k, l, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5892([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_5887([a, b, e, f, c, d, l, i, j, k, n, o, m, p], is_dual)
    } else {
        select_3610([g, h, j, k, c, d, b, a, i, l, m, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5893([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5881([a, b, c, f, d, e, k, i, j, m, n, l, o], is_dual)
    } else {
        select_3610([c, j, g, h, d, e, b, a, i, l, k, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5891([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_5892([a, b, d, e, c, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    } else {
        select_5893([a, b, c, d, e, k, g, h, i, l, m, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5878([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_5879([a, b, c, d, e, g, l, i, j, k, f, m, n, o, p], is_dual)
    } else {
        select_5891([a, b, c, d, e, g, f, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 9, i = 1
fn select_5898([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_58([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_58([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 1
fn select_5897([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_5898([a, b, c, i, f, g, h, d, j], is_dual)
    } else {
        select_1834([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_5899([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_5845([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3904([a, j, d, e, f, g, h, i, b, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5896([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_5897([a, c, d, e, i, b, j, l, k, n], is_dual)
    } else {
        select_5899([a, b, f, g, h, c, d, e, k, j, l, m, o, p], is_dual)
    }
}
/// n = 11, i = 1
fn select_5903([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_135([a, j, e, f, g, h, i, k], is_dual)
    } else {
        select_2397([b, c, d, i, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 1
fn select_5902([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5903([a, c, d, e, f, g, h, i, b, j, k], is_dual)
    } else {
        select_5903([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    }
}
/// n = 11, i = 1
fn select_5901([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1819([a, b, j, f, g, h, i, c, k], is_dual)
    } else {
        select_5902([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 2
fn select_5900([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5897([a, b, c, d, g, e, f, k, j, m], is_dual)
    } else {
        select_5901([a, e, f, h, i, b, c, d, j, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_5895([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_5896([a, b, e, f, g, h, c, d, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_5900([a, e, f, g, c, d, i, b, j, k, m, n, l], is_dual)
    }
}
/// n = 11, i = 1
fn select_5907([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_1820([b, j, e, f, g, h, i, a, k], is_dual)
    } else {
        select_5903([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 3
fn select_5906([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_5845([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_5907([a, j, d, e, f, g, h, i, c, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_5905([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_5897([a, d, e, f, i, c, j, l, k, n], is_dual)
    } else {
        select_5906([a, b, c, g, h, d, e, f, k, j, l, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5904([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_5900([a, f, g, h, d, e, i, c, j, k, m, n, l], is_dual)
    } else {
        select_5905([a, b, c, f, g, h, d, e, i, j, k, l, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5894([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5895([a, b, d, e, f, g, h, c, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_5904([a, b, c, d, e, f, g, h, i, j, l, m, k, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5877([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_5878([a, c, d, f, g, h, e, i, j, k, l, m, b, n, o, p], is_dual)
    } else {
        select_5894([a, c, d, b, e, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5876([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5877([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_5877([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 2
fn select_5914([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_168([a, b, c, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_2826([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_5916([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_170([c, a, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_1951([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_5915([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_168([c, d, f, a, b, e, g, h, i, j, k], is_dual)
    } else {
        select_5916([a, b, d, c, e, h, g, i, k, j, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_5913([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_5914([c, d, e, f, g, h, k, i, j, l, m, n], is_dual)
    } else {
        select_5915([a, b, c, d, m, e, i, j, l, k, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_5919([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_4746([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_33([a, j, i, b], !is_dual)
    }
}
/// n = 12, i = 3
fn select_5918([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_434([a, b, c, g, e, f, i, h, j, k], is_dual)
    } else {
        select_5919([a, b, d, c, j, g, h, k, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5920([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1103([g, a, d, e, f, b, h, i, j, k], is_dual)
    } else {
        select_1849([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5917([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_5918([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_5920([a, b, g, c, e, f, i, h, j, l, m, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_5912([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_5913([b, c, d, e, a, f, g, h, j, i, k, l, m, n, o], is_dual)
    } else {
        select_5917([b, a, c, e, d, m, j, k, l, n, i, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_5924([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4315([a, f, c, d, i, g, h, e, j, k], is_dual)
    } else {
        select_1124([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_5923([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_5924([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_3894([a, b, c, h, e, g, j, i, f, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5926([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_679([e, a, i, j, b, h], !is_dual)
    } else {
        select_724([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5929([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_184([a, c, d, e, f, g, i], is_dual)
    } else {
        select_123([a, b, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_5928([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_5929([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_664([a, e, c, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5927([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5928([a, b, c, g, e, f, i, h, j], is_dual)
    } else {
        select_44([b, d, h, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_5925([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_5926([a, g, b, d, f, h, e, i, j, k], is_dual)
    } else {
        select_5927([a, b, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_5922([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5923([a, b, d, c, e, g, h, f, j, i, k], is_dual)
    } else {
        select_5925([a, h, c, b, e, j, f, g, k, l, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_5931([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_2106([a, b, d, c, j, h, i, l, m, n], is_dual)
    } else {
        select_638([a, c, h, i, e, f, g, k, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_5932([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_471([a, c, d, b, j, h, i, l, m, n], is_dual)
    } else {
        select_638([a, b, h, i, e, f, g, k, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_5930([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_5931([a, h, b, d, e, f, g, j, i, l, k, m, n, o], is_dual)
    } else {
        select_5932([a, b, c, i, e, f, g, h, k, l, j, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_5921([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < m) || (is_dual && a > m) {
        select_5922([a, b, c, d, h, i, n, j, k, l, o, p], is_dual)
    } else {
        select_5930([h, b, c, d, e, f, g, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5911([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_5912([b, a, c, d, e, f, g, h, i, k, j, l, m, n, o, p], is_dual)
    } else {
        select_5921([b, d, c, e, f, g, h, i, j, k, a, l, m, n, o, p], is_dual)
    }
}
/// n = 13, i = 4
fn select_5936([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3882([a, b, c, d, g, k, h, j, l, m], is_dual)
    } else {
        select_793([c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_5935([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5936([a, d, b, c, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_2795([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_5934([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < k) || (is_dual && n > k) {
        select_2100([a, b, c, d, j, f, g, h, i, k, l, m, n], is_dual)
    } else {
        select_5935([a, b, c, e, d, m, i, j, l, n, k, o, p], is_dual)
    }
}
/// n = 12, i = 2
fn select_5940([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_304([b, c, h, j, a, i, l], is_dual)
    } else {
        select_59([d, a, i, e, f, g, h, k, j], is_dual)
    }
}
/// n = 14, i = 2
fn select_5941([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_5697([i, g, h, d, e, f, k, j, l, m, n], is_dual)
    } else {
        select_401([d, e, f, a, b, c, m, l, k], is_dual)
    }
}
/// n = 14, i = 2
fn select_5939([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_5940([a, c, d, k, g, h, i, b, j, l, m, n], is_dual)
    } else {
        select_5941([b, e, f, g, h, i, c, d, a, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_5944([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_215([b, c, d, e, h, g], is_dual)
    } else {
        select_281([h, j, k, f, i, a, b, c], !is_dual)
    }
}
/// n = 13, i = 4
fn select_5943([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5944([a, b, h, e, f, g, i, j, l, k, m], is_dual)
    } else {
        select_211([g, c, d, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_5946([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_31([b, c, d, e, h, g, i], is_dual)
    } else {
        select_390([a, b, c, f, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5945([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_286([b, g, e, f, j, i], is_dual)
    } else {
        select_5946([a, b, i, c, d, g, h, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5942([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_5943([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_5945([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5938([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_5939([b, d, e, f, a, c, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5942([b, a, c, e, f, d, l, k, n, m, j, o, p], is_dual)
    }
}
/// n = 13, i = 2
fn select_5948([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_894([h, i, g, d, e, f, k, j, l, m], is_dual)
    } else {
        select_894([h, i, g, a, b, c, l, j, k, m], is_dual)
    }
}
/// n = 14, i = 2
fn select_5947([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_5948([c, d, j, g, h, i, e, a, b, k, m, l, n], is_dual)
    } else {
        select_3768([a, b, c, d, f, e, l, j, k, n, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5937([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_5938([b, a, c, f, d, e, g, h, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_5947([b, c, d, e, f, a, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5933([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_5934([b, d, e, f, c, g, h, i, j, k, a, l, m, n, o, p], is_dual)
    } else {
        select_5937([b, a, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5910([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_5911([a, c, d, f, e, g, h, i, j, k, l, b, m, n, o, p], is_dual)
    } else {
        select_5933([a, c, d, b, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5909([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5910([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_5910([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_5954([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4804([b, d, e, f, a, c, g, i, h, j], is_dual)
    } else {
        select_578([i, k, h, l, a, b, j, c, g], !is_dual)
    }
}
/// n = 12, i = 2
fn select_5956([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_494([a, b, j, e, f, g, h, i, k, l], is_dual)
    } else {
        select_401([c, d, i, e, f, g, h, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_5955([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_5956([b, c, a, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_5846([b, i, c, e, f, g, h, a, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_5953([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_5954([a, b, d, c, l, e, j, k, i, m, n, o], is_dual)
    } else {
        select_5955([b, a, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_5958([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1061([f, e, i, g, h, a, c, b], !is_dual)
    } else {
        select_4302([f, g, i, a, e, h, c, b, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_5957([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2973([a, e, h, i, f, b, c, g], !is_dual)
    } else {
        select_5958([e, f, h, i, a, b, c, g, d], !is_dual)
    }
}
/// n = 16, i = 4
fn select_5952([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_5953([a, b, d, j, e, f, g, h, i, k, l, m, n, o, p], is_dual)
    } else {
        select_5957([i, o, p, l, b, a, j, c, n], !is_dual)
    }
}
/// n = 16, i = 4
fn select_5951([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_5952([a, c, b, d, e, f, g, h, k, j, l, i, m, n, o, p], is_dual)
    } else {
        select_5952([b, c, a, d, e, f, g, h, k, i, l, j, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5950([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5951([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5951([b, c, d, e, f, g, h, i, a, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5949([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5950([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_5950([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5908([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < n) || (is_dual && o > n) {
        select_5909([a, b, c, d, f, g, e, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5949([a, b, c, d, e, f, g, h, i, j, k, l, m, o, p, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5875([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < k) || (is_dual && n > k) {
        select_5876([a, b, c, d, f, g, h, i, j, e, l, m, k, n, o, p], is_dual)
    } else {
        select_5908([a, b, c, d, e, f, g, h, i, j, l, m, n, k, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5874([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5875([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    } else {
        select_5875([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5724([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5725([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    } else {
        select_5874([a, b, c, d, e, f, h, i, j, k, l, g, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 3
fn select_5969([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_938([a, d, h, e, f, g, i, j, l], is_dual)
    } else {
        select_3124([b, c, i, e, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_5971([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2790([a, b, e, f, c, d, g, h, i, j], is_dual)
    } else {
        select_115([a, j, b, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_5970([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1954([a, b, c, g, f, h, j, i, k], is_dual)
    } else {
        select_5971([a, f, d, e, b, c, h, i, j, g, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_5968([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_5969([a, b, c, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_5970([a, b, c, d, k, e, h, i, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_5967([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_5968([g, c, d, b, a, e, f, h, k, i, j, l, m, n], is_dual)
    } else {
        select_1355([h, c, d, e, f, k, l, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_5975([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1995([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_3093([a, b, c, d, f, g, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5974([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_5975([a, b, f, e, d, h, g, i, j], is_dual)
    } else {
        select_997([a, c, d, e, g, f, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_5976([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_622([h, f, i, a, b, g, c], !is_dual)
    } else {
        select_4273([a, b, d, e, c, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_5973([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5974([a, c, b, f, i, g, j, k, h, l], is_dual)
    } else {
        select_5976([a, h, c, d, e, f, k, i, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_5979([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_61([b, c, d, e, f, g], is_dual)
    } else {
        select_4854([a, b, g, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_5978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_304([b, e, c, d, f, g, h], is_dual)
    } else {
        select_5979([a, g, c, d, f, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_5977([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2660([a, b, c, e, g, f, i, h, j], is_dual)
    } else {
        select_5978([c, d, a, b, f, h, g, j, i, k], is_dual)
    }
}
/// n = 14, i = 4
fn select_5972([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5973([a, f, d, e, k, g, h, i, j, l, m, n], is_dual)
    } else {
        select_5977([b, c, d, f, j, g, h, l, i, k, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5966([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_5967([g, f, a, c, d, e, b, h, i, k, j, l, m, n], is_dual)
    } else {
        select_5972([b, d, e, f, g, c, h, i, a, j, k, l, m, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_5981([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_5845([a, b, e, c, d, f, g, h, i, j, k, l, n, o], is_dual)
    } else {
        select_285([a, c, d, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_5985([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([a, e, f, h, j], is_dual)
    } else {
        select_65([b, c, d, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_5986([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_997([h, f, j, g, a, i, e, b], !is_dual)
    } else {
        select_2568([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_5984([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_5985([b, a, c, f, d, e, h, g, i, j], is_dual)
    } else {
        select_5986([b, c, d, e, g, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_5983([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3636([a, c, e, h, f, g, i, k, j], is_dual)
    } else {
        select_5984([a, b, c, d, j, e, i, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_5982([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5983([a, b, e, f, g, c, d, h, j, i, k, l, m], is_dual)
    } else {
        select_5983([a, b, e, f, g, d, c, h, j, i, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5980([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_5981([a, b, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5982([a, b, d, e, c, f, m, k, l, j, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5965([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < m) || (is_dual && b > m) {
        select_5966([a, c, d, e, f, m, g, b, j, k, l, n, o, p], is_dual)
    } else {
        select_5980([a, c, d, e, f, g, b, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_5992([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_106([i, e, c, d, f, g, k], is_dual)
    } else {
        select_1407([g, e, a, b, f, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_5993([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_61([c, d, e, i, g, h], is_dual)
    } else {
        select_775([c, a, h, b, f, g, j, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_5991([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_5992([d, e, a, g, c, h, f, i, k, j, l], is_dual)
    } else {
        select_5993([f, c, b, d, e, h, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_5994([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1604([a, b, c, e, g, h, i, j], is_dual)
    } else {
        select_201([a, b, d, f, e, g, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_5990([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_5991([b, g, c, d, e, f, i, h, j, k, l, m], is_dual)
    } else {
        select_5994([f, a, h, j, g, k, m, l, n, i], is_dual)
    }
}
/// n = 15, i = 4
fn select_5989([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_5990([a, h, b, d, e, k, f, g, i, l, j, m, n, o], is_dual)
    } else {
        select_5990([a, g, c, d, e, j, f, h, i, l, k, m, n, o], is_dual)
    }
}
/// n = 13, i = 4
fn select_5997([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_285([b, c, h, d, i, k], is_dual)
    } else {
        select_2596([a, e, f, b, c, d, g, h, i, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_5996([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_5997([a, b, c, h, d, e, g, i, j, k, l, m, n], is_dual)
    } else {
        select_285([b, c, i, f, l, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_5999([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_718([h, a, i, f, j, k], is_dual)
    } else {
        select_181([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 15, i = 4
fn select_5998([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_3641([g, b, c, d, e, f, i, h, j, k, l, m], is_dual)
    } else {
        select_5999([a, h, k, b, c, g, i, m, j, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5995([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_5996([a, b, c, e, f, h, g, j, i, l, k, m, n, o], is_dual)
    } else {
        select_5998([a, e, f, d, b, c, g, h, i, l, k, m, j, n, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_5988([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_5989([b, c, d, e, f, g, h, i, j, a, k, l, m, n, o], is_dual)
    } else {
        select_5995([b, a, c, d, e, f, g, i, j, k, h, l, m, n, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_6003([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3178([h, b, c, d, e, f, i, g, j, k, l], is_dual)
    } else {
        select_328([g, a, c, d, e, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_6004([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_422([a, k, e, f, g, h, i, j, l, m], is_dual)
    } else {
        select_2397([b, c, d, j, e, f, g, h, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_6002([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_6003([b, k, e, f, g, h, a, i, j, l, m, n], is_dual)
    } else {
        select_6004([b, a, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_6006([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_476([a, f, g, b, c, j, h, k], is_dual)
    } else {
        select_162([a, h, d, e, i, f, g, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6005([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2167([a, b, g, e, f, d, h, j, i, k], is_dual)
    } else {
        select_6006([a, e, f, b, c, i, g, j, k, h, l], is_dual)
    }
}
/// n = 15, i = 3
fn select_6001([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_6002([a, c, d, e, f, g, h, i, j, k, l, m, n, o], is_dual)
    } else {
        select_6005([a, b, c, m, d, e, j, k, i, l, n, o], is_dual)
    }
}
/// n = 10, i = 3
fn select_6007([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_5211([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3976([a, b, j, c, d, i, h], !is_dual)
    }
}
/// n = 16, i = 4
fn select_6000([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < m) || (is_dual && o > m) {
        select_6001([a, d, e, g, h, b, c, f, i, j, k, l, m, n, o], is_dual)
    } else {
        select_6007([a, k, b, c, f, i, l, o, p, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5987([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < l) || (is_dual && b > l) {
        select_5988([a, c, d, e, g, h, l, i, j, b, k, m, n, o, p], is_dual)
    } else {
        select_6000([a, b, c, d, e, f, g, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5964([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_5965([a, b, d, e, c, f, g, h, i, j, l, k, m, n, o, p], is_dual)
    } else {
        select_5987([a, b, d, e, f, g, h, i, j, k, c, l, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_6013([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_49([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_40([a, i, b, c, g, f, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6012([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_686([f, e, c, d, h, g, j, k, l, m], is_dual)
    } else {
        select_6013([e, a, b, c, d, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6011([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6012([b, c, d, e, a, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_6012([b, c, d, e, a, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6010([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_695([a, b, c, d, g, j, h, i, k, l, m], is_dual)
    } else {
        select_6011([c, d, i, e, f, a, b, h, l, j, k, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6009([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6010([a, b, c, d, f, g, e, h, j, k, l, i, m, n], is_dual)
    } else {
        select_6010([a, b, c, e, f, g, d, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 13, i = 3
fn select_6017([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_570([a, b, c, i, e, f, g, h, k, j, l, m], is_dual)
    } else {
        select_866([b, c, d, g, j, h, i, l, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_6019([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4315([a, c, b, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1519([a, b, c, g, e, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6018([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_5826([a, b, c, e, i, g, h, j], is_dual)
    } else {
        select_6019([a, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6016([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_6017([a, b, c, f, d, e, g, h, i, j, l, k, m], is_dual)
    } else {
        select_6018([a, b, c, j, f, k, h, i, g, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6016([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_6016([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 2
fn select_6024([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_61([c, d, e, j, g, i], is_dual)
    } else {
        select_182([c, a, b, f, i, g, h, k, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_6025([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_22([b, c, d, e, k, h, i], is_dual)
    } else {
        select_2790([b, c, f, g, a, i, h, j, l, k], is_dual)
    }
}
/// n = 12, i = 2
fn select_6023([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6024([b, c, h, f, g, e, a, i, j, k, l], is_dual)
    } else {
        select_6025([e, a, d, f, g, b, c, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 2
fn select_6022([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_6023([b, e, f, d, g, a, h, i, j, k, m, l], is_dual)
    } else {
        select_4982([a, e, f, c, b, i, h, j, l, m, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_6028([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1527([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_43([h, d, b, c, a, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6027([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_304([d, j, e, f, a, g, i], is_dual)
    } else {
        select_6028([a, b, c, g, e, f, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_6026([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_6023([b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_6027([a, d, e, c, b, i, h, j, m, l, k, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6021([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6022([b, c, a, f, d, e, g, h, j, k, i, m, l], is_dual)
    } else {
        select_6026([a, c, b, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6020([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6021([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_6021([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6014([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6015([a, b, c, d, g, h, e, i, k, l, m, j, n], is_dual)
    } else {
        select_6020([a, b, c, e, g, h, d, f, i, j, l, m, k, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_6008([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && c < k) || (is_dual && c > k) {
        select_6009([a, b, k, d, e, g, h, c, i, j, l, m, n, o], is_dual)
    } else {
        select_6014([a, b, d, e, c, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5963([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_5964([a, b, c, d, f, g, e, h, i, k, l, j, m, n, o, p], is_dual)
    } else {
        select_6008([a, b, c, f, g, j, h, i, k, l, e, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_6036([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_211([a, c, d, i, k], is_dual)
    } else {
        select_215([b, e, f, h, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6037([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_22([b, c, a, d, e, f, g], is_dual)
    } else {
        select_341([a, f, d, e, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_6035([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6036([a, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6037([a, c, j, d, e, g, i, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6034([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6035([a, b, d, e, f, c, g, i, j, h, k, l, m], is_dual)
    } else {
        select_6035([a, c, d, e, f, b, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6033([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3927([h, a, b, c, j, i, k, l, m, g], is_dual)
    } else {
        select_6034([b, a, c, d, e, f, h, g, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_6039([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_577([e, b, c, f, g, i, h], is_dual)
    } else {
        select_4429([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6041([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_243([a, e, c, d, g, f, h], is_dual)
    } else {
        select_770([g, i, j, e, a, b, h, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6040([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_656([e, i, j, g, b, a, c, h], !is_dual)
    } else {
        select_6041([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6038([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_6039([b, a, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_6040([g, a, b, c, f, h, i, j, k, e], is_dual)
    }
}
/// n = 13, i = 4
fn select_6032([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_6033([b, a, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_6038([b, j, c, d, g, a, h, i, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_6046([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_211([i, c, d, e, k], is_dual)
    } else {
        select_731([h, a, b, j, f, g, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_6047([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_22([a, f, c, d, e, g, h], is_dual)
    } else {
        select_176([a, b, h, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_6045([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_6046([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_6047([a, g, c, d, e, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6044([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_6045([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1044([j, h, l, f, i, a, k, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6049([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_984([a, e, b, d, h, g, f, j, i, k], is_dual)
    } else {
        select_4183([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6050([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_584([a, e, c, g, f, i, j], is_dual)
    } else {
        select_770([a, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6048([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6049([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_6050([a, b, g, c, f, h, i, e, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6043([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6044([a, e, c, d, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_6048([a, b, j, e, f, k, h, i, g, l, m], is_dual)
    }
}
/// n = 12, i = 2
fn select_6052([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2540([a, b, f, g, c, h, e, i, k, l, j], is_dual)
    } else {
        select_4982([c, f, g, d, a, b, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6054([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2541([b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6037([a, e, f, d, j, i, h, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_6055([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3376([b, c, d, g, f, a, h, i, j, k], is_dual)
    } else {
        select_1111([b, c, d, a, e, f, h, g, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_6053([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_6054([a, b, c, h, d, e, g, j, i, k, l, m, n], is_dual)
    } else {
        select_6055([a, i, b, c, f, l, h, k, j, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6051([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6052([c, d, b, a, g, e, f, h, j, k, i, l], is_dual)
    } else {
        select_6053([a, c, d, e, f, b, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6042([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_6043([b, c, e, f, d, h, i, k, a, j, l, m, n], is_dual)
    } else {
        select_6051([b, c, a, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6031([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_6032([a, b, d, j, f, g, h, c, i, k, l, m, n], is_dual)
    } else {
        select_6042([a, b, d, e, f, g, c, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6030([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6031([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_6031([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_6061([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_111([a, c, h, d, e, f, g, i, k, l], is_dual)
    } else {
        select_88([a, b, g, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6063([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_266([e, h, j, i, g, f, a, b], !is_dual)
    } else {
        select_1899([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6062([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_718([e, b, g, f, c, h], is_dual)
    } else {
        select_6063([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6060([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6061([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6062([a, c, b, i, f, h, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6059([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6060([b, i, c, e, f, g, a, h, j, k, l, m], is_dual)
    } else {
        select_3210([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6065([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2940([c, b, d, a, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1437([b, c, i, d, a, g, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_6066([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_887([c, d, e, f, b, a, g, h, i, j], is_dual)
    } else {
        select_662([a, b, c, d, i, g, j, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_6064([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6065([a, b, c, i, e, f, h, g, j, k, l, m], is_dual)
    } else {
        select_6066([a, c, d, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6058([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_6059([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_6064([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6057([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6058([a, b, c, d, g, e, f, h, i, k, j, l, m], is_dual)
    } else {
        select_3430([a, b, i, d, e, f, c, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6072([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_233([b, c, g, f, a, h, i, j, k], is_dual)
    } else {
        select_1158([b, c, a, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6071([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_304([c, h, d, e, a, g, i], is_dual)
    } else {
        select_6072([a, b, g, d, e, f, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6070([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6071([a, b, e, c, d, f, g, h, i, k, j, l], is_dual)
    } else {
        select_447([a, h, c, d, g, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6076([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_32([f, c, b, e, h, j], is_dual)
    } else {
        select_73([g, a, i, d, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6075([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_211([g, c, d, i, h], is_dual)
    } else {
        select_6076([a, b, h, e, f, g, j, k, l, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6077([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1691([a, c, d, e, f, g, j, i, h, k], is_dual)
    } else {
        select_234([c, b, g, f, d, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_6074([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6075([b, c, a, d, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_6077([b, g, c, a, e, f, h, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6079([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_266([a, d, c, f, e, g, h, j], is_dual)
    } else {
        select_1691([a, c, b, e, f, d, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6078([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1381([a, c, d, e, g, h, i, j], is_dual)
    } else {
        select_6079([b, c, d, e, f, g, j, h, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6073([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6074([a, b, d, c, e, g, f, h, j, i, k, l], is_dual)
    } else {
        select_6078([a, b, f, d, i, e, g, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6069([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6070([b, c, a, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_6073([b, c, d, e, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6083([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_65([c, d, f, g, i], is_dual)
    } else {
        select_341([a, b, e, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_6084([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_22([d, e, a, b, c, f, g], is_dual)
    } else {
        select_341([a, b, c, f, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_6082([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6083([a, b, c, d, e, g, i, h, j, k, l], is_dual)
    } else {
        select_6084([a, b, e, f, h, g, i, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_6085([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_64([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_39([a, e, h, b], is_dual)
    }
}
/// n = 12, i = 4
fn select_6081([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_6082([a, b, d, e, c, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6085([d, e, h, f, c, g, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_6087([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_304([c, h, d, e, a, g, i], is_dual)
    } else {
        select_3046([a, b, g, d, e, f, i, h, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_6088([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1647([a, b, f, c, g], is_dual)
    } else {
        select_351([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_6086([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_6087([c, d, e, a, b, f, g, h, i, j], is_dual)
    } else {
        select_6088([a, b, h, c, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6080([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6081([b, c, d, a, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_6086([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6068([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_6069([a, d, c, e, f, g, h, i, b, j, k, l], is_dual)
    } else {
        select_6080([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_6092([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_350([b, f, d, a, e, g, h], is_dual)
    } else {
        select_1363([a, c, b, e, g, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6091([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2171([b, a, d, c, g, h, i, f, j, k], is_dual)
    } else {
        select_6092([b, c, d, a, e, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6090([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6091([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6091([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6094([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_5579([j, k, f, b, h, a, i, g], !is_dual)
    } else {
        select_2581([b, a, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6093([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6094([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6094([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6089([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6090([a, b, c, d, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6093([a, b, c, e, h, f, i, g, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6067([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6068([a, b, c, h, d, f, j, g, i, k, l, m], is_dual)
    } else {
        select_6089([a, b, c, d, i, e, k, g, h, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6056([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_6057([a, b, d, e, c, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_6067([a, b, d, e, g, f, h, j, i, k, c, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6029([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_6030([a, b, c, d, f, g, e, h, j, k, i, l, m, n], is_dual)
    } else {
        select_6056([a, b, c, d, f, g, i, j, k, e, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5962([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_5963([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_6029([a, b, c, d, e, f, g, m, n, k, l, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5961([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_5962([a, b, c, d, f, g, h, i, j, e, k, l, m, n, o, p], is_dual)
    } else {
        select_5962([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    }
}
/// n = 8, i = 3
fn select_6103([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_442([c, a, d, e, f, b, g, h], is_dual)
    } else {
        select_442([c, b, d, e, f, a, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_6102([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1944([c, b, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6103([a, i, j, k, b, g, c, h], !is_dual)
    }
}
/// n = 12, i = 4
fn select_6101([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6102([a, b, c, d, e, h, g, j, k, i, l], is_dual)
    } else {
        select_3257([a, c, d, f, b, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6100([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_4504([a, b, c, d, k, h, l, g, m, j], is_dual)
    } else {
        select_6101([a, b, c, e, g, f, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6099([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_4483([a, c, b, d, e, i, h, k, j, l, m, g], is_dual)
    } else {
        select_6100([a, c, b, d, e, f, h, g, i, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6098([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6099([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_6099([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_6109([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_340([a, b, d, e, g, i, f], is_dual)
    } else {
        select_340([a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_6108([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_339([a, c, d, b, g, e, f, h], is_dual)
    } else {
        select_6109([a, e, h, i, b, f, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6111([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1647([a, h, b, i, j], is_dual)
    } else {
        select_1962([b, a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6112([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_300([b, h, c, d, f, g], is_dual)
    } else {
        select_4954([h, j, k, e, a, i, b, g, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6110([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_6111([a, b, c, g, f, h, i, j, e, k], is_dual)
    } else {
        select_6112([a, c, b, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6107([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6108([l, b, a, c, m, f, g, i, k], is_dual)
    } else {
        select_6110([a, b, d, e, i, f, h, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_6115([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_340([e, g, c, a, f, h, i], is_dual)
    } else {
        select_2504([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6114([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_5429([a, b, c, f, e, h, i, j, g], is_dual)
    } else {
        select_6115([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6116([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_608([f, a, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_4358([a, b, c, d, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6113([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6114([a, b, j, d, l, f, m, i, h, k], is_dual)
    } else {
        select_6116([a, b, c, h, e, i, g, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6106([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6107([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_6113([a, b, d, c, e, g, h, i, j, k, f, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6105([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6106([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6106([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_6119([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1212([a, g, b, c, d, h, f, i], is_dual)
    } else {
        select_1212([a, f, b, c, e, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_6123([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_211([d, b, c, e, f], is_dual)
    } else {
        select_632([d, g, e, h, a, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6122([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6123([b, a, f, e, h, i, j, k], is_dual)
    } else {
        select_2185([c, d, e, a, h, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_6124([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1665([a, b, c, f, h, i, j, k], is_dual)
    } else {
        select_2185([a, d, e, c, g, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_6121([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6122([c, b, d, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_6124([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_6126([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_5885([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_5885([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6125([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_520([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_6126([a, g, f, i, j, b, h, c, d], !is_dual)
    }
}
/// n = 13, i = 4
fn select_6120([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6121([a, b, e, i, f, g, h, k, j, l, m], is_dual)
    } else {
        select_6125([a, b, c, d, j, g, l, i, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6118([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_6119([a, b, c, d, j, g, l, m, i], is_dual)
    } else {
        select_6120([a, d, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_6131([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_255([a, b, c, f, e, g, h], is_dual)
    } else {
        select_477([c, d, g, e, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6130([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2898([b, c, a, e, d, f, g, h], is_dual)
    } else {
        select_6131([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6133([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_211([a, d, e, h, j], is_dual)
    } else {
        select_176([b, c, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6134([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_65([a, b, d, h, j], is_dual)
    } else {
        select_176([c, e, g, f, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_6132([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6133([a, d, f, e, h, g, i, j, k, m], is_dual)
    } else {
        select_6134([b, c, d, i, f, g, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6129([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_6130([a, d, e, b, j, k, i, h, m], is_dual)
    } else {
        select_6132([a, d, e, c, b, f, g, i, h, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_6137([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_281([c, d, a, e, b, h, f, g], is_dual)
    } else {
        select_969([b, c, d, a, e, f, h, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_6136([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6137([a, b, d, i, f, h, l, k], is_dual)
    } else {
        select_1092([c, d, h, e, f, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_6139([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_553([b, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_4431([a, b, c, i, f, g, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_6140([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_335([a, b, g, d, h], is_dual)
    } else {
        select_73([a, c, f, e, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_6138([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6139([b, a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6140([b, i, c, a, f, g, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6135([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_6136([a, b, c, f, e, h, g, i, j, l, k, m], is_dual)
    } else {
        select_6138([a, b, d, c, g, f, i, j, k, l, m, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_6128([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6129([b, c, e, a, d, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_6135([b, c, e, d, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6127([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < c) || (is_dual && m > c) {
        select_6128([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_5856([a, b, k, g, m, c], is_dual)
    }
}
/// n = 13, i = 4
fn select_6117([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_6118([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_6127([a, c, d, b, f, g, e, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6104([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6105([a, b, e, d, f, g, h, i, c, j, k, l, m], is_dual)
    } else {
        select_6117([a, b, c, d, e, f, g, i, h, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6097([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6098([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_6104([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_6146([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_4314([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_4314([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6149([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1093([b, c, d, e, f, h, g], is_dual)
    } else {
        select_72([a, c, g, f, e, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_6148([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6149([a, b, h, c, f, j, g, k, l], is_dual)
    } else {
        select_1147([c, a, b, d, e, f, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6147([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6148([b, a, c, d, e, g, f, h, i, j, l, k], is_dual)
    } else {
        select_1571([f, b, d, e, a, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6145([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_6146([a, c, d, i, e, j, f, h, k, l], is_dual)
    } else {
        select_6147([a, b, c, d, h, f, g, k, j, l, m, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6153([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_98([g, h, e, i, d, f, a, b], !is_dual)
    } else {
        select_32([d, c, b, e, g, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_6152([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3554([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_6153([a, g, b, f, i, j, h, e, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_6154([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_5186([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_3009([a, b, d, g, f, h, e], is_dual)
    }
}
/// n = 12, i = 4
fn select_6151([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6152([b, f, c, d, g, e, h, j, k, i, l], is_dual)
    } else {
        select_6154([a, b, i, e, k, l, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_6157([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_121([g, a, h, d, i, e, j], is_dual)
    } else {
        select_998([d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_6157([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_34([h, j, a], is_dual)
    }
}
/// n = 12, i = 4
fn select_6155([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1621([g, b, c, d, i, f, h, j, k], is_dual)
    } else {
        select_6156([a, c, d, e, g, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6150([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6151([c, b, d, e, a, f, g, h, j, i, k, l], is_dual)
    } else {
        select_6155([c, a, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6144([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < f) || (is_dual && l > f) {
        select_6145([a, c, b, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_6150([a, b, c, d, h, g, i, k, j, l, m, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_6162([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_129([b, c, d, f, e, g], is_dual)
    } else {
        select_45([f, h, a, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6161([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_286([a, f, c, d, e, g], is_dual)
    } else {
        select_6162([h, e, i, j, f, a, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6160([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_6161([a, d, b, c, f, g, h, e, i, j], is_dual)
    } else {
        select_2231([b, c, d, a, f, g, e, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_6164([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_300([b, c, e, i, h, k], is_dual)
    } else {
        select_1191([a, d, f, b, c, h, g, j, i, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6163([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4996([a, d, b, c, f, e, h, i, g, j, k, l], is_dual)
    } else {
        select_6164([d, b, c, f, a, e, h, g, k, i, l, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_6159([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_6160([b, c, d, j, g, l, a, i, m, k], is_dual)
    } else {
        select_6163([b, c, d, e, a, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6158([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_6159([a, d, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6119([a, b, c, d, j, g, l, m, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_6143([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_6144([b, d, c, e, f, g, h, i, a, j, k, l, m], is_dual)
    } else {
        select_6158([b, a, c, d, e, f, g, i, h, k, j, l, m], is_dual)
    }
}
/// n = 12, i = 4
fn select_6168([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_4267([a, b, c, d, e, h, g, j, k, i, l], is_dual)
    } else {
        select_116([b, c, f, a, d, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6169([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_520([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_2055([g, i, f, j, a, b, h, c, d], !is_dual)
    }
}
/// n = 14, i = 4
fn select_6167([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6168([a, b, e, f, j, g, h, i, l, k, m, n], is_dual)
    } else {
        select_6169([a, b, c, d, k, h, m, j, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6166([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < j) || (is_dual && n > j) {
        select_6167([a, d, b, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6119([a, b, c, d, k, h, m, n, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6173([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1076([a, b, f, e, h, i, g, d, j], is_dual)
    } else {
        select_1154([b, a, c, e, d, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6174([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_4077([a, b, f, d, e, h, j, i, g], is_dual)
    } else {
        select_922([a, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_6172([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6173([a, b, c, d, g, e, h, f, i, j], is_dual)
    } else {
        select_6174([a, b, c, d, g, f, h, e, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6176([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_340([f, a, b, d, i, j, g], is_dual)
    } else {
        select_1604([d, b, c, g, e, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6177([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_668([a, b, c, e, f, g, h, i, d], is_dual)
    } else {
        select_5674([e, b, c, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_6175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6176([a, c, b, d, f, g, h, i, e, j], is_dual)
    } else {
        select_6177([a, b, e, d, h, i, f, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_6172([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_6175([a, b, c, d, f, g, i, h, e, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6180([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_71([b, f, c, d, e, g, h, j], is_dual)
    } else {
        select_1091([a, b, h, e, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_4077([a, b, h, e, f, i, k, j, g], is_dual)
    } else {
        select_1072([a, f, c, d, e, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6179([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6180([b, a, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_6181([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_6178([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_6179([a, b, c, i, g, h, k, l, m, n, j], is_dual)
    } else {
        select_2008([a, c, j, d, e, f, g, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6170([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < l) || (is_dual && a > l) {
        select_6171([b, c, l, g, m, a, h, n, j, k], is_dual)
    } else {
        select_6178([b, c, d, a, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6165([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6166([b, a, c, d, e, f, g, h, j, i, l, k, m, n], is_dual)
    } else {
        select_6170([b, d, c, e, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6142([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_6143([a, b, c, d, e, g, i, k, j, h, l, m, n], is_dual)
    } else {
        select_6165([a, c, b, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6141([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6142([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_6142([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6096([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_6097([a, b, c, j, e, f, h, d, i, k, l, m, n], is_dual)
    } else {
        select_6141([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_6188([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_4938([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_257([g, c, d, e, a, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6189([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_151([a, b, c, d, e, f, g, h, i, k], is_dual)
    } else {
        select_151([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6187([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6188([c, a, d, e, f, g, b, h, i, k, j], is_dual)
    } else {
        select_6189([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6186([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4032([b, e, f, d, c, a, g, i, j, h, k, l], is_dual)
    } else {
        select_6187([a, b, c, d, i, j, h, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6190([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_4032([b, e, f, d, c, a, g, i, j, h, k, l], is_dual)
    } else {
        select_6102([a, b, c, d, i, j, h, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6185([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_6186([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_6190([a, c, b, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6193([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_6102([a, b, c, d, i, k, h, l, m, j, n], is_dual)
    } else {
        select_3258([e, b, d, f, g, c, a, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6194([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6102([a, b, c, d, h, i, g, k, l, j, m], is_dual)
    } else {
        select_4106([a, c, e, f, b, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_6192([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_6193([a, b, c, e, f, d, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_6194([a, b, c, e, f, j, h, i, d, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_6197([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_4267([a, b, c, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_4267([a, b, c, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_6199([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_718([b, c, d, e, f, g], is_dual)
    } else {
        select_164([e, g, h, a, b, f, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_6198([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_656([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_6199([a, b, d, c, f, e, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_6196([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6197([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6198([h, a, j, k, l, b, c, i], !is_dual)
    }
}
/// n = 14, i = 4
fn select_6195([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_102([a, c, d, f, g, b, e, h, i, j, k, l, m], is_dual)
    } else {
        select_6196([a, b, c, d, e, i, j, h, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6191([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_6192([a, c, b, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_6195([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6184([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_6185([a, b, i, d, e, g, h, c, j, k, l, m, n], is_dual)
    } else {
        select_6191([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6183([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < d) || (is_dual && n > d) {
        select_6184([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2335([a, b, c, i, e, j, k, l, m, n, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_6202([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1302([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1302([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6205([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3802([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_447([a, b, c, d, g, e, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_6206([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_5898([a, c, d, b, f, g, h, e, i], is_dual)
    } else {
        select_514([a, c, d, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6204([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_6205([a, b, d, e, f, i, c, j, k, l], is_dual)
    } else {
        select_6206([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6203([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_6204([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1644([a, b, c, e, f, i, j, d, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6201([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_6202([a, b, c, d, f, i, j, e, k, l], is_dual)
    } else {
        select_6203([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6208([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_5585([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_5585([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6207([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_801([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_6208([a, b, c, d, f, g, h, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6200([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6201([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_6207([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_6182([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_6183([a, b, c, d, f, g, e, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6200([a, b, c, d, i, e, f, k, l, m, j, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6095([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6096([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    } else {
        select_6182([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_5960([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < k) || (is_dual && o > k) {
        select_5961([a, b, c, d, e, g, f, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_6095([a, b, c, d, e, f, g, m, h, n, l, o, p, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_5959([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_5960([a, b, c, d, e, f, h, i, j, k, g, l, m, n, o, p], is_dual)
    } else {
        select_5960([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5723([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < h) || (is_dual && n > h) {
        select_5724([a, b, c, d, e, f, g, i, j, h, k, l, m, n, o, p], is_dual)
    } else {
        select_5959([a, b, c, d, e, f, g, i, j, k, l, m, n, h, o, p], is_dual)
    }
}
/// n = 7, i = 3
fn select_6220([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_676([b, c, d, a, e, f, g], is_dual)
    } else {
        select_141([b, d, a, e, c, f], is_dual)
    }
}
/// n = 14, i = 4
fn select_6219([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_104([a, d, i, e, f, g, h, k, j, l], is_dual)
    } else {
        select_6220([a, b, c, l, m, n, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_6222([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2185([a, d, e, b, h, i, g], is_dual)
    } else {
        select_5206([a, c, b, g, f, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6221([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_116([a, b, d, e, f, i, k, h, j, l], is_dual)
    } else {
        select_6222([a, b, c, j, d, g, h, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6218([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6219([a, c, b, d, e, f, g, i, h, j, k, l, m, n], is_dual)
    } else {
        select_6221([a, d, c, e, f, g, h, i, b, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_6225([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3642([c, d, a, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_793([e, f, g, c, d, a, i, h, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6224([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_6225([f, g, a, b, c, d, e, h, i, j, k, l], is_dual)
    } else {
        select_5936([f, e, a, b, c, d, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6223([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_6224([c, e, f, g, d, a, b, h, i, j, k, l, m], is_dual)
    } else {
        select_3748([a, b, c, d, e, k, l, m, h], is_dual)
    }
}
/// n = 15, i = 4
fn select_6217([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_6218([a, b, c, e, d, g, h, i, j, k, l, m, o, n], is_dual)
    } else {
        select_6223([a, b, c, d, f, e, k, i, m, l, n, j, o], is_dual)
    }
}
/// n = 12, i = 3
fn select_6228([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_851([a, b, c, i, d, e, k, h, l], is_dual)
    } else {
        select_4532([a, b, c, h, f, g, j, i, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_6230([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_162([e, b, c, d, f, g, h, i], is_dual)
    } else {
        select_922([a, b, d, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6229([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3083([a, c, d, e, f, b, g, h, j, i, k], is_dual)
    } else {
        select_6230([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 4
fn select_6227([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_6228([b, a, d, f, g, c, h, i, j, k, m, l], is_dual)
    } else {
        select_6229([a, b, c, d, e, k, l, h, n, j, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_6233([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1178([a, c, f, d, e, h, g, j], is_dual)
    } else {
        select_4430([a, b, g, d, e, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_4305([j, e, k, f, a, g, i, b, h], !is_dual)
    } else {
        select_6233([b, a, c, d, g, e, f, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6236([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_775([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_731([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6235([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_374([b, a, d, f, g, e, i, j, h], is_dual)
    } else {
        select_6236([b, e, c, d, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6234([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6235([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_545([a, b, c, d, f, g, h, e, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_6231([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_6232([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_6234([a, d, b, e, f, g, c, h, j, i], is_dual)
    }
}
/// n = 14, i = 4
fn select_6226([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_6227([a, c, d, b, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_6231([a, c, d, k, e, l, b, h, j, n, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_6216([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < k) || (is_dual && o > k) {
        select_6217([b, c, d, a, e, i, g, h, l, k, j, n, m, p, o], is_dual)
    } else {
        select_6226([c, b, a, d, f, e, j, i, m, l, o, p, n, k], is_dual)
    }
}
/// n = 16, i = 4
fn select_6215([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6216([a, b, c, e, f, d, g, h, i, k, l, j, n, m, o, p], is_dual)
    } else {
        select_6216([b, a, c, d, f, e, g, h, j, k, m, i, n, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6214([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6215([a, c, d, b, e, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    } else {
        select_6215([b, c, d, a, e, f, g, h, i, k, l, j, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6213([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6214([a, c, d, e, f, g, h, i, b, j, k, l, m, n, o, p], is_dual)
    } else {
        select_6214([b, c, d, e, f, g, h, i, a, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6212([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_6213([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_6213([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6211([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_6212([a, b, c, d, e, g, f, h, i, j, l, m, k, n, o, p], is_dual)
    } else {
        select_6212([a, b, c, d, f, g, e, h, i, j, k, m, l, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6210([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_6211([a, b, c, d, e, g, h, i, j, k, f, l, m, n, o, p], is_dual)
    } else {
        select_6211([a, b, c, d, f, g, h, i, j, k, e, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6209([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6210([a, b, c, d, e, f, g, i, j, k, l, h, m, n, o, p], is_dual)
    } else {
        select_6210([a, b, c, d, e, f, h, i, j, k, l, g, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5722([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < m) || (is_dual && o > m) {
        select_5723([a, b, c, d, e, f, g, h, j, i, k, l, m, n, o, p], is_dual)
    } else {
        select_6209([a, b, c, d, e, f, g, h, i, j, k, l, n, o, p, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_5721([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_5722([a, b, c, d, e, f, g, h, i, k, l, m, j, n, o, p], is_dual)
    } else {
        select_5722([a, b, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5034([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < o) || (is_dual && k > o) {
        select_5035([a, b, c, d, e, f, g, h, i, j, l, m, n, o, k, p], is_dual)
    } else {
        select_5721([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_5033([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < o) || (is_dual && p > o) {
        select_5034([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_5721([a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_4606([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < k) || (is_dual && o > k) {
        select_4607([a, b, c, d, e, f, g, h, i, j, l, k, m, n, o, p], is_dual)
    } else {
        select_5033([a, b, c, d, e, f, g, h, i, j, l, m, n, o, k, p], is_dual)
    }
}
/// n = 13, i = 3
fn select_6253([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_304([c, d, e, f, k, h, i], is_dual)
    } else {
        select_4235([b, e, f, a, g, i, l, m, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6252([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_6253([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_6253([b, a, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_6255([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_124([a, b, h, f, i, g], is_dual)
    } else {
        select_3395([a, c, d, e, g, f, j, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_6254([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1535([a, c, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_6255([a, b, c, d, e, g, h, k, l, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_6251([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_6252([a, b, c, d, e, f, h, i, l, j, m, k, n], is_dual)
    } else {
        select_6254([a, b, c, d, g, j, h, i, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6258([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_496([a, b, e, f, g, h, k, j, l, n], is_dual)
    } else {
        select_5003([a, b, c, e, d, l, i, j, k, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6257([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6258([c, d, a, b, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_6258([c, d, b, a, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6256([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_433([f, g, c, d, e, i, j, l, m, k], is_dual)
    } else {
        select_6257([a, b, f, g, h, c, d, e, i, j, l, k, n, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_6250([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_6251([b, c, f, g, d, e, h, i, j, k, a, l, m, n], is_dual)
    } else {
        select_6256([b, c, a, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_6262([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2497([a, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_266([a, b, c, g, h, i, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_6264([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_739([d, c, a, b, e, f, h, g], is_dual)
    } else {
        select_375([a, d, b, e, g, h, f], is_dual)
    }
}
/// n = 11, i = 3
fn select_6263([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6264([c, d, g, e, f, h, j, i], is_dual)
    } else {
        select_2909([c, a, b, d, i, h, g, k, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_6261([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_6262([a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6263([a, b, c, k, d, h, i, g, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_6267([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_176([h, a, b, j, e], is_dual)
    } else {
        select_183([a, e, c, d, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_6268([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1148([b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_183([j, a, d, e, f, i, g, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6266([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_6267([a, b, c, d, g, h, i, l, m, k], is_dual)
    } else {
        select_6268([b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6269([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_285([a, b, c, h, i, k], is_dual)
    } else {
        select_169([d, e, f, a, b, c, g, h, i, j, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6265([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6266([a, d, b, c, e, f, h, j, i, k, g, l, m], is_dual)
    } else {
        select_6269([b, c, g, d, e, f, h, j, k, i, m, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6260([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6261([c, d, a, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_6265([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_6272([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_285([a, b, e, c, d, g], is_dual)
    } else {
        select_285([c, d, e, a, b, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_6271([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_284([f, b, d, e, a, g, h], is_dual)
    } else {
        select_6272([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_6270([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_6271([i, b, c, d, e, a, h, j], is_dual)
    } else {
        select_568([a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_6259([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_6260([g, f, a, b, e, c, d, h, i, k, j, m, l], is_dual)
    } else {
        select_6270([g, a, b, c, d, f, k, i, l, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_6249([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_6250([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_6259([d, e, f, g, c, b, a, j, k, m, l, i, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_6277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_350([c, d, a, e, f, g, h], is_dual)
    } else {
        select_1762([a, b, c, d, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_6278([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_65([a, b, d, e, i], is_dual)
    } else {
        select_2568([b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6276([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_6277([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_6278([c, d, a, e, f, g, b, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_6279([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1547([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_164([g, f, i, a, b, h, c], !is_dual)
    }
}
/// n = 12, i = 3
fn select_6275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6276([a, b, d, e, g, i, h, k, j, l], is_dual)
    } else {
        select_6279([a, b, c, f, j, h, l, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_6281([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_636([a, c, d, e, b, g, h, i, j], is_dual)
    } else {
        select_1505([a, b, f, c, d, h, g, j, k, i], is_dual)
    }
}
/// n = 12, i = 2
fn select_6282([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_636([c, a, b, d, h, i, k, l, j], is_dual)
    } else {
        select_1506([c, e, f, g, a, b, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6280([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_6281([b, a, c, d, e, i, l, j, h, k, m], is_dual)
    } else {
        select_6282([c, d, b, e, f, a, g, h, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_6274([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_6275([a, b, c, d, e, k, g, h, i, l, m, n], is_dual)
    } else {
        select_6280([a, b, d, e, g, i, f, h, j, m, l, k, n], is_dual)
    }
}
/// n = 12, i = 3
fn select_6285([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1053([h, e, c, d, a, g, i, k, j, l], is_dual)
    } else {
        select_2774([c, d, b, a, e, f, g, i, h, j, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6286([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_350([a, b, e, g, i, h, k], is_dual)
    } else {
        select_170([c, d, a, b, h, f, g, i, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6284([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6285([a, d, b, c, e, g, h, j, i, f, l, k], is_dual)
    } else {
        select_6286([b, c, d, e, a, g, h, f, j, i, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6283([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1874([a, b, c, e, i, f, h, l, j, k], is_dual)
    } else {
        select_6284([a, b, c, d, h, f, g, k, j, i, m, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_6273([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < a) || (is_dual && l > a) {
        select_6274([b, a, c, d, e, g, f, h, i, j, k, m, l, n], is_dual)
    } else {
        select_6283([b, d, e, c, g, h, i, j, l, m, k, a, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6248([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_6249([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_6273([a, b, d, f, g, h, e, i, j, k, c, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_6290([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5211([a, d, b, c, e, f, g, i, j, h], is_dual)
    } else {
        select_719([a, d, e, f, b, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_6292([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_83([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_83([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6291([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_5211([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_6292([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_6289([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6290([a, b, c, d, e, f, j, k, i, l], is_dual)
    } else {
        select_6291([a, d, b, c, g, h, i, l, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6297([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_255([a, b, c, j, g, h, l], is_dual)
    } else {
        select_182([c, d, e, f, h, g, i, k, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_6296([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_6297([a, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_874([c, d, g, e, f, h, j, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6295([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6296([a, b, e, g, c, d, f, h, i, j, k, l, m], is_dual)
    } else {
        select_1131([a, b, c, d, g, e, h, k, i, j, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_6300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_27([c, d, g, e, f, h, j, i], is_dual)
    } else {
        select_269([c, a, b, i, k, g], is_dual)
    }
}
/// n = 12, i = 3
fn select_6299([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6297([a, b, f, d, e, c, g, h, i, j, l, k], is_dual)
    } else {
        select_6300([a, b, c, g, d, e, h, i, k, l, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_3316([c, d, e, f, g, j, i], is_dual)
    } else {
        select_1132([f, a, b, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6298([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_6299([d, e, a, b, c, f, h, j, i, g, k, l], is_dual)
    } else {
        select_6301([d, e, b, c, g, f, h, j, i, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6294([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6295([b, c, d, e, a, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_6298([h, b, c, d, e, g, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6293([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_6294([h, b, c, d, e, f, a, g, i, j, k, l, m], is_dual)
    } else {
        select_6294([h, d, e, b, c, g, a, f, i, k, j, m, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6288([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_6289([a, b, c, e, f, g, d, i, k, l, j, m], is_dual)
    } else {
        select_6293([h, b, c, f, g, d, e, a, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_6305([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1282([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3036([b, c, a, d, i, h, g, j], is_dual)
    }
}
/// n = 12, i = 2
fn select_6304([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_4979([a, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_6305([c, a, b, d, f, g, k, i, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6307([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_638([c, d, f, g, a, b, h, i, j], is_dual)
    } else {
        select_835([a, b, e, c, d, i, h, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6306([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_4280([a, b, e, f, g, c, d, h, i, j, l, k, m], is_dual)
    } else {
        select_6307([a, b, c, d, f, e, i, h, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6303([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6304([d, e, f, c, g, a, b, i, k, j, l, h], is_dual)
    } else {
        select_6306([a, b, d, e, f, c, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_6311([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_305([f, b, c, d, e, g, h, i], is_dual)
    } else {
        select_2019([a, f, i, b, c, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6310([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6311([a, c, h, e, f, b, g, j, i, k, l], is_dual)
    } else {
        select_866([a, c, d, b, i, g, h, k, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_6309([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_5109([a, b, c, d, e, l, h, i, k, m], is_dual)
    } else {
        select_6310([b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_6313([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_414([c, d, g, a, b, i, h, k], is_dual)
    } else {
        select_48([a, b, e, f, c, d, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_6314([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_434([a, b, c, e, f, g, i, k, j, l], is_dual)
    } else {
        select_2794([a, b, c, d, f, g, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6312([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_6313([a, b, d, e, c, h, g, i, k, l, j, m], is_dual)
    } else {
        select_6314([d, e, c, g, f, a, b, i, h, j, l, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6308([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_6309([a, b, c, f, g, d, e, i, j, k, l, h, m], is_dual)
    } else {
        select_6312([a, b, f, d, e, g, c, i, h, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6302([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_6303([b, c, a, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_6308([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6287([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6288([a, c, d, b, e, g, h, f, j, k, l, i, m], is_dual)
    } else {
        select_6302([a, c, d, e, g, h, f, b, i, k, l, j, m], is_dual)
    }
}
/// n = 14, i = 3
fn select_6247([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6248([a, b, d, c, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_6287([a, b, c, k, d, e, f, g, i, l, j, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_6321([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_644([a, d, c, e, f, h, i], is_dual)
    } else {
        select_2305([d, g, h, i, a, e, b, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_6320([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1547([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_6321([a, c, b, h, f, i, j, g, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_6323([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_676([g, f, h, a, b, e, c], !is_dual)
    } else {
        select_141([b, d, a, g, f, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_6322([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2093([a, b, c, f, e, h, i, j, g], is_dual)
    } else {
        select_6323([a, b, d, e, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_6319([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_6320([a, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_6322([a, b, d, i, g, k, h, f, l, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6326([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3554([b, g, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_3511([b, d, e, a, c, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6325([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2167([a, b, g, e, f, d, h, j, i, k], is_dual)
    } else {
        select_6326([a, c, b, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_6329([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_54([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_141([a, b, c, g, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_6330([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_189([b, d, a, c, e, f, h, g], is_dual)
    } else {
        select_45([b, g, e, a, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_6328([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6329([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6330([a, c, d, h, g, b, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6332([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_997([a, d, e, f, j, h, i, l], is_dual)
    } else {
        select_130([a, b, c, f, i, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6331([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_996([b, g, d, e, f, a, h, i, k, j, l], is_dual)
    } else {
        select_6332([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6327([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6328([a, b, g, d, e, f, h, j, i, k, m], is_dual)
    } else {
        select_6331([b, a, c, e, f, i, g, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6324([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_6325([b, c, d, g, e, f, h, j, i, k, l, m], is_dual)
    } else {
        select_6327([a, b, d, i, e, f, h, j, g, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6318([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_6319([a, b, c, d, k, h, i, j, l, m, g, n], is_dual)
    } else {
        select_6324([b, c, a, d, e, f, h, i, g, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6317([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6318([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_6318([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_6337([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_340([d, f, h, e, g, a, c], !is_dual)
    } else {
        select_653([d, e, h, f, g, a, b], !is_dual)
    }
}
/// n = 11, i = 3
fn select_6338([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_21([a, c, d, e, f, b, h, i, g, k], is_dual)
    } else {
        select_848([g, c, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_6336([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6337([k, l, g, b, h, a, j, i], !is_dual)
    } else {
        select_6338([b, a, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_6340([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_354([i, f, k, a, g, j, h, c, b], !is_dual)
    } else {
        select_2518([b, c, a, d, e, g, f, i, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_6341([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2433([a, b, j, c, d, h, k, i, l], is_dual)
    } else {
        select_494([b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6339([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_6340([a, c, i, f, g, h, b, j, k, l, m], is_dual)
    } else {
        select_6341([a, c, f, g, b, d, e, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 4
fn select_6335([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6336([a, b, d, j, f, g, h, i, k, m, n, l], is_dual)
    } else {
        select_6339([a, b, c, f, g, e, i, h, k, j, l, m, n], is_dual)
    }
}
/// n = 12, i = 2
fn select_6344([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_108([a, e, h, c, d, f, g, i, j, k], is_dual)
    } else {
        select_350([a, i, b, e, j, h, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6343([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6344([b, a, d, e, c, f, g, h, j, k, i, l], is_dual)
    } else {
        select_2525([a, b, d, e, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_6346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1298([a, b, d, f, e, h, g, i], is_dual)
    } else {
        select_2109([e, h, j, a, f, i, c, g], !is_dual)
    }
}
/// n = 13, i = 4
fn select_6345([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_86([g, b, c, d, e, f, h, i, j, k, l], is_dual)
    } else {
        select_6346([a, b, c, d, g, h, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6342([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_6343([a, c, e, b, d, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_6345([a, c, i, e, f, g, h, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6334([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_6335([a, b, e, d, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_6342([a, b, e, c, f, g, h, i, d, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_6351([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_5692([a, c, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_234([c, d, g, f, e, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_6350([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_172([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_6351([a, h, b, c, f, g, e, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6352([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_738([b, e, d, c, h, g, f, j, i], is_dual)
    } else {
        select_4433([a, d, f, c, h, g, e, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6349([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6350([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6352([b, d, c, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_6353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_58([b, c, e, a, f, h, g, i, j], is_dual)
    } else {
        select_414([a, g, d, b, f, i, h, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6348([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_6349([a, b, c, d, e, h, j, i, g, k, l, m], is_dual)
    } else {
        select_6353([c, b, d, a, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_6355([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_426([a, g, b, d, e, h, f, i, j, k], is_dual)
    } else {
        select_426([a, f, c, d, e, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_6358([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2790([a, b, c, h, e, f, i, g, j, k], is_dual)
    } else {
        select_2790([a, b, d, g, e, f, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_6357([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6358([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_1829([g, c, d, e, f, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_6356([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_6357([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_5689([a, c, b, d, h, j, i, g, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6354([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_6355([a, d, j, f, g, h, b, i, l, m, k], is_dual)
    } else {
        select_6356([a, c, d, f, b, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6347([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_6348([a, b, e, c, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_6354([a, b, e, d, g, f, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_6333([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_6334([a, b, c, e, d, j, g, h, i, l, k, n, m, o], is_dual)
    } else {
        select_6347([a, b, c, d, e, f, k, i, j, m, n, l, o], is_dual)
    }
}
/// n = 15, i = 4
fn select_6316([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && a < k) || (is_dual && a > k) {
        select_6317([b, c, d, e, j, g, h, i, k, a, l, m, n, o], is_dual)
    } else {
        select_6333([b, c, d, a, e, f, g, h, i, j, l, k, m, n, o], is_dual)
    }
}
/// n = 13, i = 4
fn select_6363([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6061([b, c, i, e, f, g, a, h, j, k, l, m], is_dual)
    } else {
        select_3211([a, d, e, f, c, b, h, g, i, j, k, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_6362([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_6363([a, b, c, d, k, l, h, i, j, n, o, m, p], is_dual)
    } else {
        select_3258([e, f, g, i, j, b, a, k, h, l, m, n, p], is_dual)
    }
}
/// n = 15, i = 4
fn select_6364([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_6363([a, b, c, d, j, k, g, h, i, m, n, l, o], is_dual)
    } else {
        select_4106([a, b, e, f, h, i, g, j, k, l, m, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_6361([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < d) || (is_dual && l > d) {
        select_6362([a, b, c, e, f, d, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_6364([a, b, c, e, f, l, h, i, j, k, d, m, n, o, p], is_dual)
    }
}
/// n = 12, i = 4
fn select_6368([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2130([g, b, c, d, e, f, h, i, j], is_dual)
    } else {
        select_4858([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_6370([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_189([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_89([e, h, i, j, a, f, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_6369([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_833([a, b, d, f, e, h, i, g], is_dual)
    } else {
        select_6370([a, c, b, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_6367([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6368([a, c, d, e, f, h, g, i, j, m, k, l], is_dual)
    } else {
        select_6369([a, b, c, j, g, i, h, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_6373([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_129([a, c, d, f, g, i], is_dual)
    } else {
        select_969([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_6374([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1411([g, h, f, i, a, d, e, b], !is_dual)
    } else {
        select_393([a, d, c, f, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_6372([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_6373([b, c, a, d, f, e, h, g, i], is_dual)
    } else {
        select_6374([a, c, b, f, g, h, e, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_6371([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6368([a, c, d, e, f, h, g, i, j, l, k, m], is_dual)
    } else {
        select_6372([a, b, c, j, g, i, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6366([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_6367([c, b, d, e, f, g, h, a, i, j, k, m, l], is_dual)
    } else {
        select_6371([c, a, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_6365([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_102([b, c, d, f, g, a, i, h, j, k, l, m, n], is_dual)
    } else {
        select_6366([b, a, c, e, d, j, k, h, i, m, n, o, l], is_dual)
    }
}
/// n = 16, i = 4
fn select_6360([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_6361([b, c, a, d, e, f, g, i, h, j, k, l, m, n, p, o], is_dual)
    } else {
        select_6365([a, b, c, d, j, f, g, i, m, k, l, h, n, o, p], is_dual)
    }
}
/// n = 13, i = 4
fn select_6378([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2546([a, b, c, j, d, h, i, g, k, l, m], is_dual)
    } else {
        select_116([c, a, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_6377([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_6378([a, b, c, d, j, k, g, h, i, m, l, n, o], is_dual)
    } else {
        select_4106([a, b, e, f, h, i, g, j, k, l, m, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_6379([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_6378([a, b, c, d, k, l, h, i, j, n, m, o, p], is_dual)
    } else {
        select_3258([e, f, g, i, j, b, a, k, h, l, m, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6376([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < l) || (is_dual && d > l) {
        select_6377([a, b, c, e, f, l, h, i, j, k, d, m, n, o, p], is_dual)
    } else {
        select_6379([a, b, c, e, f, d, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 10, i = 4
fn select_6384([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_211([b, d, e, f, h], is_dual)
    } else {
        select_138([a, c, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_6383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_671([b, g, d, a, f, h, i], is_dual)
    } else {
        select_6384([b, c, d, a, e, f, g, j, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_6382([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_6383([a, b, c, j, d, h, i, k, l, m], is_dual)
    } else {
        select_927([c, a, d, e, f, g, h, i, j, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6381([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_150([b, c, i, e, f, g, h, a, j, k, l, m], is_dual)
    } else {
        select_6382([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 15, i = 4
fn select_6380([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_6381([a, b, c, e, d, j, k, h, i, m, n, l, o], is_dual)
    } else {
        select_102([b, c, d, f, g, a, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_6375([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_6376([b, c, a, d, e, f, g, i, h, j, k, l, m, n, p, o], is_dual)
    } else {
        select_6380([a, b, c, d, j, f, g, i, m, k, l, h, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6359([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_6360([b, c, d, e, f, g, h, i, a, j, k, l, m, n, o, p], is_dual)
    } else {
        select_6375([b, c, a, e, f, g, h, i, d, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6315([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < n) || (is_dual && j > n) {
        select_6316([a, b, c, d, e, g, f, l, i, k, m, n, j, o, p], is_dual)
    } else {
        select_6359([a, b, c, d, f, g, e, h, i, k, j, l, m, n, p, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_6246([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < o) || (is_dual && n > o) {
        select_6247([a, b, e, f, g, c, d, l, i, j, m, k, o, n], is_dual)
    } else {
        select_6315([a, b, c, d, e, f, h, g, i, j, l, k, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_6392([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_662([a, b, c, d, h, g, j, k], is_dual)
    } else {
        select_305([c, e, f, a, d, g, h, i], is_dual)
    }
}
/// n = 14, i = 3
fn select_6391([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2085([c, d, e, f, g, h, k, j, l], is_dual)
    } else {
        select_6392([a, b, c, l, d, e, i, j, k, m, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_6394([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1402([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_1402([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_6393([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_20([d, a, h, e, f, b, g, j, i, m], is_dual)
    } else {
        select_6394([a, g, c, b, i, h, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_6390([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_6391([b, a, g, c, d, e, f, h, i, j, l, k, m, n], is_dual)
    } else {
        select_6393([b, g, a, k, c, d, h, i, j, l, m, n, o], is_dual)
    }
}
/// n = 9, i = 2
fn select_6397([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_662([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_1647([a, i, g, b, c], !is_dual)
    }
}
/// n = 13, i = 3
fn select_6396([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_303([e, a, i, f, g, d, h, k, j], is_dual)
    } else {
        select_6397([a, b, c, d, h, j, i, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6395([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6396([b, a, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_6221([b, d, c, e, f, g, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_6389([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_6390([d, b, e, j, g, h, c, a, i, m, k, l, n, o, p], is_dual)
    } else {
        select_6395([a, b, d, e, f, c, k, i, j, n, l, m, o], is_dual)
    }
}
/// n = 10, i = 2
fn select_6401([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_938([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1199([a, b, h, c, d, g, i, j], is_dual)
    }
}
/// n = 14, i = 3
fn select_6400([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_3309([a, c, d, f, g, j, h, i, k, l, m, n], is_dual)
    } else {
        select_6401([a, b, e, l, f, g, h, k, j, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6402([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_3208([a, c, d, f, g, j, h, i, k, l, m, n], is_dual)
    } else {
        select_6401([a, b, e, l, f, g, h, k, j, n], is_dual)
    }
}
/// n = 14, i = 3
fn select_6399([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_6400([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_6402([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_6404([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_4355([a, b, c, f, e, g, i, h, j], is_dual)
    } else {
        select_5153([a, b, d, c, g, h, i, f, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_6406([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_350([b, i, e, d, f, h, k], is_dual)
    } else {
        select_2910([a, c, b, d, h, f, g, i, j, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6407([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3395([a, b, c, f, k, h, m, j, n], is_dual)
    } else {
        select_2010([a, d, g, j, e, h, i, l, k, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6405([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_6406([b, d, c, g, f, h, j, i, a, k, l, m, n], is_dual)
    } else {
        select_6407([b, a, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 4
fn select_6403([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < k) || (is_dual && b > k) {
        select_6404([a, c, d, k, f, b, h, j, m, n], is_dual)
    } else {
        select_6405([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_6398([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_6399([a, c, b, e, f, i, g, h, j, l, k, m, n, o], is_dual)
    } else {
        select_6403([a, b, d, c, e, k, f, i, j, n, m, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6388([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_6389([a, c, d, b, e, f, g, h, i, k, l, j, m, n, p, o], is_dual)
    } else {
        select_6398([a, b, d, c, e, f, g, h, j, k, l, i, m, n, o, p], is_dual)
    }
}
/// n = 11, i = 3
fn select_6410([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_567([c, a, d, e, b, h, g, j, i], is_dual)
    } else {
        select_966([a, b, c, f, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_6409([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2470([b, c, d, e, f, g, h, i, a, j, k], is_dual)
    } else {
        select_6410([b, c, d, a, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6413([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_75([b, e, f, a, d, h, g, i, j, k, l], is_dual)
    } else {
        select_4752([a, b, c, d, i, j, g, h, l, k, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_6415([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1830([a, f, c, d, i, g, h, e, j], is_dual)
    } else {
        select_3780([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_6416([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1706([a, b, f, d, h, g, e, i], is_dual)
    } else {
        select_1830([b, d, a, c, g, e, f, i, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_6414([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6415([a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6416([a, b, e, c, f, i, g, k, j], is_dual)
    }
}
/// n = 13, i = 3
fn select_6412([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_6413([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6414([b, c, a, e, f, g, k, i, j, h, l], is_dual)
    }
}
/// n = 12, i = 2
fn select_6417([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2070([a, c, b, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_6414([a, b, c, e, f, g, k, i, j, h, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6411([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_6412([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_6417([a, d, b, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6408([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_6409([a, c, b, d, e, j, k, i, l, h, m], is_dual)
    } else {
        select_6411([a, c, d, e, f, b, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_6387([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < m) || (is_dual && o > m) {
        select_6388([a, b, c, e, d, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_6408([a, b, e, d, f, l, c, i, k, j, n, o, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_6386([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_6387([a, b, c, e, f, g, h, i, j, d, k, l, m, n, o, p], is_dual)
    } else {
        select_6387([a, b, d, e, f, g, h, i, j, c, k, l, m, n, o, p], is_dual)
    }
}
/// n = 7, i = 3
fn select_6424([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_679([a, e, f, g, b, c], !is_dual)
    } else {
        select_138([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_6423([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_6424([a, b, c, h, g, i, j], is_dual)
    } else {
        select_3268([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 3
fn select_6422([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_5551([g, h, a, b, c, d, e, f, i, j, k, l], is_dual)
    } else {
        select_6423([h, g, k, a, b, c, i, j, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_6425([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_921([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_921([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 3
fn select_6421([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_6422([d, e, f, g, h, i, c, a, b, j, k, l, m], is_dual)
    } else {
        select_6425([a, b, c, j, g, h, i, d, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_6429([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_5232([a, c, b, d, f, g, e, h], is_dual)
    } else {
        select_1099([a, c, e, g, b, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_6428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_6429([a, f, b, d, g, e, h, i], is_dual)
    } else {
        select_6429([a, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_6430([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_4714([i, b, d, e, f, g, a, h, j, k, l], is_dual)
    } else {
        select_495([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6427([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_6428([a, c, j, d, h, b, i, k, l], is_dual)
    } else {
        select_6430([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_6433([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_671([a, b, f, e, d, g, h], is_dual)
    } else {
        select_44([b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_6435([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_138([e, a, f, g, h], is_dual)
    } else {
        select_163([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_6434([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_671([a, b, c, e, g, h, i], is_dual)
    } else {
        select_6435([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6432([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_6433([f, b, d, a, e, g, h, i], is_dual)
    } else {
        select_6434([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_6437([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_136([h, a, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_136([g, b, c, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6436([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_6437([b, i, d, e, f, g, h, a, j, k, l], is_dual)
    } else {
        select_5492([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_6431([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_6432([a, c, j, d, h, b, i, k, l], is_dual)
    } else {
        select_6436([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6426([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_6427([a, b, e, d, f, g, h, i, c, j, k, l], is_dual)
    } else {
        select_6431([a, b, e, c, f, g, h, i, d, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6420([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_6421([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_6426([a, b, d, e, j, g, h, i, c, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_6441([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_493([b, d, a, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_5846([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_6440([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_5839([b, i, c, e, f, g, h, a, j, k, l, m], is_dual)
    } else {
        select_6441([b, a, c, d, e, f, g, h, i, j, k, m], is_dual)
    }
}
/// n = 12, i = 2
fn select_6443([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3118([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3230([i, b, d, e, f, g, h, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 3
fn select_6445([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_494([b, d, i, e, f, g, h, j, k, l], is_dual)
    } else {
        select_494([a, c, j, e, f, g, h, i, k, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6444([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2131([i, b, d, e, f, g, h, a, j, k, l, m], is_dual)
    } else {
        select_6445([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 3
fn select_6442([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6443([a, d, b, e, f, g, h, i, c, j, k, l], is_dual)
    } else {
        select_6444([a, d, c, e, f, g, h, i, b, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 4
fn select_6439([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_6440([a, b, d, j, f, g, h, i, c, k, m, l, n], is_dual)
    } else {
        select_6442([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_6448([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_385([c, a, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_385([c, b, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_6447([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_567([c, f, d, e, a, b, i, j, h], is_dual)
    } else {
        select_6448([a, b, c, f, g, d, e, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_6449([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_4180([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_4180([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6446([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_6447([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_6449([b, c, d, f, e, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_6438([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_6439([a, b, c, d, e, g, h, i, k, j, l, m, n, o], is_dual)
    } else {
        select_6446([a, b, c, d, e, f, l, j, k, m, n, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_6419([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_6420([a, b, c, d, h, i, e, j, k, l, n, p, m], is_dual)
    } else {
        select_6438([a, b, c, e, f, g, d, h, l, j, k, m, o, n, p], is_dual)
    }
}
/// n = 10, i = 3
fn select_6454([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1601([a, c, g, e, f, b, h, i, j], is_dual)
    } else {
        select_851([a, c, e, f, b, d, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6457([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_255([a, e, c, d, f, g, h], is_dual)
    } else {
        select_281([c, b, a, f, g, h, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_6456([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_64([b, d, e, a, f, c, g, h], is_dual)
    } else {
        select_6457([b, d, c, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_6455([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_636([c, b, d, e, a, f, h, g, i], is_dual)
    } else {
        select_6456([b, c, d, g, e, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_6453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_6454([a, c, b, e, d, h, g, j, k, i], is_dual)
    } else {
        select_6455([a, c, b, d, g, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_6452([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_4124([a, c, d, e, b, g, f, h, i, j, k], is_dual)
    } else {
        select_6453([a, b, c, e, d, g, j, i, h, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6451([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_6452([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_6452([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_6462([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_304([a, b, e, f, c, g, h], is_dual)
    } else {
        select_243([a, b, d, c, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_6464([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_211([a, b, c, j, l], is_dual)
    } else {
        select_22([d, e, f, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_6465([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_211([a, c, d, i, k], is_dual)
    } else {
        select_61([b, e, f, h, g, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_6463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_6464([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_6465([a, h, c, d, f, g, b, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_6461([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_6462([a, b, c, l, f, g, j, m, k, o], is_dual)
    } else {
        select_6463([c, d, f, g, e, h, j, i, k, l, n, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6468([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_217([b, c, d, e, f, h, j, i, k], is_dual)
    } else {
        select_355([a, b, c, g, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_6467([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_6468([b, c, d, a, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_2226([a, b, e, f, g, j, k, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_6469([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_300([b, c, f, g, h, j], is_dual)
    } else {
        select_5985([a, b, c, g, d, e, i, k, j, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_6466([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_6467([a, c, b, i, e, f, h, l, k, j, n, m, o], is_dual)
    } else {
        select_6469([a, b, j, e, f, d, g, i, k, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_6460([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_6461([a, b, c, d, e, f, g, h, j, i, k, l, n, m, o], is_dual)
    } else {
        select_6466([c, d, b, e, f, g, h, i, j, a, k, l, m, n, o], is_dual)
    }
}
/// n = 13, i = 3
fn select_6472([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_286([a, b, f, g, k, m], is_dual)
    } else {
        select_350([c, d, e, h, j, i, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6473([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_350([b, c, a, f, g, i, k], is_dual)
    } else {
        select_1580([a, d, e, b, c, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_6471([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_6472([b, c, d, i, e, g, h, f, j, k, l, m, n], is_dual)
    } else {
        select_6473([a, b, c, d, j, g, h, l, i, k, n, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_6475([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2185([d, e, f, b, i, g, h], is_dual)
    } else {
        select_4487([a, c, b, g, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_6476([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2185([d, e, f, a, h, j, i], is_dual)
    } else {
        select_5021([b, c, a, h, f, g, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_6474([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_6475([a, b, g, d, e, i, h, f, j, k, l], is_dual)
    } else {
        select_6476([b, a, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 3
fn select_6470([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < a) || (is_dual && k > a) {
        select_6471([b, a, c, d, e, h, f, g, i, j, k, l, m, n], is_dual)
    } else {
        select_6474([b, d, c, h, e, i, k, j, a, m, l, n], is_dual)
    }
}
/// n = 15, i = 4
fn select_6459([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_6460([a, c, d, e, h, f, g, i, b, j, k, l, m, n, o], is_dual)
    } else {
        select_6470([a, b, d, e, h, f, g, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_6479([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_110([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_110([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_6478([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_806([a, h, j, k, b, g, c, i, d], !is_dual)
    } else {
        select_6479([a, b, d, e, f, c, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_6481([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_723([a, d, c, e, f, b, g, i, h, j], is_dual)
    } else {
        select_4517([a, d, b, e, f, c, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_6480([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6479([a, b, d, f, g, c, h, i, j, l], is_dual)
    } else {
        select_6481([a, b, c, e, d, i, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_6477([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_6478([a, b, h, d, f, g, c, i, j, k, l], is_dual)
    } else {
        select_6480([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 15, i = 4
fn select_6458([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o]: [usize; 15], is_dual: bool) -> usize {
    if (!is_dual && l < c) || (is_dual && l > c) {
        select_6459([a, b, d, e, f, h, i, g, c, j, k, l, m, n, o], is_dual)
    } else {
        select_6477([a, d, b, e, l, h, i, c, n, k, o, m], is_dual)
    }
}
/// n = 16, i = 4
fn select_6450([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_6451([a, c, d, e, b, g, l, i, k, n, p, m], is_dual)
    } else {
        select_6458([a, c, d, b, e, f, h, g, k, j, m, l, o, p, n], is_dual)
    }
}
/// n = 16, i = 4
fn select_6418([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_6419([a, c, d, f, e, b, g, h, i, j, k, l, n, m, o, p], is_dual)
    } else {
        select_6450([a, b, c, d, f, e, h, g, i, k, l, m, n, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6385([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_6386([a, b, c, d, g, f, i, e, h, j, l, m, n, k, o, p], is_dual)
    } else {
        select_6418([a, b, c, d, g, e, i, h, f, j, l, k, n, m, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6245([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_6246([a, b, c, d, g, h, i, f, j, l, m, k, e, n, o, p], is_dual)
    } else {
        select_6385([a, b, c, d, f, g, h, e, i, j, l, m, k, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6244([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < o) || (is_dual && n > o) {
        select_6245([a, b, e, f, c, i, g, d, h, j, m, k, l, o, p, n], is_dual)
    } else {
        select_6245([a, b, e, f, d, i, h, c, g, j, m, l, k, n, p, o], is_dual)
    }
}
/// n = 16, i = 4
fn select_6243([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < n) || (is_dual && m > n) {
        select_6244([i, f, e, g, b, c, d, h, a, l, k, n, j, o, m, p], is_dual)
    } else {
        select_6244([i, f, e, h, b, c, d, g, a, l, k, m, j, o, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6242([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_6243([a, b, c, d, e, f, g, h, i, j, k, m, n, o, l, p], is_dual)
    } else {
        select_6243([a, b, c, e, d, f, g, h, i, j, l, m, n, o, k, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6241([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_6242([a, b, c, d, e, f, g, h, i, k, l, m, n, o, j, p], is_dual)
    } else {
        select_6242([a, b, c, d, e, f, g, j, i, k, l, m, n, o, h, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6240([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_6241([a, b, c, d, e, f, g, h, i, j, l, m, n, o, k, p], is_dual)
    } else {
        select_6241([a, b, c, d, e, f, k, h, i, j, l, m, n, o, g, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6239([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_6240([l, j, k, a, h, i, b, c, d, e, f, o, g, m, n, p], is_dual)
    } else {
        select_6240([l, j, k, g, h, i, b, c, d, e, f, o, a, m, n, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6238([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_6239([a, b, c, d, e, f, g, h, j, k, l, m, i, n, o, p], is_dual)
    } else {
        select_6239([a, b, c, d, e, f, g, i, j, k, l, m, h, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_6237([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_6238([a, b, c, d, e, f, g, h, i, j, l, m, n, k, o, p], is_dual)
    } else {
        select_6238([a, b, c, d, e, f, g, h, i, k, l, m, n, j, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4605([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && o < p) || (is_dual && o > p) {
        select_4606([a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, o], is_dual)
    } else {
        select_6237([a, b, c, d, e, f, g, h, i, j, k, m, n, l, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_4604([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_4605([a, b, c, d, e, f, g, h, i, j, k, l, n, o, m, p], is_dual)
    } else {
        select_4605([a, b, c, d, e, f, g, h, i, j, k, m, n, o, l, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_1([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && n < p) || (is_dual && n > p) {
        select_2([a, b, c, d, e, f, g, h, i, j, k, l, m, o, p, n], is_dual)
    } else {
        select_4604([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    }
}
/// n = 16, i = 4
fn select_0([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p]: [usize; 16], is_dual: bool) -> usize {
    if (!is_dual && p < o) || (is_dual && p > o) {
        select_1([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p], is_dual)
    } else {
        select_1([a, b, c, d, e, f, g, h, i, j, k, l, m, n, p, o], is_dual)
    }
}
