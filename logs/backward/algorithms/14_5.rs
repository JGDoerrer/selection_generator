/// n = 1, i = 0
fn select_24([a]: [usize; 1], _: bool) -> usize {
    a
}
/// n = 2, i = 0
fn select_23([a, b]: [usize; 2], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_24([a], is_dual)
    } else {
        select_24([b], is_dual)
    }
}
/// n = 4, i = 1
fn select_22([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_23([a, d], is_dual)
    } else {
        select_23([b, c], is_dual)
    }
}
/// n = 3, i = 1
fn select_25([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_23([a, b], is_dual)
    } else {
        select_24([c], is_dual)
    }
}
/// n = 6, i = 2
fn select_21([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_22([b, c, e, d], is_dual)
    } else {
        select_25([a, b, f], is_dual)
    }
}
/// n = 3, i = 0
fn select_27([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_23([a, b], is_dual)
    } else {
        select_23([b, c], is_dual)
    }
}
/// n = 4, i = 1
fn select_26([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_27([a, b, c], is_dual)
    } else {
        select_24([d], is_dual)
    }
}
/// n = 7, i = 2
fn select_20([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_21([a, c, b, e, f, g], is_dual)
    } else {
        select_26([a, c, d, g], is_dual)
    }
}
/// n = 6, i = 1
fn select_29([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_27([c, d, e], is_dual)
    } else {
        select_27([a, b, f], is_dual)
    }
}
/// n = 4, i = 1
fn select_30([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_22([a, c, b, d], is_dual)
    } else {
        select_22([b, c, a, d], is_dual)
    }
}
/// n = 7, i = 2
fn select_28([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_29([a, b, c, d, e, f], is_dual)
    } else {
        select_30([a, f, b, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_19([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_20([f, e, h, i, a, b, g], !is_dual)
    } else {
        select_28([b, d, a, c, f, e, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_33([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_27([b, c, e], is_dual)
    } else {
        select_22([a, f, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_32([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_33([b, a, c, d, e, f, g], is_dual)
    } else {
        select_30([a, e, c, h], is_dual)
    }
}
/// n = 6, i = 2
fn select_35([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_27([b, c, d], is_dual)
    } else {
        select_25([a, e, f], is_dual)
    }
}
/// n = 5, i = 1
fn select_36([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_27([b, c, d], is_dual)
    } else {
        select_23([a, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_34([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_35([a, b, c, e, h, i], is_dual)
    } else {
        select_36([d, b, c, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_31([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_32([h, i, j, e, a, f, b, g], !is_dual)
    } else {
        select_34([b, c, d, a, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_18([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_19([d, a, c, e, g, h, f, i, k], is_dual)
    } else {
        select_31([g, j, h, k, d, i, e, a, b, f], !is_dual)
    }
}
/// n = 6, i = 2
fn select_39([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_30([c, d, b, e], is_dual)
    } else {
        select_22([a, e, c, f], is_dual)
    }
}
/// n = 5, i = 2
fn select_41([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_22([a, b, c, d], is_dual)
    } else {
        select_25([d, a, e], is_dual)
    }
}
/// n = 7, i = 3
fn select_40([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_21([f, c, g, e, d, a], !is_dual)
    } else {
        select_41([d, g, c, e, b], !is_dual)
    }
}
/// n = 7, i = 3
fn select_38([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_39([g, d, a, e, f, b], !is_dual)
    } else {
        select_40([g, f, a, d, e, b, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_43([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_35([a, b, c, d, f, g], is_dual)
    } else {
        select_30([a, e, g, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_44([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_21([a, e, c, f, d, h], is_dual)
    } else {
        select_21([b, d, c, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_42([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_43([c, b, d, f, h, e, g], is_dual)
    } else {
        select_44([f, i, h, c, g, d, a, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_37([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_38([h, g, i, d, f, a, c], !is_dual)
    } else {
        select_42([b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_17([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_18([a, c, b, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_37([b, c, a, d, f, e, h, i, g, j], is_dual)
    }
}
/// n = 3, i = 1
fn select_49([a, b, c]: [usize; 3], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_25([a, b, c], is_dual)
    } else {
        select_25([a, c, b], is_dual)
    }
}
/// n = 5, i = 2
fn select_48([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_49([a, d, e], is_dual)
    } else {
        select_22([a, b, c, d], is_dual)
    }
}
/// n = 8, i = 3
fn select_50([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_33([a, b, c, d, e, f, g], is_dual)
    } else {
        select_35([d, b, c, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_47([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_48([a, b, h, e, i], is_dual)
    } else {
        select_50([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_52([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_21([a, b, c, e, d, f], is_dual)
    } else {
        select_22([c, d, e, b], is_dual)
    }
}
/// n = 10, i = 4
fn select_51([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_43([a, c, d, g, h, f, j], is_dual)
    } else {
        select_52([i, j, h, a, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_46([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_47([b, a, c, d, e, g, f, j, i], is_dual)
    } else {
        select_51([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_55([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_41([a, d, g, f, c], is_dual)
    } else {
        select_41([b, c, g, e, d], is_dual)
    }
}
/// n = 7, i = 3
fn select_54([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_55([e, g, d, f, a, c, b], !is_dual)
    } else {
        select_40([d, g, a, f, e, c, b], !is_dual)
    }
}
/// n = 6, i = 2
fn select_58([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_22([a, b, e, f], is_dual)
    } else {
        select_22([a, c, d, f], is_dual)
    }
}
/// n = 7, i = 3
fn select_57([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_58([d, f, g, a, e, b], !is_dual)
    } else {
        select_41([e, f, d, b, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_59([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_21([a, c, b, d, e, f], is_dual)
    } else {
        select_35([e, d, g, a, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_56([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_57([d, f, h, e, g, a, c], !is_dual)
    } else {
        select_59([d, c, b, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_53([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_54([e, a, b, g, d, h, i], is_dual)
    } else {
        select_56([a, c, b, d, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_45([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_46([h, j, i, k, d, e, f, b, a, g], !is_dual)
    } else {
        select_53([b, f, c, e, d, i, h, g, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_16([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_17([c, b, a, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_45([a, c, b, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_64([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_21([g, i, h, d, f, a], !is_dual)
    } else {
        select_26([e, b, c, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_63([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_28([b, d, c, e, g, f, h], is_dual)
    } else {
        select_64([h, i, j, e, a, g, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_65([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_20([b, c, d, e, f, g, i], is_dual)
    } else {
        select_57([e, h, j, a, f, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_62([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_63([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_65([a, d, c, e, f, b, g, i, h, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_68([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_29([b, c, d, e, g, f], is_dual)
    } else {
        select_26([a, b, c, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_69([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_36([b, c, d, e, f], is_dual)
    } else {
        select_26([a, g, h, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_67([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_68([b, c, f, d, e, h, g, i], is_dual)
    } else {
        select_69([a, g, d, e, f, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_66([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_63([a, c, g, e, f, b, h, i, j, k], is_dual)
    } else {
        select_67([a, c, e, b, d, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_61([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_62([a, b, c, d, g, f, i, j, k, h], is_dual)
    } else {
        select_66([a, d, c, e, b, f, g, h, j, i, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_73([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_33([a, b, c, d, e, f, g], is_dual)
    } else {
        select_26([e, b, c, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_72([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([a, b, d, f, g, e, h, i], is_dual)
    } else {
        select_73([b, c, e, f, g, d, h, j], is_dual)
    }
}
/// n = 6, i = 2
fn select_76([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_22([a, d, c, f], is_dual)
    } else {
        select_22([b, c, d, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_75([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_58([b, c, d, e, f, g], is_dual)
    } else {
        select_76([a, c, d, e, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_74([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_39([d, c, a, f, e, h], is_dual)
    } else {
        select_75([c, a, b, e, d, g, h, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_71([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_72([b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_74([a, d, c, f, g, i, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_77([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_38([a, b, c, h, e, i, g], is_dual)
    } else {
        select_43([g, h, i, a, b, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_70([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_71([b, a, d, c, e, f, g, i, h, k, j], is_dual)
    } else {
        select_77([a, b, f, d, h, g, e, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_60([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_61([b, c, a, d, e, f, h, g, i, j, l, k], is_dual)
    } else {
        select_70([b, d, c, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_15([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_16([l, f, k, b, a, g, j, i, d, c, h], !is_dual)
    } else {
        select_60([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 4, i = 0
fn select_84([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_27([a, b, c], is_dual)
    } else {
        select_27([b, c, d], is_dual)
    }
}
/// n = 7, i = 1
fn select_83([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([c, d, e, f], is_dual)
    } else {
        select_27([a, b, g], is_dual)
    }
}
/// n = 8, i = 1
fn select_82([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_83([a, g, c, d, e, f, h], is_dual)
    } else {
        select_83([b, f, c, d, e, g, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_81([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_82([a, c, d, e, f, b, g, h], is_dual)
    } else {
        select_82([b, c, d, e, f, a, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_87([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_21([e, a, c, f, d, g], is_dual)
    } else {
        select_21([d, b, c, f, e, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_89([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_22([a, c, d, g], is_dual)
    } else {
        select_22([b, c, e, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_88([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_89([a, d, b, g, e, f, h], is_dual)
    } else {
        select_89([a, d, c, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_86([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_87([c, e, d, g, a, f, i], is_dual)
    } else {
        select_88([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_91([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_58([a, b, e, f, d, g], is_dual)
    } else {
        select_36([b, c, d, f, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_92([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_58([b, c, d, f, g, h], is_dual)
    } else {
        select_22([a, d, e, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_90([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_91([e, c, d, a, f, g, i], is_dual)
    } else {
        select_92([d, a, b, c, f, e, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_85([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_86([b, a, d, e, c, f, g, h, i], is_dual)
    } else {
        select_90([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_80([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_81([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_85([a, b, c, i, d, h, g, j, k], is_dual)
    }
}
/// n = 5, i = 2
fn select_97([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_22([a, b, c, d], is_dual)
    } else {
        select_25([a, d, e], is_dual)
    }
}
/// n = 6, i = 2
fn select_96([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_21([a, c, b, d, e, f], is_dual)
    } else {
        select_97([a, b, e, f, d], is_dual)
    }
}
/// n = 8, i = 2
fn select_98([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([c, d, e, f], is_dual)
    } else {
        select_26([a, b, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_95([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_96([b, g, c, a, f, h], is_dual)
    } else {
        select_98([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 6, i = 1
fn select_100([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_84([b, c, d, e], is_dual)
    } else {
        select_23([a, f], is_dual)
    }
}
/// n = 8, i = 1
fn select_101([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_84([d, e, f, g], is_dual)
    } else {
        select_84([a, b, c, h], is_dual)
    }
}
/// n = 8, i = 1
fn select_99([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_100([g, d, e, f, a, h], is_dual)
    } else {
        select_101([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_94([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_95([f, e, h, c, d, g, i, j], is_dual)
    } else {
        select_99([f, c, d, a, b, g, i, h], is_dual)
    }
}
/// n = 5, i = 1
fn select_104([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_84([a, b, c, d], is_dual)
    } else {
        select_24([e], is_dual)
    }
}
/// n = 7, i = 1
fn select_103([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_104([e, c, d, f, g], is_dual)
    } else {
        select_104([e, a, b, g, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_102([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_95([a, b, g, d, e, f, h, i], is_dual)
    } else {
        select_103([c, f, d, e, a, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_93([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_94([c, d, e, f, b, a, g, h, i, j], is_dual)
    } else {
        select_102([a, b, h, e, f, g, c, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_79([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_80([a, b, c, e, d, i, g, h, k, j, l], is_dual)
    } else {
        select_93([c, a, d, f, b, h, g, i, j, k], is_dual)
    }
}
/// n = 6, i = 1
fn select_109([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_29([a, b, c, d, e, f], is_dual)
    } else {
        select_36([e, c, d, a, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_108([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_109([b, d, a, e, f, g], is_dual)
    } else {
        select_109([a, c, b, f, e, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_111([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_21([g, h, f, d, a, b], !is_dual)
    } else {
        select_30([a, f, c, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_110([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_57([b, a, c, h, e, i, g], is_dual)
    } else {
        select_111([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_107([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_108([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_110([c, a, d, b, f, g, h, e, i], is_dual)
    }
}
/// n = 6, i = 2
fn select_114([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_41([d, f, e, a, b], !is_dual)
    } else {
        select_41([e, f, d, a, c], !is_dual)
    }
}
/// n = 5, i = 0
fn select_115([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_84([a, b, c, d], is_dual)
    } else {
        select_84([a, b, c, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_113([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_114([i, j, k, a, b, h], !is_dual)
    } else {
        select_115([c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_116([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([b, c, d, e, g], is_dual)
    } else {
        select_41([a, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_112([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_113([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_116([b, c, d, e, f, g, a, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_106([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_107([i, j, k, l, a, g, b, c, h], !is_dual)
    } else {
        select_112([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_105([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_106([a, b, c, d, e, h, g, j, i, k, l, m], is_dual)
    } else {
        select_93([b, c, d, f, a, e, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_78([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_79([c, a, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_105([a, b, c, d, h, f, g, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_14([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_15([b, a, d, c, e, k, h, l, m, g, n, j], is_dual)
    } else {
        select_78([a, b, d, e, c, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 2
fn select_122([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_48([g, f, c, a, b], !is_dual)
    } else {
        select_52([b, c, d, f, e, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_124([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_35([a, b, c, d, f, g], is_dual)
    } else {
        select_30([b, d, c, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_123([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_43([f, g, h, a, c, e, d], !is_dual)
    } else {
        select_124([f, g, h, a, b, e, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_121([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_122([a, c, d, b, e, g, f], is_dual)
    } else {
        select_123([a, c, b, d, f, g, e, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_126([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([b, c, d, e, f], is_dual)
    } else {
        select_114([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 6, i = 2
fn select_128([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_36([a, b, c, d, e], is_dual)
    } else {
        select_25([e, a, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_127([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([a, c, d, e, f], is_dual)
    } else {
        select_128([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_125([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_126([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_127([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_120([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_121([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_125([e, g, f, i, a, h, c, b, d], !is_dual)
    }
}
/// n = 7, i = 3
fn select_131([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_43([a, b, c, d, f, e, g], is_dual)
    } else {
        select_35([d, f, g, a, b, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_132([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_114([b, c, d, f, e, g], is_dual)
    } else {
        select_57([f, g, h, a, e, c, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_130([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_131([e, b, d, a, f, g, h], is_dual)
    } else {
        select_132([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_129([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_130([a, d, e, b, f, c, g, h], is_dual)
    } else {
        select_130([a, d, e, c, f, b, h, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_119([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_120([a, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_129([e, g, j, f, k, a, b, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_137([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_35([b, c, d, e, f, g], is_dual)
    } else {
        select_30([a, g, h, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_136([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_137([a, b, c, f, g, e, h, i], is_dual)
    } else {
        select_137([a, b, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_135([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_122([a, b, c, f, h, g, e], is_dual)
    } else {
        select_136([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_140([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_21([a, d, c, e, f, g], is_dual)
    } else {
        select_30([a, b, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_141([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_21([a, e, b, d, g, h], is_dual)
    } else {
        select_23([c, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_139([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_140([b, e, d, c, f, g, h], is_dual)
    } else {
        select_141([a, b, d, g, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_138([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_139([a, b, g, c, e, f, i, j, h], is_dual)
    } else {
        select_139([a, b, f, d, e, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_135([a, f, c, d, g, h, e, i, k], is_dual)
    } else {
        select_138([c, b, a, d, g, e, h, f, i, j], is_dual)
    }
}
/// n = 6, i = 2
fn select_145([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_21([a, d, b, c, e, f], is_dual)
    } else {
        select_21([a, d, c, b, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_144([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_145([b, a, f, d, h, g], is_dual)
    } else {
        select_141([b, a, c, g, e, i, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_147([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_21([a, c, d, f, e, h], is_dual)
    } else {
        select_21([b, d, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_146([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_147([a, b, e, c, h, g, f, i], is_dual)
    } else {
        select_44([a, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_143([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_144([b, c, d, e, g, h, f, j, i], is_dual)
    } else {
        select_146([a, c, f, d, g, e, i, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_149([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([e, a, b, f, g, d, h, i], is_dual)
    } else {
        select_32([d, a, c, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_150([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_87([d, f, c, e, h, g, j], is_dual)
    } else {
        select_44([a, e, b, g, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_149([c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_150([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_142([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_143([b, a, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_148([a, b, d, c, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_134([c, d, a, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_142([c, d, b, e, g, f, a, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_118([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_119([i, k, f, l, a, g, c, j, d, b, h], !is_dual)
    } else {
        select_133([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_153([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_121([g, i, k, j, a, b, c, h], !is_dual)
    } else {
        select_112([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_152([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_153([a, b, c, d, e, h, g, j, i, k, l], is_dual)
    } else {
        select_93([b, c, d, f, a, e, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_151([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_79([c, a, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_152([a, b, c, d, h, f, g, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_117([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_118([a, b, c, d, e, k, h, l, m, g, n, j], is_dual)
    } else {
        select_151([a, c, d, e, f, b, h, i, g, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_13([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_14([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_117([b, a, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_160([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_124([a, f, b, d, g, e, h], is_dual)
    } else {
        select_124([a, e, c, d, g, f, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_162([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_21([a, c, b, d, e, g], is_dual)
    } else {
        select_49([b, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_161([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_162([d, g, h, e, a, f, b], !is_dual)
    } else {
        select_89([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_159([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_160([c, a, d, e, b, f, g, h], is_dual)
    } else {
        select_161([c, d, b, e, f, a, h, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_164([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_48([g, e, b, a, f], !is_dual)
    } else {
        select_20([b, a, c, d, e, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_165([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_109([c, b, d, e, f, g], is_dual)
    } else {
        select_52([a, b, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_163([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_164([f, c, d, e, a, g, h], is_dual)
    } else {
        select_165([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_158([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_159([a, f, i, j, b, h, g, c], !is_dual)
    } else {
        select_163([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_168([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_57([a, b, c, d, f, g, e], is_dual)
    } else {
        select_57([a, c, b, d, e, g, f], is_dual)
    }
}
/// n = 5, i = 1
fn select_170([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_36([a, c, d, b, e], is_dual)
    } else {
        select_36([b, c, d, a, e], is_dual)
    }
}
/// n = 6, i = 1
fn select_169([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_104([a, c, d, e, f], is_dual)
    } else {
        select_170([a, b, c, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_167([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_168([f, h, i, a, b, c, g], !is_dual)
    } else {
        select_169([b, c, d, e, f, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_172([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_48([f, d, b, a, e], !is_dual)
    } else {
        select_21([b, c, a, d, f, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_171([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_172([b, c, d, e, f, g], is_dual)
    } else {
        select_54([a, b, c, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_166([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_167([c, a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_171([f, i, a, j, b, c, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_157([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_158([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_166([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_177([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_33([a, b, c, d, g, e, f], is_dual)
    } else {
        select_33([a, b, c, d, g, f, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_176([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([a, c, e, f, g, d, h, i], is_dual)
    } else {
        select_177([c, b, d, f, e, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_178([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_170([a, e, c, d, f], is_dual)
    } else {
        select_57([g, d, h, a, e, f, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_175([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_176([b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_178([a, c, d, h, f, g, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_180([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_147([a, b, f, d, e, g, h, i], is_dual)
    } else {
        select_28([b, d, c, e, g, f, h], is_dual)
    }
}
/// n = 6, i = 1
fn select_182([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_36([a, b, f, d, e], is_dual)
    } else {
        select_36([a, c, e, d, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_181([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_182([c, d, e, g, f, a], is_dual)
    } else {
        select_88([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_179([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_180([a, b, c, d, f, g, j, i, k], is_dual)
    } else {
        select_181([b, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_174([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_175([a, b, d, c, g, h, i, j, f, k, l], is_dual)
    } else {
        select_179([b, c, d, e, a, g, h, f, j, i, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_186([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_33([a, c, d, b, e, f, g], is_dual)
    } else {
        select_33([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 5, i = 2
fn select_187([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_30([a, b, c, d], is_dual)
    } else {
        select_25([a, d, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_185([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_186([g, h, f, i, a, d, b], !is_dual)
    } else {
        select_187([a, f, c, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_188([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_109([b, e, c, d, g, h], is_dual)
    } else {
        select_34([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_184([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_185([a, b, c, g, h, i, f, j, k], is_dual)
    } else {
        select_188([b, c, d, e, a, g, f, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_191([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_35([a, c, d, e, g, h], is_dual)
    } else {
        select_36([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_190([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_191([a, f, c, d, e, g, i, j], is_dual)
    } else {
        select_28([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_193([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_21([a, f, b, e, d, g], is_dual)
    } else {
        select_36([b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_192([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_137([a, b, c, e, f, h, i, g], is_dual)
    } else {
        select_193([a, c, d, f, g, e, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_189([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_190([a, b, c, d, e, f, h, g, i, k], is_dual)
    } else {
        select_192([h, e, j, k, i, a, g, f, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_183([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_184([a, b, c, e, g, f, h, i, j, k, l], is_dual)
    } else {
        select_189([a, b, d, i, f, h, g, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_173([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_174([b, d, e, a, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_183([b, d, e, c, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_156([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_157([a, b, c, d, i, g, k, l, m, h], is_dual)
    } else {
        select_173([a, c, d, b, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_199([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_21([a, b, d, g, f, i], is_dual)
    } else {
        select_22([c, d, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_198([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_91([e, c, d, a, f, g, h], is_dual)
    } else {
        select_199([b, a, d, c, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_201([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_84([c, d, e, g], is_dual)
    } else {
        select_35([a, b, h, f, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_202([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_21([a, e, c, f, d, h], is_dual)
    } else {
        select_58([b, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_200([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_201([b, c, a, d, e, f, h, g, i, j], is_dual)
    } else {
        select_202([b, g, c, f, a, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_197([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_198([a, b, d, g, f, c, h, i, j], is_dual)
    } else {
        select_200([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_204([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_137([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_52([a, c, d, e, f, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_205([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_170([d, e, a, g, f], !is_dual)
    } else {
        select_114([a, b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_203([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_204([h, i, g, j, a, b, e, c], !is_dual)
    } else {
        select_205([g, h, j, a, b, f, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_196([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_197([b, c, d, e, a, g, f, i, h, j], is_dual)
    } else {
        select_203([a, b, c, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_209([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_21([a, b, c, f, e, g], is_dual)
    } else {
        select_21([a, b, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_210([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_21([g, h, i, d, a, b], !is_dual)
    } else {
        select_97([a, c, f, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_209([b, c, d, e, g, f, i], is_dual)
    } else {
        select_210([g, i, j, e, h, a, b, c, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_207([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_208([a, b, c, d, e, f, g, j, h, k], is_dual)
    } else {
        select_146([g, i, e, k, j, a, h, b, f], !is_dual)
    }
}
/// n = 5, i = 1
fn select_212([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_170([a, b, c, d, e], is_dual)
    } else {
        select_30([a, b, e, c], is_dual)
    }
}
/// n = 9, i = 4
fn select_211([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_126([e, f, h, i, a, g, c, d], !is_dual)
    } else {
        select_212([a, h, i, f, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_206([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_207([a, b, d, c, e, g, h, f, i, j, k], is_dual)
    } else {
        select_211([e, h, i, j, a, b, g, c, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_195([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_196([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_206([b, c, d, h, f, a, g, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_194([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_157([a, b, c, d, h, f, j, k, l, g], is_dual)
    } else {
        select_195([a, c, d, b, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_155([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_156([b, a, c, d, e, f, h, g, j, i, k, l, m], is_dual)
    } else {
        select_194([a, b, c, d, e, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_219([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([c, d, e, f], is_dual)
    } else {
        select_30([a, b, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_220([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_30([b, c, e, g], is_dual)
    } else {
        select_26([a, d, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_218([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_219([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_220([a, b, c, h, f, g, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_222([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_29([b, c, d, e, g, h], is_dual)
    } else {
        select_36([a, d, e, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_221([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_209([a, i, d, e, f, h, k], is_dual)
    } else {
        select_222([b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_218([a, b, h, d, e, f, g, i, j, k], is_dual)
    } else {
        select_221([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_225([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_35([a, c, d, e, h, j], is_dual)
    } else {
        select_35([b, c, d, f, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_226([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_30([e, f, b, d], is_dual)
    } else {
        select_76([a, d, c, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_224([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_225([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_226([i, j, e, h, a, g, f, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_227([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_98([a, g, c, d, e, f, h, j], is_dual)
    } else {
        select_98([b, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_223([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_224([a, b, c, i, f, h, g, j, k, l], is_dual)
    } else {
        select_227([a, b, d, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_216([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_217([b, d, a, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_223([b, d, c, e, f, g, a, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_215([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_93([c, d, e, f, a, g, h, i, j, k], is_dual)
    } else {
        select_216([a, b, c, d, e, i, g, h, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_214([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_215([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_215([b, a, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 6, i = 2
fn select_233([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_35([a, c, d, b, e, f], is_dual)
    } else {
        select_35([b, c, d, a, e, f], is_dual)
    }
}
/// n = 7, i = 1
fn select_234([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_29([a, f, c, d, e, g], is_dual)
    } else {
        select_29([b, e, c, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_232([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_233([a, g, i, j, h, f], !is_dual)
    } else {
        select_234([a, d, b, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_235([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_83([b, f, c, d, e, g, h], is_dual)
    } else {
        select_98([a, g, c, d, e, f, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_231([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_232([a, b, i, c, f, h, g, j, k, l], is_dual)
    } else {
        select_235([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_230([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_231([e, d, a, b, h, j, i, f, g, k, l, m], is_dual)
    } else {
        select_231([e, d, a, c, g, j, i, f, h, k, l, m], is_dual)
    }
}
/// n = 8, i = 1
fn select_238([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_234([a, b, c, h, e, f, g], is_dual)
    } else {
        select_234([a, b, d, g, e, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_239([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_104([a, b, e, f, h], is_dual)
    } else {
        select_234([c, d, a, b, e, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_237([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_238([a, b, c, d, i, f, g, h], is_dual)
    } else {
        select_239([e, a, c, d, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 1
fn select_240([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_82([c, d, a, b, h, f, g, i], is_dual)
    } else {
        select_234([c, d, e, i, f, g, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_237([i, a, b, c, e, f, g, h, j, k], is_dual)
    } else {
        select_240([d, j, a, b, c, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_229([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_230([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_236([a, b, c, f, e, g, h, i, d, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_244([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_83([b, c, a, d, e, f, g], is_dual)
    } else {
        select_128([g, b, c, a, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_243([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_244([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_109([a, f, d, e, b, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_246([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_104([a, h, i, j, g], !is_dual)
    } else {
        select_115([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_245([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_246([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_246([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_242([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_243([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_245([a, f, g, i, j, k, h, b, d, e], !is_dual)
    }
}
/// n = 6, i = 1
fn select_249([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_109([a, b, d, e, c, f], is_dual)
    } else {
        select_109([a, c, d, e, b, f], is_dual)
    }
}
/// n = 7, i = 1
fn select_250([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_234([a, c, d, e, b, f, g], is_dual)
    } else {
        select_234([b, c, d, e, a, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_248([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_249([a, b, c, d, f, h], is_dual)
    } else {
        select_250([a, d, e, b, c, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_247([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_248([a, d, e, b, c, g, h, f], is_dual)
    } else {
        select_248([a, d, e, c, b, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_241([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_242([g, i, j, k, l, b, c, h, d, e, f], !is_dual)
    } else {
        select_247([i, g, j, k, l, a, b, c], !is_dual)
    }
}
/// n = 14, i = 5
fn select_228([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_229([c, e, f, d, a, b, h, i, j, g, k, l, n], is_dual)
    } else {
        select_241([a, b, c, d, i, j, g, k, l, m, h, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_213([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_214([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_228([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_154([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_155([a, b, c, d, e, j, g, h, k, l, i, m, n], is_dual)
    } else {
        select_213([a, b, c, e, d, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_12([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_13([a, b, e, c, f, g, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_154([a, b, e, d, f, g, h, i, c, j, k, l, n, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_258([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_87([b, g, c, e, a, f, h], is_dual)
    } else {
        select_234([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_257([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_258([a, d, b, e, f, c, g, h], is_dual)
    } else {
        select_258([a, d, c, e, f, b, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_261([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_35([a, c, d, e, f, h], is_dual)
    } else {
        select_35([b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_260([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_209([e, b, c, d, f, g, h], is_dual)
    } else {
        select_261([a, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_262([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_83([a, b, c, d, f, g, h], is_dual)
    } else {
        select_209([e, h, a, b, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_259([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_260([b, g, d, e, f, a, h, j, i], is_dual)
    } else {
        select_262([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_256([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_257([a, c, d, f, g, h, i, j], is_dual)
    } else {
        select_259([a, b, e, c, d, h, g, j, k, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_266([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_84([c, d, e, g], is_dual)
    } else {
        select_36([a, b, h, f, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_265([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_83([b, h, c, d, e, g, i], is_dual)
    } else {
        select_266([a, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_264([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_265([c, a, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_265([c, b, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 5, i = 2
fn select_269([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_30([a, b, c, d], is_dual)
    } else {
        select_25([d, b, e], is_dual)
    }
}
/// n = 7, i = 2
fn select_268([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_39([b, c, d, f, e, g], is_dual)
    } else {
        select_269([g, a, b, d, f], is_dual)
    }
}
/// n = 6, i = 2
fn select_270([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_48([a, f, e, b, c], !is_dual)
    } else {
        select_145([a, b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_267([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_268([a, c, d, e, f, h, g], is_dual)
    } else {
        select_270([g, a, b, c, e, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_263([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_264([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_267([b, c, i, d, a, g, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_255([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_256([a, b, c, d, e, i, h, g, j, k, l], is_dual)
    } else {
        select_263([a, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_33([e, c, d, f, i, h, k], is_dual)
    } else {
        select_33([e, a, b, f, j, g, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_276([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_21([a, e, b, d, g, f], is_dual)
    } else {
        select_26([a, c, f, e], is_dual)
    }
}
/// n = 11, i = 3
fn select_274([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_275([a, b, d, e, c, f, g, h, j, k, i], is_dual)
    } else {
        select_276([a, c, b, f, i, k, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_278([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_33([a, b, c, e, f, g, h], is_dual)
    } else {
        select_27([b, c, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_279([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_21([a, b, d, g, h, j], is_dual)
    } else {
        select_76([c, d, e, f, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_277([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_278([c, d, e, g, f, i, h, j], is_dual)
    } else {
        select_279([a, h, c, b, f, g, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_273([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_274([b, f, c, d, e, h, g, i, k, j, l], is_dual)
    } else {
        select_277([a, g, c, d, e, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_281([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_186([a, i, d, e, f, h, k], is_dual)
    } else {
        select_275([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 5, i = 1
fn select_283([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_36([b, a, c, d, e], is_dual)
    } else {
        select_22([b, e, d, a], is_dual)
    }
}
/// n = 9, i = 3
fn select_282([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_91([b, c, a, e, f, h, i], is_dual)
    } else {
        select_283([a, d, e, h, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_280([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_281([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_282([b, a, h, c, f, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_272([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_273([b, a, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_280([b, a, h, d, e, g, j, i, f, k, l, m], is_dual)
    }
}
/// n = 6, i = 2
fn select_287([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_49([a, e, f], is_dual)
    } else {
        select_36([a, b, c, d, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_286([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_20([a, b, c, d, e, g, f], is_dual)
    } else {
        select_287([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_285([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_286([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_127([a, b, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_290([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_58([b, c, d, f, g, h], is_dual)
    } else {
        select_41([a, d, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_289([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_124([e, i, j, f, a, g, d], !is_dual)
    } else {
        select_290([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_288([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_289([a, i, b, c, g, f, h, j, k, l], is_dual)
    } else {
        select_235([a, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_284([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_285([g, a, i, c, f, k, h, l, j], is_dual)
    } else {
        select_288([b, a, h, d, e, f, g, j, i, l, m, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_271([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_272([c, b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_284([c, a, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_254([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_255([b, c, d, e, f, a, h, i, g, k, j, l], is_dual)
    } else {
        select_271([a, b, c, f, d, e, h, i, j, k, g, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_295([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_170([b, c, d, e, f], is_dual)
    } else {
        select_145([a, b, c, f, e, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_297([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_41([e, f, a, b, c], !is_dual)
    } else {
        select_26([b, c, d, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_296([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_145([d, b, c, f, h, g], is_dual)
    } else {
        select_297([a, d, e, g, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_294([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_295([b, c, d, f, i, g, j], is_dual)
    } else {
        select_296([a, c, d, b, e, h, j, i, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_299([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_104([c, d, e, f, g], is_dual)
    } else {
        select_145([c, a, b, g, h, f], is_dual)
    }
}
/// n = 10, i = 2
fn select_298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_295([c, a, b, d, j, g, i], is_dual)
    } else {
        select_299([a, b, c, e, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_293([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_294([a, b, c, d, h, f, i, g, k, j, l], is_dual)
    } else {
        select_298([c, d, b, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_303([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_35([b, c, d, g, f, i], is_dual)
    } else {
        select_76([i, j, e, h, a, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_304([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_33([a, b, c, d, e, f, g], is_dual)
    } else {
        select_25([a, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_302([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_303([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_304([a, c, d, f, e, g, h, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_306([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_33([b, c, d, e, g, f, h], is_dual)
    } else {
        select_30([a, h, b, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_305([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_52([a, b, c, i, j, k], is_dual)
    } else {
        select_306([c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_302([f, c, d, e, a, h, g, j, i, k], is_dual)
    } else {
        select_305([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_309([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_21([a, f, b, e, h, i], is_dual)
    } else {
        select_27([c, d, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_308([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_309([a, b, d, e, f, h, i, k, j], is_dual)
    } else {
        select_276([a, b, c, f, g, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_307([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_122([a, i, b, e, g, f, k], is_dual)
    } else {
        select_308([b, a, e, c, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_300([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_301([a, b, c, e, f, g, i, k, j, l, m], is_dual)
    } else {
        select_307([b, c, e, f, d, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_292([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_293([b, c, d, e, f, a, h, i, g, j, k, l], is_dual)
    } else {
        select_300([a, b, c, f, d, e, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_311([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_83([b, c, d, e, f, g, h], is_dual)
    } else {
        select_69([a, h, b, c, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_310([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_295([a, b, c, h, f, i, g], is_dual)
    } else {
        select_311([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_291([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_292([a, c, b, d, e, f, g, h, i, j, k, l, n], is_dual)
    } else {
        select_310([a, d, e, h, i, g, j, k, b, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_253([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_254([a, d, c, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_291([a, d, b, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 2
fn select_317([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_20([a, c, b, h, f, g, i], is_dual)
    } else {
        select_100([c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_318([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_28([a, c, b, h, g, f, i], is_dual)
    } else {
        select_98([a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_316([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_317([b, d, a, e, f, c, g, h, i], is_dual)
    } else {
        select_318([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_137([a, g, d, e, f, h, i, j], is_dual)
    } else {
        select_222([a, d, e, b, c, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_319([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_320([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_320([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_315([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_316([a, b, c, h, f, g, j, i, l], is_dual)
    } else {
        select_319([a, b, c, i, d, e, k, h, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_323([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_140([a, b, d, c, e, f, g], is_dual)
    } else {
        select_76([b, d, f, e, a, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_322([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_95([a, b, f, d, e, h, g, j], is_dual)
    } else {
        select_323([a, b, g, c, f, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_324([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_137([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_50([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_321([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_322([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_324([a, g, d, e, b, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_314([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_315([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_321([a, b, i, d, e, j, c, h, k, m, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_329([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_84([d, e, f, i], is_dual)
    } else {
        select_29([a, b, c, h, g, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_328([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_83([c, i, d, e, f, g, j], is_dual)
    } else {
        select_329([a, b, g, d, e, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_327([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_328([c, d, a, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_328([c, d, b, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 6, i = 1
fn select_331([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_170([a, b, c, f, e], is_dual)
    } else {
        select_170([a, b, d, e, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_330([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_331([a, b, c, g, f, i], is_dual)
    } else {
        select_103([a, b, d, e, f, h, g], is_dual)
    }
}
/// n = 11, i = 2
fn select_326([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_327([b, c, d, e, a, f, g, h, j, i, k], is_dual)
    } else {
        select_330([b, c, i, d, e, a, h, k, j], is_dual)
    }
}
/// n = 5, i = 2
fn select_335([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_26([a, b, c, d], is_dual)
    } else {
        select_26([a, b, c, e], is_dual)
    }
}
/// n = 7, i = 2
fn select_334([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([a, c, d, e, f], is_dual)
    } else {
        select_335([a, b, f, e, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_333([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_99([e, a, b, c, d, f, g, h], is_dual)
    } else {
        select_334([e, h, a, b, f, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_332([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_257([a, b, c, d, h, g, j, i], is_dual)
    } else {
        select_333([b, c, e, f, a, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_325([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_326([a, c, d, f, g, b, e, i, h, j, k], is_dual)
    } else {
        select_332([a, c, d, h, f, g, b, i, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_313([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_314([a, b, c, d, e, f, g, i, j, k, h, l, m], is_dual)
    } else {
        select_325([a, c, d, e, b, f, g, h, j, k, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_339([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_95([a, b, g, d, e, f, h, i], is_dual)
    } else {
        select_244([a, c, f, d, e, g, h, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_341([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_43([a, c, d, b, e, f, g], is_dual)
    } else {
        select_43([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_342([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_87([b, c, d, a, e, f, g], is_dual)
    } else {
        select_182([a, c, d, b, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_340([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_341([a, f, e, h, b, g, c], !is_dual)
    } else {
        select_342([a, c, d, b, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_338([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_339([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_340([a, j, k, f, g, b, i, h], !is_dual)
    }
}
/// n = 10, i = 2
fn select_345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_101([b, c, g, d, e, f, h, i], is_dual)
    } else {
        select_98([a, h, d, e, f, g, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_347([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_35([a, c, d, e, f, h], is_dual)
    } else {
        select_26([b, c, d, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_111([e, i, j, f, h, a, g, b], !is_dual)
    } else {
        select_347([a, e, c, d, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_344([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_345([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_346([b, i, c, d, a, g, h, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_349([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_87([b, e, c, d, g, f, h], is_dual)
    } else {
        select_26([d, a, h, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_350([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_233([a, g, f, h, d, b], !is_dual)
    } else {
        select_233([a, f, g, h, e, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_348([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_349([c, a, b, d, f, e, g, h], is_dual)
    } else {
        select_350([d, b, c, h, f, e, g, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_343([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_344([b, a, c, d, e, f, g, h, i, k, j, m], is_dual)
    } else {
        select_348([g, l, m, a, b, k, h, j, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_337([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_338([b, a, h, e, f, g, c, i, k, j, l], is_dual)
    } else {
        select_343([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 6, i = 2
fn select_355([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_21([a, b, c, d, e, f], is_dual)
    } else {
        select_25([a, f, b], is_dual)
    }
}
/// n = 8, i = 3
fn select_354([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_355([a, g, h, e, f, b], !is_dual)
    } else {
        select_347([b, a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_357([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_84([b, c, d, e], is_dual)
    } else {
        select_25([a, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_356([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_48([b, f, e, a, g], is_dual)
    } else {
        select_357([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_353([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_354([a, b, c, g, e, f, h, i], is_dual)
    } else {
        select_356([a, b, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_352([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_353([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_340([a, i, j, e, f, b, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_359([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_262([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_346([b, g, d, e, a, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_359([b, a, e, c, d, f, g, h, j, i, l], is_dual)
    } else {
        select_348([f, k, l, a, b, j, h, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_351([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_352([b, a, g, e, f, c, h, j, i, k], is_dual)
    } else {
        select_358([a, b, c, d, e, f, h, g, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_336([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_337([a, b, c, h, e, f, g, i, j, l, k, m, n], is_dual)
    } else {
        select_351([a, b, c, j, d, g, k, h, l, i, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_312([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_313([c, a, d, b, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_336([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_252([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_253([a, c, b, d, f, g, e, h, i, j, k, m, l, n], is_dual)
    } else {
        select_312([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_367([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_21([a, c, b, f, g, h], is_dual)
    } else {
        select_30([b, e, d, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_367([a, b, h, c, f, g, i, j], is_dual)
    } else {
        select_98([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_68([b, d, g, e, f, i, h, j], is_dual)
    } else {
        select_68([a, c, h, e, f, i, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_365([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_366([g, b, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_368([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_370([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_98([g, a, c, d, e, f, h, i], is_dual)
    } else {
        select_98([f, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_371([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_57([d, g, h, e, f, a, c], !is_dual)
    } else {
        select_57([e, g, h, d, f, b, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_369([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_370([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_371([b, h, c, f, a, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_364([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_365([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_369([a, g, d, e, f, b, h, i, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_363([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_93([a, c, d, f, b, g, h, i, j, k], is_dual)
    } else {
        select_364([a, b, c, e, d, i, h, g, k, j, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_373([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_316([a, b, d, h, e, f, g, i, k], is_dual)
    } else {
        select_316([a, c, d, g, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_372([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_373([a, b, d, c, e, i, g, h, k, j, l], is_dual)
    } else {
        select_93([a, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_362([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_363([a, b, d, e, c, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_372([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_361([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_362([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_362([a, b, d, e, f, g, h, c, i, j, k, m, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_379([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_140([a, b, c, h, f, g, i], is_dual)
    } else {
        select_100([c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_380([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_219([e, f, c, d, g, i, h, j], is_dual)
    } else {
        select_219([e, f, a, b, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_378([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_379([a, b, g, e, f, c, h, i, j], is_dual)
    } else {
        select_380([c, d, e, f, a, b, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_377([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_378([a, b, c, e, d, h, g, i, k, j], is_dual)
    } else {
        select_378([a, b, d, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_383([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_278([e, c, d, g, f, i, h, j], is_dual)
    } else {
        select_278([e, a, b, h, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_384([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_278([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_73([a, b, h, f, g, e, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_382([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_383([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_384([b, g, d, e, a, f, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_386([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_278([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_33([a, b, h, e, g, f, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_385([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_383([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_386([b, g, d, e, f, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_381([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_382([a, c, d, b, h, f, g, i, k, j, l], is_dual)
    } else {
        select_385([b, c, e, a, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_376([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_377([a, c, b, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_381([b, d, c, e, f, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_385([b, c, e, a, g, f, h, i, j, k], is_dual)
    } else {
        select_385([a, c, d, b, h, f, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_387([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_377([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_388([c, d, b, e, f, g, h, i, a, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_375([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_376([a, b, c, e, d, f, h, i, j, g, k, l], is_dual)
    } else {
        select_387([a, c, d, e, b, f, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_393([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_83([b, c, d, e, f, g, h], is_dual)
    } else {
        select_28([a, h, b, c, f, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_392([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_366([a, b, h, d, e, f, g, i, j, k], is_dual)
    } else {
        select_393([a, c, g, d, e, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_391([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_217([c, a, d, e, f, g, b, h, i, k, j], is_dual)
    } else {
        select_392([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_390([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_93([a, c, d, f, b, g, h, i, j, k], is_dual)
    } else {
        select_391([a, b, c, e, d, i, h, g, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_389([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_390([a, b, d, e, c, f, h, i, j, g, k, l], is_dual)
    } else {
        select_372([a, b, c, d, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_374([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_375([a, c, b, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_389([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_360([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_361([a, b, c, d, f, e, g, h, i, j, l, k, m], is_dual)
    } else {
        select_374([a, d, b, e, g, c, f, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_251([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_252([a, b, c, d, g, e, f, h, j, k, l, i, m, n], is_dual)
    } else {
        select_360([c, a, b, d, e, g, f, h, j, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_11([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_12([a, c, d, b, e, f, g, h, i, j, l, m, n, k], is_dual)
    } else {
        select_251([a, c, d, f, b, e, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_10([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_11([a, b, c, d, e, g, f, h, i, j, l, m, k, n], is_dual)
    } else {
        select_11([a, b, d, c, e, f, g, h, i, k, l, n, j, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_9([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_10([e, d, b, f, c, a, g, i, l, h, k, m, n, j], is_dual)
    } else {
        select_10([e, d, b, g, c, a, f, i, l, h, j, m, n, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_8([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_9([c, d, a, b, e, f, g, h, j, k, l, m, n, i], is_dual)
    } else {
        select_9([d, c, a, b, e, f, g, i, j, k, l, m, n, h], is_dual)
    }
}
/// n = 14, i = 5
fn select_7([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_8([a, b, c, d, e, f, g, i, j, k, l, h, m, n], is_dual)
    } else {
        select_8([a, b, c, d, e, f, h, i, j, k, l, g, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_6([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_7([a, b, c, d, e, f, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_7([a, b, c, d, e, i, g, h, j, k, l, f, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_5([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_6([j, i, a, g, h, b, c, d, e, f, k, l, m, n], is_dual)
    } else {
        select_6([j, i, f, g, h, b, c, d, e, a, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_4([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_5([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_5([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_408([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_342([a, c, g, d, b, f, h], is_dual)
    } else {
        select_250([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_409([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_126([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_126([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_407([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_409([a, b, c, d, g, h, i, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_412([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_109([b, a, c, d, e, f], is_dual)
    } else {
        select_233([a, f, h, i, g, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_411([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_412([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_412([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_410([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_411([a, b, i, f, j, c, h, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_406([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_407([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_410([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_406([a, b, c, i, h, k, j, f, d, g], !is_dual)
    } else {
        select_406([a, b, c, h, i, k, j, g, e, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_414([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_407([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_407([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_413([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_414([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_406([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_405([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_413([a, b, c, i, k, h, f, d, j, g], !is_dual)
    }
}
/// n = 6, i = 2
fn select_420([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_170([a, c, b, d, e], is_dual)
    } else {
        select_269([a, c, e, b, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_419([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_420([a, b, c, d, f, g], is_dual)
    } else {
        select_233([a, b, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_418([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_419([a, b, c, d, g, h, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_423([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_170([a, f, h, i, g], !is_dual)
    } else {
        select_100([a, b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_422([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_423([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_423([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_421([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_422([a, b, f, i, j, c, h, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_417([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_418([a, b, c, e, f, d, g, h], is_dual)
    } else {
        select_421([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_416([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_406([a, b, c, h, i, k, j, g, d, f], !is_dual)
    } else {
        select_417([a, b, c, i, h, k, j, f, e, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_427([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_54([a, b, c, e, f, g, h], is_dual)
    } else {
        select_131([a, b, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_426([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_427([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_427([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_431([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_36([a, c, d, e, h], is_dual)
    } else {
        select_89([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_430([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_124([e, h, i, a, g, f, b], !is_dual)
    } else {
        select_431([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_429([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_430([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_430([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_433([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_104([a, b, c, d, e], is_dual)
    } else {
        select_104([a, b, f, g, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_432([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_341([a, b, c, f, g, e, h], is_dual)
    } else {
        select_433([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_429([a, b, e, c, d, g, f, h, i], is_dual)
    } else {
        select_432([a, b, f, e, c, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_425([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_426([a, b, i, c, j, f, h, g], !is_dual)
    } else {
        select_428([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_437([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_44([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_44([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_436([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_56([b, a, c, e, d, g, f, h], is_dual)
    } else {
        select_437([e, g, d, i, a, h, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_435([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_436([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_436([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_438([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_95([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_324([a, f, d, e, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_435([a, b, g, d, c, f, h, i, j], is_dual)
    } else {
        select_438([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_424([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_425([a, b, c, e, f, d, g, i, h, j], is_dual)
    } else {
        select_434([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_416([a, b, c, e, d, f, g, h, j, i, k], is_dual)
    } else {
        select_424([a, b, c, j, k, h, f, d, i, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_404([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    } else {
        select_415([a, b, c, d, e, f, h, i, g, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_402([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_403([a, b, c, d, e, h, i, g, j, k, f], is_dual)
    } else {
        select_403([a, b, c, e, d, i, h, f, k, j, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_446([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_20([b, c, d, e, f, g, i], is_dual)
    } else {
        select_59([a, c, g, f, e, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_448([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_33([d, b, c, e, g, f, h], is_dual)
    } else {
        select_30([h, i, a, d], is_dual)
    }
}
/// n = 7, i = 3
fn select_450([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_22([b, c, d, e], is_dual)
    } else {
        select_25([a, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_449([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_450([a, b, h, d, i, f, g], is_dual)
    } else {
        select_30([a, g, c, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_447([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_448([c, a, b, e, g, f, i, d, h], is_dual)
    } else {
        select_449([a, c, b, e, d, g, i, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_445([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_446([d, i, j, k, a, g, h, f, e, c], !is_dual)
    } else {
        select_447([b, a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_444([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_445([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_445([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 6, i = 2
fn select_453([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_48([b, e, d, a, f], is_dual)
    } else {
        select_35([b, a, c, d, e, f], is_dual)
    }
}
/// n = 6, i = 2
fn select_452([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_453([a, b, d, c, e, f], is_dual)
    } else {
        select_453([a, c, d, b, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_455([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_39([e, h, a, f, g, b], !is_dual)
    } else {
        select_347([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_454([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_455([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_455([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_451([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_452([a, b, f, h, c, g], !is_dual)
    } else {
        select_454([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_443([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_444([a, b, j, l, h, k, f, i, c, d, g], !is_dual)
    } else {
        select_451([a, b, c, e, h, j, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_460([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_450([a, c, d, e, f, g, h], is_dual)
    } else {
        select_30([b, f, c, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_461([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_35([a, b, f, e, h, i], is_dual)
    } else {
        select_27([c, d, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_459([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_460([a, b, d, e, g, h, f, i], is_dual)
    } else {
        select_461([a, c, b, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_458([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_224([a, b, c, g, e, h, f, j, i, k], is_dual)
    } else {
        select_459([a, b, f, d, e, h, g, i, j], is_dual)
    }
}
/// n = 6, i = 2
fn select_464([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_21([a, b, c, e, d, f], is_dual)
    } else {
        select_97([d, c, a, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_463([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_464([a, e, d, h, g, j], is_dual)
    } else {
        select_44([a, b, c, f, e, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_466([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_30([a, g, i, h], !is_dual)
    } else {
        select_89([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_465([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_32([a, e, b, g, i, f, h, d], is_dual)
    } else {
        select_466([h, j, i, f, g, a, d, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_462([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_463([i, h, d, k, f, g, j, a, e, b], !is_dual)
    } else {
        select_465([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_457([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_458([a, b, c, d, e, f, g, i, h, k, l], is_dual)
    } else {
        select_462([e, j, l, a, k, h, i, f, b, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_456([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_457([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_457([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_442([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_443([a, b, d, f, c, g, e, h, i, j, k, l], is_dual)
    } else {
        select_456([a, b, d, f, e, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_470([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_126([f, h, g, i, a, d, b, e], !is_dual)
    } else {
        select_127([g, f, h, i, a, e, d, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_471([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_38([h, f, g, a, b, c, e], !is_dual)
    } else {
        select_204([a, c, d, b, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_469([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_470([e, i, h, g, f, b, c, a, d], !is_dual)
    } else {
        select_471([a, e, h, i, g, f, b, c], !is_dual)
    }
}
/// n = 8, i = 2
fn select_474([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_104([b, d, e, f, g], is_dual)
    } else {
        select_297([a, b, c, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_473([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_126([a, b, c, e, f, h, i, g], is_dual)
    } else {
        select_474([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_472([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_470([a, i, j, h, g, f, c, b, e], !is_dual)
    } else {
        select_473([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_468([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_469([a, g, c, d, b, f, h, i, j], is_dual)
    } else {
        select_472([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_478([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_114([b, c, d, e, f, g], is_dual)
    } else {
        select_59([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_479([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_104([a, b, c, e, g], is_dual)
    } else {
        select_109([b, d, a, c, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_477([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_478([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_479([f, h, i, e, a, b, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_476([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_477([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_477([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_480([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_409([a, b, i, h, j, f, c, g], !is_dual)
    } else {
        select_411([a, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_475([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_476([a, b, d, e, f, h, g, j, i], is_dual)
    } else {
        select_480([a, b, k, j, h, i, f, d, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_467([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_468([a, b, c, e, g, f, h, k, i, l], is_dual)
    } else {
        select_475([a, b, f, c, d, i, g, j, k, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_441([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_442([a, b, e, c, d, f, g, i, h, j, k, l], is_dual)
    } else {
        select_467([a, b, e, d, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_440([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_441([a, b, c, d, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_404([a, b, c, k, l, i, g, h, d, j, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_439([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_403([a, b, c, k, l, g, j, d, e, i, h], !is_dual)
    } else {
        select_440([a, b, c, e, d, f, g, i, j, h, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_401([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_402([a, b, c, g, l, d, e, j, k, h, i], !is_dual)
    } else {
        select_439([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_490([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_33([a, b, c, d, e, f, g], is_dual)
    } else {
        select_33([a, b, c, e, d, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_489([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_170([a, d, c, e, g], is_dual)
    } else {
        select_490([b, a, c, d, e, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_488([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_342([e, a, c, d, h, g, i], is_dual)
    } else {
        select_489([a, b, c, e, f, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_492([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_147([f, h, i, c, d, g, a, e], !is_dual)
    } else {
        select_59([f, g, i, c, d, e, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_491([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_492([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_492([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_487([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_488([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_491([b, g, e, f, i, h, a, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_496([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_84([b, c, d, e], is_dual)
    } else {
        select_26([a, g, h, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_495([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_496([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_496([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_258([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_495([a, e, f, i, j, h, c, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_497([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_258([a, c, d, e, b, f, g, i], is_dual)
    } else {
        select_258([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_493([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_494([a, c, e, d, h, g, f, i, j, k], is_dual)
    } else {
        select_497([a, h, j, g, l, e, k, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_486([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_487([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_493([a, c, d, e, b, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_500([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_342([a, b, c, d, e, f, g], is_dual)
    } else {
        select_495([a, e, f, h, i, g, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_501([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_232([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_232([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_499([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_500([a, b, c, i, f, k, h, j, l], is_dual)
    } else {
        select_501([a, f, d, h, e, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_498([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_493([a, g, d, e, b, h, f, i, j, k, l, m], is_dual)
    } else {
        select_499([a, c, b, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_485([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_486([a, b, c, g, e, f, h, i, l, m, j, k], is_dual)
    } else {
        select_498([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_505([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_341([a, f, e, i, b, h, g], !is_dual)
    } else {
        select_258([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_504([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_353([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_505([a, i, e, k, f, b, j, h, g], !is_dual)
    }
}
/// n = 7, i = 2
fn select_507([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_295([a, c, d, e, b, f, g], is_dual)
    } else {
        select_295([b, c, d, e, a, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_506([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_507([a, f, i, j, e, b, h], !is_dual)
    } else {
        select_494([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_504([a, e, k, j, b, f, i, h, c, g, d], !is_dual)
    } else {
        select_506([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_512([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_30([a, g, c, i], is_dual)
    } else {
        select_89([a, b, d, f, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_511([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_512([b, a, d, c, f, g, e, i, h], is_dual)
    } else {
        select_220([b, a, e, d, g, f, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_513([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_147([a, b, f, c, e, g, h, i], is_dual)
    } else {
        select_209([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_510([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_511([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_513([b, c, e, a, f, d, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_514([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_420([a, f, b, c, g, e], is_dual)
    } else {
        select_342([a, c, d, b, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_509([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_510([a, d, c, e, b, g, f, i, h], is_dual)
    } else {
        select_514([a, d, e, f, g, b, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_516([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_455([a, c, d, f, e, h, g, j], is_dual)
    } else {
        select_136([e, i, h, k, f, j, a, b, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_519([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_21([d, b, c, e, f, g], is_dual)
    } else {
        select_97([a, b, d, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_518([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_519([a, c, f, e, b, g, h, i], is_dual)
    } else {
        select_461([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_521([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_33([a, b, f, d, g, e, h], is_dual)
    } else {
        select_33([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_520([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_187([a, g, f, i, j], is_dual)
    } else {
        select_521([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_517([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_518([i, j, k, g, e, d, a, h, b], !is_dual)
    } else {
        select_520([a, b, c, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_515([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_516([e, i, j, k, a, f, h, b, c, g, d], !is_dual)
    } else {
        select_517([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_509([a, i, j, e, k, f, b, c, h], !is_dual)
    } else {
        select_515([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_502([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_503([a, e, k, j, b, g, i, f, h, d, c], !is_dual)
    } else {
        select_508([a, b, c, d, e, g, h, i, j, k, f], is_dual)
    }
}
/// n = 13, i = 5
fn select_484([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_485([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_502([a, b, i, d, f, k, c, g, l, m, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_527([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_87([a, b, c, d, e, f, g], is_dual)
    } else {
        select_104([e, a, h, i, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_526([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_527([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_527([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_525([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_526([a, b, f, j, c, i, h, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_524([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_525([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_525([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_523([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_524([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_524([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_531([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_108([a, c, b, d, f, g, e, h], is_dual)
    } else {
        select_108([b, c, a, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_530([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_107([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_531([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_532([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_257([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_411([a, g, i, f, j, b, h, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_530([a, i, f, j, k, g, b, c, h], !is_dual)
    } else {
        select_532([a, c, d, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_528([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_529([a, f, g, j, k, b, h, i, c, d, e], !is_dual)
    } else {
        select_529([a, f, h, j, k, b, g, i, c, e, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_522([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_523([a, h, f, j, k, g, b, c, i, d], !is_dual)
    } else {
        select_528([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_483([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_484([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_522([a, f, l, m, k, b, i, c, g, d, j], !is_dual)
    }
}
/// n = 13, i = 5
fn select_482([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_483([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_483([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_538([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_408([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_408([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_539([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_495([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_104([a, g, h, i, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_537([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_538([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_539([a, b, d, e, g, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_541([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_494([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_257([a, i, j, k, e, f, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_540([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_541([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_541([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_537([a, b, c, i, j, f, k, h, d, g], !is_dual)
    } else {
        select_540([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_544([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_95([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_334([a, f, d, e, b, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_543([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_505([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_544([a, f, e, j, k, b, i, c, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_542([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_543([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_543([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_535([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_536([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_542([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_550([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_20([b, c, d, e, f, g, i], is_dual)
    } else {
        select_96([a, c, g, f, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_549([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_550([c, d, b, e, f, a, g, i, h], is_dual)
    } else {
        select_180([c, d, a, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_548([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_549([b, a, e, d, c, g, f, i, h], is_dual)
    } else {
        select_514([b, e, a, f, g, c, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_547([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_548([a, c, d, b, e, g, h, f, i], is_dual)
    } else {
        select_548([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_546([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_547([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_547([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_545([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_546([a, b, c, e, f, g, d, h, i], is_dual)
    } else {
        select_546([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_534([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_535([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_545([a, b, c, h, j, k, f, d, i], !is_dual)
    }
}
/// n = 9, i = 3
fn select_557([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_98([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_59([b, g, c, a, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_556([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_557([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_109([a, f, d, e, c, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_559([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_109([a, d, b, c, e, f], is_dual)
    } else {
        select_233([a, b, c, e, g, h], is_dual)
    }
}
/// n = 7, i = 1
fn select_560([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_104([a, c, d, e, g], is_dual)
    } else {
        select_109([a, b, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_559([a, b, h, c, g, f, i, j], is_dual)
    } else {
        select_560([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_555([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_556([a, b, c, d, g, f, i, h, j], is_dual)
    } else {
        select_558([a, b, e, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_564([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_21([d, b, c, e, f, h], is_dual)
    } else {
        select_89([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_563([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_140([a, e, c, d, f, g, h], is_dual)
    } else {
        select_564([c, b, a, f, g, h, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_562([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_317([b, d, c, a, e, f, h, g, i], is_dual)
    } else {
        select_563([b, g, c, d, a, f, h, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_567([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_21([a, c, b, f, g, e], is_dual)
    } else {
        select_21([a, d, b, e, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_566([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_567([a, b, c, d, e, f, g], is_dual)
    } else {
        select_145([a, e, f, h, g, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_565([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_453([a, b, d, e, f, h], is_dual)
    } else {
        select_566([a, c, b, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_561([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_562([a, c, b, e, d, f, g, h, i, j], is_dual)
    } else {
        select_565([a, f, j, k, b, h, i, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_554([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_555([a, b, d, f, e, c, g, h, i, k], is_dual)
    } else {
        select_561([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_553([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_554([a, b, c, d, e, h, g, j, k, i, m], is_dual)
    } else {
        select_554([a, b, d, c, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_572([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_147([a, b, f, c, e, h, g, i], is_dual)
    } else {
        select_567([b, e, c, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_573([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_55([b, c, d, f, e, h, g], is_dual)
    } else {
        select_464([e, f, i, a, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_571([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_572([b, a, c, d, e, f, g, h, j], is_dual)
    } else {
        select_573([e, j, i, h, a, g, f, b, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_576([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_89([b, c, a, d, e, g, f], is_dual)
    } else {
        select_41([b, f, d, a, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_575([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_59([g, h, i, b, a, f, d], !is_dual)
    } else {
        select_576([a, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_577([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_55([g, i, e, h, a, c, b], !is_dual)
    } else {
        select_52([b, c, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_574([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_575([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_577([a, c, b, d, e, g, f, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_570([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_571([b, a, g, c, e, f, i, j, h, k], is_dual)
    } else {
        select_574([a, b, f, d, e, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_579([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_349([b, g, c, a, e, f, h, i], is_dual)
    } else {
        select_386([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_581([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_52([a, b, d, g, f, h], is_dual)
    } else {
        select_40([g, i, a, h, e, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_580([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_577([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_581([a, c, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_578([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_579([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_580([a, f, b, d, e, h, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_570([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_578([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_586([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_21([f, g, e, c, d, a], !is_dual)
    } else {
        select_25([e, b, d], is_dual)
    }
}
/// n = 7, i = 3
fn select_585([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_355([a, b, c, d, e, f], is_dual)
    } else {
        select_586([c, b, d, e, f, a, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_584([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_354([a, b, d, e, f, h, i, g], is_dual)
    } else {
        select_585([a, b, c, h, g, i, f], is_dual)
    }
}
/// n = 6, i = 2
fn select_588([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_170([a, b, c, d, f], is_dual)
    } else {
        select_170([a, c, b, d, e], is_dual)
    }
}
/// n = 7, i = 3
fn select_587([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_172([b, a, c, d, e, f], is_dual)
    } else {
        select_588([e, a, d, g, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_583([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_584([a, c, d, b, e, f, h, g, i], is_dual)
    } else {
        select_587([a, c, g, f, i, b, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_591([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_162([a, b, f, e, d, g, h], is_dual)
    } else {
        select_35([b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_590([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_38([a, b, f, e, g, h, d], is_dual)
    } else {
        select_591([b, a, c, e, d, f, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_593([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_111([a, c, b, e, f, g, d, h], is_dual)
    } else {
        select_276([b, c, a, e, d, g, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_592([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_38([a, f, b, g, e, h, i], is_dual)
    } else {
        select_593([a, b, c, d, f, e, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_589([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_590([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_592([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_582([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_583([a, c, d, b, e, g, f, i, h], is_dual)
    } else {
        select_589([a, h, g, j, b, i, c, d, f], !is_dual)
    }
}
/// n = 12, i = 5
fn select_568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_569([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_582([a, h, b, k, l, i, f, c, j, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_552([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_553([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_568([a, b, d, g, f, i, h, c, j, k, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_597([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_507([a, b, d, e, c, f, g], is_dual)
    } else {
        select_419([a, b, c, d, e, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_599([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_40([d, h, a, e, g, b, f], !is_dual)
    } else {
        select_44([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_598([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_599([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_599([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_596([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_597([a, b, d, c, e, f, g], is_dual)
    } else {
        select_598([a, b, d, e, f, g, c, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_603([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_115([b, c, d, e, f], is_dual)
    } else {
        select_26([a, h, i, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_602([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_603([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_603([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_601([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_507([a, b, c, h, j, i, g], !is_dual)
    } else {
        select_602([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_606([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_104([a, c, d, e, f], is_dual)
    } else {
        select_233([a, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_605([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_341([a, b, c, g, f, h, i], is_dual)
    } else {
        select_606([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_604([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_605([a, b, g, e, f, c, h, i, j], is_dual)
    } else {
        select_333([c, d, e, f, a, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_600([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_601([a, b, c, d, e, g, i, h, j, k], is_dual)
    } else {
        select_604([a, b, c, f, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_595([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_596([a, b, c, h, k, d, j, i], !is_dual)
    } else {
        select_600([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_610([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_341([a, b, g, h, c, f, d], !is_dual)
    } else {
        select_170([b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_609([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_507([a, b, d, e, c, f, g], is_dual)
    } else {
        select_610([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_612([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_559([a, b, c, d, f, e, g, i], is_dual)
    } else {
        select_559([a, b, h, i, g, e, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_611([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_612([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_432([a, b, e, i, g, h, c, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_608([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_609([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_611([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_614([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_500([a, i, f, j, b, g, h, c, d], !is_dual)
    } else {
        select_257([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_613([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_614([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_614([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_607([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_608([a, b, c, j, i, g, d, h, e], !is_dual)
    } else {
        select_613([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_594([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_595([a, b, c, d, g, f, h, j, i, k, l], is_dual)
    } else {
        select_607([a, b, c, d, e, i, k, g, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_551([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_552([a, b, c, d, f, e, h, g, i, k, l, j, m], is_dual)
    } else {
        select_594([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_533([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_534([a, b, c, k, m, i, l, d, g, e, j], !is_dual)
    } else {
        select_551([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_481([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_482([a, b, c, d, e, f, h, i, j, k, g, l, m], is_dual)
    } else {
        select_533([a, b, c, e, d, f, g, i, j, k, l, h, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_400([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_401([a, b, c, d, e, i, g, j, k, l, m, h], is_dual)
    } else {
        select_481([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_399([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_400([a, b, c, d, f, g, e, h, i, j, k, l, m], is_dual)
    } else {
        select_400([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_398([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_399([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_399([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_619([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_534([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_534([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_627([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_283([f, a, c, h, e], is_dual)
    } else {
        select_276([a, b, e, d, g, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_629([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_21([b, d, c, e, g, f], is_dual)
    } else {
        select_41([d, h, a, b, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_628([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_48([i, f, c, a, b], !is_dual)
    } else {
        select_629([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_626([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_627([c, b, d, e, f, a, g, h, i], is_dual)
    } else {
        select_628([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_632([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_21([a, b, c, e, d, g], is_dual)
    } else {
        select_21([a, f, g, e, d, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_631([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_464([a, c, d, g, f, h], is_dual)
    } else {
        select_632([a, b, c, e, h, g, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_633([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_96([a, b, c, d, e, f], is_dual)
    } else {
        select_145([a, d, f, g, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_630([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_631([a, c, b, d, e, f, h, g, i], is_dual)
    } else {
        select_633([a, g, c, b, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_625([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_626([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_630([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_624([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_625([a, e, f, k, b, h, j, i, c, g], !is_dual)
    } else {
        select_504([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_623([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_624([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_624([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_634([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_414([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_414([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_622([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_623([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_634([a, b, c, h, f, k, d, j, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_621([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_622([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_622([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_641([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_233([a, f, i, j, h, g], !is_dual)
    } else {
        select_234([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_640([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_641([e, h, c, d, g, f, i, j, k, l], is_dual)
    } else {
        select_345([e, c, d, a, b, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_639([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_640([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_640([a, b, c, d, g, f, e, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_643([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_527([b, h, c, f, a, g, i, j, k], is_dual)
    } else {
        select_235([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_642([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_643([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_643([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_638([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_639([d, e, f, g, a, b, c, h, i, j, k, l], is_dual)
    } else {
        select_642([a, b, c, h, f, g, d, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_648([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_35([a, c, d, e, f, g], is_dual)
    } else {
        select_30([a, b, h, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_647([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_303([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_648([a, e, c, d, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_646([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_647([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_178([f, e, j, a, h, i, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_645([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_646([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_646([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_650([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_95([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_30([a, b, h, c], is_dual)
    }
}
/// n = 7, i = 3
fn select_653([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_35([a, b, c, d, e, f], is_dual)
    } else {
        select_35([a, b, c, d, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_652([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_653([e, c, d, a, f, g, h], is_dual)
    } else {
        select_69([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_651([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_652([a, e, c, d, f, g, h, i], is_dual)
    } else {
        select_26([a, b, h, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_649([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_650([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_651([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_644([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_645([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_649([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_637([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_638([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_644([a, b, c, d, e, i, j, k, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_657([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_641([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_641([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_656([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_257([a, i, j, k, f, c, b, h], !is_dual)
    } else {
        select_657([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_655([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_656([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_656([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_661([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_109([a, c, b, d, e, f], is_dual)
    } else {
        select_464([a, f, c, b, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_660([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_341([a, b, e, h, c, g, f], !is_dual)
    } else {
        select_661([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_662([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_420([a, b, c, f, g, e], is_dual)
    } else {
        select_661([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_659([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_660([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_662([a, b, c, e, d, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_665([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([a, c, d, e, f], is_dual)
    } else {
        select_464([a, e, h, b, g, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_664([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_665([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_104([a, c, d, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_663([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_664([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_664([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_659([a, b, c, d, j, i, h, g], !is_dual)
    } else {
        select_663([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_654([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_655([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_658([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_636([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_637([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_654([a, b, c, d, e, i, j, k, l, m, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_635([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_636([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_636([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_620([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_621([a, b, c, d, e, i, j, k, f, l, m], is_dual)
    } else {
        select_635([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_618([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_619([a, b, c, d, e, i, j, k, l, f, m], is_dual)
    } else {
        select_620([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_674([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_219([a, g, c, d, e, f, h, i], is_dual)
    } else {
        select_266([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_673([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_674([b, h, d, e, f, g, a, i, j], is_dual)
    } else {
        select_345([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_672([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_673([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_673([a, b, d, e, f, g, h, c, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_676([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_258([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_205([f, e, i, a, b, h, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_675([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_676([a, b, e, c, f, g, d, h, i], is_dual)
    } else {
        select_676([a, b, e, d, f, g, c, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_671([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_672([c, b, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_675([b, c, d, e, i, h, a, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_670([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_671([g, f, e, a, b, c, d, h, j, i, k], is_dual)
    } else {
        select_671([g, f, e, c, d, a, b, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_681([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([b, c, d, e, f], is_dual)
    } else {
        select_41([e, g, a, b, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_680([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_127([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_681([a, b, d, e, c, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_679([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_680([a, b, c, d, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_683([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_674([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_235([b, a, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_684([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_342([b, c, d, a, f, e, g], is_dual)
    } else {
        select_205([f, e, h, a, b, g, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_682([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_683([c, b, d, a, e, f, g, h, i], is_dual)
    } else {
        select_684([b, c, d, h, g, a, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_678([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_679([a, b, c, d, h, g, e, i, j], is_dual)
    } else {
        select_682([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_688([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_490([b, c, d, e, f, g, h], is_dual)
    } else {
        select_464([h, f, i, a, e, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_687([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_126([e, f, c, d, a, g, h, i], is_dual)
    } else {
        select_688([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_690([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_87([i, j, f, a, h, e, b], !is_dual)
    } else {
        select_233([a, f, c, d, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_689([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_235([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_690([a, j, k, l, f, b, i, g, h, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_686([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_687([a, f, k, l, b, i, j, g, h], !is_dual)
    } else {
        select_689([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_692([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_652([e, g, c, d, f, h, i, j], is_dual)
    } else {
        select_99([e, c, d, a, b, f, h, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_694([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_100([f, c, d, e, b, g], is_dual)
    } else {
        select_98([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_693([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_126([f, a, i, j, b, h, c, g], !is_dual)
    } else {
        select_694([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_691([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_692([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_693([f, g, k, l, m, a, j, i, d, e], !is_dual)
    }
}
/// n = 13, i = 5
fn select_685([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_686([a, b, h, e, f, g, c, i, j, k, l, m], is_dual)
    } else {
        select_691([b, c, d, e, f, a, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_677([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_678([a, b, c, d, e, h, g, i, j, k], is_dual)
    } else {
        select_685([a, b, c, f, d, e, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_669([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_670([a, e, f, g, d, c, b, h, i, j, k], is_dual)
    } else {
        select_677([b, c, d, f, g, e, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_699([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_495([b, f, c, d, e, g, h, i], is_dual)
    } else {
        select_250([h, i, f, j, k, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_698([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_699([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_699([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_701([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_82([a, c, d, e, f, b, g, h], is_dual)
    } else {
        select_370([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_700([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_81([a, c, b, e, f, g, d, h], is_dual)
    } else {
        select_701([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_697([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_698([a, b, h, k, l, m, j, c, d, e, i], !is_dual)
    } else {
        select_700([a, b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_696([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_537([a, b, h, k, l, m, c, j, d, i], !is_dual)
    } else {
        select_697([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_705([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_513([b, c, e, a, f, d, g, i, h], is_dual)
    } else {
        select_550([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_705([a, d, c, e, b, g, f, h, i], is_dual)
    } else {
        select_514([a, d, e, f, g, b, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_708([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_586([h, i, e, f, a, g, b], !is_dual)
    } else {
        select_347([a, f, c, d, e, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_709([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_87([a, b, c, d, e, f, g], is_dual)
    } else {
        select_25([e, g, a], is_dual)
    }
}
/// n = 9, i = 3
fn select_707([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_708([b, c, a, d, e, f, g, i, h], is_dual)
    } else {
        select_709([b, g, c, e, a, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_710([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_420([a, f, b, g, h, e], is_dual)
    } else {
        select_258([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_706([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_707([b, d, c, e, g, a, f, h, i], is_dual)
    } else {
        select_710([b, d, a, e, g, c, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_703([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_704([b, c, a, e, d, f, h, g, i], is_dual)
    } else {
        select_706([a, b, c, e, d, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_702([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_703([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_703([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_695([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_696([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_702([a, b, k, l, m, h, d, c, j], !is_dual)
    }
}
/// n = 13, i = 5
fn select_668([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_669([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_695([a, b, c, d, e, f, g, h, j, k, l, m, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_667([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_668([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_668([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_666([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_667([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_667([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_617([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_618([a, b, c, d, e, f, h, i, j, k, l, g, m], is_dual)
    } else {
        select_666([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_616([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < g) || (is_dual && m > g) {
        select_617([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_618([a, b, c, d, e, f, h, i, j, k, l, m, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_721([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_83([c, d, a, e, f, g, h], is_dual)
    } else {
        select_109([a, b, e, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_720([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_721([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_36([h, d, e, b, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_722([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_122([b, c, a, d, f, i, h], is_dual)
    } else {
        select_295([a, b, c, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_719([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_720([d, a, e, b, c, g, h, i, f], is_dual)
    } else {
        select_722([d, b, c, e, a, g, f, i, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_725([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_140([a, b, c, f, e, g, h], is_dual)
    } else {
        select_36([c, d, g, e, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_724([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_379([a, b, d, c, e, f, h, g, i], is_dual)
    } else {
        select_725([a, b, d, g, f, c, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_727([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_140([a, b, d, c, e, f, h], is_dual)
    } else {
        select_140([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 5, i = 2
fn select_729([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_30([a, b, c, e], is_dual)
    } else {
        select_30([a, c, b, d], is_dual)
    }
}
/// n = 9, i = 3
fn select_730([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([c, d, e, f], is_dual)
    } else {
        select_41([h, i, a, b, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_728([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_729([a, b, c, i, j], is_dual)
    } else {
        select_730([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_726([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_727([a, b, c, g, d, h, i, j], is_dual)
    } else {
        select_728([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_723([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_724([a, d, e, c, f, h, g, i, j], is_dual)
    } else {
        select_726([a, b, d, c, e, g, j, i, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_718([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_719([g, a, d, e, f, b, h, i, j], is_dual)
    } else {
        select_723([a, c, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_732([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_197([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_549([a, b, c, d, e, g, j, i, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_733([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_172([b, c, f, e, a, g], is_dual)
    } else {
        select_681([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 3
fn select_731([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_732([a, b, c, e, d, f, g, h, j, i, k], is_dual)
    } else {
        select_733([a, c, b, i, g, d, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_717([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_718([b, d, c, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_731([b, d, a, e, f, g, c, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_738([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_87([a, b, c, d, e, f, h], is_dual)
    } else {
        select_464([e, h, i, a, g, f], !is_dual)
    }
}
/// n = 11, i = 4
fn select_737([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_560([b, c, d, e, f, g, h], is_dual)
    } else {
        select_738([f, j, k, a, b, i, g, h, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_740([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_357([f, c, d, e, a, g, i], is_dual)
    } else {
        select_730([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_739([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_38([a, c, g, f, b, h, i], is_dual)
    } else {
        select_740([a, c, b, d, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_736([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_737([a, b, e, c, d, f, g, h, k, i, l], is_dual)
    } else {
        select_739([c, d, a, b, g, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_743([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_233([a, f, c, d, g, i], is_dual)
    } else {
        select_193([h, f, j, a, e, i, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_745([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_21([a, g, c, f, d, i], is_dual)
    } else {
        select_89([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_744([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_745([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_745([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_742([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_743([f, k, i, j, g, d, h, c, e, b], !is_dual)
    } else {
        select_744([i, j, k, f, g, c, d, h, a], !is_dual)
    }
}
/// n = 11, i = 4
fn select_746([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_311([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_437([b, c, a, h, f, i, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_741([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_742([k, l, f, i, j, a, b, h, c, d, g], !is_dual)
    } else {
        select_746([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_735([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_736([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_741([a, c, d, e, f, b, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_750([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_98([f, b, c, d, e, g, h, i], is_dual)
    } else {
        select_730([a, g, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_749([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_674([c, a, d, e, f, g, b, h, i], is_dual)
    } else {
        select_750([c, b, d, e, f, g, a, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_748([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_749([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_683([c, a, b, e, f, g, d, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_752([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_235([a, h, d, e, f, g, b, i, j], is_dual)
    } else {
        select_345([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_751([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_752([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_752([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_747([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_748([a, d, b, c, e, f, h, j, k, i], is_dual)
    } else {
        select_751([a, d, e, g, b, c, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_734([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_735([a, b, c, d, e, f, i, j, h, k, l, m], is_dual)
    } else {
        select_747([a, d, e, b, f, g, c, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_716([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_717([a, e, f, d, g, b, c, h, k, j, i], is_dual)
    } else {
        select_734([a, b, c, e, f, d, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_715([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_716([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_716([a, c, b, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_714([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_715([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_715([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_713([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_714([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    } else {
        select_714([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_761([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_629([b, c, d, e, f, h, g, j], is_dual)
    } else {
        select_59([g, h, i, a, c, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_760([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_761([b, a, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_581([a, b, c, d, e, g, f, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_762([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_652([d, h, g, i, a, e, c, f], !is_dual)
    } else {
        select_205([a, b, e, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_759([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_760([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_762([f, e, j, a, i, h, b, c, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_764([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_108([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_323([b, a, e, d, f, g, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_766([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_20([a, c, d, e, f, g, h], is_dual)
    } else {
        select_109([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_765([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_766([a, b, d, e, f, h, i, j], is_dual)
    } else {
        select_766([b, a, c, e, f, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_763([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_764([a, b, c, d, i, h, g, j, k], is_dual)
    } else {
        select_765([b, c, d, a, e, f, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_758([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_759([b, c, i, f, g, a, h, j, k, l], is_dual)
    } else {
        select_763([b, c, a, f, d, e, g, h, i, k, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_770([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_147([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_586([g, h, a, f, e, b, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_769([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_38([b, e, d, a, f, g, h], is_dual)
    } else {
        select_770([b, a, d, c, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_771([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_350([a, b, c, e, f, d, g, i], is_dual)
    } else {
        select_350([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_768([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_769([a, g, i, d, e, h, b, f], !is_dual)
    } else {
        select_771([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_774([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_147([a, b, h, c, f, g, i, j], is_dual)
    } else {
        select_98([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_773([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_647([b, g, d, e, a, f, h, i, j, k], is_dual)
    } else {
        select_774([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_776([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_464([a, d, c, f, e, h], is_dual)
    } else {
        select_632([a, b, e, d, g, h, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_777([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_287([e, c, d, a, f, g], is_dual)
    } else {
        select_28([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_775([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_776([a, h, j, e, i, b, f, g, c], !is_dual)
    } else {
        select_777([a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_772([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_773([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_775([a, b, d, h, f, g, c, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_767([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_768([a, f, k, b, i, j, c, g, h], !is_dual)
    } else {
        select_772([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_757([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_758([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_767([a, b, c, h, f, g, d, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_756([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_757([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_757([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_782([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_87([b, c, d, a, e, f, h], is_dual)
    } else {
        select_87([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_781([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_205([a, c, d, g, f, e, h], is_dual)
    } else {
        select_782([g, h, i, f, a, d, b, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_780([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_683([c, b, d, a, e, f, g, h, i], is_dual)
    } else {
        select_781([a, j, k, g, i, b, c, d, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_785([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_140([b, c, a, d, e, g, f], is_dual)
    } else {
        select_25([a, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_784([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_785([b, a, c, d, e, g, f, h], is_dual)
    } else {
        select_785([g, a, h, i, e, b, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_786([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_341([a, e, f, i, c, g, d], !is_dual)
    } else {
        select_324([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_783([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_784([a, f, b, d, g, h, e, i, j], is_dual)
    } else {
        select_786([a, g, i, j, e, h, f, b, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_779([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_780([a, b, d, c, e, f, g, h, i, j, l], is_dual)
    } else {
        select_783([a, k, l, g, b, i, c, j, d, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_778([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_779([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_779([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_755([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_756([a, b, c, e, f, g, d, i, h, k, j, l], is_dual)
    } else {
        select_778([a, b, c, d, i, e, f, j, h, l, m, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_792([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_270([a, g, h, i, b, f], !is_dual)
    } else {
        select_324([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_791([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_454([a, b, c, f, g, j, h, k], is_dual)
    } else {
        select_792([a, i, j, k, b, g, d, e, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_790([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_476([a, b, c, d, h, j, k, l, g], is_dual)
    } else {
        select_791([a, b, d, e, f, c, h, g, i, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_794([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_54([a, c, d, b, e, f, g], is_dual)
    } else {
        select_54([b, c, d, a, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_793([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_452([a, b, g, h, f, c], !is_dual)
    } else {
        select_794([a, b, h, g, f, e, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_790([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_793([a, b, l, g, c, k, i, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_799([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_87([b, c, d, a, e, f, h], is_dual)
    } else {
        select_87([a, d, c, b, f, e, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_800([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_55([a, b, c, e, d, g, f], is_dual)
    } else {
        select_55([a, b, d, e, c, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_798([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_799([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_800([h, e, b, f, g, c, a], !is_dual)
    }
}
/// n = 10, i = 3
fn select_797([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_749([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_798([a, b, d, h, g, c, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_803([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_87([a, b, c, d, e, f, h], is_dual)
    } else {
        select_269([e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_802([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_803([f, i, j, a, b, h, c, g], !is_dual)
    } else {
        select_169([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_801([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_802([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_802([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_796([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_797([a, c, d, f, b, e, g, h, j, i], is_dual)
    } else {
        select_801([a, g, b, e, c, d, i, k, h, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_807([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_48([g, f, a, b, c], !is_dual)
    } else {
        select_40([g, h, a, f, e, b, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_806([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_122([d, e, a, b, c, f, g], is_dual)
    } else {
        select_807([a, d, e, c, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_805([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_806([g, h, c, f, i, e, d, a], !is_dual)
    } else {
        select_137([f, i, g, h, e, d, c, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_804([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_805([i, k, a, j, h, b, c, d, e], !is_dual)
    } else {
        select_548([a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_795([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_796([b, c, d, e, g, f, a, h, i, j, k, l], is_dual)
    } else {
        select_804([b, c, d, e, g, a, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_788([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_789([a, c, d, g, e, f, h, i, b, j, k, l], is_dual)
    } else {
        select_795([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_812([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_342([e, b, d, a, f, g, h], is_dual)
    } else {
        select_342([f, a, c, b, e, h, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_811([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_812([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_514([e, f, b, d, a, g, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_815([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_39([a, b, c, d, e, f], is_dual)
    } else {
        select_187([c, d, b, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_814([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_38([a, e, b, g, f, d, h], is_dual)
    } else {
        select_815([h, g, a, f, e, d, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_813([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_814([a, d, c, e, f, h, g, i], is_dual)
    } else {
        select_684([f, a, b, d, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_810([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_811([b, d, a, e, c, f, g, h], is_dual)
    } else {
        select_813([b, d, c, e, g, a, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_817([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_494([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_257([f, i, j, k, e, b, a, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_820([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_233([a, h, i, j, e, b], !is_dual)
    } else {
        select_496([g, h, i, j, a, f, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_819([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_108([a, b, d, c, f, e, h, g], is_dual)
    } else {
        select_820([a, d, b, c, f, g, h, e, i, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_822([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_39([b, f, d, e, a, g], is_dual)
    } else {
        select_490([b, a, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_821([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_172([b, a, c, h, e, g], is_dual)
    } else {
        select_822([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_818([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_819([a, c, d, b, f, g, h, e, i, j], is_dual)
    } else {
        select_821([c, b, d, a, f, e, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_816([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_817([f, h, l, k, a, b, j, i, c, d, g], !is_dual)
    } else {
        select_818([f, k, h, l, a, b, j, g, e, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_809([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_810([a, c, d, b, g, f, h, j, i], is_dual)
    } else {
        select_816([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_808([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_809([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_809([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_787([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_788([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_808([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_754([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_755([a, b, c, d, e, f, g, h, i, k, j, l, m], is_dual)
    } else {
        select_787([a, b, c, d, e, f, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_753([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_754([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_754([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_712([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_713([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_753([a, b, c, d, e, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_832([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_278([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_586([g, b, a, e, h, f, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_831([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_478([i, j, h, k, a, b, f, c], !is_dual)
    } else {
        select_832([b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_830([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_831([a, b, e, c, d, g, h, i, f, j, k], is_dual)
    } else {
        select_722([a, c, d, e, b, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_829([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_719([b, d, e, c, a, g, f, i, h], is_dual)
    } else {
        select_830([a, b, d, e, c, g, h, i, f, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_836([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_20([a, b, c, h, e, g, j], is_dual)
    } else {
        select_91([b, g, d, e, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_837([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_28([a, d, c, h, g, e, j], is_dual)
    } else {
        select_199([a, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_835([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_836([c, a, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_837([c, e, b, d, a, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_838([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_342([a, b, c, f, e, h, g], is_dual)
    } else {
        select_661([a, e, b, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_834([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_835([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_838([b, a, f, e, c, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_833([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_834([a, c, d, b, e, g, h, i, f, j], is_dual)
    } else {
        select_834([b, c, d, a, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_828([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_829([a, b, e, c, d, f, g, h, j, i, k], is_dual)
    } else {
        select_833([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_827([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_828([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_828([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_842([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_497([a, e, i, h, k, f, j, c, g], !is_dual)
    } else {
        select_411([a, e, b, d, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_845([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_39([b, a, e, g, h, i], is_dual)
    } else {
        select_109([a, e, c, d, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_844([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_770([i, f, h, j, a, e, g, c], !is_dual)
    } else {
        select_845([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_846([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_126([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_681([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_843([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_844([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_846([a, f, i, j, g, e, h, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_841([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_842([a, d, c, e, f, b, h, g, i, j, k], is_dual)
    } else {
        select_843([a, d, b, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_848([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_500([a, i, f, j, b, c, h, d, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_847([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_679([a, b, d, c, e, f, g, h, i], is_dual)
    } else {
        select_848([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_840([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_841([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_847([a, b, f, i, k, g, j, c, h, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_839([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_840([a, b, c, d, h, f, j, g, i, k, l], is_dual)
    } else {
        select_840([a, b, c, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_826([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_827([a, b, d, c, e, f, g, i, j, h, k], is_dual)
    } else {
        select_839([a, b, d, e, f, g, h, i, c, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_855([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_48([a, f, d, g, h], is_dual)
    } else {
        select_490([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_856([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_170([b, d, c, e, f], is_dual)
    } else {
        select_124([a, b, f, d, e, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_854([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_855([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_856([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_858([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_33([a, b, c, d, e, f, g], is_dual)
    } else {
        select_49([a, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_857([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_460([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_858([a, b, c, e, f, g, d, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_853([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_854([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_857([a, c, d, f, b, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_859([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_243([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_409([a, f, b, c, e, h, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_852([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_853([a, b, c, i, h, j, f, g], is_dual)
    } else {
        select_859([a, b, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_863([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_114([a, c, e, d, f, g], is_dual)
    } else {
        select_335([d, b, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_864([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_114([a, c, d, f, e, i], is_dual)
    } else {
        select_40([b, a, f, g, d, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_862([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_863([b, c, d, g, e, h, f, i], is_dual)
    } else {
        select_864([a, c, f, e, h, i, d, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_861([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_862([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_450([a, h, d, c, g, f, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_867([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_114([c, d, g, e, f, a], !is_dual)
    } else {
        select_464([c, e, g, d, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_866([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_867([e, c, a, g, d, f, i], is_dual)
    } else {
        select_489([b, c, a, d, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_870([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_33([a, c, d, e, g, f, i], is_dual)
    } else {
        select_30([a, h, b, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_869([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_460([a, b, d, f, e, h, g, i], is_dual)
    } else {
        select_870([a, c, b, d, f, g, h, i, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_871([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_145([e, a, d, c, g, f], is_dual)
    } else {
        select_347([g, h, d, i, e, f, b, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_868([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_869([b, c, a, d, f, e, h, g, i], is_dual)
    } else {
        select_871([c, e, d, g, a, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_865([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_866([a, c, f, i, e, b, h, g, j], is_dual)
    } else {
        select_868([a, c, d, b, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_860([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_861([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_865([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_851([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_852([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_860([a, f, c, d, b, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_874([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_660([a, e, f, d, b, g, h, i], is_dual)
    } else {
        select_838([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_877([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_87([a, b, c, d, e, f, g], is_dual)
    } else {
        select_26([e, a, h, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_878([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_43([a, b, c, e, f, g, h], is_dual)
    } else {
        select_43([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_876([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_877([a, g, d, e, i, f, h, j], is_dual)
    } else {
        select_878([a, b, c, h, e, j, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_875([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_876([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_876([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_873([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_874([a, b, f, e, h, c, g, i, j], is_dual)
    } else {
        select_875([a, b, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_879([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_410([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_410([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_872([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_873([a, b, c, e, d, g, f, i, h, j], is_dual)
    } else {
        select_879([a, b, g, c, d, i, j, f, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_850([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_851([a, b, d, e, f, i, g, h, j, k, l], is_dual)
    } else {
        select_872([a, b, c, d, f, g, j, h, k, i, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_885([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_83([b, c, d, e, i, g, h], is_dual)
    } else {
        select_68([f, a, h, b, c, g, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_884([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_318([b, g, c, e, f, a, h, i, j], is_dual)
    } else {
        select_885([c, a, d, e, f, b, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_883([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_884([a, b, e, c, f, g, d, h, i, j], is_dual)
    } else {
        select_884([a, b, e, d, f, g, c, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_888([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_367([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_586([g, h, a, f, e, b, d], !is_dual)
    }
}
/// n = 6, i = 2
fn select_889([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_48([e, b, a, d, f], is_dual)
    } else {
        select_96([a, b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_887([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_888([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_889([a, d, f, e, b, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_890([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_227([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_227([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_886([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_887([b, c, d, h, a, g, i, j], is_dual)
    } else {
        select_890([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_882([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_883([a, d, e, f, g, b, c, i, h, j], is_dual)
    } else {
        select_886([a, b, c, d, e, f, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_894([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_140([b, c, d, e, f, g, h], is_dual)
    } else {
        select_96([a, d, g, f, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_895([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_140([a, b, d, h, f, g, j], is_dual)
    } else {
        select_89([c, d, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_893([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_894([a, b, c, f, e, h, i, g, j], is_dual)
    } else {
        select_895([b, c, a, d, e, f, i, g, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_897([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_91([d, b, c, g, f, e, h], is_dual)
    } else {
        select_32([a, c, e, f, h, d, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_896([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_897([a, f, b, d, i, e, g, j, h], is_dual)
    } else {
        select_897([a, e, c, d, h, f, g, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_892([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_893([b, a, c, d, e, g, h, i, f, j], is_dual)
    } else {
        select_896([b, c, d, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_891([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_892([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_892([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_881([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_882([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_891([a, c, d, e, f, i, j, h, b, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_901([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_38([a, b, c, d, e, f, g], is_dual)
    } else {
        select_355([d, f, a, g, b, e], !is_dual)
    }
}
/// n = 8, i = 3
fn select_900([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_769([a, b, d, c, f, e, h, g], is_dual)
    } else {
        select_901([a, h, e, f, g, c, b], !is_dual)
    }
}
/// n = 7, i = 3
fn select_904([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_162([a, c, b, e, d, f, g], is_dual)
    } else {
        select_97([c, d, e, b, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_903([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_172([b, d, c, e, g, f], is_dual)
    } else {
        select_904([a, f, b, g, e, d, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_905([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_48([b, c, e, f, g], is_dual)
    } else {
        select_40([h, g, e, d, f, a, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_902([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_903([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_905([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_899([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_900([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_902([a, c, b, e, d, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_907([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_167([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_167([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_908([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_94([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_94([a, b, c, d, g, f, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_906([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_907([a, b, c, d, e, i, j, h, k], is_dual)
    } else {
        select_908([c, e, f, g, a, b, d, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_898([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_899([a, b, e, c, j, d, k, h], is_dual)
    } else {
        select_906([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_880([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_881([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_898([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_849([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_850([a, b, e, d, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_880([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_825([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_826([a, b, c, i, e, f, d, h, j, k, l, m], is_dual)
    } else {
        select_849([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_435([a, b, g, c, h, f, e, i, j], is_dual)
    } else {
        select_409([a, b, f, d, e, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_917([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_87([a, b, c, d, e, f, g], is_dual)
    } else {
        select_233([d, e, f, h, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_916([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_342([e, h, i, d, f, a, g], !is_dual)
    } else {
        select_917([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_915([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_916([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_916([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_919([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_745([a, c, b, d, f, e, h, g, i], is_dual)
    } else {
        select_576([a, e, c, g, f, h, d, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_918([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_919([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_919([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_914([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_915([a, b, f, c, h, e, i, j, g], is_dual)
    } else {
        select_918([a, b, d, c, f, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_912([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_913([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_914([a, b, d, e, c, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_923([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_126([d, g, e, i, a, h, b, f], !is_dual)
    } else {
        select_599([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_922([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_102([c, a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_923([f, g, k, a, b, j, c, i, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_922([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_922([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_927([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_170([a, f, d, g, b], !is_dual)
    } else {
        select_233([a, d, f, g, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_926([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_268([a, b, c, d, f, e, g], is_dual)
    } else {
        select_927([d, e, c, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_929([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_586([b, e, d, g, f, a, h], is_dual)
    } else {
        select_276([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_928([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_665([a, f, g, i, d, h, e, c], !is_dual)
    } else {
        select_929([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_925([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_926([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_928([a, c, d, b, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_924([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_679([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_925([a, c, d, g, f, h, b, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_920([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_921([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_924([a, b, c, d, h, g, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_911([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_912([a, b, d, e, h, g, i, c, j, k], is_dual)
    } else {
        select_920([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_935([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_187([a, g, f, h, i], is_dual)
    } else {
        select_234([a, d, b, c, e, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_934([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_766([e, i, g, j, k, a, b, h], !is_dual)
    } else {
        select_935([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_937([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_109([e, b, c, d, f, g], is_dual)
    } else {
        select_35([a, c, d, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_936([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_126([a, b, c, f, e, h, i, g], is_dual)
    } else {
        select_937([a, d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_933([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_934([f, g, j, k, a, i, b, h, c, d, e], !is_dual)
    } else {
        select_936([a, f, j, k, g, i, b, h, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_939([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_420([a, d, e, c, f, g], is_dual)
    } else {
        select_927([a, b, f, d, g, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_941([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_104([c, d, e, f, i], is_dual)
    } else {
        select_187([a, b, g, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_943([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([b, c, d, f], is_dual)
    } else {
        select_97([a, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_942([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_170([b, f, c, d, h], is_dual)
    } else {
        select_943([a, b, c, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_940([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_941([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_942([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_939([a, f, j, b, g, i, h, c], !is_dual)
    } else {
        select_940([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_932([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_933([a, f, i, j, k, b, c, h, g, d, e], !is_dual)
    } else {
        select_938([a, b, i, j, k, f, c, h, g, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_944([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_408([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_433([a, b, f, g, h, c, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_931([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_932([a, b, g, i, k, c, j, h, d, e, f], !is_dual)
    } else {
        select_944([a, b, g, c, k, i, j, h, d], !is_dual)
    }
}
/// n = 9, i = 2
fn select_947([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_102([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_710([a, c, h, d, f, b, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_949([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_341([a, g, h, i, b, f, d], !is_dual)
    } else {
        select_927([a, b, c, h, e, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_948([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_949([a, d, c, e, f, g, b, h, i], is_dual)
    } else {
        select_248([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_946([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_947([a, b, d, c, e, g, f, h, i], is_dual)
    } else {
        select_948([a, b, d, c, h, g, i, f, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_950([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_947([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_418([a, b, c, d, h, f, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_945([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_946([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_950([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_930([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_931([a, b, c, k, g, l, d, j, e, i, h], !is_dual)
    } else {
        select_945([a, b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_910([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_911([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_930([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_954([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_538([a, b, i, j, k, g, c, h], !is_dual)
    } else {
        select_698([a, b, g, i, j, k, h, d, e, c, f], !is_dual)
    }
}
/// n = 8, i = 2
fn select_955([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_243([a, c, d, e, f, b, g, h], is_dual)
    } else {
        select_250([a, c, b, e, f, d, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_953([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_954([a, b, c, d, e, h, g, i, j, k, l], is_dual)
    } else {
        select_955([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_952([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_953([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_953([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_959([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_408([a, b, i, f, k, c, j, h], !is_dual)
    } else {
        select_657([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_958([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_959([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_959([a, b, c, d, e, f, g, i, k, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_957([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_958([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_958([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_956([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_957([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_957([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_951([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_952([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_956([a, b, c, d, f, h, i, j, k, e, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_909([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_910([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_951([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_824([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_825([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_909([a, b, c, d, e, i, f, j, k, l, m, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_823([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_824([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_824([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_711([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_712([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_823([a, b, c, d, e, f, h, i, j, k, g, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_615([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_616([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_711([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_397([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_398([a, b, c, d, e, f, g, i, k, h, l, j, m], is_dual)
    } else {
        select_615([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_973([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_33([b, c, d, e, f, g, h], is_dual)
    } else {
        select_26([a, c, d, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_972([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_39([f, d, a, h, e, g], is_dual)
    } else {
        select_973([b, d, a, c, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_974([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_278([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_30([a, h, j, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_971([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_972([h, f, j, k, i, e, a, b, g], !is_dual)
    } else {
        select_974([b, a, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_975([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_268([a, b, c, d, f, e, g], is_dual)
    } else {
        select_453([d, e, c, a, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_970([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_971([b, a, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_975([h, e, k, a, i, j, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_977([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_815([h, i, a, b, f, c, g], !is_dual)
    } else {
        select_606([a, b, d, e, f, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_976([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_507([a, b, d, e, f, g, h], is_dual)
    } else {
        select_977([a, b, c, d, e, f, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_969([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_970([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_976([h, i, f, a, k, e, b, j, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_968([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_969([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_969([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 7, i = 2
fn select_980([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_87([c, d, a, e, f, b, g], is_dual)
    } else {
        select_87([c, d, b, e, f, a, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_979([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_331([b, c, a, e, d, f], is_dual)
    } else {
        select_980([b, c, d, e, a, f, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_978([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_257([a, c, d, f, e, h, g, i], is_dual)
    } else {
        select_979([a, j, k, l, f, b, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_967([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_968([a, c, d, g, f, h, i, b, j, k, l], is_dual)
    } else {
        select_978([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 2
fn select_983([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_247([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_247([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_982([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_983([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_983([a, b, c, e, f, g, d, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_986([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_245([a, b, f, i, j, k, h, c, d, g], !is_dual)
    } else {
        select_408([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_985([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_538([a, b, i, j, k, f, c, h], !is_dual)
    } else {
        select_986([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_984([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_985([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_985([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_981([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_982([a, b, j, k, l, f, g, c], !is_dual)
    } else {
        select_984([a, b, f, g, d, e, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_966([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_967([a, b, c, e, f, d, h, g, i, j, k, l], is_dual)
    } else {
        select_981([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_965([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_966([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_966([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_992([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_676([b, c, h, d, f, a, g, i, j], is_dual)
    } else {
        select_102([c, b, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_993([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_676([b, c, i, d, g, a, h, j, k], is_dual)
    } else {
        select_673([c, b, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_991([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_992([a, b, c, e, i, g, h, d, j, k], is_dual)
    } else {
        select_993([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_996([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_603([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_35([f, h, i, a, b, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_995([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_427([a, c, b, h, f, i, g, j], is_dual)
    } else {
        select_996([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1000([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_36([b, c, d, g, f], is_dual)
    } else {
        select_41([a, b, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_999([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_137([f, a, c, d, e, g, h, i], is_dual)
    } else {
        select_1000([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_998([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_937([b, a, d, e, f, c, g, h], is_dual)
    } else {
        select_999([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_997([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_167([f, g, i, k, l, a, j, b, c], !is_dual)
    } else {
        select_998([f, b, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_994([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_995([b, a, d, e, f, g, c, h, i, j], is_dual)
    } else {
        select_997([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_990([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_991([a, b, c, e, d, f, g, h, i, j, k], is_dual)
    } else {
        select_994([a, b, c, d, e, i, g, j, h, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_1005([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_20([g, d, b, c, f, h, j], is_dual)
    } else {
        select_141([h, a, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1004([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_379([a, b, e, c, d, g, f, h, i], is_dual)
    } else {
        select_1005([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1003([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_710([a, c, f, e, g, b, h, i], is_dual)
    } else {
        select_1004([a, c, b, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1002([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1003([a, c, b, d, e, g, f, h, i, j], is_dual)
    } else {
        select_532([a, i, k, l, f, g, b, j, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1001([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1002([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_529([a, f, g, k, l, b, i, j, c, d, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_989([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_990([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1001([a, c, d, e, i, g, h, j, b, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_988([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_989([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_989([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_1013([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_35([a, b, c, f, i, j], is_dual)
    } else {
        select_29([b, c, d, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1012([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_648([a, g, d, e, f, h, i, j], is_dual)
    } else {
        select_1013([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1011([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1012([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_937([a, g, d, e, f, b, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1014([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_103([c, f, d, e, b, g, h], is_dual)
    } else {
        select_474([a, b, g, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1010([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_1011([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_1014([b, c, a, e, f, g, d, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1009([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_656([a, g, b, k, l, c, j, i, d, e, h], !is_dual)
    } else {
        select_1010([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1018([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_87([b, c, d, e, g, f, h], is_dual)
    } else {
        select_59([a, b, c, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1017([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_82([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1018([a, b, i, c, g, h, f, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1016([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1017([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_937([f, g, l, m, a, b, k, j], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1015([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1016([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1016([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1008([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1009([a, b, c, d, e, h, g, j, i, k, l, m], is_dual)
    } else {
        select_1015([a, b, c, f, d, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1021([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_660([a, b, f, j, c, i, h, g], !is_dual)
    } else {
        select_606([a, b, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_1020([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_645([a, b, i, k, l, c, j, h, f, d], !is_dual)
    } else {
        select_1021([a, b, i, k, l, c, j, h, g, e], !is_dual)
    }
}
/// n = 9, i = 2
fn select_1023([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_258([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_661([a, e, b, g, f, i, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1025([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_278([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_177([a, b, h, f, e, i, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_1024([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_383([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_1025([b, g, d, e, a, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1022([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1023([a, c, h, d, b, f, g, i, j], is_dual)
    } else {
        select_1024([a, c, d, b, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1019([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1020([a, b, c, h, d, j, g, i, f, k, l, m], is_dual)
    } else {
        select_1022([a, b, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1007([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1008([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_1019([a, b, c, e, f, g, h, i, d, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1006([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1007([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_1007([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_987([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_988([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_1006([a, b, c, d, f, e, h, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_964([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_965([a, b, c, d, e, g, i, j, k, f, l, m], is_dual)
    } else {
        select_987([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_1031([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_611([a, e, d, c, g, f, h, i, j], is_dual)
    } else {
        select_428([a, h, j, k, g, e, d, i, b], !is_dual)
    }
}
/// n = 9, i = 2
fn select_1035([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_88([a, b, g, c, f, h, e, i], is_dual)
    } else {
        select_234([b, c, d, e, h, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1034([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_178([a, b, g, h, f, i, e, j], is_dual)
    } else {
        select_1035([b, c, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1037([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_177([c, a, b, e, d, f, g], is_dual)
    } else {
        select_347([f, g, h, i, a, e, d, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1036([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1037([f, l, j, k, h, b, a, c, i], !is_dual)
    } else {
        select_935([b, d, h, e, f, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1033([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1034([b, g, d, e, f, c, h, i, j, k], is_dual)
    } else {
        select_1036([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_1039([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_455([a, b, c, i, f, k, h, j], is_dual)
    } else {
        select_935([a, e, h, d, f, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1038([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1034([a, g, d, e, f, b, h, i, j, k], is_dual)
    } else {
        select_1039([a, c, b, e, d, f, h, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1032([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1033([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_1038([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1030([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1031([a, j, m, g, b, l, c, d, k, e, i], !is_dual)
    } else {
        select_1032([a, d, c, e, b, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1029([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1030([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_1030([a, c, b, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1028([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1029([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_1029([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1027([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1028([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_1028([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_1045([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_501([a, b, f, j, k, i, c, h, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1044([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1045([a, b, f, j, l, g, k, i, h, c, e], !is_dual)
    } else {
        select_1045([a, b, g, j, l, f, k, i, h, d, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1046([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_679([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_679([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1043([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1044([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1046([a, b, g, j, f, l, k, c, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1049([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_926([a, b, f, h, e, i, j, g], is_dual)
    } else {
        select_258([a, c, d, e, h, f, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1051([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_455([f, g, h, i, c, d, e, b], !is_dual)
    } else {
        select_40([e, a, g, c, h, f, d], is_dual)
    }
}
/// n = 11, i = 4
fn select_1050([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_488([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_1051([b, g, e, f, i, h, a, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1048([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1049([a, b, d, e, c, g, f, h, i, j], is_dual)
    } else {
        select_1050([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 3
fn select_1053([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_187([a, d, c, e, f], is_dual)
    } else {
        select_283([a, d, g, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1052([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_625([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1053([a, b, h, e, i, c, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_1047([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1048([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_1052([a, f, c, e, b, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1042([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1043([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_1047([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1058([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_453([a, d, c, f, e, h], is_dual)
    } else {
        select_889([a, b, e, d, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1057([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_926([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_1058([a, c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1056([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_679([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1057([a, c, d, g, f, h, b, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1055([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1056([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_879([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1063([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_39([d, c, a, f, e, g], is_dual)
    } else {
        select_32([b, c, a, e, g, d, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1062([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_518([b, c, d, a, f, e, h, g, i], is_dual)
    } else {
        select_1063([a, b, c, f, g, h, i, e], is_dual)
    }
}
/// n = 7, i = 2
fn select_1065([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_52([a, b, f, d, g, e], is_dual)
    } else {
        select_193([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1064([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1065([a, b, c, d, f, e, g], is_dual)
    } else {
        select_599([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1061([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1062([a, d, c, b, e, g, f, i, h], is_dual)
    } else {
        select_1064([a, d, f, e, h, g, b, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1060([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1061([b, c, a, d, f, e, h, i, g], is_dual)
    } else {
        select_1061([b, d, a, c, f, e, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1059([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1060([e, a, c, d, h, b, f, g, i], is_dual)
    } else {
        select_1060([e, b, c, d, h, a, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1054([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1055([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1059([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1041([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_1042([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1054([a, b, c, j, g, l, d, k, e, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1040([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1041([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_1041([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1026([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_1027([a, b, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_1040([a, b, c, d, e, g, i, j, k, f, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_963([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_964([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_1026([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1075([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_87([a, c, b, d, f, e, h], is_dual)
    } else {
        select_39([h, i, a, e, g, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1074([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_160([f, d, i, a, g, h, b, e], !is_dual)
    } else {
        select_1075([f, g, i, a, d, h, e, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1076([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_453([c, d, b, f, e, g], is_dual)
    } else {
        select_867([a, e, c, d, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1073([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1074([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_1076([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 4, i = 1
fn select_1079([a, b, c, d]: [usize; 4], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_30([a, b, c, d], is_dual)
    } else {
        select_30([a, b, d, c], is_dual)
    }
}
/// n = 8, i = 3
fn select_1078([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1079([a, b, e, f], is_dual)
    } else {
        select_33([c, a, b, d, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1080([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_39([d, a, g, h, c, e], is_dual)
    } else {
        select_39([c, b, e, f, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1077([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1078([a, b, c, e, g, h, d, f], is_dual)
    } else {
        select_1080([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1072([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1073([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1077([a, b, d, c, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1084([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_567([b, c, a, d, e, f, g], is_dual)
    } else {
        select_297([a, f, h, i, g, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1083([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_126([a, f, h, i, e, g, b, d], !is_dual)
    } else {
        select_1084([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1085([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_104([a, d, e, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1082([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1083([a, c, h, d, b, i, g, j, k], is_dual)
    } else {
        select_1085([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1087([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_342([a, c, d, e, g, f, h], is_dual)
    } else {
        select_324([a, g, i, j, b, h, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1088([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_95([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_341([a, b, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1086([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1087([a, b, h, j, k, i, f, g, d, e], !is_dual)
    } else {
        select_1088([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1081([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1082([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1086([a, b, g, e, f, c, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1071([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1072([a, b, j, k, c, g, d, i, h], !is_dual)
    } else {
        select_1081([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 7, i = 3
fn select_1094([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_21([a, b, c, d, e, g], is_dual)
    } else {
        select_41([f, g, a, d, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1093([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_28([b, c, a, d, f, e, g], is_dual)
    } else {
        select_1094([b, c, e, a, f, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1092([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_172([a, f, h, g, e, b], !is_dual)
    } else {
        select_1093([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1097([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_21([h, i, j, e, a, b], !is_dual)
    } else {
        select_35([a, c, d, g, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1096([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_137([e, b, c, d, f, g, h, j], is_dual)
    } else {
        select_1097([a, b, c, d, f, g, e, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1098([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_586([h, i, e, f, a, b, g], !is_dual)
    } else {
        select_357([a, c, d, f, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1095([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1096([b, c, d, e, a, f, g, h, j, i], is_dual)
    } else {
        select_1098([a, c, d, e, b, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1091([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1092([a, i, j, f, h, c, b, g], !is_dual)
    } else {
        select_1095([a, c, b, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1101([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_278([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_40([g, b, a, e, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_665([a, e, c, d, f, g, i, h], is_dual)
    } else {
        select_1101([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1099([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_687([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1100([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1090([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1091([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1099([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1102([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_538([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_495([a, b, d, e, g, h, c, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1089([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1090([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_1102([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1070([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_1071([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1089([a, b, i, j, g, l, c, k, d, h], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1108([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_20([a, b, c, d, e, f, g], is_dual)
    } else {
        select_357([f, e, h, i, a, g, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1107([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1108([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_681([a, e, h, i, f, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1106([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1107([g, i, f, j, a, b, h, c, d], !is_dual)
    } else {
        select_257([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1105([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_672([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_1106([b, c, d, e, i, h, a, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_1111([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_379([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_379([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1112([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_386([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_386([c, b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1110([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1111([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1112([c, d, b, e, f, g, a, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1109([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1106([b, c, d, e, h, g, a, i, j, k], is_dual)
    } else {
        select_1110([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1104([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1105([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1109([a, b, c, d, e, i, h, f, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1114([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_749([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_740([g, i, a, k, l, b, j, c, h], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1117([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([c, d, e, f, g], is_dual)
    } else {
        select_269([a, b, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1118([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_278([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_278([a, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1116([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1117([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1118([a, c, d, e, f, g, b, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1115([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_798([g, a, j, k, b, i, c, h], !is_dual)
    } else {
        select_1116([c, b, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1114([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_1115([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1103([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1104([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1113([a, c, d, e, f, i, h, j, b, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1069([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1070([a, b, d, e, f, i, h, j, c, k, l, m], is_dual)
    } else {
        select_1103([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_1125([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_43([a, b, e, f, h, d, g], is_dual)
    } else {
        select_59([a, d, c, g, f, e, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1124([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_54([a, h, g, d, f, e, c], !is_dual)
    } else {
        select_1125([a, c, b, e, f, d, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1123([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1124([f, e, i, a, h, g, c, b], !is_dual)
    } else {
        select_781([f, g, i, e, h, a, b, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1122([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1123([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1123([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1128([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1117([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_116([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1130([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([c, d, e, f, g], is_dual)
    } else {
        select_30([a, b, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1129([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1118([b, c, d, e, f, g, a, h, i], is_dual)
    } else {
        select_1130([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1127([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1128([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_1129([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1126([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1127([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_794([a, b, i, j, c, d, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1121([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1122([a, b, d, e, h, c, i, j, k], is_dual)
    } else {
        select_1126([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_673([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_505([a, c, i, d, g, b, h, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1132([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1133([e, f, a, b, c, i, j, g, h, k, l], is_dual)
    } else {
        select_1133([e, f, a, b, d, h, j, g, i, k, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_1135([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_673([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_710([a, c, i, d, g, b, h, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1135([e, f, d, a, b, i, j, g, h, k], is_dual)
    } else {
        select_1135([e, f, d, a, c, h, j, g, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1131([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1132([d, a, b, c, e, f, h, i, j, g, k, l], is_dual)
    } else {
        select_1134([a, b, c, g, e, f, h, i, j, d, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1120([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_1121([a, b, c, d, e, i, j, k, h, l, m], is_dual)
    } else {
        select_1131([d, f, g, e, a, b, c, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_1140([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_674([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_674([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1142([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_357([f, c, d, e, a, g, h], is_dual)
    } else {
        select_98([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1141([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_99([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1142([a, g, d, e, f, b, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1139([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1140([a, b, d, e, f, g, c, h, i], is_dual)
    } else {
        select_1141([a, b, c, e, f, g, d, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1143([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_340([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_514([a, b, d, e, c, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1138([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1139([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1143([a, b, d, e, h, c, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1138([a, b, c, d, e, f, i, h, j, k], is_dual)
    } else {
        select_1138([a, b, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1136([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1121([a, b, c, d, e, f, i, j, h, k, l], is_dual)
    } else {
        select_1137([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1119([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_1120([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1136([a, b, c, d, e, f, j, h, k, i, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1068([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_1069([a, b, c, d, e, f, j, i, k, l, h, m, n], is_dual)
    } else {
        select_1119([a, b, c, e, f, d, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1067([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1068([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1068([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1150([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_739([a, b, c, d, g, f, i, j, h], is_dual)
    } else {
        select_1014([c, d, e, a, b, f, g, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_1154([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_49([a, f, g], is_dual)
    } else {
        select_76([a, b, c, d, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1153([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_32([a, c, b, e, f, d, g, h], is_dual)
    } else {
        select_1154([d, c, a, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1155([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_91([b, d, c, f, e, g, h], is_dual)
    } else {
        select_59([a, d, b, h, f, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1152([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_1153([a, e, d, b, f, h, g, i], is_dual)
    } else {
        select_1155([a, b, d, c, f, g, e, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1157([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_43([e, f, h, a, b, g, d], !is_dual)
    } else {
        select_209([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1156([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_38([a, c, e, g, b, h, f], is_dual)
    } else {
        select_1157([a, c, b, d, f, g, e, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1151([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1152([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_1156([a, b, c, f, h, g, i, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_1149([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1150([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_1151([b, c, d, g, f, i, h, a, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1162([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_49([a, g, h], is_dual)
    } else {
        select_89([a, c, b, d, e, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1161([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1162([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1162([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1163([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_39([f, h, a, b, g, c], !is_dual)
    } else {
        select_52([a, c, d, f, e, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1160([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1161([a, b, c, f, g, h, e, i], is_dual)
    } else {
        select_1163([a, b, e, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1165([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_98([a, h, c, d, e, f, i, k], is_dual)
    } else {
        select_266([b, f, c, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1164([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1165([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1165([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1159([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1160([b, c, i, d, a, g, h, j, k], is_dual)
    } else {
        select_1164([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 6, i = 1
fn select_1168([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_104([a, b, c, d, f], is_dual)
    } else {
        select_104([a, c, d, e, f], is_dual)
    }
}
/// n = 7, i = 1
fn select_1167([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_169([a, b, c, d, e, g], is_dual)
    } else {
        select_1168([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_1166([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1167([a, b, d, e, f, h, i], is_dual)
    } else {
        select_323([a, b, i, c, g, j, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1158([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1159([a, b, c, f, d, e, g, i, h, j, k], is_dual)
    } else {
        select_1166([a, d, f, b, c, e, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1148([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1149([a, c, d, g, f, b, h, j, i, k], is_dual)
    } else {
        select_1158([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1172([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_124([g, h, e, a, b, f, c], !is_dual)
    } else {
        select_145([a, c, e, d, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1173([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_48([b, f, e, a, g], is_dual)
    } else {
        select_347([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1171([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_1172([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_1173([b, a, d, e, c, f, h, g], is_dual)
    }
}
/// n = 7, i = 3
fn select_1174([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_269([a, b, e, g, d], is_dual)
    } else {
        select_269([a, c, d, f, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_1170([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1171([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_1174([a, c, d, f, g, b, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1175([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_676([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_676([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1169([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1170([a, b, c, d, i, j, f, h], is_dual)
    } else {
        select_1175([a, b, c, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1148([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1169([a, b, g, d, f, i, h, c, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1180([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_342([a, e, c, d, g, f, h], is_dual)
    } else {
        select_927([a, b, f, g, h, i, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_1179([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_340([a, b, c, h, e, j, f, i], is_dual)
    } else {
        select_1180([a, b, f, d, e, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1178([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_1179([a, f, b, d, h, e, g, i, k, j], is_dual)
    } else {
        select_453([a, b, c, e, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1183([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_350([a, b, f, e, i, h, j, g], is_dual)
    } else {
        select_342([a, g, c, d, h, f, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1186([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_33([a, c, d, e, g, f, h], is_dual)
    } else {
        select_22([a, b, e, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1185([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_91([f, d, b, a, e, h, g], is_dual)
    } else {
        select_1186([b, d, a, c, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1184([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_350([a, b, c, g, f, e, h, i], is_dual)
    } else {
        select_1185([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1182([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1183([a, d, e, b, g, f, j, k, h, i], is_dual)
    } else {
        select_1184([a, h, d, c, i, g, e, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1188([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_341([a, e, f, h, b, g, d], !is_dual)
    } else {
        select_334([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1187([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1188([a, b, h, c, j, g, e, i], is_dual)
    } else {
        select_1180([a, b, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1182([a, d, b, c, e, g, f, i, k, j, h], is_dual)
    } else {
        select_1187([a, b, f, d, h, g, j, i, e, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1177([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1178([a, b, d, e, c, f, g, h, i, k, j], is_dual)
    } else {
        select_1181([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_1192([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_249([a, b, e, c, d, g], is_dual)
    } else {
        select_249([c, d, e, a, b, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1194([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_140([a, f, b, d, e, h, g], is_dual)
    } else {
        select_89([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1195([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_91([b, d, c, e, f, g, h], is_dual)
    } else {
        select_114([a, b, d, e, h, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_1193([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1194([b, d, a, e, f, c, h, g], is_dual)
    } else {
        select_1195([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1191([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1192([b, g, c, d, a, f, h], is_dual)
    } else {
        select_1193([a, c, d, b, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1198([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_100([g, c, d, e, a, h], is_dual)
    } else {
        select_266([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1199([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_114([a, b, e, d, g, h], is_dual)
    } else {
        select_464([d, a, c, f, e, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1197([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1198([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_1199([b, h, c, a, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1196([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_257([a, c, d, f, b, i, h, j], is_dual)
    } else {
        select_1197([a, b, e, c, d, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1190([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1191([a, h, c, d, f, b, i, j], is_dual)
    } else {
        select_1196([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1202([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_559([a, b, d, f, c, g, h, i], is_dual)
    } else {
        select_557([a, b, d, c, e, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1204([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_20([b, a, d, e, f, h, g], is_dual)
    } else {
        select_145([b, a, g, c, h, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1203([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_164([f, b, d, e, a, g, h], is_dual)
    } else {
        select_1204([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_1201([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1202([a, g, c, i, e, h, k, j, l], is_dual)
    } else {
        select_1203([a, b, d, f, j, g, l, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1207([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_115([c, d, e, f, h], is_dual)
    } else {
        select_283([a, b, i, g, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1206([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1207([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_822([b, i, c, a, j, g, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_1208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_95([a, b, f, d, e, i, h, j], is_dual)
    } else {
        select_342([a, b, f, c, j, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_1205([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1206([a, b, d, c, f, h, g, i, j, l], is_dual)
    } else {
        select_1208([a, c, e, b, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1200([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_1201([a, c, e, d, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_1205([a, e, c, f, b, g, h, d, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1189([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1190([a, c, d, e, h, g, i, b, k, j, l], is_dual)
    } else {
        select_1200([a, c, d, e, b, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1176([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1177([a, b, d, e, f, i, h, c, j, k, l], is_dual)
    } else {
        select_1189([a, b, d, c, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1146([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1147([a, b, c, d, h, g, e, i, k, j, l], is_dual)
    } else {
        select_1176([a, b, c, d, f, g, e, i, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_1211([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_503([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_503([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1216([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_20([a, d, b, c, f, h, i], is_dual)
    } else {
        select_234([d, e, b, c, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1215([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_877([h, f, k, b, a, j, i, g], !is_dual)
    } else {
        select_1216([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1215([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1215([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1213([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_915([a, b, j, l, c, k, g, d, i], !is_dual)
    } else {
        select_1214([a, b, c, e, g, f, h, j, i, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1218([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_341([a, b, c, f, e, g, h], is_dual)
    } else {
        select_233([a, b, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_612([a, b, h, c, j, e, g, k, i], is_dual)
    } else {
        select_1218([a, b, g, d, i, f, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1212([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1213([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1217([a, b, d, f, g, h, i, j, c, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1210([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1211([a, b, c, j, m, d, l, k, g, e, i], !is_dual)
    } else {
        select_1212([a, b, c, e, d, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1225([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_21([a, h, b, f, i, j], is_dual)
    } else {
        select_84([c, d, e, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1224([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_219([b, f, c, d, e, g, h, i], is_dual)
    } else {
        select_1225([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1223([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1224([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_227([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1222([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1223([a, c, b, d, e, f, g, h, j, i], is_dual)
    } else {
        select_505([a, j, g, l, c, b, k, i, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1221([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1222([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_1222([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 1
fn select_1229([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_83([a, h, d, e, f, g, i], is_dual)
    } else {
        select_101([b, c, g, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 1
fn select_1228([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1229([a, c, d, e, f, g, b, h, i], is_dual)
    } else {
        select_1229([b, c, d, e, f, g, a, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1227([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_243([f, e, h, c, d, g, i, j], is_dual)
    } else {
        select_1228([e, f, c, d, a, b, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1231([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1012([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1012([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1232([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_103([a, c, d, e, b, f, g], is_dual)
    } else {
        select_334([b, f, d, e, a, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1230([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1231([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1232([a, b, g, e, f, c, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1226([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1227([a, e, f, g, d, b, c, h, i, j], is_dual)
    } else {
        select_1230([b, c, d, h, f, g, a, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1220([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1221([a, b, c, d, e, f, h, j, k, i, l, m], is_dual)
    } else {
        select_1226([a, b, c, e, g, d, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1235([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_408([a, f, i, e, k, b, j, h], !is_dual)
    } else {
        select_494([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1234([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1235([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_1235([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1233([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_542([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1234([a, b, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_1219([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1220([a, b, c, d, f, h, g, i, j, k, l, m, n], is_dual)
    } else {
        select_1233([a, b, c, j, n, d, m, l, h, e, k], !is_dual)
    }
}
/// n = 14, i = 5
fn select_1209([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_1210([a, b, c, d, f, i, h, j, e, k, l, m, n], is_dual)
    } else {
        select_1219([a, b, c, d, f, e, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1145([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1146([a, b, c, e, f, d, g, h, j, k, i, l], is_dual)
    } else {
        select_1209([a, b, c, d, f, e, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1144([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1145([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1145([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1066([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1067([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_1144([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_962([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_963([a, b, c, d, e, f, h, j, k, l, g, m, n], is_dual)
    } else {
        select_1066([a, b, c, d, e, f, h, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_1245([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_268([b, c, d, e, f, g, h], is_dual)
    } else {
        select_178([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1246([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_799([a, b, f, c, h, e, g, i], is_dual)
    } else {
        select_437([b, e, a, d, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1244([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1245([b, a, e, d, g, f, i, j, h], is_dual)
    } else {
        select_1246([b, a, f, c, h, e, j, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1248([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1025([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_384([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1247([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_257([b, c, d, f, a, i, h, j], is_dual)
    } else {
        select_1248([b, a, e, c, d, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1243([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1244([b, c, e, d, g, h, j, a, i, k], is_dual)
    } else {
        select_1247([b, c, a, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1252([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_128([g, e, h, a, f, b], !is_dual)
    } else {
        select_297([a, e, c, d, g, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_1251([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1252([b, h, c, d, a, g, i, j], is_dual)
    } else {
        select_99([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1250([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_408([a, h, c, b, f, i, g, j], is_dual)
    } else {
        select_1251([a, b, d, e, c, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1249([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_679([a, b, c, h, d, i, g, k, j], is_dual)
    } else {
        select_1250([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1242([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1243([a, b, c, d, f, h, i, g, j, l, k], is_dual)
    } else {
        select_1249([a, c, b, f, e, g, i, h, k, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1256([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_341([a, b, g, h, f, e, c], !is_dual)
    } else {
        select_341([a, b, g, h, e, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1257([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_455([a, g, h, i, d, e, f, c], !is_dual)
    } else {
        select_1037([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1255([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1256([a, d, c, e, f, g, h, j], is_dual)
    } else {
        select_1257([a, b, f, d, e, h, i, g, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1259([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1142([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_782([a, f, i, j, b, h, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1258([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_497([a, c, f, b, e, h, g, i, k], is_dual)
    } else {
        select_1259([a, b, d, c, g, f, i, j, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1254([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1255([a, h, l, b, j, k, f, i, c, d, g], !is_dual)
    } else {
        select_1258([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1261([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_819([a, b, f, c, h, e, j, i, g, k], is_dual)
    } else {
        select_1246([a, b, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1260([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1261([b, c, d, f, h, g, a, i, k, j, l], is_dual)
    } else {
        select_1247([c, b, a, d, f, e, g, j, i, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1253([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1254([a, b, d, g, f, c, h, i, k, j, l, m], is_dual)
    } else {
        select_1260([a, b, d, e, c, f, h, g, j, k, i, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1241([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1242([a, c, d, b, f, e, g, h, i, k, j, l], is_dual)
    } else {
        select_1253([a, b, c, h, d, e, j, i, g, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_1265([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_737([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_737([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1267([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_420([b, e, c, a, g, f], is_dual)
    } else {
        select_782([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1266([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1267([b, c, d, h, a, g, i, j], is_dual)
    } else {
        select_683([c, d, b, a, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_1264([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1265([a, b, c, f, d, g, h, j, l, i, m], is_dual)
    } else {
        select_1266([a, b, d, e, c, h, g, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1263([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1264([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_1264([a, b, c, e, d, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_1270([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_454([a, h, k, f, l, b, i, g], !is_dual)
    } else {
        select_1004([a, c, d, e, b, g, f, h, j, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_1272([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_122([c, d, a, b, f, g, e], is_dual)
    } else {
        select_122([c, d, b, a, e, g, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1271([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_121([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_1272([a, e, b, d, c, f, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_1269([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1270([a, c, d, b, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1271([a, f, j, l, h, b, c, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1276([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_278([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_347([h, f, i, j, a, e, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_172([i, j, e, a, b, h], !is_dual)
    } else {
        select_1276([a, b, c, d, e, f, g, i, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1278([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_21([h, e, j, i, a, b], !is_dual)
    } else {
        select_26([g, c, d, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1277([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1278([b, a, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_490([e, c, d, a, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_1274([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1275([g, j, k, l, h, a, i, f, e, c, d], !is_dual)
    } else {
        select_1277([k, j, g, l, h, a, e, b, i, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1281([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_162([a, b, g, f, e, h, i], is_dual)
    } else {
        select_357([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1282([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_124([f, h, d, a, b, g, e], !is_dual)
    } else {
        select_52([a, d, c, f, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_1280([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1281([b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1282([i, g, k, a, j, b, f, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1284([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_490([e, c, d, a, f, g, h], is_dual)
    } else {
        select_870([b, a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1283([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1284([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1284([c, b, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1279([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1280([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1283([a, b, c, e, f, g, i, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_1273([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1274([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    } else {
        select_1279([a, c, b, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1268([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1269([a, d, c, e, f, b, g, h, i, k, j, l], is_dual)
    } else {
        select_1273([a, d, b, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1262([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_1263([a, c, d, b, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_1268([a, c, b, d, e, i, h, j, k, l, m, g], is_dual)
    }
}
/// n = 14, i = 5
fn select_1240([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1241([a, b, c, e, d, f, g, i, h, j, l, k, m, n], is_dual)
    } else {
        select_1262([a, b, c, d, e, i, g, j, k, h, m, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1239([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1240([f, c, d, e, b, a, h, j, g, l, k, i, m, n], is_dual)
    } else {
        select_1240([f, c, e, d, b, a, h, i, g, l, k, j, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1238([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1239([g, f, a, d, e, b, j, c, h, i, l, k, m, n], is_dual)
    } else {
        select_1239([g, f, c, d, e, b, j, a, h, i, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1237([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1238([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1238([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1236([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1237([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_1237([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_961([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_962([a, b, c, d, e, f, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_1236([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_87([a, b, f, e, g, i, j], is_dual)
    } else {
        select_182([c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1297([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_564([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_35([f, e, i, d, h, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1296([c, b, a, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1297([c, h, b, e, a, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1294([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1295([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_521([d, c, e, g, f, b, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1300([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_303([a, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_586([f, k, i, j, a, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1299([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_302([f, b, d, e, a, h, g, j, i, k], is_dual)
    } else {
        select_1300([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1298([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_722([b, c, d, e, a, g, f, i, h], is_dual)
    } else {
        select_1299([a, b, e, c, d, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1294([a, c, e, d, f, g, h, b, i, j, k], is_dual)
    } else {
        select_1298([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1304([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([b, c, d, e, f], is_dual)
    } else {
        select_128([e, g, h, a, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1303([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1304([e, i, h, j, a, f, c, g], !is_dual)
    } else {
        select_412([a, b, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1302([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_427([e, j, k, f, a, b, i, g], !is_dual)
    } else {
        select_1303([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1306([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_581([a, b, d, c, e, g, h, f, i], is_dual)
    } else {
        select_581([a, c, d, b, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1307([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_559([f, g, e, j, i, a, h, b], !is_dual)
    } else {
        select_980([b, e, c, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1305([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1306([g, e, j, k, f, a, i, b, h], !is_dual)
    } else {
        select_1307([b, c, a, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1301([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1302([e, g, j, k, a, f, i, b, h, c, d], !is_dual)
    } else {
        select_1305([e, f, j, k, a, g, b, i, h, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1292([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1293([a, c, d, b, e, f, h, g, i, j, k], is_dual)
    } else {
        select_1301([f, i, g, l, a, h, b, k, j, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1312([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_490([b, a, c, d, e, f, g], is_dual)
    } else {
        select_233([a, d, c, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1311([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_198([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_1312([e, j, i, a, h, g, b, f, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1310([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_612([a, d, e, c, g, f, j, h, k], is_dual)
    } else {
        select_1311([d, i, g, k, a, j, h, e, f, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1314([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_897([c, a, d, e, b, f, g, h, i], is_dual)
    } else {
        select_897([c, b, d, e, a, f, g, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1313([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1314([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_1314([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1309([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1310([a, b, c, d, e, f, g, i, k, h, j], is_dual)
    } else {
        select_1313([d, j, k, g, a, i, e, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1308([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1309([g, e, k, a, f, j, b, h, i, c, d], !is_dual)
    } else {
        select_1309([g, f, k, b, e, j, a, h, i, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1291([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1292([a, b, d, c, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1308([f, g, l, j, a, b, h, k, c, i, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1290([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1291([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1291([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1289([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1290([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1290([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_1322([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_567([a, d, b, c, f, g, e], is_dual)
    } else {
        select_22([d, e, g, b], is_dual)
    }
}
/// n = 7, i = 2
fn select_1321([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_172([e, b, d, a, g, f], is_dual)
    } else {
        select_1322([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_1320([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1321([a, c, f, d, b, g, h], is_dual)
    } else {
        select_95([a, c, d, b, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1324([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_178([a, c, b, f, h, g, e, i], is_dual)
    } else {
        select_181([b, c, d, a, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1323([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1324([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1324([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1319([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_1320([a, b, d, f, c, e, g, h], is_dual)
    } else {
        select_1323([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1318([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1319([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_608([a, b, c, g, e, d, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1327([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_665([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_665([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1326([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_659([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1327([a, b, c, d, i, h, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1328([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_525([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_525([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1325([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1326([a, b, c, d, g, h, e, i, j], is_dual)
    } else {
        select_1328([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1317([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1318([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1325([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1332([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_257([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_526([a, g, f, j, b, i, h, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1331([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1332([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1332([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1330([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1326([a, b, c, g, e, h, d, i, j], is_dual)
    } else {
        select_1331([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1329([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_1330([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1331([a, b, c, d, j, k, g, i, h, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1316([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1317([a, b, c, d, j, k, g, i, e, h], !is_dual)
    } else {
        select_1329([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1334([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_524([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_524([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1333([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1334([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1325([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1315([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1316([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_1333([a, b, c, d, f, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1288([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1289([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1315([a, b, c, d, h, f, i, j, e, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_1343([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_104([a, b, c, h, i], is_dual)
    } else {
        select_84([d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1344([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_20([a, b, c, d, e, f, g], is_dual)
    } else {
        select_35([f, e, h, a, g, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1342([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1343([b, c, d, a, e, f, h, g, i], is_dual)
    } else {
        select_1344([b, g, c, d, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1341([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1342([a, b, c, d, e, f, h, g, i, k], is_dual)
    } else {
        select_334([a, g, e, f, c, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_95([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_927([a, h, j, b, i, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1346([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_356([a, f, d, e, c, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1340([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1341([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1345([a, g, c, e, f, b, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_1350([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_87([b, c, d, e, g, f, h], is_dual)
    } else {
        select_96([a, b, c, e, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1349([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1350([a, b, h, c, f, g, e, i], is_dual)
    } else {
        select_234([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1348([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1349([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1349([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 1
fn select_1353([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_83([c, d, e, f, g, h, i], is_dual)
    } else {
        select_83([c, d, a, b, i, h, g], is_dual)
    }
}
/// n = 8, i = 1
fn select_1354([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_83([b, c, d, e, f, g, h], is_dual)
    } else {
        select_29([a, h, b, c, f, g], is_dual)
    }
}
/// n = 9, i = 1
fn select_1352([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1353([a, f, b, c, d, e, g, h, i], is_dual)
    } else {
        select_1354([g, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1355([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_82([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_87([b, h, c, f, a, g, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1351([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1352([c, a, d, e, f, b, g, h, i], is_dual)
    } else {
        select_1355([b, h, c, e, f, a, g, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1347([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1348([d, e, i, a, b, f, g, h, j], is_dual)
    } else {
        select_1351([d, e, a, b, c, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_1339([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1340([a, b, c, d, h, i, g, k, j, l, m], is_dual)
    } else {
        select_1347([e, f, g, a, b, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1359([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_345([a, b, i, d, e, f, g, h, j, k], is_dual)
    } else {
        select_345([a, c, h, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1358([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1359([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_1359([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1357([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1348([a, b, j, d, e, c, h, i, k], is_dual)
    } else {
        select_1358([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1363([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_564([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_91([a, c, d, b, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1362([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_478([a, b, c, d, e, f, g, i], is_dual)
    } else {
        select_1363([a, e, h, i, g, f, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1361([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_701([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1362([a, c, h, d, b, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1364([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_130([a, c, h, d, b, g, i, j], is_dual)
    } else {
        select_701([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1360([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1361([a, b, e, d, f, g, c, h, j, i, k], is_dual)
    } else {
        select_1364([a, b, e, c, f, g, d, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_1356([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1357([a, b, d, f, g, c, e, h, i, j, k], is_dual)
    } else {
        select_1360([a, b, c, d, e, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1338([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1339([a, b, d, e, f, g, h, i, j, c, k, l, m], is_dual)
    } else {
        select_1356([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_1368([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_408([a, f, b, d, h, g, j, i], is_dual)
    } else {
        select_1355([a, c, e, b, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1370([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_258([b, d, a, e, h, g, f, i], is_dual)
    } else {
        select_782([a, b, c, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1371([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_268([b, h, c, a, f, i, g], is_dual)
    } else {
        select_1198([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1369([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1370([a, b, g, c, e, h, i, f, j, k], is_dual)
    } else {
        select_1371([b, a, e, d, f, h, j, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1367([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1368([b, c, d, a, e, g, f, i, h, j], is_dual)
    } else {
        select_1369([a, b, d, c, e, g, h, i, f, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1366([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1367([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_1367([b, c, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1375([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_393([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_393([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1376([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_345([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_345([b, c, d, e, f, g, a, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1374([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1375([f, g, a, i, d, e, h, j, k], is_dual)
    } else {
        select_1376([f, g, d, e, b, c, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1373([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_1374([e, a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_187([f, g, k, e, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_1379([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_172([a, b, c, g, j, h], is_dual)
    } else {
        select_674([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1381([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_115([b, c, d, e, f], is_dual)
    } else {
        select_25([a, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_1380([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_172([a, b, h, f, i, g], is_dual)
    } else {
        select_1381([a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1378([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1379([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1380([b, h, d, e, f, g, a, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1383([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_822([a, c, b, f, h, g, e], is_dual)
    } else {
        select_181([b, c, d, a, f, e, h, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_1384([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1065([a, b, c, d, e, f, g], is_dual)
    } else {
        select_1065([a, b, c, d, e, g, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1382([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1383([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_1384([b, g, c, e, a, f, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_1377([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1378([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_1382([a, c, d, i, g, h, b, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1372([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1373([a, e, f, g, d, b, c, h, i, j, k], is_dual)
    } else {
        select_1377([b, c, d, i, f, g, h, a, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1365([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1366([a, b, d, e, j, f, c, h, i, k, l], is_dual)
    } else {
        select_1372([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1337([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1338([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_1365([a, b, c, e, d, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1390([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1142([a, d, b, c, e, f, h, i], is_dual)
    } else {
        select_249([a, b, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1389([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1390([a, b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_928([a, d, c, f, g, h, b, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1392([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_919([a, b, c, d, f, g, e, h, j], is_dual)
    } else {
        select_919([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1392([a, c, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_1392([b, c, d, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1388([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1389([a, b, j, k, e, f, i, c, h, g], !is_dual)
    } else {
        select_1391([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1394([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_692([c, d, e, f, a, b, g, h, i, j], is_dual)
    } else {
        select_419([a, b, c, d, h, i, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_1395([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_692([c, d, e, f, a, b, g, h, i, k], is_dual)
    } else {
        select_526([a, b, g, l, c, j, i, d, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1393([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1394([a, b, d, g, e, f, h, i, j, k], is_dual)
    } else {
        select_1395([a, b, c, h, e, f, g, i, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1387([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1388([a, b, g, m, c, j, l, k, h, d, i], !is_dual)
    } else {
        select_1393([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1386([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1387([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_1387([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1385([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1386([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_1386([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1336([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_1337([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1385([a, b, c, d, e, f, g, j, k, i, l, m, n], is_dual)
    }
}
/// n = 6, i = 2
fn select_1401([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_172([b, c, d, e, a, f], is_dual)
    } else {
        select_52([b, c, a, e, d, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_1400([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1401([a, b, c, d, f, h], is_dual)
    } else {
        select_507([a, f, c, d, e, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1399([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1191([a, c, d, e, f, g, b, h], is_dual)
    } else {
        select_1400([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1398([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1399([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_649([a, b, d, e, f, g, h, c, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1403([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_605([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1232([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1402([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_655([a, b, c, g, j, k, i, h, e, f, d], !is_dual)
    } else {
        select_1403([a, b, c, g, j, k, i, d, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1398([a, b, c, d, j, k, h, i, g], !is_dual)
    } else {
        select_1402([a, b, c, h, j, k, d, i, g, e, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_652([a, g, j, k, f, i, b, c], !is_dual)
    } else {
        select_557([a, h, f, j, k, g, i, e, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_926([a, e, d, g, b, f, h, i], is_dual)
    } else {
        select_1408([a, b, c, d, f, h, e, g, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1410([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_867([h, e, b, c, a, g, f], !is_dual)
    } else {
        select_437([b, c, a, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1409([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1246([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_1410([e, b, f, d, a, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1407([a, h, i, k, f, j, b, c, g, d, e], !is_dual)
    } else {
        select_1409([a, h, f, k, b, i, j, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1412([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_500([g, i, f, j, a, b, h, c, d], !is_dual)
    } else {
        select_257([b, c, d, e, a, g, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1411([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1412([b, c, d, e, h, g, a, i, j, k], is_dual)
    } else {
        select_1010([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1405([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1406([a, c, d, e, h, g, i, b, j, k, l], is_dual)
    } else {
        select_1411([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1404([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1405([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1405([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1396([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_1397([a, b, c, d, f, h, i, j, k, e, l], is_dual)
    } else {
        select_1404([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1335([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_1336([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1396([a, b, c, d, i, f, j, k, l, e, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1287([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_1288([a, b, c, d, e, g, k, f, i, l, m, n], is_dual)
    } else {
        select_1335([a, b, c, d, e, g, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_1419([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_625([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_625([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1420([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_915([a, b, g, d, c, f, h, i, j], is_dual)
    } else {
        select_605([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1418([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1419([a, b, c, i, k, h, j, f, g, d], !is_dual)
    } else {
        select_1420([a, b, c, i, k, h, j, g, f, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1425([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_75([c, a, b, d, f, h, i, g], is_dual)
    } else {
        select_729([e, a, b, h, i], is_dual)
    }
}
/// n = 7, i = 3
fn select_1426([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_48([a, e, c, f, g], is_dual)
    } else {
        select_39([a, b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_1424([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1425([a, b, c, e, g, d, f, h, i], is_dual)
    } else {
        select_1426([d, c, a, f, e, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1429([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_41([b, c, f, g, e], is_dual)
    } else {
        select_26([h, d, i, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_124([e, h, i, d, a, f, c], !is_dual)
    } else {
        select_1429([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1427([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_270([a, c, d, e, g, h], is_dual)
    } else {
        select_1428([g, i, j, a, f, h, b, d, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1423([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1424([b, c, d, f, g, h, a, i, j], is_dual)
    } else {
        select_1427([b, c, a, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1422([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_509([a, c, d, b, e, g, f, i, h], is_dual)
    } else {
        select_1423([a, b, d, c, e, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1421([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1422([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_1422([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1417([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1418([a, b, c, d, e, f, g, h, k, i, j], is_dual)
    } else {
        select_1421([a, b, c, j, k, f, h, i, d, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1416([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1417([a, b, c, d, e, f, g, j, h, i, k], is_dual)
    } else {
        select_1417([a, b, c, d, e, f, g, j, i, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1432([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_537([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_644([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_352([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_352([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1433([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1434([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_659([a, b, c, i, j, f, d, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1431([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1432([a, b, c, e, d, f, g, h, i, j], is_dual)
    } else {
        select_1433([a, b, c, e, f, g, h, d, i, j], is_dual)
    }
}
/// n = 5, i = 2
fn select_1440([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_48([a, c, b, d, e], is_dual)
    } else {
        select_48([b, c, a, d, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_1439([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_559([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1440([a, b, g, c, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1441([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_460([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_1154([b, e, d, g, f, a, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1438([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1439([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_1441([a, c, d, e, f, b, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1443([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_518([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1154([b, f, e, h, g, a, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1442([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1443([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1180([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1437([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1438([a, b, f, e, c, g, h, i], is_dual)
    } else {
        select_1442([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1436([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1419([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1437([a, b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1435([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1436([a, b, c, f, e, h, g, d, j, i], is_dual)
    } else {
        select_1421([a, b, c, e, f, d, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1430([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1431([a, b, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_1435([a, b, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1416([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_1430([a, b, c, i, j, f, k, d, h, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1449([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_260([b, c, d, e, a, f, g, h, i], is_dual)
    } else {
        select_937([a, c, d, e, b, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1448([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_408([a, f, c, b, e, h, g, i], is_dual)
    } else {
        select_1449([a, b, d, c, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1451([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_518([a, b, f, d, e, g, i, h, j], is_dual)
    } else {
        select_1304([e, f, k, l, a, j, c, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1452([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_331([b, e, d, f, g, h], is_dual)
    } else {
        select_641([a, c, b, g, e, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1450([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1451([a, c, d, e, b, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1452([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1447([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1448([a, b, e, c, f, d, g, h, i, j], is_dual)
    } else {
        select_1450([a, b, e, d, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1456([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_35([e, c, d, g, f, i], is_dual)
    } else {
        select_26([h, a, b, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1455([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_490([e, c, d, a, f, g, h], is_dual)
    } else {
        select_1456([a, b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1454([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1455([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_694([f, h, a, j, k, e, i, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1453([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_408([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1454([a, h, k, l, f, b, j, c, i, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1446([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1447([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_1453([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1445([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1405([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_1446([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1461([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_268([d, b, c, g, f, e, h], is_dual)
    } else {
        select_1199([e, a, c, g, f, d, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_1460([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1461([b, c, d, a, e, f, g, h, i], is_dual)
    } else {
        select_349([d, c, a, e, f, b, h, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1462([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_342([a, b, c, d, e, f, g], is_dual)
    } else {
        select_433([a, e, b, d, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1459([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1460([a, c, d, b, f, e, h, g, i], is_dual)
    } else {
        select_1462([a, j, e, k, b, h, i, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1466([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_162([a, c, e, f, d, g, i], is_dual)
    } else {
        select_586([h, g, f, e, c, b, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1467([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_140([a, b, c, d, e, g, f], is_dual)
    } else {
        select_124([g, e, h, a, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1465([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1466([i, j, g, e, h, d, a, b, f], !is_dual)
    } else {
        select_1467([e, a, d, c, g, f, i, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1469([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_20([b, a, c, d, e, g, f], is_dual)
    } else {
        select_96([g, e, h, a, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1470([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_43([a, c, e, d, h, f, i], is_dual)
    } else {
        select_137([d, g, h, i, a, e, b, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1468([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1469([a, c, d, e, g, f, i, h], is_dual)
    } else {
        select_1470([g, j, i, a, h, e, b, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1464([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1465([c, b, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_1468([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1472([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_342([a, c, d, e, f, g, h], is_dual)
    } else {
        select_324([a, b, c, e, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1471([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_769([a, i, j, f, g, b, c, h], !is_dual)
    } else {
        select_1472([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1463([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1464([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1471([a, e, f, j, k, b, h, i, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1458([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1459([a, b, d, e, c, g, f, h, i, j, k], is_dual)
    } else {
        select_1463([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1477([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([b, a, c, d, f, g, h, e], is_dual)
    } else {
        select_1162([h, i, f, g, d, b, a, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1476([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1477([i, j, h, g, a, b, e, c, f], !is_dual)
    } else {
        select_463([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1475([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1476([d, i, g, k, e, j, h, a, b, f], !is_dual)
    } else {
        select_786([d, e, b, c, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1474([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1475([a, c, d, e, b, g, f, h, i, j, k], is_dual)
    } else {
        select_1475([b, c, d, f, a, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1473([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1474([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_1474([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1457([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1458([a, b, f, k, h, c, j, g, i, d, e], !is_dual)
    } else {
        select_1473([a, b, f, k, j, c, h, i, d, g, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1444([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1445([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1457([a, b, d, e, h, g, i, c, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1414([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_1415([a, b, c, e, h, g, i, j, d, k, l], is_dual)
    } else {
        select_1444([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_1481([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1473([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_1473([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1480([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1481([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_1481([a, b, c, d, f, e, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1485([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1062([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_1062([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1486([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_126([d, h, g, i, a, e, b, f], !is_dual)
    } else {
        select_126([d, g, h, i, a, f, c, e], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1484([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1485([b, a, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1486([b, c, d, f, g, h, a, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1488([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_773([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_926([a, f, k, b, i, j, g, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1487([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1488([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_338([a, b, d, e, f, g, c, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1483([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1484([a, g, b, k, l, c, i, j, d, h], !is_dual)
    } else {
        select_1487([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1482([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1483([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_1483([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1479([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1480([a, b, c, d, k, l, e, i, j, f, h], !is_dual)
    } else {
        select_1482([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1495([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_350([a, b, c, g, e, h, i, f], is_dual)
    } else {
        select_270([a, b, f, d, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1494([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_1495([a, c, d, b, f, g, e, h, i], is_dual)
    } else {
        select_771([a, e, d, b, h, f, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1497([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_927([a, b, f, d, g, h, e], is_dual)
    } else {
        select_633([a, i, g, d, f, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1498([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_269([a, b, f, h, e], is_dual)
    } else {
        select_632([a, c, e, d, g, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1496([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1497([a, g, i, d, e, h, f, b, c], !is_dual)
    } else {
        select_1498([a, b, c, e, f, g, h, d, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1493([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1494([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_1496([a, c, f, g, h, e, b, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1503([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_29([c, f, d, e, h, g], is_dual)
    } else {
        select_30([a, b, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1504([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_36([c, d, f, e, h], is_dual)
    } else {
        select_30([a, b, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1502([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_1503([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_1504([a, b, f, d, c, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1501([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1078([b, c, f, h, a, j, g, i], is_dual)
    } else {
        select_1502([b, c, a, e, d, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1500([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1183([a, c, d, e, f, g, b, h, i, j], is_dual)
    } else {
        select_1501([a, b, c, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1505([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_243([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_1462([a, c, d, g, f, b, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1499([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1500([a, b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1505([a, b, d, e, f, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1492([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_1493([a, b, d, h, g, j, c, k, i, l], is_dual)
    } else {
        select_1499([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_1508([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_650([a, b, c, d, e, g, h, f], is_dual)
    } else {
        select_248([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1507([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_609([a, f, g, c, d, b, h, i], is_dual)
    } else {
        select_1508([a, c, d, b, e, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1506([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_913([a, b, e, d, f, h, g, c, i, j], is_dual)
    } else {
        select_1507([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1491([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_1492([a, b, c, e, d, f, g, h, k, i, j, l], is_dual)
    } else {
        select_1506([a, b, c, e, i, j, g, d, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1490([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1491([a, b, c, d, e, f, h, i, j, k, g, l], is_dual)
    } else {
        select_1491([a, b, c, e, d, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1511([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_833([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_833([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1515([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1281([a, b, d, e, f, i, h, j, k], is_dual)
    } else {
        select_856([a, b, c, f, j, g, i, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1517([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_564([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_586([a, c, f, e, d, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1516([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_999([a, f, c, d, e, g, h, j, k], is_dual)
    } else {
        select_1517([a, h, b, e, f, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1514([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1515([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_1516([b, g, d, e, f, h, a, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1513([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1514([a, b, e, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1441([a, j, e, b, g, f, h, k], is_dual)
    }
}
/// n = 7, i = 1
fn select_1520([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_250([a, b, c, e, f, d, g], is_dual)
    } else {
        select_250([a, b, d, e, f, c, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1519([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1141([a, b, f, c, d, e, g, i, j], is_dual)
    } else {
        select_1520([a, c, d, e, b, g, h], is_dual)
    }
}
/// n = 9, i = 1
fn select_1522([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_82([b, h, d, e, f, g, a, i], is_dual)
    } else {
        select_1229([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1521([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1522([a, e, f, b, c, d, g, h, i], is_dual)
    } else {
        select_1520([a, b, c, d, g, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1518([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1519([a, b, c, d, e, h, i, g, j, k], is_dual)
    } else {
        select_1521([a, c, d, e, b, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1512([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1513([a, c, d, e, f, g, h, j, i, b, k, l], is_dual)
    } else {
        select_1518([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1510([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1511([a, b, c, d, e, h, g, j, k, i], is_dual)
    } else {
        select_1512([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1525([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_609([a, b, d, e, f, c, g, h], is_dual)
    } else {
        select_597([a, b, c, e, f, d, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1528([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_295([e, h, i, f, a, b, g], !is_dual)
    } else {
        select_412([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1527([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1528([a, g, b, c, e, f, h, i, j], is_dual)
    } else {
        select_1528([a, f, b, d, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1526([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1527([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1527([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1524([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_1525([a, b, g, i, f, j, c, h], !is_dual)
    } else {
        select_1526([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1532([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_244([a, b, c, d, g, h, f, i], is_dual)
    } else {
        select_244([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1531([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_454([a, h, j, f, k, b, i, g], !is_dual)
    } else {
        select_1532([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1530([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1531([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1271([a, f, j, k, h, b, c, i], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1535([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_126([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_54([e, g, h, a, b, c, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1534([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_427([b, c, a, d, e, g, f, h], is_dual)
    } else {
        select_1535([e, a, g, i, b, h, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1533([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_625([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_1534([a, e, j, f, b, i, c, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1530([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_1533([a, g, c, e, b, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1524([a, b, c, d, j, f, k, g, i, l], is_dual)
    } else {
        select_1529([a, b, c, g, e, f, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1509([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1510([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1523([a, b, d, e, f, g, h, i, c, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1489([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1490([a, b, c, d, f, g, e, h, i, j, k, l], is_dual)
    } else {
        select_1509([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1478([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_1479([a, b, c, d, e, f, i, j, k, l, h, m], is_dual)
    } else {
        select_1489([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1413([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < l) || (is_dual && e > l) {
        select_1414([a, b, c, d, f, i, h, j, k, l, e, m], is_dual)
    } else {
        select_1478([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1286([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_1287([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1413([a, b, c, d, e, f, j, i, k, l, g, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1285([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1286([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_1286([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_960([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < k) || (is_dual && n > k) {
        select_961([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1285([a, b, c, d, e, f, g, h, i, j, l, m, n, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_396([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_397([a, b, c, d, e, f, g, j, k, h, l, m, n], is_dual)
    } else {
        select_960([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1550([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_33([a, c, d, e, g, h, j], is_dual)
    } else {
        select_36([b, c, d, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1549([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_109([a, c, d, e, g, i], is_dual)
    } else {
        select_1550([b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1548([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_815([i, c, a, k, f, h, l], is_dual)
    } else {
        select_1549([b, c, e, a, d, f, g, h, j, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1552([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_460([d, g, i, f, h, a, e, c], !is_dual)
    } else {
        select_466([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1551([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_559([a, j, g, l, k, h, e, c], !is_dual)
    } else {
        select_1552([i, h, l, a, k, g, b, f, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1547([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1548([a, c, d, e, b, g, f, h, i, j, k, l], is_dual)
    } else {
        select_1551([a, b, d, c, g, i, h, f, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_1554([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1466([g, j, k, d, h, i, a, b, e], !is_dual)
    } else {
        select_1282([a, d, c, f, e, g, i, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1558([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_22([a, f, c, h], is_dual)
    } else {
        select_22([b, e, d, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1557([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_76([a, c, d, g, h, j], is_dual)
    } else {
        select_1558([a, b, d, e, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1556([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1557([j, l, k, h, i, e, f, b, a, c], !is_dual)
    } else {
        select_44([b, c, d, h, f, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_1555([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1556([a, c, b, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_52([c, d, f, h, i, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_1553([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1554([j, i, l, e, k, a, f, h, g, d, c], !is_dual)
    } else {
        select_1555([a, c, b, d, e, g, h, f, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1546([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1547([a, c, d, b, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_1553([a, c, b, d, h, f, g, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_1562([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_309([a, c, b, d, e, f, g, i, h], is_dual)
    } else {
        select_52([a, b, d, g, h, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_1561([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1562([b, a, d, f, g, e, i, j, h], is_dual)
    } else {
        select_146([b, c, e, d, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1564([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_32([h, i, j, g, a, e, b, c], !is_dual)
    } else {
        select_44([b, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1563([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_122([a, c, d, e, g, h, f], is_dual)
    } else {
        select_1564([a, b, c, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1560([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1561([c, b, d, a, g, h, e, i, f, j], is_dual)
    } else {
        select_1563([a, c, f, d, g, h, i, e, k, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1567([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_43([g, h, i, a, b, f, d], !is_dual)
    } else {
        select_59([h, g, i, a, b, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1566([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_341([a, h, g, k, i, e, c], !is_dual)
    } else {
        select_1567([a, b, e, d, g, f, j, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1565([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1548([a, c, d, e, b, g, f, h, i, k, j, l], is_dual)
    } else {
        select_1566([a, b, d, c, g, i, h, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1559([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1560([a, c, d, b, h, f, j, g, k, i, l], is_dual)
    } else {
        select_1565([a, c, d, b, e, f, g, i, j, k, h, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1545([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1546([a, d, c, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1559([a, d, b, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1572([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_147([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_96([c, e, d, a, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_1571([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_172([c, b, f, e, a, h], is_dual)
    } else {
        select_1572([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1574([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_147([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_367([a, c, f, d, e, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1575([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_162([a, b, g, f, e, h, j], is_dual)
    } else {
        select_347([b, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1573([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1574([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1575([b, c, d, e, a, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1570([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1571([b, c, d, a, h, g, i, f], is_dual)
    } else {
        select_1573([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1576([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_549([c, b, a, d, f, g, i, h, j], is_dual)
    } else {
        select_1573([a, b, c, d, e, h, i, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_1570([a, b, g, d, e, c, h, i, j, k], is_dual)
    } else {
        select_1576([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1579([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_114([c, d, f, e, h, g], is_dual)
    } else {
        select_57([a, b, g, e, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1578([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_854([e, c, d, a, f, g, h, i], is_dual)
    } else {
        select_1579([b, a, c, d, g, e, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1582([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_519([g, d, i, e, h, a, f, b], !is_dual)
    } else {
        select_145([e, b, d, c, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1581([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_270([e, b, c, d, g, h], is_dual)
    } else {
        select_1582([a, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_1584([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_269([c, d, b, e, f], is_dual)
    } else {
        select_96([c, g, d, e, a, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1583([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_453([c, d, b, f, e, g], is_dual)
    } else {
        select_1584([a, e, c, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1580([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1581([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_1583([b, c, e, f, g, h, a, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1577([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1578([c, b, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_1580([c, a, d, e, f, b, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1568([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1569([a, b, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1577([a, b, c, d, j, h, k, g, i, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1544([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1545([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_1568([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1587([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1412([f, e, c, d, h, g, j, i, k, l], is_dual)
    } else {
        select_1412([f, e, a, b, i, g, k, h, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1586([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1587([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1587([a, b, c, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1592([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_87([b, c, d, g, e, f, h], is_dual)
    } else {
        select_57([g, h, i, a, e, b, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1593([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_91([a, b, c, d, f, e, g], is_dual)
    } else {
        select_586([e, c, a, f, d, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1591([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1592([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_1593([e, c, d, a, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1594([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1018([a, b, c, d, e, g, f, h, j], is_dual)
    } else {
        select_738([f, b, d, a, e, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1591([a, d, b, e, f, c, g, h, i], is_dual)
    } else {
        select_1594([a, d, c, e, f, b, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1589([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_609([a, f, i, b, j, c, h, g], !is_dual)
    } else {
        select_1590([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1595([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1412([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1412([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1588([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1589([a, b, c, i, f, j, g, h, l, k], is_dual)
    } else {
        select_1595([a, b, c, d, e, h, k, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1585([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1586([c, e, f, g, d, a, b, h, i, j, k, l], is_dual)
    } else {
        select_1588([a, b, d, f, g, e, h, c, i, k, j, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1543([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1544([a, b, c, e, d, i, g, h, j, l, n, k, m], is_dual)
    } else {
        select_1585([b, g, a, d, f, c, h, i, k, j, m, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1542([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1543([a, b, e, d, f, c, g, j, h, k, m, i, n, l], is_dual)
    } else {
        select_1543([b, a, e, c, f, d, g, j, i, l, m, h, n, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_1541([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1542([a, c, b, d, e, f, i, h, j, k, g, l, m, n], is_dual)
    } else {
        select_1542([b, c, a, d, e, f, i, g, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1540([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1541([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1541([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1539([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1540([f, g, c, d, e, b, a, i, l, k, h, j, m, n], is_dual)
    } else {
        select_1540([f, g, c, e, d, b, a, i, l, j, h, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1538([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1539([h, g, a, e, f, b, c, l, d, i, j, k, m, n], is_dual)
    } else {
        select_1539([h, g, d, e, f, b, c, l, a, i, j, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1537([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1538([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_1538([a, b, c, d, f, g, h, i, e, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1536([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1537([a, b, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_1537([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_395([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_396([a, b, c, d, e, f, g, h, j, k, l, m, i, n], is_dual)
    } else {
        select_1536([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 1
fn select_1608([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_81([a, b, c, e, f, g, d, h], is_dual)
    } else {
        select_81([a, b, d, e, f, g, c, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1609([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1167([a, b, c, d, e, f, h], is_dual)
    } else {
        select_1520([a, c, d, e, b, f, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_1607([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1608([a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1609([a, b, c, d, e, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1614([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_84([b, c, d, f], is_dual)
    } else {
        select_41([a, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1613([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_233([a, f, c, d, i, k], is_dual)
    } else {
        select_1614([b, a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1615([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_104([c, d, e, f, i], is_dual)
    } else {
        select_269([a, b, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1612([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1613([h, i, j, k, f, a, g, b, e, d, c], !is_dual)
    } else {
        select_1615([a, i, h, j, k, f, g, b, e, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1611([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_626([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1612([a, b, d, c, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1618([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_115([c, d, e, f, h], is_dual)
    } else {
        select_21([a, i, b, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1617([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1117([a, h, c, d, e, f, g, i, j, l], is_dual)
    } else {
        select_1618([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1620([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_115([c, d, e, f, h], is_dual)
    } else {
        select_96([a, b, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1621([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_115([c, d, e, f, h], is_dual)
    } else {
        select_57([j, k, l, a, g, i, b], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1619([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1620([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1621([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1616([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1617([a, c, d, e, f, g, b, h, i, k, j, l], is_dual)
    } else {
        select_1619([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1610([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1611([a, k, l, n, b, m, i, h, c, d, j], !is_dual)
    } else {
        select_1616([a, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1606([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1607([a, c, d, e, f, b, h, i, j, k], is_dual)
    } else {
        select_1610([a, b, c, g, d, e, f, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_1624([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_408([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_610([a, b, c, d, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1627([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_48([h, e, b, a, f], !is_dual)
    } else {
        select_210([b, c, a, d, e, h, g, i, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1626([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_761([a, b, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_1627([b, c, f, g, e, a, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1625([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1626([a, h, j, l, e, k, f, b, c, i], !is_dual)
    } else {
        select_505([a, c, e, d, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1623([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1624([a, i, c, d, e, g, h, j, k], is_dual)
    } else {
        select_1625([a, b, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1622([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1623([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    } else {
        select_1623([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1605([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1606([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1622([a, h, c, d, e, f, j, i, b, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_1631([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_378([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_378([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1633([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1142([a, b, c, d, e, g, h, i], is_dual)
    } else {
        select_1142([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1635([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_140([a, b, d, c, e, f, g], is_dual)
    } else {
        select_25([g, b, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1636([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_87([b, e, c, d, g, f, i], is_dual)
    } else {
        select_632([d, a, f, e, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1634([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1635([g, i, j, k, h, e, a, f], !is_dual)
    } else {
        select_1636([b, a, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_1632([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1633([a, d, e, f, g, i, h, j, m], is_dual)
    } else {
        select_1634([k, m, n, a, i, l, b, h, c, j, d], !is_dual)
    }
}
/// n = 14, i = 5
fn select_1630([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1631([b, c, d, e, f, a, h, i, j, k], is_dual)
    } else {
        select_1632([a, b, c, g, d, e, f, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_1640([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_170([a, b, c, i, j], is_dual)
    } else {
        select_115([d, e, f, g, h], is_dual)
    }
}
/// n = 7, i = 1
fn select_1641([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_115([b, c, d, e, f], is_dual)
    } else {
        select_23([a, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_1639([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1640([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1641([h, d, e, f, g, c, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_1638([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1639([b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_296([a, b, c, d, j, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1637([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1638([a, c, d, b, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1631([c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_1629([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1630([a, b, c, e, f, g, d, i, j, h, k, l, m, n], is_dual)
    } else {
        select_1637([a, d, b, c, e, f, g, h, j, i, k, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1628([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1629([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    } else {
        select_1629([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1604([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1605([a, b, e, f, g, h, d, i, j, c, k, l, m, n], is_dual)
    } else {
        select_1628([a, b, c, d, e, f, g, h, j, i, k, m, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_1648([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_109([e, b, c, d, f, g], is_dual)
    } else {
        select_357([e, h, i, j, a, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1647([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_295([a, b, c, f, e, g, h], is_dual)
    } else {
        select_1648([a, d, b, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1650([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_91([a, b, c, d, f, e, g], is_dual)
    } else {
        select_347([d, g, h, i, a, f, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1649([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1650([a, f, b, d, h, e, i, g, k], is_dual)
    } else {
        select_1650([a, e, c, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1646([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1647([e, f, i, k, a, j, g, h, b, c], !is_dual)
    } else {
        select_1649([e, i, k, a, h, j, f, g, b, c, d], !is_dual)
    }
}
/// n = 8, i = 1
fn select_1653([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([c, d, e, f, g], is_dual)
    } else {
        select_27([a, b, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1654([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([c, d, e, f, g], is_dual)
    } else {
        select_335([a, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1652([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1653([b, g, c, d, e, f, h, i], is_dual)
    } else {
        select_1654([a, h, c, d, e, f, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1656([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_115([d, e, f, g, i], is_dual)
    } else {
        select_357([a, b, c, j, h, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_1657([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_115([c, d, e, f, g], is_dual)
    } else {
        select_464([a, j, k, b, i, h], !is_dual)
    }
}
/// n = 13, i = 4
fn select_1655([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1656([a, b, c, d, e, f, g, h, i, j, k, m], is_dual)
    } else {
        select_1657([a, i, d, e, f, g, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1651([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1652([a, i, d, e, f, g, h, b, j, k, l], is_dual)
    } else {
        select_1655([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1645([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_1646([b, c, j, d, h, a, i, k, l, m, n], is_dual)
    } else {
        select_1651([b, c, d, a, e, f, g, h, i, j, k, m, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_1660([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_232([a, d, e, b, f, c, g, h, i, j], is_dual)
    } else {
        select_232([a, d, e, c, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1659([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1660([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_295([a, b, c, g, f, d, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_1661([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_752([a, b, c, e, f, g, h, d, i, j], is_dual)
    } else {
        select_752([a, b, d, e, f, g, h, c, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1658([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1659([b, c, d, e, i, h, a, j, k, l], is_dual)
    } else {
        select_1661([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_1644([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1645([a, b, c, g, d, e, f, h, i, k, l, m, j, n], is_dual)
    } else {
        select_1658([a, b, d, e, f, c, i, h, j, k, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1643([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1644([a, b, c, e, f, g, d, h, j, i, k, l, m, n], is_dual)
    } else {
        select_1644([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1642([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1643([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_1643([a, c, d, e, f, g, h, b, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1603([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1604([a, b, c, f, d, g, h, i, j, e, k, m, l, n], is_dual)
    } else {
        select_1642([a, b, c, e, f, g, h, i, d, j, k, l, n, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_1668([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_95([a, b, c, d, g, h, f, i], is_dual)
    } else {
        select_95([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1667([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_353([a, b, c, g, i, f, j, h, k], is_dual)
    } else {
        select_1668([a, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_1670([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_453([a, b, c, e, f, h], is_dual)
    } else {
        select_661([a, e, c, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1669([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_353([a, b, c, g, f, e, i, h, j], is_dual)
    } else {
        select_1670([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1666([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1667([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    } else {
        select_1669([a, g, c, e, f, b, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1672([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_408([d, e, h, a, b, f, g, i], is_dual)
    } else {
        select_661([d, e, a, c, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1671([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1672([d, e, f, a, b, g, h, i, j], is_dual)
    } else {
        select_1449([a, b, c, g, h, f, j, k, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1665([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1666([a, b, e, d, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1671([a, b, e, c, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1673([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_376([a, b, c, e, f, g, d, h, i, j, k, l], is_dual)
    } else {
        select_376([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1664([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_1665([a, c, d, e, h, g, j, i, b, k, l], is_dual)
    } else {
        select_1673([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 2
fn select_1676([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_377([c, d, a, e, b, f, h, i, j, g, k], is_dual)
    } else {
        select_377([c, d, b, e, a, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1675([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1676([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_1676([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1674([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1675([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    } else {
        select_1675([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1663([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_1664([a, b, d, e, g, f, h, i, j, c, k, l], is_dual)
    } else {
        select_1674([a, b, d, e, c, f, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1682([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1592([a, i, b, c, g, h, f, j, k], is_dual)
    } else {
        select_82([b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1683([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_320([a, b, h, d, e, f, g, i, k, j], is_dual)
    } else {
        select_320([a, c, g, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1681([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1682([a, d, b, e, f, g, h, c, i, j, k], is_dual)
    } else {
        select_1683([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1680([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1681([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    } else {
        select_1681([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_1687([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_170([a, e, b, d, g], is_dual)
    } else {
        select_109([b, c, a, d, e, f], is_dual)
    }
}
/// n = 7, i = 2
fn select_1686([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_172([f, b, c, a, e, g], is_dual)
    } else {
        select_1687([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1685([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1686([a, c, d, h, g, b, i], is_dual)
    } else {
        select_701([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1684([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1227([a, e, f, g, d, b, c, h, i, j], is_dual)
    } else {
        select_1685([b, c, d, h, f, g, a, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1679([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1680([a, b, c, d, f, e, i, h, k, l, j], is_dual)
    } else {
        select_1684([a, b, c, e, g, d, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1678([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1679([a, b, c, d, f, e, g, i, j, h, k, l], is_dual)
    } else {
        select_1679([a, b, c, e, f, d, g, h, j, i, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_1692([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1635([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_586([b, d, f, e, a, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1691([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1167([a, b, d, e, f, h, i], is_dual)
    } else {
        select_1692([a, b, i, c, g, j, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1690([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1460([a, c, i, d, b, g, j, h, k], is_dual)
    } else {
        select_1691([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1695([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_250([a, c, e, b, f, g, h], is_dual)
    } else {
        select_250([a, b, d, c, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1696([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_721([b, d, a, c, e, g, f, i, h], is_dual)
    } else {
        select_181([b, f, e, d, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1694([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1695([a, b, f, e, c, h, g, j, i], is_dual)
    } else {
        select_1696([a, b, g, e, d, i, h, f, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1699([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_101([b, c, h, d, e, f, i, j], is_dual)
    } else {
        select_266([a, i, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1698([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_265([b, h, d, e, f, g, a, i, j, k], is_dual)
    } else {
        select_1699([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1700([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_268([a, c, b, e, f, i, h], is_dual)
    } else {
        select_342([h, a, c, d, e, g, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_1697([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_1698([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1700([b, c, j, d, a, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_1693([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1694([a, c, d, i, e, b, g, h, j, k], is_dual)
    } else {
        select_1697([a, c, d, e, b, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1689([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_1690([a, b, c, e, d, i, h, j, k, g, l], is_dual)
    } else {
        select_1693([a, b, d, e, c, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1688([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1675([a, c, d, b, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1689([a, c, d, f, e, g, h, i, j, b, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1677([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1678([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_1688([a, b, d, f, c, g, h, i, e, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1662([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1663([a, b, c, e, f, d, h, i, g, j, k, l], is_dual)
    } else {
        select_1677([a, b, c, e, f, g, h, i, d, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1602([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1603([a, b, c, d, e, i, f, g, h, j, l, m, k, n], is_dual)
    } else {
        select_1662([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_1710([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_21([a, b, c, g, h, i], is_dual)
    } else {
        select_36([c, d, e, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1709([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_96([b, f, d, a, g, i], is_dual)
    } else {
        select_1710([b, d, c, a, e, g, f, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1711([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_114([b, d, e, f, a, h], is_dual)
    } else {
        select_567([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_1708([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1709([b, c, a, e, d, f, g, i, h], is_dual)
    } else {
        select_1711([b, c, f, e, a, h, i, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_1712([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_270([a, c, d, e, f, g], is_dual)
    } else {
        select_588([a, b, c, e, f, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1707([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1708([a, b, c, f, h, g, j, l, i], is_dual)
    } else {
        select_1712([a, g, d, e, i, k, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1715([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_96([b, f, c, a, h, i], is_dual)
    } else {
        select_1710([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1714([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1715([a, b, f, c, d, g, i, h, j], is_dual)
    } else {
        select_170([a, g, e, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1716([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_38([h, i, g, a, e, b, c], !is_dual)
    } else {
        select_74([a, c, d, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1713([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1714([b, c, a, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1716([b, c, f, e, a, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_1706([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1707([a, b, e, c, d, g, h, i, k, l, m, j], is_dual)
    } else {
        select_1713([a, b, e, i, f, j, g, l, k, h], is_dual)
    }
}
/// n = 7, i = 3
fn select_1720([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_114([f, d, g, e, a, b], !is_dual)
    } else {
        select_114([f, e, g, d, a, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1719([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_95([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1720([i, h, j, a, b, c, d], !is_dual)
    }
}
/// n = 13, i = 4
fn select_1718([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1719([a, b, e, h, f, g, i, j, l, k], is_dual)
    } else {
        select_270([a, c, d, k, m, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1722([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_249([a, b, f, c, d, h], is_dual)
    } else {
        select_250([c, d, e, a, b, f, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_1723([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_122([a, b, c, e, f, g, h], is_dual)
    } else {
        select_295([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1721([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1722([b, c, d, e, f, a, g, h], is_dual)
    } else {
        select_1723([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_1717([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1718([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    } else {
        select_1721([b, a, e, f, g, j, k, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_1705([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1706([a, c, d, e, g, f, h, b, i, j, k, l, m], is_dual)
    } else {
        select_1717([a, c, d, e, g, b, f, i, h, j, l, k, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_1727([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_244([a, c, d, b, e, g, f, h], is_dual)
    } else {
        select_777([a, f, c, d, b, g, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1726([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1727([a, b, e, f, c, d, g, h], is_dual)
    } else {
        select_1727([a, b, e, f, d, c, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1730([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_91([b, a, c, d, e, f, g], is_dual)
    } else {
        select_96([a, b, e, d, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1729([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_927([d, e, c, a, f, h, i], is_dual)
    } else {
        select_1730([a, b, c, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_1732([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_278([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_233([a, i, j, k, f, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1731([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_295([a, b, c, e, g, h, i], is_dual)
    } else {
        select_1732([a, d, b, c, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1728([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1729([a, g, e, j, b, f, h, k, i], is_dual)
    } else {
        select_1731([a, c, d, e, b, f, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1725([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1726([a, b, e, i, f, g, k, j], is_dual)
    } else {
        select_1728([a, b, c, d, e, j, h, l, m, k, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1736([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_124([d, a, c, e, h, g, i], is_dual)
    } else {
        select_40([a, b, f, d, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1737([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_48([g, f, b, c, d], !is_dual)
    } else {
        select_55([g, h, e, f, a, d, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1735([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1736([a, c, b, e, g, f, d, i, h], is_dual)
    } else {
        select_1737([f, h, g, i, a, e, d, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_1738([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_172([d, e, i, a, g, b], !is_dual)
    } else {
        select_585([d, b, c, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_1734([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_1735([a, c, b, f, e, g, d, i, h], is_dual)
    } else {
        select_1738([g, i, h, a, f, e, d, c, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_1741([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1614([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1614([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1740([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_799([e, h, j, i, f, a, b, g], !is_dual)
    } else {
        select_1741([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1739([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_257([f, b, c, e, a, h, g, i], is_dual)
    } else {
        select_1740([a, d, b, c, h, f, i, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1733([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_1734([a, i, e, j, b, f, g, h, k], is_dual)
    } else {
        select_1739([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1724([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1725([a, b, d, e, f, c, g, h, j, i, m, k, l], is_dual)
    } else {
        select_1733([a, b, d, e, i, c, k, l, h, j, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1704([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1705([c, b, d, f, g, a, e, h, j, k, i, m, l], is_dual)
    } else {
        select_1724([a, b, c, f, g, d, e, j, i, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1703([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1704([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    } else {
        select_1704([b, c, d, e, f, g, h, a, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_1745([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1191([a, c, d, e, h, g, b, i], is_dual)
    } else {
        select_1110([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 2
fn select_1747([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_94([c, d, e, f, b, a, h, i, j, k], is_dual)
    } else {
        select_345([b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1751([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_29([c, d, e, f, g, h], is_dual)
    } else {
        select_27([a, b, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1750([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1751([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_1000([f, c, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1749([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1750([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_50([f, d, e, h, a, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1748([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_650([a, b, f, d, e, g, h, i], is_dual)
    } else {
        select_1749([a, b, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1746([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_1747([f, a, b, c, d, e, g, h, i, j, k], is_dual)
    } else {
        select_1748([f, a, j, b, c, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1744([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1745([a, b, c, d, e, j, h, k, i], is_dual)
    } else {
        select_1746([c, d, e, f, g, a, b, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1754([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_340([a, c, d, h, g, b, i, j], is_dual)
    } else {
        select_683([a, c, d, b, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1753([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1624([a, b, c, d, h, g, e, i, j], is_dual)
    } else {
        select_1754([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1757([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_999([a, h, d, e, g, f, i, j, k], is_dual)
    } else {
        select_345([a, d, e, b, c, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_1756([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_646([f, e, c, d, h, g, j, k, l, m], is_dual)
    } else {
        select_1757([e, a, b, c, d, h, g, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1755([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1756([b, c, d, e, a, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_1756([b, c, d, e, a, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1752([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1753([a, b, c, d, e, j, h, k, i, l], is_dual)
    } else {
        select_1755([c, d, e, f, g, a, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1743([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1744([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_1752([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_1760([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1010([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_532([a, c, d, e, h, g, b, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1765([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_33([c, a, b, d, f, e, g], is_dual)
    } else {
        select_30([a, b, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1766([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_30([c, d, e, g], is_dual)
    } else {
        select_30([a, b, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1764([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1765([c, d, b, e, f, a, h, g], is_dual)
    } else {
        select_1766([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1763([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_295([a, c, d, e, h, g, i], is_dual)
    } else {
        select_1764([a, b, c, d, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1762([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1763([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_1763([b, a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1761([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1762([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1762([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1759([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_1760([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1761([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1769([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_340([a, j, k, g, c, b, i, h], !is_dual)
    } else {
        select_1223([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1768([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1769([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_1769([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1767([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1768([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1768([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1758([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1759([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1767([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_1742([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_1743([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1758([a, b, c, d, e, f, j, k, l, m, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_1702([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < l) || (is_dual && n > l) {
        select_1703([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1742([a, b, c, d, e, f, g, h, i, j, k, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_1776([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_270([d, b, e, c, f, g], is_dual)
    } else {
        select_59([d, h, e, f, a, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1778([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_35([a, c, d, h, g, k], is_dual)
    } else {
        select_450([a, b, i, e, j, f, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_1779([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_21([a, b, d, f, e, h], is_dual)
    } else {
        select_33([c, a, b, d, f, e, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_1777([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1778([e, a, c, d, f, g, h, j, i, k, l], is_dual)
    } else {
        select_1779([i, b, a, f, e, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1775([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_1776([l, m, g, f, i, e, k, a], !is_dual)
    } else {
        select_1777([a, b, c, d, f, e, g, h, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1781([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1304([a, b, d, e, h, g, i, j], is_dual)
    } else {
        select_178([i, h, k, a, f, j, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1783([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1186([d, e, b, c, f, g, h, j], is_dual)
    } else {
        select_576([g, a, d, e, f, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_1784([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_76([a, b, d, e, h, i], is_dual)
    } else {
        select_76([a, c, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1782([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1783([b, a, c, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_1784([b, d, e, f, g, a, h, j, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_1780([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1781([f, h, c, d, e, g, i, k, j, m, n], is_dual)
    } else {
        select_1782([a, c, b, i, f, g, j, l, h, k, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1774([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1775([h, c, d, e, a, g, f, i, j, k, m, l, n], is_dual)
    } else {
        select_1780([b, a, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1787([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_126([a, b, d, e, h, g, i, j], is_dual)
    } else {
        select_205([i, h, j, a, b, f, c], !is_dual)
    }
}
/// n = 7, i = 3
fn select_1788([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_453([a, b, g, e, f, c], !is_dual)
    } else {
        select_927([a, e, g, b, f, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1786([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1787([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1788([a, i, k, f, b, j, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_1790([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_54([e, a, b, h, d, g, f], is_dual)
    } else {
        select_863([b, c, a, d, e, h, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1792([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_43([a, c, d, e, g, f, h], is_dual)
    } else {
        select_111([h, i, g, e, d, a, b, f], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1791([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_127([f, b, d, e, i, h, k, j], is_dual)
    } else {
        select_1792([k, l, i, j, f, g, b, a, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_1789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1790([i, b, c, a, f, l, g, k], is_dual)
    } else {
        select_1791([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1785([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_1786([a, b, f, d, e, g, h, j, i, l, m], is_dual)
    } else {
        select_1789([a, b, c, d, e, f, g, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_1773([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1774([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_1785([a, g, b, d, e, h, j, i, k, f, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1772([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1773([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1773([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_1796([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_507([a, b, h, i, f, c, g], !is_dual)
    } else {
        select_411([a, b, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 2
fn select_1798([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_342([a, c, e, b, h, f, g], is_dual)
    } else {
        select_342([a, b, d, c, h, g, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_1797([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1798([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_340([a, f, c, e, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1795([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1796([a, b, h, j, g, c, i, d, f], !is_dual)
    } else {
        select_1797([a, b, d, e, c, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_1799([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_794([a, e, g, c, b, f, h], is_dual)
    } else {
        select_514([a, c, b, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_1794([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1795([a, b, c, d, e, g, f, h, i, j], is_dual)
    } else {
        select_1799([a, b, f, e, h, d, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1802([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1231([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_420([a, b, j, g, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_1803([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_339([a, c, d, b, e, g, f, h, j, i], is_dual)
    } else {
        select_409([a, f, b, e, g, i, k, h], is_dual)
    }
}
/// n = 14, i = 5
fn select_1801([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1802([a, b, g, h, e, f, j, i, l, n], is_dual)
    } else {
        select_1803([a, b, c, d, i, g, h, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_1806([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_295([c, a, b, d, g, h, f], is_dual)
    } else {
        select_474([c, d, e, a, b, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_1809([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_33([a, c, d, e, g, f, h], is_dual)
    } else {
        select_23([a, b], is_dual)
    }
}
/// n = 10, i = 4
fn select_1808([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1809([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_43([e, c, d, g, f, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1810([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_20([g, h, d, i, e, f, a], !is_dual)
    } else {
        select_297([d, e, b, c, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_1807([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1808([a, b, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_1810([e, c, d, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1805([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_1806([a, j, f, h, k, i, e, g], !is_dual)
    } else {
        select_1807([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1812([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_557([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_270([a, b, i, j, c, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1813([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_776([a, c, b, e, g, h, i, f, j], is_dual)
    } else {
        select_270([a, b, f, d, h, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_1811([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1812([a, f, h, i, k, e, j, g, b, d], !is_dual)
    } else {
        select_1813([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1804([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1805([a, c, d, g, e, h, f, j, k, l, i], is_dual)
    } else {
        select_1811([a, b, c, f, e, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1800([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1801([a, b, c, d, e, f, g, h, i, k, j, m, l, n], is_dual)
    } else {
        select_1804([a, c, i, d, j, g, h, b, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1793([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_1794([a, b, m, n, k, j, g, h, l, c], !is_dual)
    } else {
        select_1800([a, b, c, d, e, f, h, g, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1771([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1772([a, b, c, e, f, g, h, d, i, j, k, m, l, n], is_dual)
    } else {
        select_1793([a, b, d, e, f, g, c, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_1818([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1757([c, b, d, e, f, a, g, h, i, k, j], is_dual)
    } else {
        select_409([a, g, b, d, i, j, l, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1819([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1342([a, b, d, g, e, f, i, h, k, l], is_dual)
    } else {
        select_95([a, c, h, e, f, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1817([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_1818([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_1819([a, c, b, e, f, g, d, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1822([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_286([a, b, c, h, f, g, i, j], is_dual)
    } else {
        select_740([a, b, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_1823([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_162([d, f, g, e, a, b, c], !is_dual)
    } else {
        select_76([b, c, d, e, a, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_1821([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1822([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1823([g, b, h, f, i, a, j], is_dual)
    }
}
/// n = 9, i = 2
fn select_1825([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_91([g, c, b, a, f, i, h], is_dual)
    } else {
        select_266([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1824([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_650([a, b, g, d, e, f, h, i], is_dual)
    } else {
        select_1825([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1820([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1821([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1824([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_1816([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1817([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1820([a, b, d, h, f, g, e, i, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_1829([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_186([a, f, c, d, e, g, h], is_dual)
    } else {
        select_1186([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1828([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1829([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_999([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1827([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1828([a, i, j, h, k, b, f, c, g], !is_dual)
    } else {
        select_411([a, b, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 5, i = 2
fn select_1831([a, b, c, d, e]: [usize; 5], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_729([a, b, d, c, e], is_dual)
    } else {
        select_729([a, c, d, b, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_1830([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_130([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1831([a, e, f, g, b], is_dual)
    }
}
/// n = 11, i = 5
fn select_1826([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1827([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1830([a, i, k, f, b, j, c, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1815([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1816([a, c, d, b, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_1826([a, c, d, e, i, h, j, k, b, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_1835([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1223([a, b, c, d, e, f, g, i, j, k], is_dual)
    } else {
        select_1520([b, d, e, f, a, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_1836([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_673([a, b, f, c, d, e, g, h, i, k], is_dual)
    } else {
        select_1520([c, d, e, h, a, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1834([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1835([a, h, b, c, d, e, i, g, j, k, l], is_dual)
    } else {
        select_1836([b, a, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1833([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1834([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_1834([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_1838([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1802([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1232([a, b, g, e, f, d, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_1842([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_162([a, b, h, f, e, j, k], is_dual)
    } else {
        select_461([b, e, c, d, f, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1843([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_109([e, f, c, d, h, g], is_dual)
    } else {
        select_44([a, b, g, e, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1841([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1842([b, c, d, e, a, f, g, i, h, j, k], is_dual)
    } else {
        select_1843([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_1845([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_567([a, g, b, c, f, i, h], is_dual)
    } else {
        select_98([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1844([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1845([a, c, f, d, e, g, h, j, i], is_dual)
    } else {
        select_323([a, b, i, c, g, f, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1840([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1841([a, g, b, d, e, h, i, f, j, k, l], is_dual)
    } else {
        select_1844([b, a, c, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1839([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1840([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_1840([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1837([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1838([a, b, c, g, e, f, h, i, k, j], is_dual)
    } else {
        select_1839([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1832([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_1833([a, b, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_1837([a, b, d, g, e, f, h, i, j, c, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1814([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1815([a, b, c, e, d, f, g, h, j, k, l, m, i], is_dual)
    } else {
        select_1832([a, b, d, c, f, g, e, h, i, j, l, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_1770([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_1771([a, b, c, d, g, e, f, h, j, k, l, m, i, n], is_dual)
    } else {
        select_1814([a, b, c, d, h, e, f, i, k, j, m, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1701([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_1702([a, b, d, c, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_1770([a, b, d, e, g, h, f, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1601([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_1602([a, b, c, e, f, d, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_1701([a, b, c, e, f, i, g, h, j, k, l, d, m, n], is_dual)
    }
}
/// n = 6, i = 2
fn select_1854([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_420([a, b, c, d, f, e], is_dual)
    } else {
        select_420([a, b, d, c, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1853([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1495([a, b, d, c, e, f, g, h, j], is_dual)
    } else {
        select_1854([b, f, a, c, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1857([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_269([i, a, b, j, f], is_dual)
    } else {
        select_233([g, h, e, k, d, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1859([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_21([a, f, b, d, i, j], is_dual)
    } else {
        select_22([c, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1858([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_48([j, d, b, a, g], !is_dual)
    } else {
        select_1859([b, a, c, d, e, f, h, i, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_1856([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1857([a, b, c, e, g, f, d, h, i, j, k], is_dual)
    } else {
        select_1858([a, b, c, d, e, g, i, f, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1862([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_450([a, b, d, f, g, h, i], is_dual)
    } else {
        select_30([b, e, c, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_1861([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1765([f, g, i, h, d, a, b, e], !is_dual)
    } else {
        select_1862([b, a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1864([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_30([h, i, d, a], !is_dual)
    } else {
        select_41([b, c, f, g, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_1863([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_729([a, b, c, i, j], is_dual)
    } else {
        select_1864([h, i, j, g, f, b, c, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1860([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1861([d, b, c, f, e, h, j, g, i], is_dual)
    } else {
        select_1863([i, d, k, h, j, f, g, e, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1855([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1856([b, d, a, e, c, g, f, i, h, j, k], is_dual)
    } else {
        select_1860([b, d, c, e, a, g, f, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1852([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1853([e, j, k, i, g, f, h, c, a, b], !is_dual)
    } else {
        select_1855([c, a, d, b, e, h, g, j, i, k, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1868([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_170([b, e, c, d, f], is_dual)
    } else {
        select_357([a, b, c, d, e, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_1867([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_1868([b, c, d, e, a, f, g, h], is_dual)
    } else {
        select_347([a, c, d, e, b, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1869([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_350([d, b, c, e, g, f, i, j], is_dual)
    } else {
        select_56([e, a, c, f, d, h, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1866([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_1867([d, i, h, j, k, g, e, b], !is_dual)
    } else {
        select_1869([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_1871([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_566([a, c, b, d, f, g, e, h], is_dual)
    } else {
        select_633([a, c, e, g, b, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1870([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1871([e, b, a, c, d, f, g, h], is_dual)
    } else {
        select_1871([e, b, a, d, c, f, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_1865([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1866([i, l, j, a, k, b, h, e, c, f, g], !is_dual)
    } else {
        select_1870([h, a, d, e, b, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_1851([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1852([j, l, k, g, b, a, h, i, d, c, e], !is_dual)
    } else {
        select_1865([b, c, d, a, e, f, g, h, j, l, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1875([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_38([a, b, g, f, h, i, e], is_dual)
    } else {
        select_1575([b, a, c, d, f, e, g, i, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1877([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_448([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_50([d, b, c, e, g, f, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1878([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_39([f, c, a, g, e, j], is_dual)
    } else {
        select_1557([b, c, a, d, e, f, h, j, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_1876([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_1877([c, a, b, e, f, g, i, d, h, k], is_dual)
    } else {
        select_1878([a, c, b, e, d, f, i, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_1874([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1875([j, d, i, k, g, f, h, a, b, e], !is_dual)
    } else {
        select_1876([a, b, c, d, e, g, h, i, j, f, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1881([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_20([b, e, d, g, f, h, i], is_dual)
    } else {
        select_20([a, e, c, h, f, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1880([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1018([b, f, d, e, a, g, h, i, k], is_dual)
    } else {
        select_1881([b, c, d, a, e, g, h, f, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1882([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_1012([a, c, d, b, e, f, h, g, i, j], is_dual)
    } else {
        select_935([a, c, d, g, f, b, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1879([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1880([a, b, c, h, e, g, i, f, k, j, m], is_dual)
    } else {
        select_1882([c, a, d, f, e, g, i, h, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1873([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_1874([k, f, m, a, l, h, g, j, b, c, i], !is_dual)
    } else {
        select_1879([b, a, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_1886([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_44([a, b, d, h, f, g, j, i], is_dual)
    } else {
        select_576([a, c, d, e, g, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_1887([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_629([a, c, d, e, g, i, h, k], is_dual)
    } else {
        select_44([b, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_1885([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1886([a, c, b, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_1887([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1888([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_126([h, d, i, j, f, g, a, c], !is_dual)
    } else {
        select_334([d, k, f, j, i, e, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_1884([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_1885([a, c, b, d, e, g, f, h, i, j, l], is_dual)
    } else {
        select_1888([k, l, e, a, i, f, j, b, g, h, c], !is_dual)
    }
}
/// n = 10, i = 3
fn select_1890([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_455([a, b, d, e, f, i, h, j], is_dual)
    } else {
        select_430([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1892([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_109([e, b, c, d, f, g], is_dual)
    } else {
        select_35([e, h, i, a, f, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1891([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_126([a, b, c, f, e, h, i, g], is_dual)
    } else {
        select_1892([a, d, b, c, e, f, g, h, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_1889([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1890([a, c, e, d, g, f, h, i, j, k], is_dual)
    } else {
        select_1891([a, b, i, e, f, h, g, k, l, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1883([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1884([a, c, h, e, f, g, b, i, k, j, l, m], is_dual)
    } else {
        select_1889([a, c, b, d, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1872([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_1873([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_1883([a, b, d, c, f, g, h, e, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1850([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1851([a, b, d, c, e, i, g, j, k, h, m, l], is_dual)
    } else {
        select_1872([a, d, c, b, e, f, g, h, i, k, m, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_1898([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_39([c, b, e, f, d, h], is_dual)
    } else {
        select_55([a, d, c, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_1900([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_21([b, d, c, g, f, i], is_dual)
    } else {
        select_97([a, c, e, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1899([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_519([a, d, f, e, c, g, h, j], is_dual)
    } else {
        select_1900([a, b, d, c, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1897([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1898([i, j, e, h, a, f, g, c, b], !is_dual)
    } else {
        select_1899([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 7, i = 3
fn select_1903([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_21([e, d, g, f, a, b], !is_dual)
    } else {
        select_41([b, c, d, e, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_1902([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1903([g, e, h, a, b, f, c], !is_dual)
    } else {
        select_145([b, c, e, d, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_1901([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_455([a, b, d, g, e, f, i, j], is_dual)
    } else {
        select_1902([a, b, c, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_1896([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1897([a, d, c, e, b, f, g, i, h, j], is_dual)
    } else {
        select_1901([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1905([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_90([b, c, h, e, f, g, j, i, k], is_dual)
    } else {
        select_1344([a, c, d, i, f, h, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_1906([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_258([a, h, e, f, j, g, i, l], is_dual)
    } else {
        select_1881([a, b, g, c, d, i, k, h, m, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1904([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1905([b, c, g, d, f, a, h, i, k, j, l, m, n], is_dual)
    } else {
        select_1906([c, b, d, a, f, e, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1895([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1896([a, b, d, c, g, k, l, i, m, n], is_dual)
    } else {
        select_1904([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1909([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_430([a, d, c, f, h, g, e, j, i], is_dual)
    } else {
        select_1155([a, b, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_1910([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_54([h, g, i, b, a, e, c], !is_dual)
    } else {
        select_178([b, c, d, g, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1908([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1909([a, f, c, d, e, h, g, i, k, j], is_dual)
    } else {
        select_1910([e, a, g, b, j, f, k, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1913([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_367([g, a, c, b, i, h, f, j], is_dual)
    } else {
        select_347([a, f, d, e, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1912([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1913([a, b, g, c, d, f, i, h, j, k], is_dual)
    } else {
        select_262([c, d, e, f, a, h, i, g, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1911([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1246([i, a, g, b, k, f, l, h, j], is_dual)
    } else {
        select_1912([a, f, d, e, c, h, g, j, i, l, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1907([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1908([a, c, f, e, b, g, h, i, j, l, k], is_dual)
    } else {
        select_1911([a, c, e, b, d, g, h, i, f, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1894([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_1895([a, b, d, c, e, f, h, i, g, j, k, l, m, n], is_dual)
    } else {
        select_1907([a, d, b, e, f, h, g, i, c, j, l, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_1893([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1894([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_1894([b, a, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1849([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_1850([a, b, c, d, j, e, g, h, k, i, m, l, n], is_dual)
    } else {
        select_1893([a, b, d, e, f, c, g, h, j, i, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1848([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1849([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1849([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1847([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1848([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_1848([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_1923([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_41([b, c, f, e, h], is_dual)
    } else {
        select_97([a, b, d, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_1922([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1923([a, c, b, e, d, g, f, i, h], is_dual)
    } else {
        select_220([g, d, h, i, e, f, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1921([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1922([a, b, f, d, e, h, i, j, k], is_dual)
    } else {
        select_803([b, e, c, d, g, f, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_1920([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1921([b, a, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1764([i, d, g, j, a, e, h, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1919([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1920([k, j, m, a, h, l, b, g, c, d, i], !is_dual)
    } else {
        select_675([c, a, e, f, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_1926([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_126([a, b, c, d, e, f, g, i], is_dual)
    } else {
        select_270([a, g, h, i, b, f], !is_dual)
    }
}
/// n = 10, i = 2
fn select_1928([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_109([f, h, b, c, j, g], is_dual)
    } else {
        select_234([a, g, d, e, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1930([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_35([e, c, d, h, g, j], is_dual)
    } else {
        select_35([e, a, b, i, f, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_1929([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_209([i, c, d, e, f, h, k], is_dual)
    } else {
        select_1930([a, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1927([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1928([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1929([c, d, b, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1925([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_1926([a, b, c, d, j, k, l, m, g], is_dual)
    } else {
        select_1927([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1931([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_470([e, h, j, f, i, b, a, c, g], !is_dual)
    } else {
        select_684([b, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_1924([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < b) || (is_dual && k > b) {
        select_1925([a, c, b, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1931([i, j, l, m, a, g, b, c, k, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1918([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_1919([b, c, a, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1924([b, a, c, d, e, f, h, i, j, k, l, m, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_1917([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1918([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_1918([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_1935([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_557([a, b, e, c, d, f, g, i, j], is_dual)
    } else {
        select_212([a, c, d, f, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_1934([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1935([a, b, c, d, h, j, g, k, l, m], is_dual)
    } else {
        select_605([a, b, g, e, f, i, h, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_1939([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_30([g, h, d, a], !is_dual)
    } else {
        select_41([f, i, b, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1938([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1079([a, b, c, g], is_dual)
    } else {
        select_1939([g, i, j, f, e, h, a, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_1937([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1938([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1938([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_1941([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_490([a, b, c, d, e, f, g], is_dual)
    } else {
        select_52([d, g, i, a, h, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_1941([d, b, c, e, f, g, h, j, k], is_dual)
    } else {
        select_437([h, i, f, k, d, j, g, a], !is_dual)
    }
}
/// n = 11, i = 5
fn select_1936([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_1937([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1940([d, b, c, e, f, g, h, a, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_1933([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_1934([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1936([a, c, d, h, j, b, k, g, i, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1932([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_912([a, b, k, m, i, j, g, c, l, d], !is_dual)
    } else {
        select_1933([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1916([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_1917([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_1932([a, b, d, e, f, g, h, i, j, k, c, l, m], is_dual)
    }
}
/// n = 7, i = 2
fn select_1949([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_29([a, b, c, d, e, f], is_dual)
    } else {
        select_26([e, c, d, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1948([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_83([b, c, d, e, f, g, h], is_dual)
    } else {
        select_1949([a, h, b, c, f, g, i], is_dual)
    }
}
/// n = 10, i = 1
fn select_1950([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_101([a, b, c, f, g, h, j, i], is_dual)
    } else {
        select_101([a, b, c, d, e, i, j, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_1947([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1948([h, a, b, e, f, g, j, i, k], is_dual)
    } else {
        select_1950([c, d, g, a, b, e, f, j, i, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_1946([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1352([h, b, c, d, e, g, f, i, j], is_dual)
    } else {
        select_1947([a, f, b, c, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 1
fn select_1952([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_99([g, c, d, e, f, h, i, j], is_dual)
    } else {
        select_99([g, c, d, a, b, j, i, h], is_dual)
    }
}
/// n = 10, i = 1
fn select_1951([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1352([h, b, c, d, e, f, g, i, j], is_dual)
    } else {
        select_1952([a, g, b, c, d, e, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_1945([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1946([e, a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_1951([h, a, b, c, d, f, g, e, i, j], is_dual)
    }
}
/// n = 10, i = 2
fn select_1955([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_370([b, h, d, e, f, g, a, i, j], is_dual)
    } else {
        select_1229([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 2
fn select_1954([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1955([a, d, b, e, f, g, h, c, i, j], is_dual)
    } else {
        select_1955([a, d, c, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1956([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_539([a, g, b, c, d, h, f, i, j], is_dual)
    } else {
        select_257([a, b, c, e, d, g, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_1953([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1954([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_1956([a, c, d, e, i, h, b, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_1944([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1945([a, f, g, h, d, e, b, c, i, j, k], is_dual)
    } else {
        select_1953([b, c, d, e, i, g, h, a, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 3
fn select_1961([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_115([c, d, e, f, h], is_dual)
    } else {
        select_35([a, b, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_1960([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1657([a, h, c, d, e, f, g, i, j, k, l], is_dual)
    } else {
        select_1961([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_1959([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1960([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    } else {
        select_1652([a, b, d, e, f, g, h, c, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_1963([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_919([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_633([a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_1962([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1647([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_1963([a, d, c, e, g, f, h, b, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_1958([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_1959([b, c, d, a, e, f, g, h, i, j, l, k], is_dual)
    } else {
        select_1962([h, a, k, m, b, j, l, c, d, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_1957([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1958([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_1958([a, c, d, e, f, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_1943([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1944([a, b, c, f, g, h, d, e, i, j, k, l, n], is_dual)
    } else {
        select_1957([a, b, c, d, e, f, g, i, k, l, m, j, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_1968([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_244([f, a, h, d, e, g, i, j], is_dual)
    } else {
        select_99([f, d, e, b, c, g, i, h], is_dual)
    }
}
/// n = 11, i = 2
fn select_1967([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_408([a, g, b, c, i, h, k, j], is_dual)
    } else {
        select_1968([d, b, h, e, f, a, g, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_1969([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_1968([d, b, h, e, f, a, g, j, i, k], is_dual)
    } else {
        select_497([a, b, g, c, i, h, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1966([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1967([a, c, b, d, e, f, i, g, j, h, k], is_dual)
    } else {
        select_1969([a, b, c, d, e, f, i, h, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1965([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1966([a, b, c, e, f, g, h, d, i, j, k, l], is_dual)
    } else {
        select_1966([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_1964([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1965([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_1965([a, c, d, e, f, g, h, b, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1942([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < l) || (is_dual && k > l) {
        select_1943([a, b, c, d, g, e, f, h, i, j, l, m, n, k], is_dual)
    } else {
        select_1964([a, b, c, e, f, h, d, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1915([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_1916([a, b, c, e, g, f, i, j, k, l, d, m, n], is_dual)
    } else {
        select_1942([a, b, c, e, d, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_1977([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_20([e, f, c, d, h, i, g], is_dual)
    } else {
        select_111([g, a, b, e, f, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_1979([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_58([a, c, g, f, d, i], is_dual)
    } else {
        select_89([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_1978([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1979([d, a, b, g, e, f, i, j, h], is_dual)
    } else {
        select_1979([d, a, c, f, e, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1976([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1977([d, a, c, f, h, g, e, i, k, j], is_dual)
    } else {
        select_1978([a, d, e, b, g, h, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_1982([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_33([a, b, g, e, f, i, j], is_dual)
    } else {
        select_29([b, f, c, d, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_1981([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1979([f, b, d, a, e, h, g, j, i], is_dual)
    } else {
        select_1982([b, d, a, c, e, g, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1984([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_89([a, c, h, d, f, g, j], is_dual)
    } else {
        select_89([b, c, g, e, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_1983([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_276([a, d, c, g, f, j, i], is_dual)
    } else {
        select_1984([b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_1980([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1981([a, c, b, g, f, e, h, j, k, i], is_dual)
    } else {
        select_1983([a, c, b, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1975([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1976([d, a, b, g, f, e, h, j, l, k, i], is_dual)
    } else {
        select_1980([f, d, a, c, h, e, g, i, k, l, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1987([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_87([a, f, b, e, i, g, j], is_dual)
    } else {
        select_193([e, c, d, h, f, g, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_1986([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_149([d, b, f, e, a, g, i, h, j], is_dual)
    } else {
        select_1987([b, a, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_1985([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1986([e, b, g, d, f, i, h, k, l, j], is_dual)
    } else {
        select_1986([f, a, h, c, e, j, g, k, l, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_1974([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1975([c, a, e, d, f, b, h, g, i, k, j, l], is_dual)
    } else {
        select_1985([b, c, d, e, a, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 7, i = 2
fn select_1991([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_39([a, b, d, f, g, e], is_dual)
    } else {
        select_91([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_1992([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_278([a, c, d, e, g, f, h, i], is_dual)
    } else {
        select_266([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_1990([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1991([b, h, c, f, a, g, i], is_dual)
    } else {
        select_1992([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_1989([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1990([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_1449([f, b, g, d, e, a, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_1988([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1989([a, c, e, b, d, f, g, h, j, i], is_dual)
    } else {
        select_801([a, f, b, d, c, g, i, k, h, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_1973([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1974([c, a, e, b, d, g, f, h, l, j, k, i], is_dual)
    } else {
        select_1988([a, b, c, i, e, k, g, f, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1972([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1973([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    } else {
        select_1973([b, a, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1971([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1972([a, c, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1972([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1970([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_1971([a, b, c, e, f, g, d, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1971([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1914([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_1915([a, b, c, d, e, g, f, h, j, i, l, k, m, n], is_dual)
    } else {
        select_1970([a, b, c, d, g, e, h, j, i, f, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1846([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1847([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_1914([a, b, c, d, e, f, h, g, j, i, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1600([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_1601([a, b, c, d, e, f, h, i, g, k, l, j, m, n], is_dual)
    } else {
        select_1846([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2002([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_803([b, h, c, f, a, g, i, j], is_dual)
    } else {
        select_235([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2001([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_454([a, f, k, g, l, b, i, h], !is_dual)
    } else {
        select_2002([a, c, b, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2000([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_509([a, j, k, f, l, g, b, c, i], !is_dual)
    } else {
        select_2001([a, c, b, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1999([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2000([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2000([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2005([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_339([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_505([a, j, f, l, g, b, k, i, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2004([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2005([a, b, d, c, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_1235([a, f, j, l, b, g, k, i, c, h, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2003([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2004([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2004([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1998([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1999([a, b, c, d, e, f, g, i, j, k, l, h], is_dual)
    } else {
        select_2003([a, b, c, e, d, f, g, h, i, l, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2010([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_270([d, j, k, e, a, h], !is_dual)
    } else {
        select_803([b, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2012([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1079([a, b, c, g], is_dual)
    } else {
        select_1765([a, b, d, e, h, f, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2013([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_33([d, b, c, e, g, f, h], is_dual)
    } else {
        select_22([a, h, d, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2011([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2012([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_2013([d, b, c, e, g, f, h, a, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2009([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2010([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2011([d, j, k, g, e, i, h, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2008([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2009([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_548([i, j, k, g, d, e, a, b, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2016([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_412([a, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_412([a, b, d, h, f, j, g, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2015([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_477([a, b, c, h, f, j, k, l, g], is_dual)
    } else {
        select_2016([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2019([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_109([a, c, d, e, f, g], is_dual)
    } else {
        select_490([b, a, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2018([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_867([g, c, a, i, f, e, j], is_dual)
    } else {
        select_2019([b, c, d, a, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2021([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_114([b, c, d, e, f, g], is_dual)
    } else {
        select_124([a, b, c, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2020([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_172([b, a, g, f, i, e], is_dual)
    } else {
        select_2021([b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2017([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2018([a, c, b, d, f, g, h, e, i, j], is_dual)
    } else {
        select_2020([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2014([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2015([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2017([a, g, d, e, f, b, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2007([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2008([b, c, d, f, g, h, i, j, k, a, l], is_dual)
    } else {
        select_2014([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2006([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2007([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2007([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_1997([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1998([a, b, c, d, f, g, e, h, i, j, l, k], is_dual)
    } else {
        select_2006([a, b, c, e, f, g, d, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_1996([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1997([a, b, c, i, d, e, f, h, j, k, l, m], is_dual)
    } else {
        select_1997([a, b, c, h, d, e, g, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_1995([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_1996([a, b, c, d, e, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_1996([a, b, c, d, e, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_2030([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_104([a, b, c, e, g], is_dual)
    } else {
        select_109([a, d, b, c, e, f], is_dual)
    }
}
/// n = 8, i = 2
fn select_2029([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_244([a, c, d, b, e, g, f, h], is_dual)
    } else {
        select_2030([a, c, d, f, b, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_454([a, g, i, f, j, b, h, c], !is_dual)
    } else {
        select_2029([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2027([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_530([a, c, b, d, e, g, f, h, i], is_dual)
    } else {
        select_2028([a, h, j, f, k, g, b, i, c, d], !is_dual)
    }
}
/// n = 7, i = 2
fn select_2034([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_104([e, a, c, d, g], is_dual)
    } else {
        select_109([a, b, c, d, e, f], is_dual)
    }
}
/// n = 9, i = 2
fn select_2033([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_99([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_2034([b, h, c, d, a, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2032([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2033([a, c, e, f, b, d, h, g, i], is_dual)
    } else {
        select_411([a, h, j, g, k, b, i, c, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2031([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2032([a, c, d, f, b, e, h, g, i, j, k], is_dual)
    } else {
        select_530([a, j, g, k, l, h, b, c, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2026([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2027([a, h, j, l, k, b, c, g, i, d, e], !is_dual)
    } else {
        select_2031([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2039([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_283([h, a, f, e, i], is_dual)
    } else {
        select_234([d, e, b, c, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_2038([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2039([a, c, e, d, g, h, i, f, j], is_dual)
    } else {
        select_1005([a, b, f, d, g, h, i, e, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2041([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1903([h, f, i, g, a, e, b], !is_dual)
    } else {
        select_297([a, f, c, d, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2040([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_268([b, e, d, a, f, h, g], is_dual)
    } else {
        select_2041([b, d, a, c, f, g, e, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2037([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2038([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2040([f, a, h, b, j, g, i, e, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2045([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_450([a, b, d, e, h, i, j], is_dual)
    } else {
        select_76([b, c, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2044([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_34([a, c, d, e, h, g, i, k, l], is_dual)
    } else {
        select_2045([a, b, e, i, f, g, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2046([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_519([a, c, d, h, f, g, j, k], is_dual)
    } else {
        select_2045([a, b, d, g, e, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2043([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2044([f, d, b, c, e, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2046([i, e, a, d, h, g, f, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2048([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_20([e, d, b, c, f, g, h], is_dual)
    } else {
        select_1903([e, h, i, a, g, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2050([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_35([g, h, i, a, d, b], !is_dual)
    } else {
        select_76([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2049([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2050([g, h, j, f, i, e, a, c, d], !is_dual)
    } else {
        select_124([f, a, b, h, e, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2047([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2048([a, c, d, e, i, g, h, k, j], is_dual)
    } else {
        select_2049([a, b, c, d, f, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2042([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2043([a, c, d, b, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2047([a, g, c, d, e, i, h, j, f, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2036([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2037([b, d, g, e, f, a, h, i, j, k, l], is_dual)
    } else {
        select_2042([b, d, a, c, e, f, h, i, j, g, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_2054([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_96([g, h, f, a, b, c], !is_dual)
    } else {
        select_59([f, h, g, a, b, e, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2053([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_766([f, a, e, c, d, g, h, j], is_dual)
    } else {
        select_2054([a, h, b, e, g, f, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2052([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2053([a, b, c, j, d, g, i, h, k, l], is_dual)
    } else {
        select_673([a, b, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2051([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2052([a, b, e, f, c, d, g, h, i, j, k, l], is_dual)
    } else {
        select_1110([a, b, c, d, h, i, g, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2035([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2036([b, c, e, d, f, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_2051([b, c, a, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2025([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_2026([a, h, b, c, j, d, i, k, l, m, g, n], is_dual)
    } else {
        select_2035([a, c, d, b, e, f, i, h, g, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2024([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2025([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2025([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_2062([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_58([a, b, c, d, e, f], is_dual)
    } else {
        select_41([a, c, d, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2061([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_297([b, f, d, e, h, g], is_dual)
    } else {
        select_2062([f, h, i, a, g, b, c], !is_dual)
    }
}
/// n = 11, i = 3
fn select_2060([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_99([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2061([a, b, i, c, d, g, h, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_2064([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_104([a, d, e, h, g], is_dual)
    } else {
        select_20([a, b, c, g, f, i, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_2063([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_299([a, g, b, d, e, f, h, i], is_dual)
    } else {
        select_2064([b, a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2059([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2060([b, c, a, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_2063([b, c, h, e, f, g, a, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2058([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2059([a, b, c, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_1110([a, b, d, e, c, h, g, j, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2069([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_41([g, h, a, f, b], !is_dual)
    } else {
        select_26([e, c, d, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2068([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2069([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_36([e, c, d, b, f], is_dual)
    }
}
/// n = 11, i = 4
fn select_2067([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2068([a, b, d, e, h, g, j, i], is_dual)
    } else {
        select_2049([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2072([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_21([b, d, c, e, f, h], is_dual)
    } else {
        select_25([a, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2071([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_347([a, b, d, e, g, j, h, k], is_dual)
    } else {
        select_2072([a, b, c, h, f, i, j, g, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2073([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_519([a, c, d, f, e, g, h, j], is_dual)
    } else {
        select_2072([a, b, d, g, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2070([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2071([f, a, e, c, d, g, j, h, i, k, l], is_dual)
    } else {
        select_2073([h, a, b, e, g, i, f, k, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2066([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2067([a, b, g, d, e, h, i, f, j, k, l], is_dual)
    } else {
        select_2070([b, a, d, e, c, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2076([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_87([a, b, d, f, e, g, i], is_dual)
    } else {
        select_52([e, a, c, h, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2075([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_260([a, c, d, f, h, e, g, j, i], is_dual)
    } else {
        select_2076([a, c, b, g, e, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2078([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_57([g, a, b, h, e, f, i], is_dual)
    } else {
        select_297([e, f, c, d, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2077([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_268([a, c, e, f, b, g, h], is_dual)
    } else {
        select_2078([a, c, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2074([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2075([b, c, a, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2077([b, a, c, g, i, f, h, e, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2065([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2066([b, c, e, a, d, f, h, i, g, j, k, l], is_dual)
    } else {
        select_2074([b, c, g, e, f, a, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2057([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2058([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2065([b, c, d, f, e, g, h, i, a, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2056([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2057([a, c, d, e, b, f, i, h, g, j, k, l], is_dual)
    } else {
        select_2026([a, h, b, c, e, d, i, j, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2055([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2056([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_2056([a, c, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2023([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2024([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2055([a, b, c, d, f, e, j, k, i, h, l, m, n], is_dual)
    }
}
/// n = 12, i = 5
fn select_2086([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_278([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_496([a, c, d, e, g, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2085([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_268([b, i, e, j, g, f, h], is_dual)
    } else {
        select_2086([a, e, c, d, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_2088([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_303([h, g, j, k, d, i, a, e, f, b], !is_dual)
    } else {
        select_33([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2087([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_122([b, d, e, c, g, f, h], is_dual)
    } else {
        select_2088([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2084([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2085([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_2087([h, b, e, j, a, f, g, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 2
fn select_2090([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_822([a, b, g, f, h, i, e], is_dual)
    } else {
        select_1035([b, c, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2089([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_353([e, b, g, d, f, a, h, i, j], is_dual)
    } else {
        select_2090([b, c, a, d, f, e, h, g, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2083([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2084([a, c, b, d, e, g, h, f, j, i, k, l, m], is_dual)
    } else {
        select_2089([a, c, f, e, i, g, b, h, j, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_2093([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_349([a, i, b, j, e, f, g, h], is_dual)
    } else {
        select_278([a, c, d, h, e, g, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2095([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_140([a, b, c, f, e, h, g], is_dual)
    } else {
        select_170([a, b, d, g, f], is_dual)
    }
}
/// n = 10, i = 2
fn select_2094([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_383([a, b, d, e, c, f, g, i, h, j], is_dual)
    } else {
        select_2095([a, b, c, i, f, j, h, g], is_dual)
    }
}
/// n = 10, i = 2
fn select_2092([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2093([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_2094([a, b, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2091([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2092([a, b, c, d, i, f, g, j, h, k], is_dual)
    } else {
        select_2092([a, b, c, e, h, f, g, j, i, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_2082([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_2083([a, b, c, d, i, g, h, k, j, f, l, m, n], is_dual)
    } else {
        select_2091([b, c, d, a, e, h, g, f, i, j, k], is_dual)
    }
}
/// n = 7, i = 1
fn select_2099([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_249([a, b, c, d, e, g], is_dual)
    } else {
        select_249([a, b, c, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2100([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1096([b, a, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_1711([f, i, e, j, h, a, b, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2098([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2099([b, c, d, e, f, g, h], is_dual)
    } else {
        select_2100([g, i, k, l, a, b, j, c, d, h], !is_dual)
    }
}
/// n = 11, i = 2
fn select_2101([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_94([c, i, e, f, b, a, g, h, j, k], is_dual)
    } else {
        select_94([d, h, e, f, b, a, g, i, j, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_2097([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2098([a, b, c, d, h, i, g, k, j, l, m, n], is_dual)
    } else {
        select_2101([c, a, e, f, b, d, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2102([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2098([a, b, c, d, e, h, g, j, i, k, l, m], is_dual)
    } else {
        select_93([c, a, e, f, b, d, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_2096([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2097([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2102([a, b, c, d, e, i, g, k, j, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2081([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2082([b, c, e, d, f, g, h, i, j, a, k, l, m, n], is_dual)
    } else {
        select_2096([b, a, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2080([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2081([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2081([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 2
fn select_2107([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_82([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_239([a, i, b, c, g, h, f, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2108([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_238([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_495([a, f, j, k, l, i, g, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2106([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2107([d, a, b, c, e, i, f, g, h, j], is_dual)
    } else {
        select_2108([d, h, a, b, i, e, f, g, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2109([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_1359([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2108([b, j, c, d, g, a, h, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2105([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2106([a, b, i, e, f, g, h, d, j, k, l, m, n], is_dual)
    } else {
        select_2109([f, e, a, b, c, d, j, g, h, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2104([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2105([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_2105([a, b, c, d, g, f, h, i, j, e, k, l, m, n], is_dual)
    }
}
/// n = 8, i = 2
fn select_2111([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_538([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_538([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 6, i = 0
fn select_2114([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_115([a, b, c, d, e], is_dual)
    } else {
        select_115([a, b, d, e, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_2113([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2114([b, c, d, e, f, g], is_dual)
    } else {
        select_1168([a, i, j, k, l, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2112([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2113([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_2113([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2110([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2111([a, b, c, i, j, k, l, h], !is_dual)
    } else {
        select_2112([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2103([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2104([e, f, g, d, a, b, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2110([a, b, c, d, e, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2079([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_2080([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2103([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2022([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2023([a, b, c, e, g, f, h, i, d, j, k, l, m, n], is_dual)
    } else {
        select_2079([a, b, c, e, g, d, h, i, f, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1994([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < l) || (is_dual && d > l) {
        select_1995([a, b, c, e, f, g, j, i, k, l, d, m, n], is_dual)
    } else {
        select_2022([a, b, c, e, d, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_2122([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1251([a, c, e, f, b, d, h, g, i, k], is_dual)
    } else {
        select_409([a, h, b, c, d, i, j, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2125([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_96([g, h, e, a, f, b], !is_dual)
    } else {
        select_297([a, e, c, d, h, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_2124([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_95([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_2125([b, f, d, e, a, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2126([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_420([a, e, c, d, f, g], is_dual)
    } else {
        select_324([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2123([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2124([a, c, b, d, e, f, g, i, h], is_dual)
    } else {
        select_2126([a, i, j, f, g, b, h, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2121([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2122([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_2123([a, g, c, e, f, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2120([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1340([a, b, c, d, f, h, g, i, k, j, l], is_dual)
    } else {
        select_2121([a, b, c, d, e, i, g, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2131([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_140([a, h, e, b, f, g, i], is_dual)
    } else {
        select_431([a, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2130([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2131([b, d, c, f, e, h, i, g, j], is_dual)
    } else {
        select_1881([a, b, g, d, e, h, f, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2133([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_73([f, h, i, e, d, g, a, b], !is_dual)
    } else {
        select_137([f, d, h, i, e, g, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2132([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_54([e, a, b, f, d, g, h], is_dual)
    } else {
        select_2133([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2129([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2130([a, b, d, c, e, f, g, h, i, j, l], is_dual)
    } else {
        select_2132([f, k, l, a, i, b, g, j, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2137([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_450([a, c, d, f, g, i, k], is_dual)
    } else {
        select_450([b, c, e, f, g, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2136([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_34([b, c, d, e, h, g, i, j, l], is_dual)
    } else {
        select_2137([a, b, e, f, i, g, h, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_2139([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_21([d, b, c, e, f, h], is_dual)
    } else {
        select_22([h, i, a, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2138([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2139([a, e, c, d, f, h, j, g, k], is_dual)
    } else {
        select_269([d, b, g, i, e], is_dual)
    }
}
/// n = 13, i = 5
fn select_2135([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2136([b, a, c, d, e, f, g, i, h, l, j, m, k], is_dual)
    } else {
        select_2138([h, b, e, a, f, g, j, i, k, l, m], is_dual)
    }
}
/// n = 12, i = 3
fn select_2141([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1550([a, c, b, i, f, g, h, k, j, l], is_dual)
    } else {
        select_100([c, d, e, j, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2142([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1503([a, b, c, e, f, h, i, j, k, l], is_dual)
    } else {
        select_234([c, d, e, f, j, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2140([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2141([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    } else {
        select_2142([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2134([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2135([a, b, d, e, f, i, h, j, g, k, l, m, n], is_dual)
    } else {
        select_2140([b, a, c, f, d, e, g, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2128([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2129([a, b, e, h, f, g, c, i, j, k, l, m], is_dual)
    } else {
        select_2134([a, b, e, c, d, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2127([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2128([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2128([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2119([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2120([a, b, e, f, h, g, i, c, j, l, k, n], is_dual)
    } else {
        select_2127([a, b, d, e, f, c, g, i, j, h, k, m, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2148([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_104([b, c, d, e, h], is_dual)
    } else {
        select_347([a, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1195([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_2148([e, h, i, j, k, a, f, g, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2146([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2147([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2147([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2151([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_104([b, c, d, e, h], is_dual)
    } else {
        select_496([a, c, d, e, f, g, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2152([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1809([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_306([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2150([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2151([e, h, i, j, k, a, g, f, c, d], !is_dual)
    } else {
        select_2152([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2149([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2150([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2150([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2145([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2146([a, b, k, j, l, h, i, c, e, f, g], !is_dual)
    } else {
        select_2149([a, b, j, k, l, h, i, d, e, f, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2144([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2145([a, b, c, e, d, f, g, i, h, j, l, k], is_dual)
    } else {
        select_426([a, b, k, l, i, c, d, h], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2155([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_549([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_1571([a, c, b, d, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2154([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2155([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_2155([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2159([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([g, h, i, d, e, f, b, a], !is_dual)
    } else {
        select_1923([b, c, a, f, d, g, e, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2158([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_905([h, i, d, e, g, f, a, b], !is_dual)
    } else {
        select_2159([h, i, f, e, d, g, b, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2157([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_62([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2158([f, i, j, a, g, c, h, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2157([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2157([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2153([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2154([a, b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_2156([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2143([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2144([a, b, e, f, c, g, h, i, l, m, j, k], is_dual)
    } else {
        select_2153([a, b, e, f, d, i, j, k, h, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2118([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_2119([a, b, c, e, f, d, g, i, h, j, k, m, l, n], is_dual)
    } else {
        select_2143([a, b, c, e, d, f, j, i, k, h, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2165([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_799([a, b, e, d, g, f, j, h], is_dual)
    } else {
        select_871([i, j, f, a, g, h, c, b, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2164([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_243([a, b, d, e, f, h, g, i], is_dual)
    } else {
        select_2165([a, b, c, g, d, f, h, i, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_2168([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_170([b, c, d, e, f], is_dual)
    } else {
        select_297([a, b, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2167([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2168([c, a, b, e, g, h, j], is_dual)
    } else {
        select_1363([a, b, h, d, f, i, g, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2171([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_58([b, c, d, e, f, g], is_dual)
    } else {
        select_450([a, c, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2170([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2171([i, f, j, g, h, a, b, e, c], !is_dual)
    } else {
        select_1779([b, d, c, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2172([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_75([a, b, c, f, e, h, i, j], is_dual)
    } else {
        select_30([a, g, d, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2169([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2170([i, j, h, k, e, a, g, f, b, c], !is_dual)
    } else {
        select_2172([b, a, c, d, e, g, h, i, j, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_2166([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2167([b, c, a, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_2169([i, k, l, g, h, f, j, a, b, c, d], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2163([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2164([a, c, f, b, e, h, g, i, l, m, j], is_dual)
    } else {
        select_2166([a, c, b, d, g, f, h, j, k, l, m, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2175([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2068([b, a, d, g, e, f, i, j], is_dual)
    } else {
        select_1572([a, b, c, f, e, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2177([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_147([b, e, d, c, g, f, i, h], is_dual)
    } else {
        select_1429([h, i, j, e, g, a, f, b, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2176([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_180([c, d, a, e, f, b, g, h, i], is_dual)
    } else {
        select_2177([c, d, b, e, f, a, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2174([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2175([b, a, c, d, g, f, i, h, j, k], is_dual)
    } else {
        select_2176([a, b, f, c, e, h, i, g, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2178([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_243([b, c, d, a, g, f, i, h], is_dual)
    } else {
        select_497([f, a, b, c, e, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2173([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2174([b, a, c, d, g, f, j, h, k, l, i], is_dual)
    } else {
        select_2178([b, c, a, f, e, h, g, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2162([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2163([a, c, b, e, d, g, h, i, k, f, j, l, m], is_dual)
    } else {
        select_2173([c, b, d, e, a, g, f, i, k, j, h, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_341([d, g, h, j, a, f, c], !is_dual)
    } else {
        select_492([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2184([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_278([b, c, d, e, f, a, g, h], is_dual)
    } else {
        select_219([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2183([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_250([c, f, e, a, d, g, h], is_dual)
    } else {
        select_2184([a, b, c, d, g, f, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2181([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2182([c, b, e, f, h, g, a, i, j, k], is_dual)
    } else {
        select_2183([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2187([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_309([e, a, c, d, f, h, g, i, k], is_dual)
    } else {
        select_2069([g, b, c, d, e, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2186([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2187([c, b, d, e, a, f, g, h, i, j, k], is_dual)
    } else {
        select_1025([c, a, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2189([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_564([b, c, a, e, g, h, i, f], is_dual)
    } else {
        select_145([e, a, f, d, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2188([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_204([f, e, i, j, a, g, h, b], !is_dual)
    } else {
        select_2189([b, a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2185([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2186([a, b, c, d, e, f, g, h, i, j, l], is_dual)
    } else {
        select_2188([i, k, l, g, a, h, f, j, b, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2180([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2181([a, f, c, b, e, h, g, i, l, m, j], is_dual)
    } else {
        select_2185([a, b, d, c, g, f, h, j, k, l, m, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2192([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_180([b, d, a, e, f, c, g, h, i], is_dual)
    } else {
        select_446([b, d, c, e, f, a, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2193([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_455([h, j, f, k, e, g, d, c], !is_dual)
    } else {
        select_864([a, d, b, f, i, j, e, h, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_2191([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2192([a, f, c, b, e, g, i, h, j, l], is_dual)
    } else {
        select_2193([g, k, l, j, h, i, f, a, b, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2195([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_694([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_1363([f, a, i, j, h, b, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2194([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2195([a, b, d, c, g, f, i, j, h, l], is_dual)
    } else {
        select_497([f, a, c, d, e, h, g, k, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2190([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2191([a, c, b, d, g, f, h, j, k, l, i, m], is_dual)
    } else {
        select_2194([a, f, c, b, e, h, g, i, k, l, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2179([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2180([a, b, d, e, c, g, h, i, k, f, j, l, m], is_dual)
    } else {
        select_2190([a, b, c, e, d, g, f, i, k, j, h, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2161([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2162([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_2179([a, c, d, b, e, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2160([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2161([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2161([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2117([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2118([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2160([a, b, d, f, e, j, h, k, i, c, l, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_2204([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_21([d, f, g, e, a, b], !is_dual)
    } else {
        select_21([d, f, g, e, a, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2203([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_182([b, c, d, g, e, f], is_dual)
    } else {
        select_2204([g, h, i, a, f, b, d], !is_dual)
    }
}
/// n = 11, i = 3
fn select_2202([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_82([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2203([a, i, b, c, g, h, f, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2205([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1892([a, g, d, e, f, b, h, i, j], is_dual)
    } else {
        select_320([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2201([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2202([a, d, e, b, g, f, h, i, j, k, m], is_dual)
    } else {
        select_2205([a, b, c, h, i, f, g, k, l, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2200([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2201([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2201([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2199([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < c) || (is_dual && l > c) {
        select_2200([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_452([a, b, g, k, l, c], is_dual)
    }
}
/// n = 10, i = 3
fn select_2210([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_297([a, h, b, c, j, f], is_dual)
    } else {
        select_261([a, f, d, e, i, g, j, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_2209([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_258([i, a, d, e, j, f, g, m], is_dual)
    } else {
        select_2210([a, f, g, b, c, k, h, i, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2213([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_21([a, g, b, d, i, f], is_dual)
    } else {
        select_21([a, f, c, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2212([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2213([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_52([a, b, d, i, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2214([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_629([a, b, c, e, f, i, h, j], is_dual)
    } else {
        select_193([b, c, d, h, f, g, i], is_dual)
    }
}
/// n = 12, i = 3
fn select_2211([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2212([b, a, d, c, g, f, j, i, l, k], is_dual)
    } else {
        select_2214([a, b, d, e, i, g, h, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2208([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2209([b, a, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_2211([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2207([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2208([b, d, c, e, f, a, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2211([b, d, a, e, f, c, g, h, i, k, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2218([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_464([d, b, c, e, f, g], is_dual)
    } else {
        select_193([d, h, i, a, e, g, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2217([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_258([e, b, c, d, f, g, h, i], is_dual)
    } else {
        select_2218([a, b, d, e, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2221([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_89([b, d, c, f, e, g, h], is_dual)
    } else {
        select_97([a, b, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2220([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_519([e, c, d, a, f, g, i, j], is_dual)
    } else {
        select_2221([a, b, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2219([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2071([a, b, c, d, e, f, h, g, i, j, l], is_dual)
    } else {
        select_2220([i, h, k, l, a, j, g, b, f, c], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2216([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2217([a, b, d, e, i, j, g, h, m, k, n], is_dual)
    } else {
        select_2219([a, b, c, g, h, f, k, i, l, m, j, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2224([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_21([a, d, b, e, h, i], is_dual)
    } else {
        select_89([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2223([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1868([e, h, j, k, a, g, f, d], !is_dual)
    } else {
        select_2224([b, a, d, c, e, f, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2222([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2217([e, a, c, d, h, i, f, g, l, j, m], is_dual)
    } else {
        select_2223([h, k, i, m, e, l, j, a, b, f, g], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2215([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2216([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2222([b, f, d, e, i, g, h, a, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2206([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2207([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_2215([a, d, c, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2198([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2199([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_2206([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 3
fn select_2228([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_218([a, b, c, d, g, f, h, j, i, k], is_dual)
    } else {
        select_379([b, c, e, d, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2231([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_21([h, c, a, e, j, k], is_dual)
    } else {
        select_21([g, d, b, f, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2230([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1504([a, e, c, d, g, f, h, i, j], is_dual)
    } else {
        select_2231([a, c, b, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2233([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_21([f, c, b, e, h, j], is_dual)
    } else {
        select_97([g, a, i, d, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2232([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2233([a, b, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_33([a, c, h, d, g, f, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2229([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2230([a, f, d, c, h, e, g, j, i, k, l], is_dual)
    } else {
        select_2232([a, d, b, e, g, f, i, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2227([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2228([b, a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_2229([b, c, d, e, f, g, h, a, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2226([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2227([a, b, c, i, d, f, g, h, j, k, l, m], is_dual)
    } else {
        select_102([a, c, d, e, j, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 2
fn select_2236([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_383([b, h, d, e, a, f, g, j, i, k], is_dual)
    } else {
        select_383([c, g, d, e, a, f, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2238([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_357([g, c, d, e, a, h, j], is_dual)
    } else {
        select_1225([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2237([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_1153([a, h, c, b, f, g, i, j], is_dual)
    } else {
        select_2238([a, c, b, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2235([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2236([c, d, e, a, b, f, g, h, j, i, k], is_dual)
    } else {
        select_2237([a, b, c, g, h, f, j, k, i, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2240([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_218([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_218([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_2241([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_380([c, h, e, f, a, b, g, j, i, k], is_dual)
    } else {
        select_380([d, g, e, f, a, b, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2239([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2240([a, b, c, d, g, h, j, k, i, l], is_dual)
    } else {
        select_2241([c, d, e, f, a, b, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_2234([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2235([b, c, d, e, f, g, h, i, j, a, k, l], is_dual)
    } else {
        select_2239([b, c, a, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2225([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2226([a, c, d, e, f, g, h, i, j, b, k, l, m], is_dual)
    } else {
        select_2234([a, b, c, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2197([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_2198([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2225([a, b, d, c, f, g, h, e, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2246([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_339([a, b, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_587([a, j, f, g, b, i, h], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2250([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_33([b, c, d, e, g, f, h], is_dual)
    } else {
        select_35([h, i, j, a, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2249([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_186([b, e, c, d, f, g, h], is_dual)
    } else {
        select_2250([a, b, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2248([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_38([b, a, g, e, h, i, f], is_dual)
    } else {
        select_2249([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2252([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1809([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_50([e, c, d, a, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2251([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1750([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2252([a, b, d, e, g, h, f, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2247([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2248([g, b, d, e, a, f, h, i, j, k], is_dual)
    } else {
        select_2251([b, a, c, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2245([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_2246([a, c, b, e, f, g, d, h, i, j], is_dual)
    } else {
        select_2247([a, c, d, e, f, g, b, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2244([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_991([a, c, d, e, b, f, h, g, i, j, k], is_dual)
    } else {
        select_2245([a, b, c, d, e, i, h, j, g, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2243([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2244([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_2244([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 6, i = 2
fn select_2258([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_729([f, a, b, d, e], is_dual)
    } else {
        select_729([e, a, c, d, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_2259([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_59([a, e, b, g, h, d, f], is_dual)
    } else {
        select_59([a, d, c, f, h, e, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_2257([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2258([a, f, g, h, d, e], !is_dual)
    } else {
        select_2259([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2256([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1124([a, b, d, e, f, c, h, g], is_dual)
    } else {
        select_2257([a, c, d, b, f, e, h, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2261([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_38([a, b, h, g, i, j, f], is_dual)
    } else {
        select_1224([b, a, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2262([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_453([i, f, j, a, g, b], !is_dual)
    } else {
        select_2184([f, b, c, d, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2260([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2261([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_2262([b, a, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2255([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2256([a, b, c, h, g, d, i, j], is_dual)
    } else {
        select_2260([a, b, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2254([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_991([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_2255([a, b, c, d, e, i, g, j, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2253([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2254([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    } else {
        select_2254([a, c, d, e, f, g, b, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2242([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2243([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2253([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_2196([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_2197([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2242([a, b, c, d, f, e, j, h, k, l, i, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2116([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2117([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_2196([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_2271([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_170([b, c, e, g, j], is_dual)
    } else {
        select_464([a, h, d, i, f, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2272([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_170([a, b, d, i, k], is_dual)
    } else {
        select_109([c, e, f, h, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2270([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2271([a, c, d, b, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2272([c, d, b, f, a, e, g, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2274([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_140([a, b, c, h, e, g, j], is_dual)
    } else {
        select_91([c, g, d, e, f, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_2275([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1504([a, b, c, i, f, g, h, j, k], is_dual)
    } else {
        select_219([a, b, d, e, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_2273([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2274([b, c, g, d, a, f, h, i, j, k], is_dual)
    } else {
        select_2275([b, c, d, a, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2269([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2270([a, b, c, d, h, e, g, j, k, l, i, m], is_dual)
    } else {
        select_2273([b, c, d, a, f, g, h, k, i, l, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2278([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_170([g, h, d, i, a], !is_dual)
    } else {
        select_496([e, g, h, i, d, f, b, c], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2277([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2278([i, k, l, g, a, j, b, c, d], !is_dual)
    } else {
        select_250([b, c, d, e, f, i, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2280([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_170([a, h, j, k, i], !is_dual)
    } else {
        select_521([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_2279([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2280([h, l, m, f, j, k, a, b, i, d, e], !is_dual)
    } else {
        select_250([b, h, c, d, e, g, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_2276([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2277([a, c, d, e, b, h, g, j, i, k, l, m], is_dual)
    } else {
        select_2279([a, b, f, c, d, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2268([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2269([a, b, d, e, f, c, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2276([a, c, d, e, f, b, g, i, j, h, k, m, l, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2284([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_140([a, e, d, c, g, f, i], is_dual)
    } else {
        select_75([a, b, d, f, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2283([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1991([c, f, d, e, a, g, h], is_dual)
    } else {
        select_2284([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2286([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_233([a, g, j, k, i, f], !is_dual)
    } else {
        select_521([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2285([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1284([i, j, g, k, d, a, e, b, h], !is_dual)
    } else {
        select_2286([a, b, c, d, e, f, g, j, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2282([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2283([b, c, e, d, h, f, g, i, j], is_dual)
    } else {
        select_2285([i, h, l, f, e, k, a, j, b, c, g], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2289([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1809([b, e, c, d, f, g, i, h], is_dual)
    } else {
        select_870([a, f, c, d, e, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2288([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_520([j, h, l, e, g, k, a, b, i, c], !is_dual)
    } else {
        select_2289([b, d, a, c, e, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2291([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_460([a, b, d, e, g, i, h, j], is_dual)
    } else {
        select_745([a, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2290([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2289([a, d, b, c, f, g, h, e, i, j], is_dual)
    } else {
        select_2291([a, b, d, c, f, g, e, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2287([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2288([a, b, g, d, f, h, e, i, k, j, l, m], is_dual)
    } else {
        select_2290([b, c, e, d, i, f, h, g, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2281([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2282([a, b, c, h, e, f, j, i, k, g, l, m], is_dual)
    } else {
        select_2287([a, c, b, d, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2267([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < b) || (is_dual && j > b) {
        select_2268([a, c, d, b, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_2281([a, c, d, e, g, h, i, j, k, b, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_2297([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_21([a, b, d, g, e, h], is_dual)
    } else {
        select_30([e, f, c, d], is_dual)
    }
}
/// n = 10, i = 3
fn select_2296([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2297([g, a, b, f, e, i, h, j], is_dual)
    } else {
        select_973([e, b, c, d, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2295([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_295([f, a, b, e, j, i, l], is_dual)
    } else {
        select_2296([c, d, a, b, f, g, h, i, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2300([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_58([a, c, e, h, d, g], is_dual)
    } else {
        select_58([b, c, d, h, e, f], is_dual)
    }
}
/// n = 9, i = 3
fn select_2299([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_170([d, e, c, g, f], is_dual)
    } else {
        select_2300([a, b, f, d, e, h, i, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2301([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_39([b, c, e, g, f, h], is_dual)
    } else {
        select_40([a, b, h, e, d, i, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2299([c, e, b, d, g, f, i, j, h], is_dual)
    } else {
        select_2301([c, f, a, d, h, e, j, i, g], is_dual)
    }
}
/// n = 12, i = 4
fn select_2294([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2295([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2298([b, e, c, f, h, g, a, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2303([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2299([b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2259([a, b, c, e, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2302([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2303([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1535([h, e, f, d, a, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2293([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2294([a, c, d, b, e, g, h, f, j, i, k, l], is_dual)
    } else {
        select_2302([a, d, f, e, g, b, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2307([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_83([b, c, d, e, f, g, h], is_dual)
    } else {
        select_2069([a, h, b, c, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2306([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1829([b, g, d, e, f, a, h, i], is_dual)
    } else {
        select_2307([b, a, c, d, e, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2305([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_500([f, k, h, l, a, g, i, b, e], !is_dual)
    } else {
        select_2306([b, c, d, a, e, g, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2308([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_339([a, c, d, b, h, g, f, j, k, i], is_dual)
    } else {
        select_497([f, a, b, e, g, h, i, l, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2304([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2305([a, b, c, d, h, g, f, j, k, l, m, i], is_dual)
    } else {
        select_2308([b, a, c, d, e, g, f, h, i, j, l, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2292([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2293([b, c, d, e, a, g, h, f, j, i, k, l], is_dual)
    } else {
        select_2304([a, b, d, e, c, g, h, i, j, f, l, k, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2266([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_2267([b, c, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2292([b, c, d, e, j, g, h, a, i, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2265([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2266([a, b, c, d, e, f, h, i, j, k, g, l, m, n], is_dual)
    } else {
        select_2266([b, a, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2264([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2265([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2265([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2263([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2264([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_2264([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2115([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_2116([a, b, c, d, e, g, f, h, j, k, l, i, m, n], is_dual)
    } else {
        select_2263([a, b, c, d, e, g, f, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1993([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_1994([a, b, c, d, e, f, g, h, j, k, l, m, n, i], is_dual)
    } else {
        select_2115([a, b, c, d, f, g, e, h, j, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1599([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < e) || (is_dual && l > e) {
        select_1600([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_1993([a, b, c, d, f, g, h, i, j, k, l, e, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1598([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1599([a, b, c, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_1599([a, b, c, d, e, g, h, i, j, f, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2321([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_632([a, b, e, g, h, i, j], is_dual)
    } else {
        select_193([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2321([a, c, b, d, f, g, e, h, i, j], is_dual)
    } else {
        select_1593([a, e, d, g, b, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2319([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1735([b, c, f, e, h, g, a, i, j], is_dual)
    } else {
        select_2320([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2323([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_453([a, c, d, e, f, g], is_dual)
    } else {
        select_205([a, g, h, b, e, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2322([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_340([a, c, d, b, f, e, g, h], is_dual)
    } else {
        select_2323([a, f, e, i, b, h, c, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2318([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_2319([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_2322([a, b, i, j, e, f, h, g, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2325([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1649([a, b, c, d, f, g, e, h, j, i, k], is_dual)
    } else {
        select_1963([a, c, b, d, g, e, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2324([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2325([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2325([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2317([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2318([a, b, e, d, i, g, f, h, j, k], is_dual)
    } else {
        select_2324([a, b, f, c, h, j, e, i, k, g, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2329([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_877([a, c, d, b, e, f, g, i], is_dual)
    } else {
        select_738([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2328([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_454([a, b, c, e, g, j, h, i], is_dual)
    } else {
        select_2329([a, b, h, d, i, f, g, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2327([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1271([a, h, c, d, b, j, k, g], is_dual)
    } else {
        select_2328([a, b, c, e, d, f, h, g, i, k, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2331([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1495([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_1612([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2330([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1271([a, e, b, c, f, g, i, h], is_dual)
    } else {
        select_2331([a, b, d, c, e, f, h, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2326([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2327([a, b, c, d, e, f, i, g, j, h, k], is_dual)
    } else {
        select_2330([a, c, d, f, g, h, b, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2316([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2317([a, b, d, e, f, g, h, j, c, i, l, k], is_dual)
    } else {
        select_2326([a, b, d, c, e, g, i, j, f, h, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2336([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_453([a, d, c, f, e, h], is_dual)
    } else {
        select_633([a, b, e, d, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2338([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_87([a, e, c, d, g, f, i], is_dual)
    } else {
        select_464([d, f, b, h, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2337([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_341([d, g, h, k, i, f, c], !is_dual)
    } else {
        select_2338([a, b, f, d, e, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2335([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2336([g, i, c, a, f, d, h, k, l], is_dual)
    } else {
        select_2337([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2334([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_625([g, a, h, c, d, j, f, i, m, k], is_dual)
    } else {
        select_2335([a, b, f, d, e, i, g, k, h, l, m, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2342([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_109([a, e, c, d, f, g], is_dual)
    } else {
        select_464([g, b, a, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2341([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_513([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_2342([i, j, e, k, g, b, a, h, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2343([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_270([a, c, e, d, f, g], is_dual)
    } else {
        select_478([f, h, i, e, a, b, g, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2340([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2341([a, b, f, d, e, g, i, h, k, l, j], is_dual)
    } else {
        select_2343([b, a, c, h, e, j, f, k, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_460([a, h, b, e, f, i, g, j], is_dual)
    } else {
        select_34([a, c, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2347([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_48([a, b, d, e, i], is_dual)
    } else {
        select_576([d, b, c, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2345([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2346([b, d, a, c, e, g, h, f, i, j], is_dual)
    } else {
        select_2347([b, f, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2348([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_198([b, c, a, d, e, f, h, g, i], is_dual)
    } else {
        select_1823([a, i, j, b, e, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2344([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2345([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2348([a, f, b, d, h, g, i, e, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2339([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2340([a, b, c, g, e, f, i, k, j, l, h, m], is_dual)
    } else {
        select_2344([a, b, f, d, e, h, g, j, i, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2333([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_2334([b, c, d, e, f, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_2339([b, a, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_2353([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_91([a, g, b, d, f, e, h], is_dual)
    } else {
        select_109([d, b, c, e, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_2352([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_268([a, b, c, e, f, h, i], is_dual)
    } else {
        select_2353([b, c, d, e, h, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2351([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_819([a, b, c, g, f, i, h, e, j, k], is_dual)
    } else {
        select_2352([b, c, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2355([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_126([f, d, h, i, e, g, b, c], !is_dual)
    } else {
        select_170([d, h, e, i, a], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2354([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_676([b, a, f, d, e, h, g, i, k], is_dual)
    } else {
        select_2355([j, h, k, a, e, b, f, c, i], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2350([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2351([a, b, f, d, e, h, g, j, i, k, m], is_dual)
    } else {
        select_2354([b, a, c, g, e, f, i, h, k, l, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2359([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_87([b, e, c, d, g, f, i], is_dual)
    } else {
        select_21([d, f, a, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2358([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_341([d, g, h, k, i, f, c], !is_dual)
    } else {
        select_2359([a, b, f, d, e, h, g, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2357([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2358([b, a, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2336([g, h, c, a, f, d, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2356([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_625([g, a, h, c, d, j, f, i, m, k], is_dual)
    } else {
        select_2357([a, b, f, d, e, i, g, h, k, l, m, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2349([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2350([b, a, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2356([b, c, d, e, f, g, h, i, j, a, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2332([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2333([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2349([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2315([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_2316([a, b, c, d, g, f, j, h, l, k, m, i], is_dual)
    } else {
        select_2332([a, b, c, d, e, f, g, h, i, j, l, m, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2365([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_1078([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_1063([a, b, d, g, e, i, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2367([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_170([a, b, d, h, j], is_dual)
    } else {
        select_283([c, e, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2366([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2367([b, c, d, a, e, f, g, i, h, j], is_dual)
    } else {
        select_822([d, g, e, a, h, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2364([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2365([b, c, d, f, h, a, g, j, i], is_dual)
    } else {
        select_2366([b, c, d, a, e, f, g, i, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2370([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_32([c, b, d, e, a, f, h, g], is_dual)
    } else {
        select_220([c, a, b, d, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2369([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_270([a, c, d, e, g, h], is_dual)
    } else {
        select_2370([a, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2368([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2369([a, d, b, c, i, f, k, h, j], is_dual)
    } else {
        select_710([a, d, h, e, f, j, g, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_2363([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_2364([a, b, c, d, g, i, h, k, j, f], is_dual)
    } else {
        select_2368([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2372([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_454([a, f, i, e, j, b, h, g], !is_dual)
    } else {
        select_258([a, c, b, d, f, e, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2371([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2372([a, b, h, e, f, j, g, i, k, l], is_dual)
    } else {
        select_532([a, b, c, d, i, f, k, h, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2362([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2363([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_2371([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2377([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_39([b, a, d, f, g, h], is_dual)
    } else {
        select_283([a, c, d, f, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_2376([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_453([g, d, i, a, f, c], !is_dual)
    } else {
        select_2377([g, h, i, d, a, f, e, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2379([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_460([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_460([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2378([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2379([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_2379([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2375([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2376([f, g, i, d, e, h, a, b, c], !is_dual)
    } else {
        select_2378([a, g, f, i, d, h, e, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2374([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2375([a, b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_2375([a, b, c, e, f, d, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2383([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_140([a, b, c, d, e, f, g], is_dual)
    } else {
        select_586([c, b, e, f, g, a, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2382([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_889([a, d, e, f, b, h], is_dual)
    } else {
        select_2383([a, c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2385([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2050([a, b, c, g, e, i, h, f, j], is_dual)
    } else {
        select_145([a, b, f, d, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2384([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2385([b, d, c, e, f, a, g, h, i, j], is_dual)
    } else {
        select_296([d, a, c, b, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2381([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2382([a, c, d, b, h, g, f, i], is_dual)
    } else {
        select_2384([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2380([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2381([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_2381([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2374([a, j, i, c, d, b, g, h, e], !is_dual)
    } else {
        select_2380([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2361([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_2362([a, b, e, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2373([a, b, c, d, e, i, k, l, m, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2391([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_140([b, c, d, e, f, g, h], is_dual)
    } else {
        select_59([a, d, g, f, e, i, j], is_dual)
    }
}
/// n = 6, i = 2
fn select_2392([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_287([a, c, d, b, e, f], is_dual)
    } else {
        select_287([b, c, d, a, e, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2390([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2391([h, i, j, k, e, f, g, a, d, c], !is_dual)
    } else {
        select_2392([i, j, e, f, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2394([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_48([f, a, h, c, i], is_dual)
    } else {
        select_1154([c, b, e, d, g, f, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2393([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_1898([c, b, e, d, g, h, f, j, i], is_dual)
    } else {
        select_2394([d, a, f, c, i, e, k, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2389([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2390([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_2393([c, b, e, d, g, a, i, j, f, k, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2397([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_632([f, b, c, e, g, h, j], is_dual)
    } else {
        select_44([f, i, k, d, h, g, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2396([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1861([f, j, g, i, h, e, a, d, b], !is_dual)
    } else {
        select_2397([b, c, a, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2399([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_367([d, g, h, i, a, e, f, b], !is_dual)
    } else {
        select_89([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2398([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_38([d, h, e, f, g, b, a], !is_dual)
    } else {
        select_2399([a, c, b, d, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2395([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_2396([a, b, c, e, f, g, d, h, i, k, j], is_dual)
    } else {
        select_2398([e, d, c, g, a, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2388([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2389([a, d, c, f, e, j, h, k, i, l, g], is_dual)
    } else {
        select_2395([a, e, b, g, h, d, i, l, j, f, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2403([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_104([f, c, d, h, g], is_dual)
    } else {
        select_73([a, b, g, e, f, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2402([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_652([f, g, c, d, a, h, k, l], is_dual)
    } else {
        select_2403([b, a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2401([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_507([a, f, b, c, g, i, h], is_dual)
    } else {
        select_2402([a, d, b, c, e, f, g, h, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2400([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2401([a, b, c, d, e, f, g, h, i, k, l, j], is_dual)
    } else {
        select_1143([a, f, b, c, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2387([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2388([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_2400([b, a, c, d, f, g, h, e, i, l, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2408([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_464([f, b, c, g, e, h], is_dual)
    } else {
        select_44([f, i, j, d, h, g, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2407([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1477([a, b, e, d, h, f, i, j, g], is_dual)
    } else {
        select_2408([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2406([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_786([f, h, a, b, k, g, d, j, i], is_dual)
    } else {
        select_2407([a, d, c, g, e, j, i, f, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2410([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_350([d, a, c, g, e, i, f, h], is_dual)
    } else {
        select_633([f, g, j, a, d, h, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2409([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2410([d, a, b, g, e, f, j, h, k, l], is_dual)
    } else {
        select_340([f, h, a, c, i, d, g, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2405([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2406([c, a, d, b, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2409([c, d, b, a, e, f, h, i, k, g, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2413([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_776([a, i, j, g, h, b, c, d, f], !is_dual)
    } else {
        select_557([a, b, d, c, e, g, f, h, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2415([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_276([a, b, f, e, h, g, d], is_dual)
    } else {
        select_521([b, a, c, e, d, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2414([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2415([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_205([a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2412([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2413([g, f, k, l, i, h, d, j, a, b], !is_dual)
    } else {
        select_2414([d, b, c, f, h, e, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_2417([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_295([a, b, c, f, e, g, h], is_dual)
    } else {
        select_1892([a, d, b, c, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2419([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_140([b, c, d, e, f, g, h], is_dual)
    } else {
        select_21([a, g, d, f, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2418([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2419([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1736([e, i, j, g, b, a, h, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2416([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2417([a, c, d, e, b, f, h, g, j], is_dual)
    } else {
        select_2418([b, c, d, e, a, f, g, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2411([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2412([b, a, c, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_2416([g, k, f, l, j, h, d, a, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2404([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2405([b, a, c, d, f, g, h, e, i, j, k, l], is_dual)
    } else {
        select_2411([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2386([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_2387([a, c, b, e, d, f, g, i, k, h, j, l], is_dual)
    } else {
        select_2404([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2360([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_2361([a, c, d, e, b, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2386([a, c, d, e, g, i, k, h, l, j, b, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2314([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2315([a, b, d, e, f, g, h, c, i, j, k, l, m], is_dual)
    } else {
        select_2360([a, b, d, c, e, f, h, g, j, i, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2427([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_20([e, d, b, c, g, f, i], is_dual)
    } else {
        select_1903([f, a, d, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2426([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_56([f, b, d, a, e, h, g, j], is_dual)
    } else {
        select_2427([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2425([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_760([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2426([f, e, j, k, a, h, i, b, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2424([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2425([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2425([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2431([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_367([b, c, d, a, f, e, g, h], is_dual)
    } else {
        select_96([b, e, d, a, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2430([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2431([a, b, c, g, f, e, h, i], is_dual)
    } else {
        select_681([c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2429([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2430([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_450([c, b, f, h, i, a, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_2428([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2429([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_2429([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2423([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2424([a, b, h, i, k, c, j, f, g, d, e], !is_dual)
    } else {
        select_2428([a, b, h, c, k, i, j, f, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2436([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_567([a, d, b, c, e, f, g], is_dual)
    } else {
        select_464([a, e, c, b, f, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2437([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_140([a, c, d, b, e, g, f], is_dual)
    } else {
        select_269([a, c, f, b, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2435([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2436([a, b, c, d, e, f, h, g], is_dual)
    } else {
        select_2437([a, b, c, d, e, g, h, f], is_dual)
    }
}
/// n = 9, i = 4
fn select_2438([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_114([a, c, d, f, e, g], is_dual)
    } else {
        select_297([f, h, d, i, b, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2434([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2435([a, g, h, i, e, c, b, f], !is_dual)
    } else {
        select_2438([g, i, h, e, b, c, f, a, d], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2439([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_926([a, d, b, e, f, c, g, h], is_dual)
    } else {
        select_1124([a, d, c, e, b, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2433([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2434([a, b, c, d, e, f, h, i, g], is_dual)
    } else {
        select_2439([a, h, i, e, b, g, f, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2432([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2433([a, b, d, e, c, f, g, h, i], is_dual)
    } else {
        select_2433([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2422([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2423([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_2432([a, b, c, i, j, g, h, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2443([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_507([a, f, h, i, e, b, g], !is_dual)
    } else {
        select_1107([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2444([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_507([a, f, h, i, e, b, g], !is_dual)
    } else {
        select_500([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2442([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2443([a, b, d, g, e, i, f, h, j], is_dual)
    } else {
        select_2444([a, b, c, f, e, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2447([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_56([f, c, d, a, e, h, g, j], is_dual)
    } else {
        select_2284([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2446([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < d) || (is_dual && a > d) {
        select_2447([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_198([b, c, e, a, f, d, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2445([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_509([a, c, d, b, e, g, f, i, h], is_dual)
    } else {
        select_2446([a, b, d, c, e, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2441([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2442([a, c, e, d, f, g, h, b, i, j], is_dual)
    } else {
        select_2445([a, c, b, e, d, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2452([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_55([a, c, d, f, g, i, h], is_dual)
    } else {
        select_632([g, b, c, e, f, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2453([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_55([e, h, f, g, a, c, b], !is_dual)
    } else {
        select_147([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2451([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2452([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_2453([i, j, k, d, e, a, h, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2454([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_38([a, c, f, e, g, h, d], is_dual)
    } else {
        select_1466([c, b, a, e, f, d, h, i, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_2450([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2451([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2454([g, k, e, d, h, i, f, b, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2457([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_40([a, c, g, f, e, i, h], is_dual)
    } else {
        select_40([c, b, h, d, f, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2456([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2457([a, b, c, e, d, f, h, g, j, i], is_dual)
    } else {
        select_2453([h, j, k, d, e, a, i, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2455([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_37([b, a, c, d, e, g, f, h, i, k], is_dual)
    } else {
        select_2456([a, b, c, e, f, g, h, d, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2449([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2450([f, j, k, e, g, i, a, b, h, c, d], !is_dual)
    } else {
        select_2455([e, j, k, a, f, g, i, b, h, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2448([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2449([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2449([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2440([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_2441([a, b, c, j, k, f, g, i, h, d], !is_dual)
    } else {
        select_2448([a, b, f, j, k, c, g, i, h, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2422([a, b, c, g, k, d, i, j, e, h, f], !is_dual)
    } else {
        select_2440([a, b, c, i, k, d, g, j, h, e, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2464([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_464([a, g, b, h, d, j], is_dual)
    } else {
        select_576([a, d, c, f, e, g, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2463([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2464([h, b, a, e, d, g, i, k, l, j], is_dual)
    } else {
        select_2464([g, c, a, f, d, h, i, j, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2466([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_269([g, b, h, a, j], is_dual)
    } else {
        select_512([b, d, a, c, e, f, g, i, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2465([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_192([a, b, g, d, f, h, j, i, k], is_dual)
    } else {
        select_2466([a, b, i, c, e, h, k, g, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2462([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2463([d, b, c, g, e, f, a, h, i, k, l, j], is_dual)
    } else {
        select_2465([b, a, c, d, f, g, h, e, i, j, l, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2469([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_177([b, c, g, f, d, i, h], is_dual)
    } else {
        select_2233([b, a, d, f, e, h, g, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2468([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_38([h, i, d, g, j, a, f], !is_dual)
    } else {
        select_2469([b, c, a, d, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2467([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2468([a, c, d, b, e, f, g, h, i, k, j], is_dual)
    } else {
        select_2468([b, d, c, a, f, e, h, g, j, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2461([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2462([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2467([a, b, g, c, i, f, j, h, e, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2473([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_91([a, f, b, d, e, h, i], is_dual)
    } else {
        select_91([a, e, c, d, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2474([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_89([c, d, g, e, f, i, j], is_dual)
    } else {
        select_26([a, b, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2472([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2473([e, c, d, a, f, g, h, i, j], is_dual)
    } else {
        select_2474([b, a, c, d, f, g, e, j, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2471([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_471([a, b, h, c, f, j, e, k], is_dual)
    } else {
        select_2472([a, c, b, d, f, e, g, i, k, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2477([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_209([a, b, d, e, g, h, j], is_dual)
    } else {
        select_431([b, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2478([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_234([a, e, c, d, g, f, h], is_dual)
    } else {
        select_464([a, b, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2476([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2477([b, f, e, c, d, h, g, j, i, k], is_dual)
    } else {
        select_2478([a, g, c, d, e, h, f, i, j, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2480([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_39([d, i, a, f, h, e], !is_dual)
    } else {
        select_1923([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2481([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_567([b, c, d, e, f, h, g], is_dual)
    } else {
        select_57([e, i, j, a, f, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2479([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2480([a, d, f, e, b, i, h, g, j], is_dual)
    } else {
        select_2481([a, c, d, b, e, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_2475([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2476([b, c, d, f, e, g, h, i, k, j, l, m], is_dual)
    } else {
        select_2479([b, a, c, j, g, h, f, l, m, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_2470([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_2471([a, b, c, i, g, h, j, k, l, f, m], is_dual)
    } else {
        select_2475([b, a, c, d, e, g, f, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_2460([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2461([a, b, c, e, f, h, i, j, k, l, g, m], is_dual)
    } else {
        select_2470([a, b, c, d, e, f, g, h, i, k, l, j, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_2486([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_269([e, g, b, f, d], is_dual)
    } else {
        select_57([a, d, c, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2485([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_192([c, b, a, d, e, g, f, h, i], is_dual)
    } else {
        select_2486([g, f, j, a, i, b, c, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2488([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_632([d, b, c, g, f, j, h], is_dual)
    } else {
        select_576([d, g, k, e, i, h, a, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2487([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_776([a, b, d, e, g, j, k, i, m], is_dual)
    } else {
        select_2488([l, j, m, a, i, k, e, h, f, b, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2484([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2485([a, h, b, d, g, j, e, i, l, m], is_dual)
    } else {
        select_2487([a, b, d, c, e, g, f, i, h, k, l, j, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2491([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_519([a, b, f, d, g, h, e, j], is_dual)
    } else {
        select_466([h, i, j, d, g, a, e, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2490([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2491([a, c, b, d, f, e, g, h, k, i], is_dual)
    } else {
        select_2481([h, j, k, g, d, e, i, a, f, b], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2489([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2476([b, c, d, f, e, g, h, i, k, j, l, m], is_dual)
    } else {
        select_2490([l, k, n, g, f, m, a, b, h, c, j], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2483([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2484([a, b, c, e, g, h, i, j, k, f, l, m, n], is_dual)
    } else {
        select_2489([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_2495([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_128([e, c, d, a, f, g], is_dual)
    } else {
        select_209([b, a, c, d, e, f, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_2494([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_258([a, e, c, d, h, f, g, j], is_dual)
    } else {
        select_2495([a, b, f, g, e, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2493([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2494([a, c, b, d, f, e, g, h, i, k, j], is_dual)
    } else {
        select_1314([a, b, c, g, f, i, h, j, e], is_dual)
    }
}
/// n = 9, i = 3
fn select_2497([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_559([a, b, e, d, f, h, g, i], is_dual)
    } else {
        select_2392([a, b, c, g, e, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2497([e, g, j, k, f, i, a, b, h], !is_dual)
    } else {
        select_1307([b, a, c, d, f, e, g, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2492([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_2493([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2496([h, j, e, l, a, i, b, k, f, g, c], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2482([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_2483([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2492([a, b, c, i, f, h, k, j, l, g, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2459([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_2460([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2482([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2458([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2459([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2459([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2420([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_2421([a, b, c, l, n, j, d, h, e, m, k], !is_dual)
    } else {
        select_2458([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2313([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_2314([a, b, c, d, e, g, j, i, h, k, l, m, n], is_dual)
    } else {
        select_2420([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_2506([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_519([g, i, h, d, e, a, f, b], !is_dual)
    } else {
        select_1162([a, c, b, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2505([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_38([e, h, f, d, g, c, b], !is_dual)
    } else {
        select_2506([h, i, g, d, e, f, a, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2508([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_564([a, b, e, d, g, h, i, f], is_dual)
    } else {
        select_43([h, g, j, d, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2507([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1153([d, e, c, a, f, g, h, i], is_dual)
    } else {
        select_2508([b, a, c, d, f, e, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2504([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_2505([i, j, d, e, h, g, a, b, f], !is_dual)
    } else {
        select_2507([a, b, c, e, d, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2510([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_204([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_864([c, b, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2512([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_287([a, c, e, d, f, h], is_dual)
    } else {
        select_124([a, b, f, d, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2511([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2506([b, a, c, f, d, g, h, e, i], is_dual)
    } else {
        select_2512([d, h, i, e, f, g, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2509([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2510([d, c, b, f, g, i, e, h, k], is_dual)
    } else {
        select_2511([a, c, e, d, h, g, f, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2503([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2504([a, c, b, d, g, f, h, i, j, e], is_dual)
    } else {
        select_2509([c, b, a, d, f, g, e, h, j, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2516([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_564([a, b, f, d, g, h, e, j], is_dual)
    } else {
        select_111([e, a, c, d, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2515([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_149([d, a, c, b, e, f, g, h, i], is_dual)
    } else {
        select_2516([c, b, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2514([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_903([h, a, j, e, i, g, b, f], !is_dual)
    } else {
        select_2515([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2518([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_38([g, f, d, a, h, b, e], !is_dual)
    } else {
        select_1037([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2520([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_162([a, b, f, e, d, h, i], is_dual)
    } else {
        select_124([b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2521([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_124([a, b, e, f, d, h, i], is_dual)
    } else {
        select_96([b, c, d, f, g, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_2519([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2520([b, a, c, e, d, f, h, i, g], is_dual)
    } else {
        select_2521([h, i, d, e, g, a, b, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2517([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2518([e, j, i, h, g, a, b, f, d], !is_dual)
    } else {
        select_2519([a, c, b, e, h, g, i, j, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2513([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2514([a, c, d, b, e, f, g, j, i, h], is_dual)
    } else {
        select_2517([j, i, k, g, e, a, f, h, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2502([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2503([c, b, d, e, g, f, h, a, i, j, k], is_dual)
    } else {
        select_2513([e, i, j, k, g, f, a, h, b, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2526([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_730([a, g, c, d, e, f, h, k, j], is_dual)
    } else {
        select_730([b, f, c, d, e, g, h, k, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2525([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2526([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_36([k, a, l, g, i], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2528([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_91([e, c, d, a, f, g, h], is_dual)
    } else {
        select_512([b, d, a, c, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2527([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_520([b, a, c, e, d, f, g, j, h, i], is_dual)
    } else {
        select_2528([i, j, k, g, e, d, b, a, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2524([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2525([a, c, d, e, h, f, g, i, l, j, k, m], is_dual)
    } else {
        select_2527([j, k, m, f, g, l, a, h, b, c, i], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2530([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2415([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1065([a, b, f, d, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2533([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_21([f, b, a, e, h, i], is_dual)
    } else {
        select_26([g, c, d, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2532([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_91([e, c, d, a, f, g, h], is_dual)
    } else {
        select_2533([d, c, a, b, f, e, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2531([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2532([i, k, j, g, e, d, b, a, h], !is_dual)
    } else {
        select_877([b, d, c, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2529([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2530([b, a, c, e, d, f, g, h, i], is_dual)
    } else {
        select_2531([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2523([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2524([a, b, c, d, e, f, h, g, i, k, l, j, m], is_dual)
    } else {
        select_2529([k, l, m, f, h, g, a, b, j, i, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2537([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_34([b, c, d, a, f, e, h, g, i], is_dual)
    } else {
        select_512([h, i, k, j, e, f, a, b, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2538([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_140([b, c, d, e, f, h, g], is_dual)
    } else {
        select_145([a, b, c, g, e, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2537([h, i, j, k, e, f, g, b, a, c, d], !is_dual)
    } else {
        select_2538([i, j, k, h, f, e, a, b, g], !is_dual)
    }
}
/// n = 7, i = 2
fn select_2540([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_490([a, b, c, d, e, f, g], is_dual)
    } else {
        select_490([a, b, c, d, e, g, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2542([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_35([e, c, d, g, f, i], is_dual)
    } else {
        select_41([i, j, a, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2542([a, b, c, d, e, g, h, f, j, i], is_dual)
    } else {
        select_870([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2539([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2540([e, c, d, a, f, g, h], is_dual)
    } else {
        select_2541([b, a, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2535([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_2536([g, h, j, k, e, f, i, a, b, c, d], !is_dual)
    } else {
        select_2539([b, a, c, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2534([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2524([a, b, c, d, e, g, h, f, i, k, l, j, m], is_dual)
    } else {
        select_2535([k, l, f, m, g, h, a, b, j, i, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2522([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2523([c, a, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_2534([c, b, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2501([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2502([a, l, g, m, b, h, j, k, c, d, i], !is_dual)
    } else {
        select_2522([a, b, c, d, e, f, h, g, i, k, l, j, m], is_dual)
    }
}
/// n = 12, i = 5
fn select_2546([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_501([a, e, c, f, d, g, h, i, j, k], is_dual)
    } else {
        select_497([a, e, j, h, l, f, k, b, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2547([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_926([a, b, f, h, e, i, j, k], is_dual)
    } else {
        select_505([a, e, c, d, g, h, f, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2545([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_2546([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_2547([a, b, d, e, c, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2544([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < b) || (is_dual && d > b) {
        select_1048([a, c, b, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_2545([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2550([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_1141([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1259([a, b, j, k, l, c, i, g, h, d], !is_dual)
    }
}
/// n = 8, i = 1
fn select_2552([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_99([e, a, b, c, d, f, g, h], is_dual)
    } else {
        select_109([e, h, a, b, f, g], is_dual)
    }
}
/// n = 9, i = 2
fn select_2551([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_243([a, c, g, e, f, b, h, i], is_dual)
    } else {
        select_2552([b, d, e, f, a, c, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_2549([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2550([a, b, c, e, d, h, g, j, k, i, l, m], is_dual)
    } else {
        select_2551([a, b, d, f, c, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2548([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2549([a, b, c, d, f, e, i, h, j, g, k, l, m], is_dual)
    } else {
        select_2549([a, b, c, e, f, d, i, g, j, h, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2543([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_2544([a, b, c, d, i, e, h, j, k, l, g, m], is_dual)
    } else {
        select_2548([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2500([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2501([a, b, c, d, f, i, g, h, k, m, j, n, l], is_dual)
    } else {
        select_2543([a, g, b, c, e, f, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 7, i = 3
fn select_2559([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_39([d, g, a, e, f, b], !is_dual)
    } else {
        select_586([e, g, d, f, a, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2560([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_87([b, c, a, d, f, e, h], is_dual)
    } else {
        select_187([a, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2559([a, b, h, d, i, e, g], is_dual)
    } else {
        select_2560([a, e, c, g, d, f, h, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2561([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2560([a, e, c, g, d, f, h, j, i], is_dual)
    } else {
        select_1363([d, i, k, g, e, a, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2557([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2558([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2561([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2562([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_862([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_1486([f, a, b, h, e, i, g, d, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2556([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2557([a, c, b, d, f, e, j, g, h, k, i], is_dual)
    } else {
        select_2562([b, a, c, d, e, f, g, j, i, k, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_2567([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_33([a, c, d, e, h, g, j], is_dual)
    } else {
        select_33([b, c, d, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2566([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_137([a, g, c, d, e, h, j, k], is_dual)
    } else {
        select_2567([a, b, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2565([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2566([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2566([a, b, c, d, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2569([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_137([a, i, d, e, f, h, k, l], is_dual)
    } else {
        select_275([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2570([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_39([d, i, a, f, h, b], !is_dual)
    } else {
        select_2072([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2568([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2569([a, b, c, d, e, f, g, h, i, k, j, m], is_dual)
    } else {
        select_2570([k, l, i, f, g, b, a, j, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2564([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2565([c, g, d, e, f, a, h, i, k, j, l], is_dual)
    } else {
        select_2568([c, b, a, d, e, f, g, i, h, j, k, m, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2563([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2564([c, a, d, e, f, g, b, h, i, j, k, l, m], is_dual)
    } else {
        select_2564([c, b, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2555([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2556([g, l, m, j, h, k, b, c, a, d, i], !is_dual)
    } else {
        select_2563([b, c, d, a, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 10, i = 2
fn select_2573([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1111([c, d, e, f, b, g, h, j, i], is_dual)
    } else {
        select_378([c, d, b, a, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_2576([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_309([a, b, c, h, f, g, i, j, k], is_dual)
    } else {
        select_1225([a, b, d, e, g, f, i, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2577([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_309([a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_52([a, b, c, i, f, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_2575([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2576([a, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2577([a, b, c, e, f, g, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2574([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_722([d, b, c, f, g, h, j, k, i], is_dual)
    } else {
        select_2575([a, d, f, e, b, c, h, g, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_2572([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2573([f, e, b, g, c, d, i, h, j, k], is_dual)
    } else {
        select_2574([a, c, d, e, b, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2581([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2050([a, b, c, e, f, d, g, h, i], is_dual)
    } else {
        select_355([b, d, c, f, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2580([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_38([b, a, f, d, g, h, e], is_dual)
    } else {
        select_2581([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2579([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2580([a, b, h, i, g, j, k, f, l], is_dual)
    } else {
        select_1882([b, f, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2578([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2579([c, a, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_2579([c, b, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2571([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_2572([c, d, a, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2578([a, b, c, e, i, d, g, h, k, l, m, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_2554([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_2555([a, c, d, b, e, i, g, j, k, m, h, n, l], is_dual)
    } else {
        select_2571([c, d, a, f, e, b, g, i, h, j, l, k, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_2586([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_599([d, h, i, a, g, e, f, b], !is_dual)
    } else {
        select_599([d, h, i, a, g, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2589([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_21([f, b, c, e, h, g], is_dual)
    } else {
        select_26([i, d, j, a], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2588([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2589([j, f, k, g, i, d, h, a, b, e], !is_dual)
    } else {
        select_44([b, d, c, f, g, e, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2590([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_287([a, b, h, e, f, j], is_dual)
    } else {
        select_34([a, d, f, c, e, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2587([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2588([j, e, l, h, k, a, f, i, g, c, b], !is_dual)
    } else {
        select_2590([b, a, c, d, g, e, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2585([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_2586([a, d, h, e, f, b, j, l, i], is_dual)
    } else {
        select_2587([a, c, d, b, e, f, g, i, h, k, j, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2593([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_43([d, e, h, a, b, g, f], !is_dual)
    } else {
        select_193([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_2592([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1868([f, j, d, k, a, b, i, h], !is_dual)
    } else {
        select_2593([a, d, c, f, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2594([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_1065([a, b, c, d, e, f, g], is_dual)
    } else {
        select_1053([a, b, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2592([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_2594([a, d, c, f, g, e, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2584([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2585([a, b, c, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2591([f, l, m, i, k, a, b, j, h, d, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2598([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_586([c, b, e, f, g, d, i], is_dual)
    } else {
        select_141([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2597([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_38([f, e, i, d, g, b, c], !is_dual)
    } else {
        select_2598([a, c, b, f, e, g, d, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2599([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_453([d, a, c, e, g, i], is_dual)
    } else {
        select_178([e, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2596([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2597([d, i, j, a, e, f, h, b, g], !is_dual)
    } else {
        select_2599([a, b, c, f, d, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2602([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_278([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_464([a, k, j, i, f, b], !is_dual)
    }
}
/// n = 11, i = 3
fn select_2603([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_278([b, c, d, e, g, i, h, j], is_dual)
    } else {
        select_52([a, j, b, f, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2601([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2602([a, g, c, d, e, h, f, i, j, k, l], is_dual)
    } else {
        select_2603([a, b, c, d, e, f, g, i, h, j, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_2604([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_1224([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_591([a, b, h, f, g, c, i, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_2600([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_2601([a, d, c, e, g, f, h, i, k, l, j, n], is_dual)
    } else {
        select_2604([a, b, c, e, i, f, g, j, m, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_2595([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2596([a, j, e, f, l, b, h, i, n, k], is_dual)
    } else {
        select_2600([a, c, d, e, b, f, g, h, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2583([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_2584([a, b, c, d, h, f, i, g, l, j, m, n, k], is_dual)
    } else {
        select_2595([a, b, c, d, e, f, g, h, i, j, l, k, n, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2609([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_303([b, a, c, d, e, f, g, h, j, i], is_dual)
    } else {
        select_355([a, i, j, e, h, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2608([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_354([e, b, c, d, f, g, h, i], is_dual)
    } else {
        select_2609([e, h, j, k, g, i, a, f, b, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2610([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1902([a, b, c, f, e, g, h, i], is_dual)
    } else {
        select_412([a, b, d, g, e, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2607([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2608([a, c, b, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_2610([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2612([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_258([b, c, a, d, e, f, g, i], is_dual)
    } else {
        select_233([a, e, b, g, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2611([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_926([f, e, j, a, h, i, b, g], !is_dual)
    } else {
        select_2612([a, b, c, d, f, e, g, i, h, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_2606([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2607([a, d, c, j, f, l, g, m, i, k, n], is_dual)
    } else {
        select_2611([a, b, i, e, f, k, h, n, j, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_2617([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_89([b, c, d, e, f, g, h], is_dual)
    } else {
        select_26([a, j, k, i], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2616([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_355([b, g, c, f, e, h], is_dual)
    } else {
        select_2617([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2619([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_21([i, k, j, d, h, a], !is_dual)
    } else {
        select_35([e, b, c, g, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2620([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_35([e, i, j, a, h, b], !is_dual)
    } else {
        select_36([b, c, d, g, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_2618([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2619([j, k, l, h, e, i, a, f, b, c, g], !is_dual)
    } else {
        select_2620([a, c, d, f, e, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2615([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2616([a, b, d, h, f, g, e, i, j, k, l], is_dual)
    } else {
        select_2618([a, b, c, d, e, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2614([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2615([a, c, b, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2610([a, b, c, g, e, i, f, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2622([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_126([e, f, i, j, a, h, b, c], !is_dual)
    } else {
        select_342([e, b, c, d, f, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2621([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2622([a, b, f, d, e, h, g, j, k, l], is_dual)
    } else {
        select_1023([b, c, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_2613([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_2614([a, c, d, b, f, g, j, k, m, i, l, n], is_dual)
    } else {
        select_2621([a, b, g, e, f, i, h, l, k, j, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2605([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2606([a, b, e, d, c, f, i, h, j, g, m, l, k, n], is_dual)
    } else {
        select_2613([a, c, d, e, b, f, i, g, j, h, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2582([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_2583([a, b, e, d, c, f, i, h, j, k, m, g, n, l], is_dual)
    } else {
        select_2605([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2553([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2554([b, c, a, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_2582([b, c, d, e, f, g, h, i, j, a, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2499([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_2500([a, b, d, c, f, e, h, i, j, k, l, g, m, n], is_dual)
    } else {
        select_2553([a, c, b, d, e, f, h, g, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2498([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2499([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2499([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2312([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < n) || (is_dual && h > n) {
        select_2313([a, b, c, d, e, f, g, i, j, k, l, m, n, h], is_dual)
    } else {
        select_2498([a, b, c, e, d, f, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2311([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2312([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_2312([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2633([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_104([c, d, e, f, i], is_dual)
    } else {
        select_219([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2634([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_278([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_233([a, f, c, d, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2632([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2633([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_2634([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2631([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1439([a, b, h, j, i, g, f, c], !is_dual)
    } else {
        select_2632([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2630([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2631([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_1799([a, b, d, f, h, g, c, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_2637([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_1440([a, b, f, c, g], is_dual)
    } else {
        select_606([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_2636([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_452([a, b, c, f, d, g], is_dual)
    } else {
        select_2637([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2635([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2636([a, b, g, i, e, c, h], !is_dual)
    } else {
        select_611([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2629([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2630([a, b, d, c, e, f, g, h, i, j], is_dual)
    } else {
        select_2635([a, b, h, j, f, g, c, i, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2628([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2629([a, b, c, e, f, g, d, h, i, j], is_dual)
    } else {
        select_2629([a, b, d, e, f, g, c, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2643([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_43([a, b, g, e, h, f, i], is_dual)
    } else {
        select_496([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2642([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_1892([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_2643([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2641([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2642([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_453([b, a, g, f, h, c], is_dual)
    }
}
/// n = 9, i = 3
fn select_2640([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2641([a, c, d, e, f, b, g, h, i], is_dual)
    } else {
        select_2641([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2646([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_999([b, c, d, e, a, f, g, h, j], is_dual)
    } else {
        select_999([a, c, d, e, b, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2645([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2646([e, f, h, c, d, g, i, j, k, l], is_dual)
    } else {
        select_1376([e, f, c, d, a, b, g, i, h, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_2648([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_95([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_356([a, f, d, e, b, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_2647([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2648([a, b, g, e, f, c, h, i], is_dual)
    } else {
        select_333([c, d, e, f, a, b, g, h, i], is_dual)
    }
}
/// n = 13, i = 4
fn select_2644([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2645([d, e, f, h, b, c, a, i, j, k, l, m], is_dual)
    } else {
        select_2647([a, b, c, g, f, i, h, k, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_2639([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_2640([a, b, d, e, c, j, l, m, i], is_dual)
    } else {
        select_2644([a, b, c, d, e, f, g, h, i, j, k, n, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2651([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1410([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_662([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_2653([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_126([a, g, c, d, e, h, i, j], is_dual)
    } else {
        select_919([a, c, b, e, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2652([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2653([a, d, b, c, e, f, h, g, i, k], is_dual)
    } else {
        select_2417([a, b, c, f, e, h, j, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2650([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_2651([a, b, c, h, e, j, k, g], is_dual)
    } else {
        select_2652([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2657([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_87([a, g, b, e, h, f, j], is_dual)
    } else {
        select_27([c, d, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2658([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_653([a, c, d, g, f, h, j], is_dual)
    } else {
        select_464([h, i, j, a, e, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2656([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2657([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_2658([a, f, c, d, g, h, e, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2661([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_35([f, h, i, a, g, b], !is_dual)
    } else {
        select_36([b, c, d, e, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_2660([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_209([e, b, c, d, f, g, h], is_dual)
    } else {
        select_2661([e, h, i, j, a, f, g, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2659([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_295([a, b, c, f, e, g, h], is_dual)
    } else {
        select_2660([a, d, b, c, e, f, h, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2655([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2656([a, d, b, c, e, f, g, h, i, k, l], is_dual)
    } else {
        select_2659([a, b, c, f, e, g, j, h, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2654([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2655([a, b, c, d, e, f, h, g, i, j, l, k], is_dual)
    } else {
        select_2651([a, b, c, h, e, j, k, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_2649([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2650([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_2654([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2638([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < b) || (is_dual && l > b) {
        select_2639([a, c, b, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2649([a, c, d, e, h, j, i, l, k, b, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2627([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_2628([a, b, d, e, c, j, l, n, m, i], is_dual)
    } else {
        select_2638([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2626([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_2627([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_2627([a, b, c, d, e, f, g, h, i, j, k, m, n, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_2670([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_21([a, c, d, e, f, h], is_dual)
    } else {
        select_21([b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2669([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_43([h, g, j, a, f, e, d], !is_dual)
    } else {
        select_2670([a, b, c, e, g, h, i, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2668([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_478([d, g, b, c, e, f, i, k], is_dual)
    } else {
        select_2669([d, h, j, k, i, e, g, f, a, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2672([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_39([h, f, a, g, d, b], !is_dual)
    } else {
        select_187([a, f, c, e, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2671([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_38([a, b, e, d, g, h, i], is_dual)
    } else {
        select_2672([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2667([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2668([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2671([d, e, k, h, i, f, g, a, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2674([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_927([d, f, i, e, h, a, c], !is_dual)
    } else {
        select_2054([d, g, e, i, h, f, a, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2676([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_464([g, b, c, e, f, i], is_dual)
    } else {
        select_44([g, h, j, d, e, i, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2677([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_632([g, b, c, e, f, j, i], is_dual)
    } else {
        select_44([g, h, k, d, e, i, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2675([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2676([a, b, c, d, f, g, e, h, i, k], is_dual)
    } else {
        select_2677([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2673([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2674([a, b, g, d, f, h, e, i, k], is_dual)
    } else {
        select_2675([b, a, c, d, f, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2666([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2667([g, k, l, a, h, j, i, b, e, f, c], !is_dual)
    } else {
        select_2673([h, k, l, a, g, i, j, b, f, e, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2680([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_1108([f, i, h, j, a, e, g, c, d], !is_dual)
    } else {
        select_41([e, i, h, a, b], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2679([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2680([k, l, j, m, g, a, h, b, i, c], !is_dual)
    } else {
        select_232([a, d, h, e, g, f, j, i, k, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2683([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_109([d, c, b, e, f, g], is_dual)
    } else {
        select_490([a, b, f, d, e, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2682([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2683([a, e, c, g, d, f, j, h, i], is_dual)
    } else {
        select_56([h, a, b, i, d, e, g, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2684([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_349([f, a, b, d, g, e, j, i], is_dual)
    } else {
        select_1065([d, e, c, h, i, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2681([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2682([b, c, d, a, e, f, g, h, j, i, k], is_dual)
    } else {
        select_2684([a, c, d, b, e, f, h, g, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2678([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_2679([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_2681([b, a, c, e, g, f, h, j, i, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2665([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < m) || (is_dual && h > m) {
        select_2666([a, b, g, c, k, f, l, i, m, j, h, n], is_dual)
    } else {
        select_2678([a, b, f, d, e, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2689([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_519([a, b, c, e, f, h, i, j], is_dual)
    } else {
        select_182([b, c, d, h, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2688([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2278([a, b, g, f, h, i, e, j, k], is_dual)
    } else {
        select_2689([a, c, b, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2687([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2688([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_705([j, e, h, k, l, a, f, b, i], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2691([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_295([e, i, j, g, a, b, h], !is_dual)
    } else {
        select_232([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2690([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_684([e, i, j, g, a, b, c, h], !is_dual)
    } else {
        select_2691([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2686([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2687([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_2690([a, f, b, d, e, h, g, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2694([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_172([a, e, c, f, d, h], is_dual)
    } else {
        select_56([b, c, a, e, d, f, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2696([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_297([b, c, e, f, g, h], is_dual)
    } else {
        select_297([a, c, d, g, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2695([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1902([f, c, b, e, a, g, h, i], is_dual)
    } else {
        select_2696([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2693([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2694([f, j, i, a, h, b, g, d, c], !is_dual)
    } else {
        select_2695([a, d, c, b, e, f, h, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2698([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_131([a, b, f, d, g, h, e], is_dual)
    } else {
        select_1650([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2697([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2698([e, f, i, a, g, h, b, c, d], !is_dual)
    } else {
        select_2698([e, g, i, a, f, h, b, d, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2692([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2693([h, g, d, j, k, a, i, e, f, b], !is_dual)
    } else {
        select_2697([g, h, i, j, a, d, e, f, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2685([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < h) || (is_dual && l > h) {
        select_2686([a, e, c, d, g, i, h, f, j, k, m, l], is_dual)
    } else {
        select_2692([a, b, f, i, e, j, g, k, l, m, h], is_dual)
    }
}
/// n = 14, i = 5
fn select_2664([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2665([b, a, c, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    } else {
        select_2685([b, f, d, e, h, g, i, a, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2702([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_257([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_409([a, g, b, c, d, h, i, f], is_dual)
    }
}
/// n = 13, i = 5
fn select_2701([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_1235([a, b, d, e, h, i, g, j, m, k, l], is_dual)
    } else {
        select_2702([a, l, i, m, h, k, b, f, c], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2703([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1235([a, b, e, f, j, k, g, i, n, l, m], is_dual)
    } else {
        select_532([a, m, k, n, j, l, b, h, c, d], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2700([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2701([a, b, c, e, f, h, g, j, k, i, m, l, n], is_dual)
    } else {
        select_2703([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_2704([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_608([a, b, c, i, g, d, h, f, e], !is_dual)
    } else {
        select_608([a, b, c, i, h, d, g, f, e], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2699([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_2700([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_2704([a, b, l, n, k, h, c, m, d], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2663([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2664([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    } else {
        select_2699([a, b, d, c, e, f, h, g, k, i, j, l, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_2710([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_43([a, b, g, e, f, h, i], is_dual)
    } else {
        select_357([a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2709([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_260([b, a, d, e, f, c, g, i, h], is_dual)
    } else {
        select_2710([b, c, d, e, f, a, g, h, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2708([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_501([a, g, c, h, d, f, j, i, k, m], is_dual)
    } else {
        select_2709([k, l, g, j, m, a, h, e, i, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2712([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_342([a, e, c, d, g, f, h], is_dual)
    } else {
        select_478([g, i, j, e, a, b, h, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2714([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_114([d, b, c, e, f, g], is_dual)
    } else {
        select_145([h, e, f, d, g, a], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2713([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_799([d, g, i, f, h, a, b, e], !is_dual)
    } else {
        select_2714([b, a, c, d, f, h, e, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2711([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2712([a, e, d, c, g, f, i, h, j, k], is_dual)
    } else {
        select_2713([a, h, b, j, e, k, g, d, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2707([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2708([a, b, c, d, e, f, g, i, j, h, k, l, m], is_dual)
    } else {
        select_2711([a, b, d, h, e, f, g, j, i, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2717([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2408([d, a, c, g, e, h, i, j, k, f], is_dual)
    } else {
        select_465([a, e, b, f, d, j, g, k, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2716([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2717([a, b, c, d, e, h, f, g, i, j, k], is_dual)
    } else {
        select_2717([a, b, c, d, e, h, g, f, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2719([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_559([a, b, d, e, f, g, h, j], is_dual)
    } else {
        select_799([a, c, d, e, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2718([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1074([a, h, j, b, i, f, c, g, e], !is_dual)
    } else {
        select_2719([b, a, c, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2715([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2716([a, b, c, d, e, f, h, g, j, i, k], is_dual)
    } else {
        select_2718([g, k, f, j, l, a, h, i, d, b], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2706([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < i) || (is_dual && m > i) {
        select_2707([a, e, c, d, g, f, h, j, i, k, l, n, m], is_dual)
    } else {
        select_2715([a, f, b, k, e, l, j, m, g, n, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_2724([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_124([b, a, e, g, h, d, f], is_dual)
    } else {
        select_96([b, d, c, f, g, e], is_dual)
    }
}
/// n = 8, i = 3
fn select_2723([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2724([c, a, b, f, e, h, g, d], is_dual)
    } else {
        select_2724([c, b, a, f, d, h, g, e], is_dual)
    }
}
/// n = 13, i = 5
fn select_2726([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_87([c, g, d, h, j, f, i], is_dual)
    } else {
        select_1923([l, g, m, k, h, a, e, i, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2727([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_269([h, a, j, k, e], is_dual)
    } else {
        select_2542([b, e, c, d, g, f, i, h, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2725([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2726([b, a, c, d, e, f, h, g, i, j, l, m, k], is_dual)
    } else {
        select_2727([a, b, c, f, e, i, h, k, j, l, m, g], is_dual)
    }
}
/// n = 14, i = 5
fn select_2722([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < k) || (is_dual && e > k) {
        select_2723([b, k, a, m, n, f, e, h], is_dual)
    } else {
        select_2725([a, e, c, d, f, g, h, j, i, l, m, k, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2721([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2722([a, b, c, d, e, f, g, h, i, l, j, m, n, k], is_dual)
    } else {
        select_2722([a, b, c, d, e, f, g, h, i, l, k, m, n, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_2731([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([d, b, c, e, f], is_dual)
    } else {
        select_297([d, g, e, h, a, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2730([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_420([d, e, a, c, f, g], is_dual)
    } else {
        select_2731([b, a, c, d, e, g, h, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_2733([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_20([a, b, c, d, e, f, g], is_dual)
    } else {
        select_21([a, h, g, e, f, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2732([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1720([e, g, h, d, f, a, c], !is_dual)
    } else {
        select_2733([e, h, d, i, f, g, b, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2729([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2730([b, c, e, d, f, i, g, h], is_dual)
    } else {
        select_2732([a, c, g, d, h, f, e, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2736([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_564([h, j, i, e, f, a, b, g], !is_dual)
    } else {
        select_357([a, c, d, f, e, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2735([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_647([h, g, j, k, d, e, i, f, b, c], !is_dual)
    } else {
        select_2736([d, h, j, k, g, e, i, f, b, a], !is_dual)
    }
}
/// n = 14, i = 5
fn select_2734([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_494([e, c, i, d, h, k, g, j, l, n], is_dual)
    } else {
        select_2735([j, b, a, l, e, f, h, m, i, k, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2728([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < m) || (is_dual && i > m) {
        select_2729([b, a, j, l, e, m, f, h, n, i], is_dual)
    } else {
        select_2734([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2720([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2721([c, a, d, e, b, f, g, h, j, l, m, i, k, n], is_dual)
    } else {
        select_2728([c, b, d, e, a, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2705([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2706([b, c, d, e, f, g, h, a, i, j, k, l, m, n], is_dual)
    } else {
        select_2720([b, a, c, d, e, f, g, j, h, k, i, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2662([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_2663([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2705([a, c, d, e, f, g, h, i, b, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2625([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2626([a, b, d, c, e, f, g, i, h, k, j, l, m, n], is_dual)
    } else {
        select_2662([a, b, d, e, f, g, h, i, c, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_2743([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_513([c, a, b, e, g, f, h, j, i], is_dual)
    } else {
        select_2696([a, c, b, f, d, i, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2742([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2743([a, c, d, e, b, g, h, i, f, j], is_dual)
    } else {
        select_1806([b, f, c, d, e, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2745([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_295([f, h, i, j, a, b, g], !is_dual)
    } else {
        select_246([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2744([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2745([a, b, c, e, g, f, i, k, l, h], is_dual)
    } else {
        select_2604([a, d, c, b, e, f, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2741([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2742([a, d, c, e, g, f, h, i, j, k], is_dual)
    } else {
        select_2744([a, b, c, d, i, f, h, g, k, j, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2747([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_1798([a, c, d, b, e, f, h, g], is_dual)
    } else {
        select_2383([a, d, f, e, b, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2749([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_95([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_2034([b, f, d, e, a, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2748([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1581([j, k, l, f, a, h, b, i, g, c], !is_dual)
    } else {
        select_2749([a, f, c, d, e, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2746([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2747([f, a, c, d, i, g, j, h, k], is_dual)
    } else {
        select_2748([a, b, c, e, h, f, g, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2740([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_2741([b, a, c, d, e, g, f, h, i, j, k, l, m], is_dual)
    } else {
        select_2746([a, b, d, e, c, g, h, i, j, f, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_2752([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1272([a, c, b, h, f, i, g], is_dual)
    } else {
        select_1890([a, c, b, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2754([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_785([a, b, c, f, e, g, h, i], is_dual)
    } else {
        select_170([b, c, d, g, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2753([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1275([a, b, c, d, f, g, h, i, e, j, k], is_dual)
    } else {
        select_2754([b, c, d, a, f, e, g, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_2751([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2752([a, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_2753([f, j, l, m, a, g, b, k, h, c, i], !is_dual)
    }
}
/// n = 10, i = 3
fn select_2756([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2291([a, b, d, c, e, h, g, f, i, j], is_dual)
    } else {
        select_2291([a, c, d, b, e, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2757([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2030([a, c, e, d, f, g, h], is_dual)
    } else {
        select_980([i, j, e, k, b, a, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2755([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_2756([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2757([a, b, h, c, f, g, i, j, k, l, e], is_dual)
    }
}
/// n = 13, i = 5
fn select_2750([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2751([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2755([a, b, d, i, f, g, h, c, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2739([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2740([b, c, d, e, f, g, a, h, i, j, k, l, m], is_dual)
    } else {
        select_2750([b, a, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 3
fn select_2761([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_295([e, a, b, d, g, f, i], is_dual)
    } else {
        select_2034([a, c, b, f, e, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2760([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2761([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_996([g, h, a, j, k, e, i, b, f], !is_dual)
    }
}
/// n = 9, i = 2
fn select_2763([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_250([c, f, e, a, b, g, h], is_dual)
    } else {
        select_250([a, b, d, c, g, f, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_2762([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2763([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_949([f, b, c, e, h, g, a, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2759([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_2760([a, c, g, e, b, h, f, i, j, k, l], is_dual)
    } else {
        select_2762([a, c, d, b, e, f, h, g, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2758([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_1406([a, b, c, d, h, f, j, k, l, g, i], is_dual)
    } else {
        select_2759([a, b, d, e, c, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2738([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < c) || (is_dual && j > c) {
        select_2739([a, b, h, d, e, f, g, i, j, k, l, m, n], is_dual)
    } else {
        select_2758([a, b, c, d, e, g, h, i, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2737([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2738([a, b, d, e, f, g, c, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2738([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2624([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_2625([a, b, c, d, e, f, g, i, j, k, l, m, n, h], is_dual)
    } else {
        select_2737([a, b, c, e, f, d, g, i, h, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2623([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2624([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_2624([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2310([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2311([a, b, c, d, e, g, h, i, f, j, k, l, m, n], is_dual)
    } else {
        select_2623([a, b, c, d, e, f, h, i, g, j, k, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2773([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_167([c, a, d, b, e, f, g, i, h], is_dual)
    } else {
        select_544([a, b, c, d, e, f, h, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2772([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2773([a, d, b, e, f, c, g, h, i, j], is_dual)
    } else {
        select_2773([a, d, c, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2775([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_2646([b, c, g, e, f, a, h, i, j, k], is_dual)
    } else {
        select_333([a, d, e, f, b, c, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2777([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1142([a, c, d, e, f, b, g, i], is_dual)
    } else {
        select_1142([a, b, d, e, f, c, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2776([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_587([a, h, i, b, c, d, g], !is_dual)
    } else {
        select_2777([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2774([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2775([a, b, c, f, d, e, g, h, k, l, i], is_dual)
    } else {
        select_2776([b, a, d, e, c, g, i, j, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2771([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2772([b, c, d, e, a, g, j, i, l, h], is_dual)
    } else {
        select_2774([b, a, e, c, d, f, g, h, j, l, k, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2781([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_178([b, c, d, g, e, f, h, i], is_dual)
    } else {
        select_2593([h, g, j, b, a, i, e, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2782([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_38([b, a, f, d, g, h, i], is_dual)
    } else {
        select_2593([a, b, c, d, e, f, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2780([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2781([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_2782([g, i, j, a, b, e, h, c, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2785([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_43([a, c, f, d, e, h, i], is_dual)
    } else {
        select_124([a, b, e, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2787([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_21([b, f, d, e, h, i], is_dual)
    } else {
        select_26([a, c, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2786([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2787([b, a, d, c, e, g, f, h, j, i], is_dual)
    } else {
        select_124([f, b, d, a, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2784([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_2785([h, i, j, a, b, g, e, f, d], !is_dual)
    } else {
        select_2786([a, b, d, c, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2788([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_299([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_2041([c, b, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2783([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2784([b, a, c, d, i, g, j, k, l, h], is_dual)
    } else {
        select_2788([b, a, c, e, f, h, j, l, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2779([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2780([b, a, h, f, c, g, j, k, i, l], is_dual)
    } else {
        select_2783([a, b, c, f, d, e, g, i, h, k, j, l], is_dual)
    }
}
/// n = 9, i = 2
fn select_2791([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2168([a, b, c, d, h, g, i], is_dual)
    } else {
        select_169([b, c, e, f, g, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2790([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_737([a, b, e, c, d, h, g, j, k, i, l], is_dual)
    } else {
        select_2791([a, c, d, f, b, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2793([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2291([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_581([a, b, f, d, h, g, e, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2794([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_258([b, c, a, d, f, e, g, h], is_dual)
    } else {
        select_917([e, i, j, a, b, f, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2792([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2793([a, b, d, c, e, g, f, h, i, j], is_dual)
    } else {
        select_2794([a, b, g, c, e, h, f, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2789([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2790([a, b, c, d, f, e, g, h, j, i, k, l], is_dual)
    } else {
        select_2792([a, b, f, d, h, g, i, c, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2778([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2779([b, a, c, e, h, f, i, g, k, j, l, m], is_dual)
    } else {
        select_2789([a, b, c, d, g, f, i, j, h, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2770([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_2771([b, a, d, h, c, i, l, k, m, g, n, j], is_dual)
    } else {
        select_2778([d, a, b, e, f, c, h, i, g, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2769([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2770([a, c, b, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_2770([b, c, a, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2768([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2769([a, c, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2769([b, c, d, e, f, g, a, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2767([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2768([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    } else {
        select_2768([a, b, d, e, f, g, h, c, i, j, k, l, m, n], is_dual)
    }
}
/// n = 13, i = 5
fn select_2800([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_1827([a, b, d, c, i, g, j, k, l, h, m], is_dual)
    } else {
        select_1266([a, g, c, b, e, f, h, i, k, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_2799([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_678([a, b, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2800([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2802([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1266([a, f, b, g, d, e, h, i, k, j], is_dual)
    } else {
        select_2331([a, b, c, i, f, g, j, k, l, h, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2801([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_678([a, g, b, c, d, f, i, h, j, k], is_dual)
    } else {
        select_2802([a, b, e, c, d, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2798([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2799([a, b, c, d, e, f, h, g, i, j, k, l, m], is_dual)
    } else {
        select_2801([a, c, e, f, d, g, h, b, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_2805([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_354([a, b, d, f, e, h, j, g], is_dual)
    } else {
        select_269([a, c, g, i, f], is_dual)
    }
}
/// n = 12, i = 4
fn select_2804([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1191([a, c, d, e, h, g, j, i], is_dual)
    } else {
        select_2805([a, b, c, i, f, g, h, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2809([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_114([b, d, f, e, h, g], is_dual)
    } else {
        select_2204([a, c, g, e, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2808([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_1466([f, h, j, a, g, i, b, e, d], !is_dual)
    } else {
        select_2809([b, c, d, a, f, g, e, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2811([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_87([b, d, c, g, f, e, h], is_dual)
    } else {
        select_41([a, h, g, i, d], is_dual)
    }
}
/// n = 10, i = 4
fn select_2810([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1065([a, d, c, e, f, g, h], is_dual)
    } else {
        select_2811([b, c, a, d, e, f, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2807([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2808([a, b, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_2810([c, b, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2812([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_257([a, c, d, e, b, g, f, h], is_dual)
    } else {
        select_610([a, g, b, c, d, h, f, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2806([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2807([a, c, b, i, f, g, k, l, h, j], is_dual)
    } else {
        select_2812([a, c, d, e, h, f, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2803([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2804([a, d, b, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_2806([a, d, c, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2797([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_2798([a, b, e, d, f, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_2803([a, b, e, c, f, g, d, h, j, i, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2818([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_603([b, a, c, d, e, f, g, h, i], is_dual)
    } else {
        select_479([f, h, j, i, a, b, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2819([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_126([a, b, c, d, f, g, h, i], is_dual)
    } else {
        select_126([a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2817([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2818([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_2819([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2816([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_538([a, c, d, e, f, b, g, h], is_dual)
    } else {
        select_2817([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2815([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_1406([a, f, h, j, k, c, i, b, d, g, e], !is_dual)
    } else {
        select_2816([a, f, h, b, j, k, c, i, d, g], !is_dual)
    }
}
/// n = 13, i = 5
fn select_2820([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1002([a, b, c, h, d, f, j, g, i, k, l, m], is_dual)
    } else {
        select_1002([a, b, c, g, e, f, i, h, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2814([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_2815([a, j, b, c, d, f, k, l, g, i, m], is_dual)
    } else {
        select_2820([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2813([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2814([a, b, d, e, f, c, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2814([a, c, d, e, f, b, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2796([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2797([a, b, c, e, f, d, g, h, j, i, k, l, m], is_dual)
    } else {
        select_2813([a, b, c, e, f, g, h, i, j, d, k, l, m], is_dual)
    }
}
/// n = 8, i = 2
fn select_2827([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1142([a, c, d, e, f, b, g, h], is_dual)
    } else {
        select_560([a, b, d, e, f, c, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2826([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2827([a, b, c, d, e, f, h, i], is_dual)
    } else {
        select_1520([a, d, e, f, b, c, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2828([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_650([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_1788([a, b, c, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2825([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_2826([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_2828([a, c, d, e, f, g, h, b, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2831([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_145([c, h, i, d, a, g], !is_dual)
    } else {
        select_464([c, d, b, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_2830([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2391([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2831([e, j, a, g, i, f, h, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2829([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2830([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2830([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2824([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_2825([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2829([a, b, e, f, d, g, c, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2823([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_1398([a, b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_2824([a, b, c, e, f, g, d, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2822([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < d) || (is_dual && k > d) {
        select_1042([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2823([a, b, c, g, j, d, l, k, i, h], !is_dual)
    }
}
/// n = 7, i = 3
fn select_2837([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_54([d, g, e, a, b, f, c], !is_dual)
    } else {
        select_54([d, g, f, a, b, e, c], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2836([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2837([a, e, h, f, b, g, c], !is_dual)
    } else {
        select_798([a, b, c, d, e, g, f, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2840([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_137([b, e, c, d, f, g, h, i], is_dual)
    } else {
        select_2250([a, b, c, d, f, g, e, h, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2839([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2840([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_2078([i, e, j, k, h, a, f, b, g], !is_dual)
    }
}
/// n = 8, i = 2
fn select_2842([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_278([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_39([g, b, a, h, e, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_2841([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_126([b, e, c, d, f, g, h, i], is_dual)
    } else {
        select_2842([h, i, j, k, e, a, f, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2838([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2839([f, h, j, k, a, g, i, b, c, d, e], !is_dual)
    } else {
        select_2841([a, h, j, k, f, g, i, b, c, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2835([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2836([a, h, j, f, b, c, i, g], !is_dual)
    } else {
        select_2838([a, h, j, i, k, b, f, c, g, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2834([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_2816([a, h, f, b, j, k, g, i, c, d], !is_dual)
    } else {
        select_2835([a, f, h, j, k, g, i, b, c, d, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2833([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_523([a, b, h, j, k, f, g, c, i, d], !is_dual)
    } else {
        select_2834([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_2832([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2833([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_2833([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2821([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2822([a, b, c, d, g, f, i, h, j, m, k, l], is_dual)
    } else {
        select_2832([a, b, c, d, e, j, k, l, g, i, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2795([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_2796([a, b, c, d, f, e, g, h, i, j, k, l, m], is_dual)
    } else {
        select_2821([a, b, c, d, f, g, h, i, j, k, e, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2766([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_2767([a, b, c, d, f, e, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2795([a, b, c, d, f, i, g, k, j, e, l, m, n], is_dual)
    }
}
/// n = 11, i = 5
fn select_2850([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_866([a, b, e, g, d, i, f, j, h], is_dual)
    } else {
        select_1257([a, d, c, f, h, e, g, i, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2853([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_287([a, c, f, g, d, i], is_dual)
    } else {
        select_2072([j, g, i, h, f, a, e, d, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2852([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_172([f, g, c, a, d, j], is_dual)
    } else {
        select_2853([a, b, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2851([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2410([b, c, d, a, e, f, g, h, i, j], is_dual)
    } else {
        select_2852([b, d, a, c, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2849([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2850([e, i, k, h, j, a, b, f, g, c, d], !is_dual)
    } else {
        select_2851([e, a, i, k, j, b, h, g, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2857([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_39([j, i, a, h, e, b], !is_dual)
    } else {
        select_137([a, e, c, d, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2856([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_295([a, c, g, d, h, f, i], is_dual)
    } else {
        select_2857([a, b, c, f, e, i, h, j, g, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2855([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_488([b, f, c, d, h, i, g, e, j, k], is_dual)
    } else {
        select_2856([e, a, b, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2860([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_87([b, e, c, d, g, f, h], is_dual)
    } else {
        select_269([d, a, h, i, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_2859([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_342([h, b, c, d, e, g, i], is_dual)
    } else {
        select_2860([a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2861([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_420([a, b, e, g, i, j], is_dual)
    } else {
        select_2152([c, d, a, b, e, g, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_2858([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2859([a, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_2861([a, b, c, d, f, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2854([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2855([b, c, d, e, g, f, h, a, i, j, k, l], is_dual)
    } else {
        select_2858([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2848([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2849([a, b, l, m, f, i, k, g, c, j, h], !is_dual)
    } else {
        select_2854([a, c, b, d, e, g, f, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_2865([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_295([a, c, e, d, g, f, h], is_dual)
    } else {
        select_137([a, b, c, f, g, h, i, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_2864([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_488([b, a, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_2865([g, a, b, d, e, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2863([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2864([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_2859([a, c, d, e, g, b, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2869([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_104([b, d, e, h, g], is_dual)
    } else {
        select_347([a, b, c, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2868([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_785([h, a, j, k, f, b, i, g], !is_dual)
    } else {
        select_2869([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2867([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1812([a, g, b, d, e, f, h, i, j, k], is_dual)
    } else {
        select_2868([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2866([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_2867([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    } else {
        select_2372([a, b, d, h, f, g, c, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2862([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2863([a, b, d, e, f, c, g, h, i, j], is_dual)
    } else {
        select_2866([a, c, d, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_2847([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2848([a, b, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2862([a, b, j, d, e, f, g, i, k, l, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_2875([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1859([a, c, b, f, e, g, i, k, j, h], is_dual)
    } else {
        select_1779([a, d, b, e, i, h, k, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_2874([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_268([b, g, d, a, f, h, i], is_dual)
    } else {
        select_2875([b, c, d, a, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2873([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1192([b, g, c, h, a, e, i], is_dual)
    } else {
        select_2874([a, c, d, b, f, e, h, i, g, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2878([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_32([b, e, c, h, j, f, i, k], is_dual)
    } else {
        select_52([a, g, d, i, e, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2879([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_43([i, f, l, a, h, e, d], !is_dual)
    } else {
        select_2787([b, a, c, e, f, g, j, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2877([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2878([a, b, d, c, e, g, i, h, j, f, k, l], is_dual)
    } else {
        select_2879([a, b, d, c, e, f, g, i, j, h, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2880([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_559([a, f, e, i, h, b, g, c], !is_dual)
    } else {
        select_270([a, c, e, d, f, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_2876([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2877([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    } else {
        select_2880([f, g, b, d, a, k, h, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2872([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2873([b, a, c, d, e, f, g, h, k, i, j], is_dual)
    } else {
        select_2876([a, b, d, c, f, g, h, i, j, e, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2871([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2872([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2872([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2870([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_2871([a, b, d, c, e, g, h, j, f, i, k, l], is_dual)
    } else {
        select_2317([a, b, e, d, g, f, h, i, j, c, l, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_2846([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < c) || (is_dual && k > c) {
        select_2847([a, b, d, c, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2870([a, b, g, d, i, h, k, c, j, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_2887([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_137([a, b, d, e, f, h, i, g], is_dual)
    } else {
        select_44([a, c, d, f, e, g, j, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2886([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_38([i, g, h, a, b, d, f], !is_dual)
    } else {
        select_2887([a, d, c, b, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2885([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_2886([a, b, c, d, e, f, h, i, g, j], is_dual)
    } else {
        select_2886([a, b, c, d, e, g, h, i, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2890([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_124([i, h, g, d, f, e, c], !is_dual)
    } else {
        select_57([a, g, b, h, d, f, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2889([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2520([b, e, a, h, g, d, j, i, f], is_dual)
    } else {
        select_2890([b, c, a, e, d, h, f, i, j, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_2888([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2889([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_2383([f, g, h, k, a, e, i, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2884([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_2885([a, g, k, j, i, b, f, h, e, c], !is_dual)
    } else {
        select_2888([g, k, j, i, h, b, a, e, f, c, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2895([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_33([b, c, d, e, f, g, h], is_dual)
    } else {
        select_450([a, b, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2894([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_48([b, h, f, a, j], is_dual)
    } else {
        select_2895([b, c, a, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2893([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1898([b, d, f, e, a, g, i, h, j], is_dual)
    } else {
        select_2894([a, b, d, c, e, h, f, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2896([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_341([d, e, h, j, g, f, c], !is_dual)
    } else {
        select_803([a, b, f, d, e, h, i, g], is_dual)
    }
}
/// n = 12, i = 5
fn select_2892([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2893([d, a, f, c, g, e, h, i, j, l], is_dual)
    } else {
        select_2896([b, e, c, d, h, g, f, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2898([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_91([d, b, c, g, f, e, h], is_dual)
    } else {
        select_2072([g, h, j, d, i, a, f, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2897([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_2898([a, e, c, d, h, f, g, i, k, l], is_dual)
    } else {
        select_124([d, b, i, g, j, e, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_2891([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2892([c, b, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2897([c, a, d, e, b, g, h, f, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2883([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2884([a, b, c, g, f, i, h, j, e, l, k], is_dual)
    } else {
        select_2891([a, b, c, d, f, e, g, h, j, i, l, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_2902([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_331([b, c, a, e, d, f], is_dual)
    } else {
        select_782([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2901([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1449([a, b, e, c, d, f, g, h, j], is_dual)
    } else {
        select_2902([f, a, c, d, b, h, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2904([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_268([a, b, c, d, e, g, f], is_dual)
    } else {
        select_205([d, a, c, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_2905([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_95([a, c, d, b, e, g, f, h], is_dual)
    } else {
        select_2383([a, c, f, d, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2903([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2904([e, a, c, d, g, j, h, f, i], is_dual)
    } else {
        select_2905([d, i, j, k, h, e, g, f, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2900([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2901([g, d, j, k, i, e, h, a, f, b], !is_dual)
    } else {
        select_2903([a, b, c, d, e, f, h, i, g, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_2908([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_455([b, c, a, d, e, f, g, h], is_dual)
    } else {
        select_479([e, h, i, f, a, b, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2909([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_172([b, c, d, f, e, g], is_dual)
    } else {
        select_38([e, f, h, a, g, b, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2907([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2908([a, b, d, c, e, f, h, i, g], is_dual)
    } else {
        select_2909([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2911([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_2342([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2383([g, f, i, j, a, e, h, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2910([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_760([a, b, c, d, f, e, g, h, i, k], is_dual)
    } else {
        select_2911([f, k, e, j, h, b, a, i, c, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2906([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2907([b, a, c, i, e, k, j, f, h], is_dual)
    } else {
        select_2910([a, b, f, d, e, h, g, k, i, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2899([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_2900([b, g, c, e, i, f, h, j, k, a, l], is_dual)
    } else {
        select_2906([b, a, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2882([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2883([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2899([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2914([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_426([a, b, h, i, e, c, g, f], !is_dual)
    } else {
        select_432([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 7, i = 2
fn select_2917([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_777([a, c, d, e, b, f, g], is_dual)
    } else {
        select_2030([a, d, e, b, c, f, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_2916([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2917([a, c, b, d, e, f, g], is_dual)
    } else {
        select_2917([a, f, b, h, i, c, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_2919([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_350([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_350([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_2918([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1192([a, e, c, d, b, f, g], is_dual)
    } else {
        select_2919([b, c, d, e, f, g, a, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2915([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2916([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_2918([a, b, d, e, c, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2913([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2914([a, b, d, e, f, g, c, i, h], is_dual)
    } else {
        select_2915([a, b, d, c, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_2924([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_140([b, g, d, c, f, h, i], is_dual)
    } else {
        select_2045([a, b, d, e, h, f, g, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2925([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_145([b, c, f, d, h, g], is_dual)
    } else {
        select_2072([a, b, c, e, g, h, i, f, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2923([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_2924([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_2925([a, c, b, f, e, g, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_2927([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_100([c, d, e, g, f, h], is_dual)
    } else {
        select_2670([a, b, h, c, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2926([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2927([c, d, e, a, b, f, h, g, i, j], is_dual)
    } else {
        select_437([a, b, d, f, h, i, g, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2922([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_2923([b, d, c, e, f, g, a, h, i, j, k], is_dual)
    } else {
        select_2926([a, b, d, c, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2930([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_43([a, c, g, f, i, e, j], is_dual)
    } else {
        select_2661([a, b, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2931([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_269([d, f, c, g, e], is_dual)
    } else {
        select_2300([h, i, f, d, g, a, b, e], !is_dual)
    }
}
/// n = 11, i = 5
fn select_2929([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2930([i, j, h, k, d, e, g, f, a, c], !is_dual)
    } else {
        select_2931([a, d, b, g, e, h, f, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2928([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2929([a, c, b, e, f, g, h, d, i, j, k], is_dual)
    } else {
        select_2929([b, c, a, d, f, g, h, e, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2921([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_2922([b, a, d, c, e, f, g, h, j, i, l], is_dual)
    } else {
        select_2928([f, k, l, a, b, h, j, i, c, d, g], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2920([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2921([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_2921([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2912([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_2913([a, b, c, e, i, j, d, k, h], is_dual)
    } else {
        select_2920([a, b, c, e, d, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2881([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2882([a, b, d, e, f, g, h, c, i, j, k, l], is_dual)
    } else {
        select_2912([a, b, d, c, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2845([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < j) || (is_dual && m > j) {
        select_2846([a, b, c, d, e, f, h, g, i, j, k, l, n, m], is_dual)
    } else {
        select_2881([a, b, c, h, d, i, g, k, l, m, n, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_2938([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_260([c, b, d, e, f, a, g, i, h], is_dual)
    } else {
        select_1829([c, a, d, e, f, b, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_2937([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2938([e, i, j, h, k, a, f, b, g], !is_dual)
    } else {
        select_411([a, e, c, d, f, h, g, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2940([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_349([c, e, d, a, f, g, h, i], is_dual)
    } else {
        select_2046([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_2939([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_2940([a, b, c, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_248([a, c, e, f, d, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_2936([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2937([a, c, b, h, f, g, i, j, k, e, l], is_dual)
    } else {
        select_2939([b, c, a, d, f, g, e, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_2935([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2936([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2936([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2944([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_172([i, j, f, a, b, c], !is_dual)
    } else {
        select_1428([h, i, j, a, f, g, c, d, e], !is_dual)
    }
}
/// n = 9, i = 3
fn select_2945([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2419([b, c, d, a, f, e, g, h, i], is_dual)
    } else {
        select_894([b, c, d, e, f, a, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2943([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2944([a, b, d, c, e, g, h, i, f, j], is_dual)
    } else {
        select_2945([c, a, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2942([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2943([a, c, d, e, f, b, g, h, i, j], is_dual)
    } else {
        select_2943([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2948([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_478([b, a, c, d, e, f, g, h], is_dual)
    } else {
        select_323([e, f, i, h, a, b, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2947([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_135([b, c, a, d, e, f, g, h, i], is_dual)
    } else {
        select_2948([a, b, f, c, h, g, i, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2946([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2947([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2947([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_2941([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2942([a, b, i, j, k, e, f, h, c, g], !is_dual)
    } else {
        select_2946([a, b, i, k, j, h, f, e, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2934([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2935([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_2941([a, b, d, h, f, g, i, c, k, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_2953([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_342([f, a, d, e, i, g, j], is_dual)
    } else {
        select_2284([a, b, d, c, f, j, h, k, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_2952([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2953([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_1869([b, g, c, f, i, a, h, k, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_2954([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_494([a, c, e, d, h, g, f, i, j, k], is_dual)
    } else {
        select_2902([a, h, j, k, g, e, b, i], !is_dual)
    }
}
/// n = 12, i = 4
fn select_2951([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2952([a, b, c, d, e, f, h, g, j, i, k, l], is_dual)
    } else {
        select_2954([a, g, d, e, b, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2950([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2951([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_2951([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2958([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_1564([b, a, c, d, e, f, h, g, j, i], is_dual)
    } else {
        select_807([a, b, c, f, g, h, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2957([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_762([g, e, j, a, h, i, b, f, c], !is_dual)
    } else {
        select_2958([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2956([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2957([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_2957([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2960([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_408([a, f, c, b, e, h, g, i], is_dual)
    } else {
        select_1828([a, b, d, c, g, f, i, j, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_2962([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_888([a, b, c, f, e, h, g, i], is_dual)
    } else {
        select_170([b, e, d, g, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_2961([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_720([c, b, e, a, d, g, f, i, h], is_dual)
    } else {
        select_2962([b, c, f, e, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_2959([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_2960([a, c, e, d, f, b, g, h, i, j], is_dual)
    } else {
        select_2961([a, c, e, b, f, d, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_2955([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_2956([a, b, d, e, g, i, c, h, j, k], is_dual)
    } else {
        select_2959([a, b, d, e, c, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2949([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2950([a, b, c, d, e, f, h, i, g, j, k, l], is_dual)
    } else {
        select_2955([a, b, c, g, d, f, i, h, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_2933([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_2934([a, b, g, c, i, f, h, k, l, n, m, j], is_dual)
    } else {
        select_2949([a, b, f, h, d, e, g, j, i, k, m, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_2969([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_464([a, e, c, h, g, j], is_dual)
    } else {
        select_44([a, b, d, f, g, e, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_2970([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_269([a, e, f, g, i], is_dual)
    } else {
        select_44([a, b, c, d, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_2968([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_2969([b, a, c, d, f, g, e, h, j, i], is_dual)
    } else {
        select_2970([b, e, d, g, a, f, i, j, h], is_dual)
    }
}
/// n = 10, i = 2
fn select_2971([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1195([a, b, d, c, f, g, i, j], is_dual)
    } else {
        select_1035([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2967([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_2968([a, b, c, h, g, j, i, f, k, l], is_dual)
    } else {
        select_2971([b, c, d, a, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2966([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2967([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_2967([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_2973([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1256([a, b, c, d, e, f, h, i], is_dual)
    } else {
        select_598([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_2975([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1650([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_1650([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_2974([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_452([a, b, f, c, g, e], is_dual)
    } else {
        select_2975([a, b, d, c, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_2972([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2973([a, b, e, d, g, f, i, h, j], is_dual)
    } else {
        select_2974([a, b, c, f, e, h, i, g, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2965([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < c) || (is_dual && i > c) {
        select_2966([a, b, d, e, c, f, g, h, j, i, k, l], is_dual)
    } else {
        select_2972([a, b, m, l, k, j, g, c, d, e, i], !is_dual)
    }
}
/// n = 9, i = 4
fn select_2977([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1870([e, a, c, d, b, f, g, h], is_dual)
    } else {
        select_1870([i, a, g, h, b, f, c, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_2981([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_57([e, j, k, a, f, h, b], !is_dual)
    } else {
        select_431([b, d, c, e, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_2982([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_140([b, e, c, d, f, g, h], is_dual)
    } else {
        select_2072([h, e, j, f, i, a, g, c, b], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2980([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2981([a, b, c, d, e, f, g, i, h, j, l], is_dual)
    } else {
        select_2982([e, j, k, l, a, h, i, f, g, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_2979([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2980([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2980([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_2978([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2979([a, b, c, e, f, d, g, h, i, j, l, k], is_dual)
    } else {
        select_2979([a, b, d, e, f, c, g, h, i, k, l, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_2976([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2977([a, b, d, e, h, c, j, k, i], is_dual)
    } else {
        select_2978([a, b, d, e, c, f, g, i, h, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2964([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2965([a, b, c, e, d, f, g, h, i, j, k, m, l], is_dual)
    } else {
        select_2976([a, b, c, d, e, h, i, k, j, g, l, m], is_dual)
    }
}
/// n = 7, i = 3
fn select_2987([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_420([a, e, f, d, g, b], !is_dual)
    } else {
        select_633([a, c, b, e, d, f, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_2989([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_269([a, h, b, i, e], is_dual)
    } else {
        select_137([a, e, c, d, g, f, i, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_2988([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_281([e, a, b, c, d, f, g, h, i, j, k], is_dual)
    } else {
        select_2989([e, h, a, b, j, g, f, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2986([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_2987([a, g, h, i, j, k, l], is_dual)
    } else {
        select_2988([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_2985([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_2986([e, a, b, c, d, f, g, h, i, j, k, l], is_dual)
    } else {
        select_2986([f, a, b, c, d, e, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2990([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1082([a, b, c, g, d, e, j, h, i, k, l], is_dual)
    } else {
        select_419([a, b, c, f, i, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_2984([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2985([c, d, e, f, a, b, h, i, g, j, k, l], is_dual)
    } else {
        select_2990([a, b, c, e, f, d, g, i, j, h, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_2983([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2984([a, b, c, d, e, h, g, i, j, l, k, m], is_dual)
    } else {
        select_642([a, b, g, f, e, i, h, k, j, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2963([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_2964([a, b, c, d, h, f, g, i, k, j, l, m, n], is_dual)
    } else {
        select_2983([a, b, c, d, e, f, g, i, j, k, h, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2932([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < h) || (is_dual && c > h) {
        select_2933([a, b, d, e, f, g, i, h, j, c, k, l, m, n], is_dual)
    } else {
        select_2963([a, b, c, d, e, f, g, i, j, h, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_2844([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_2845([a, b, c, e, f, g, d, i, j, h, k, l, m, n], is_dual)
    } else {
        select_2932([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2843([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2844([a, b, c, d, f, g, h, e, i, j, k, l, m, n], is_dual)
    } else {
        select_2844([a, b, c, e, f, g, h, d, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_2765([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_2766([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    } else {
        select_2843([a, b, c, d, e, f, h, g, i, j, l, m, n, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_2998([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2514([a, b, d, c, e, f, h, i, j, g], is_dual)
    } else {
        select_469([a, i, j, h, e, g, f, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3001([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_770([a, c, b, e, f, h, g, j], is_dual)
    } else {
        select_864([i, j, f, h, c, b, g, a, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3000([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_3001([b, a, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_38([b, a, h, f, c, j, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3004([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_137([f, h, g, i, a, d, b, e], !is_dual)
    } else {
        select_59([a, d, c, g, f, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3003([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_38([g, f, d, a, h, c, e], !is_dual)
    } else {
        select_3004([a, b, c, e, d, f, g, i, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3002([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3003([g, i, e, f, h, a, c, d, b], !is_dual)
    } else {
        select_3003([g, i, f, e, h, b, c, d, a], !is_dual)
    }
}
/// n = 10, i = 4
fn select_2999([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3000([b, c, d, a, e, g, h, f, j, i], is_dual)
    } else {
        select_3002([b, f, c, d, g, a, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_2997([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_2998([a, d, c, e, g, f, h, b, j, i], is_dual)
    } else {
        select_2999([a, d, b, c, e, g, h, f, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3009([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_59([h, i, g, a, b, e, c], !is_dual)
    } else {
        select_59([g, i, h, a, b, f, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3008([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_2559([h, j, e, b, a, i, c], !is_dual)
    } else {
        select_3009([c, b, a, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3011([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_278([a, b, f, g, e, h, j, k], is_dual)
    } else {
        select_234([c, d, b, h, f, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3012([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_269([a, b, j, k, l], is_dual)
    } else {
        select_234([d, e, c, h, f, g, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3010([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_3011([a, c, d, e, f, g, h, b, i, j, k], is_dual)
    } else {
        select_3012([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3007([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3008([a, c, b, h, f, i, j, k, g, l], is_dual)
    } else {
        select_3010([a, c, d, b, e, f, g, h, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3014([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_38([i, f, g, a, b, c, h], !is_dual)
    } else {
        select_192([a, c, b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3015([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2464([a, d, c, f, e, h, g, i, j, k], is_dual)
    } else {
        select_1582([j, k, i, a, h, g, b, e, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3013([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3014([a, b, e, d, g, i, f, h, j], is_dual)
    } else {
        select_3015([a, c, d, b, g, f, h, e, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3006([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3007([a, c, b, d, e, f, g, h, j, i, k, l], is_dual)
    } else {
        select_3013([a, c, b, e, i, g, h, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3005([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3006([a, c, d, e, f, b, g, h, i, j, k, l], is_dual)
    } else {
        select_3006([b, c, d, e, f, a, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_2996([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_2997([a, b, e, d, j, g, c, k, l, i], is_dual)
    } else {
        select_3005([a, b, d, e, c, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3021([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_973([a, b, c, d, e, f, g, i, h], is_dual)
    } else {
        select_202([i, f, j, g, e, h, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3020([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3021([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1572([h, i, f, k, a, e, g, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3019([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_1735([a, f, c, b, e, h, g, i, j], is_dual)
    } else {
        select_3020([a, c, b, d, e, g, f, i, h, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3023([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_1470([h, i, j, a, e, g, b, f, c], !is_dual)
    } else {
        select_1172([a, b, e, d, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3025([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_367([g, h, i, f, a, d, e, b], !is_dual)
    } else {
        select_269([a, f, c, h, e], is_dual)
    }
}
/// n = 9, i = 4
fn select_3026([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_48([h, d, a, b, f], !is_dual)
    } else {
        select_2050([a, b, c, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3024([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3025([h, j, g, i, e, a, f, b, c], !is_dual)
    } else {
        select_3026([g, h, j, f, i, a, e, b, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3022([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3023([h, j, g, k, f, i, d, e, a, b], !is_dual)
    } else {
        select_3024([h, j, f, k, g, i, d, a, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3018([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3019([g, h, j, k, e, i, a, b, f, c, d], !is_dual)
    } else {
        select_3022([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3029([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_2853([c, d, b, a, e, g, h, f, j, i], is_dual)
    } else {
        select_2890([c, a, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3031([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_43([h, f, j, a, g, e, c], !is_dual)
    } else {
        select_141([a, b, e, d, f, h, i, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3030([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_2931([j, h, f, g, i, a, d, e, b], !is_dual)
    } else {
        select_3031([a, b, c, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3028([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3029([a, b, c, d, f, e, g, i, h, j], is_dual)
    } else {
        select_3030([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3033([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_1125([a, c, b, e, d, f, g, h], is_dual)
    } else {
        select_96([b, e, a, g, f, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3035([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_48([b, f, e, a, h], is_dual)
    } else {
        select_191([b, c, a, d, e, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3034([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3035([a, c, e, d, g, f, i, h], is_dual)
    } else {
        select_3025([h, j, g, i, e, a, b, c, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3032([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3033([f, b, c, e, g, i, a, h, j], is_dual)
    } else {
        select_3034([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3027([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3028([a, b, c, d, e, f, h, i, j, g], is_dual)
    } else {
        select_3032([a, c, b, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3017([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3018([a, i, h, k, f, j, b, c, g, d, e], !is_dual)
    } else {
        select_3027([a, i, f, k, h, j, b, c, g, d], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3038([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_692([c, d, e, f, a, b, g, h, i, j], is_dual)
    } else {
        select_438([a, b, g, e, f, c, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3037([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2776([a, b, c, d, e, g, i, k, h], is_dual)
    } else {
        select_3038([a, b, e, f, c, d, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3039([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_907([a, b, c, d, e, f, h, j, g], is_dual)
    } else {
        select_907([a, c, b, e, d, f, g, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3036([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3037([a, c, b, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3039([a, b, c, d, e, g, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3016([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_3017([a, j, b, k, l, c, h, d, e, i, g], !is_dual)
    } else {
        select_3036([a, d, c, e, b, f, g, h, j, i, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2995([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_2996([a, b, d, e, c, f, g, h, i, j, l, k], is_dual)
    } else {
        select_3016([a, b, c, d, e, h, j, i, k, l, g, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2994([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_2995([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_2995([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_3046([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_1172([d, h, e, i, f, g, a, b], !is_dual)
    } else {
        select_2512([a, b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3047([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_164([a, c, d, f, e, g, i], is_dual)
    } else {
        select_1902([a, c, b, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3045([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3046([i, e, j, f, a, g, h, b, c], !is_dual)
    } else {
        select_3047([b, a, c, d, g, e, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3044([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3045([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3045([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3051([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_519([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_519([g, i, h, d, e, a, f, b], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3052([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_114([d, b, c, f, e, g], is_dual)
    } else {
        select_96([f, h, d, e, a, g], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3050([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3051([a, c, b, d, f, g, e, i, h], is_dual)
    } else {
        select_3052([d, h, i, e, f, a, g, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3049([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_107([b, a, c, d, g, f, e, h, i], is_dual)
    } else {
        select_3050([h, e, j, f, a, g, i, c, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3048([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3049([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3049([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3043([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3044([a, b, k, j, g, h, i, e, f, c], !is_dual)
    } else {
        select_3048([a, b, k, j, h, g, i, e, f, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3057([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_147([e, h, g, i, d, f, b, c], !is_dual)
    } else {
        select_137([e, g, h, i, d, f, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3058([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_87([b, d, c, g, f, e, h], is_dual)
    } else {
        select_297([g, i, d, j, a, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3056([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3057([a, b, e, d, f, h, i, j, k], is_dual)
    } else {
        select_3058([b, a, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3060([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_140([a, b, c, f, e, g, h], is_dual)
    } else {
        select_128([c, d, g, e, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3059([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_725([b, c, a, e, d, f, g, h], is_dual)
    } else {
        select_3060([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3055([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3056([a, b, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_3059([i, g, j, k, f, a, d, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3063([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_464([a, f, j, b, i, c], !is_dual)
    } else {
        select_576([a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3062([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3063([a, b, e, c, d, f, g, h, i, j], is_dual)
    } else {
        select_3063([a, b, e, d, c, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3064([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_2391([b, d, e, c, f, a, g, h, i, j], is_dual)
    } else {
        select_2419([b, d, e, a, f, c, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3061([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3062([a, b, d, e, c, g, h, f, i, j], is_dual)
    } else {
        select_3064([b, a, c, d, e, f, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3054([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_3055([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_3061([a, g, j, i, k, d, e, h, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3068([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_91([b, d, c, e, f, h, g], is_dual)
    } else {
        select_57([d, i, j, a, e, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3069([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1784([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_124([d, i, j, a, g, f, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3067([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3068([a, e, c, d, g, f, h, j, k, i], is_dual)
    } else {
        select_3069([a, f, b, d, h, e, i, j, k, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3072([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_30([a, g, c, i], is_dual)
    } else {
        select_1558([a, b, f, d, h, e, j, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3073([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_49([a, h, i], is_dual)
    } else {
        select_1558([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3071([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_3072([a, c, b, e, f, d, g, h, j, i], is_dual)
    } else {
        select_3073([d, c, a, e, h, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3070([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_1857([a, b, c, e, g, f, d, h, i, j, k], is_dual)
    } else {
        select_3071([a, b, c, d, e, g, i, f, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3066([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3067([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3070([a, e, c, g, f, j, h, d, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3065([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3066([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3067([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3053([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3054([a, e, d, g, h, f, b, i, j, k, l], is_dual)
    } else {
        select_3065([a, b, c, d, e, f, g, i, j, h, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3042([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3043([a, b, f, c, i, e, k, g, j, l, h], is_dual)
    } else {
        select_3053([a, b, c, d, e, f, g, h, i, k, j, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3077([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_2012([a, b, c, d, e, f, i, g, h], is_dual)
    } else {
        select_1877([d, b, c, e, f, g, i, a, h, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_3078([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1065([a, c, d, b, f, e, g], is_dual)
    } else {
        select_593([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3076([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3077([a, b, c, d, f, i, h, j, k, g], is_dual)
    } else {
        select_3078([a, b, c, e, i, g, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3075([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2836([a, b, d, g, h, i, c, j], is_dual)
    } else {
        select_3076([a, b, d, e, c, f, h, j, g, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3080([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_844([a, b, c, d, e, f, h, g, i, j], is_dual)
    } else {
        select_473([a, f, i, k, j, g, e, h, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3084([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_35([i, e, j, h, d, a], !is_dual)
    } else {
        select_26([g, b, c, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_3083([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2619([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    } else {
        select_3084([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3082([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3083([a, b, c, d, e, g, f, h, i, j, k], is_dual)
    } else {
        select_3083([a, b, c, d, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3086([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_170([a, g, d, h, e], is_dual)
    } else {
        select_870([a, e, b, c, i, f, j, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3085([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_420([a, g, i, b, e, k], is_dual)
    } else {
        select_3086([a, c, d, b, e, f, g, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3081([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3082([e, c, d, f, a, h, g, i, j, k, l], is_dual)
    } else {
        select_3085([a, b, c, d, e, g, i, f, j, h, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3079([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3080([a, b, e, c, f, j, k, g, h, l, i], is_dual)
    } else {
        select_3081([a, d, b, c, e, f, g, j, h, i, l, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3074([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3075([a, b, c, d, e, f, h, j, k, g, i], is_dual)
    } else {
        select_3079([a, c, d, e, f, h, g, b, i, k, j, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3041([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_3042([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_3074([a, b, c, d, e, g, f, i, h, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3092([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1892([a, c, d, e, b, f, g, h, i], is_dual)
    } else {
        select_1892([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3091([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_507([a, b, c, d, f, g, h], is_dual)
    } else {
        select_3092([a, b, e, c, d, f, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3094([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_2415([a, b, c, d, e, f, g, h], is_dual)
    } else {
        select_889([a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3093([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3094([a, c, d, b, e, f, g, h, i], is_dual)
    } else {
        select_3094([b, c, d, a, e, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3090([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_3091([a, b, c, d, e, g, h, f, i], is_dual)
    } else {
        select_3093([a, b, d, e, f, g, c, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3095([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_590([a, c, d, b, e, f, g, h], is_dual)
    } else {
        select_590([b, c, d, a, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3089([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < c) || (is_dual && g > c) {
        select_3090([a, b, f, d, e, g, h, i, j], is_dual)
    } else {
        select_3095([a, b, c, e, f, h, j, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3100([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_124([b, a, g, f, i, e, h], is_dual)
    } else {
        select_28([b, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3099([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_2724([a, b, d, f, h, e, g, i], is_dual)
    } else {
        select_3100([a, b, d, c, e, g, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3102([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_162([i, h, f, e, a, g, b], !is_dual)
    } else {
        select_20([e, a, c, d, f, h, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3101([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_286([e, f, c, d, a, g, h, j], is_dual)
    } else {
        select_3102([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3098([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3099([i, e, k, j, a, h, g, f, b], !is_dual)
    } else {
        select_3101([a, b, c, d, e, f, h, g, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3104([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1613([e, j, k, l, h, a, i, b, f, g, c], !is_dual)
    } else {
        select_2291([b, a, d, c, e, g, f, h, i, j], is_dual)
    }
}
/// n = 8, i = 2
fn select_3106([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_355([a, g, d, f, e, h], is_dual)
    } else {
        select_431([a, d, b, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3105([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3106([a, b, g, c, e, f, i, j], is_dual)
    } else {
        select_181([b, a, f, d, e, g, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3103([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3104([a, b, c, d, e, g, h, f, i, j, k, l], is_dual)
    } else {
        select_3105([b, c, d, a, e, h, f, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3097([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3098([f, e, k, l, a, i, g, j, b, c, h], !is_dual)
    } else {
        select_3103([a, b, c, d, f, e, g, h, j, i, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3096([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3097([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3097([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3088([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3089([a, b, e, c, f, g, d, h, i, j], is_dual)
    } else {
        select_3096([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3112([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_34([e, b, c, d, g, f, h, i, j], is_dual)
    } else {
        select_576([h, a, d, e, f, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3111([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_2377([a, b, j, f, h, k, e, i], is_dual)
    } else {
        select_3112([b, c, e, d, f, g, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3114([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_111([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_111([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3113([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_2299([b, c, a, e, f, d, g, i, h], is_dual)
    } else {
        select_3114([a, b, f, e, g, h, d, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3110([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3111([b, c, a, d, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3113([b, i, c, e, a, f, k, h, j, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3117([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_87([b, e, c, d, g, f, h], is_dual)
    } else {
        select_335([d, a, h, e, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3116([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_1125([a, b, c, e, i, g, h, j], is_dual)
    } else {
        select_3117([b, c, d, g, e, f, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3118([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_178([b, c, a, f, e, g, i, h], is_dual)
    } else {
        select_782([a, b, d, e, f, h, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3115([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3116([b, c, e, d, f, g, j, h, i, k], is_dual)
    } else {
        select_3118([a, b, c, i, f, k, e, h, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3109([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3110([a, b, c, d, f, g, h, i, j, e, k, l], is_dual)
    } else {
        select_3115([a, b, c, d, e, g, h, i, j, f, k, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3108([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3109([a, c, d, e, b, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3109([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3121([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_1443([a, b, f, d, e, g, j, h, i], is_dual)
    } else {
        select_514([a, b, c, h, e, i, f], is_dual)
    }
}
/// n = 10, i = 3
fn select_3120([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_1179([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3121([a, b, d, e, c, f, g, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3124([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_95([a, b, c, e, f, g, h, j], is_dual)
    } else {
        select_109([a, d, e, g, f, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3123([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_1798([a, b, c, h, e, f, i, j], is_dual)
    } else {
        select_3124([a, c, e, d, f, g, i, h, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3122([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1179([a, g, c, e, b, f, h, i, j, k], is_dual)
    } else {
        select_3123([a, c, b, e, d, f, h, i, g, k, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3119([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3120([a, b, c, g, e, i, h, j, f, k], is_dual)
    } else {
        select_3122([a, b, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3107([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < d) || (is_dual && c > d) {
        select_3108([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    } else {
        select_3119([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3087([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < l) || (is_dual && i > l) {
        select_3088([a, b, c, d, e, h, g, j, k, l, i, m], is_dual)
    } else {
        select_3107([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3040([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < k) || (is_dual && d > k) {
        select_3041([a, b, c, e, h, g, j, i, k, l, d, m], is_dual)
    } else {
        select_3087([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_2993([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_2994([a, b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    } else {
        select_3040([a, b, c, d, f, g, h, i, e, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3131([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_168([a, b, g, d, i, j, f], is_dual)
    } else {
        select_927([d, f, c, h, e, i, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3132([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_341([a, d, g, i, e, f, c], !is_dual)
    } else {
        select_927([a, b, f, d, g, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_3130([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3131([b, a, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_3132([d, e, c, g, a, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3129([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3130([c, a, d, e, b, g, f, h, i, j], is_dual)
    } else {
        select_3130([c, b, d, f, a, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3128([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3129([a, c, d, e, b, f, g, h, i, j], is_dual)
    } else {
        select_3129([b, c, d, e, a, f, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3127([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3128([a, b, c, e, f, d, g, h, i, j], is_dual)
    } else {
        select_3128([a, b, d, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3126([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_1317([a, b, c, d, e, k, j, h, i, g], !is_dual)
    } else {
        select_3127([a, b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3136([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_507([a, b, c, g, i, h, f], !is_dual)
    } else {
        select_495([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3135([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_944([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_3136([a, b, c, d, g, h, f, i, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3137([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < c) || (is_dual && h > c) {
        select_418([a, b, d, c, e, f, g, h], is_dual)
    } else {
        select_598([a, b, d, g, f, h, c, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3134([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3135([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3137([a, b, c, f, k, d, j, i, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3133([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3134([a, b, c, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_3134([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3125([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3126([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3133([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_2992([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < f) || (is_dual && k > f) {
        select_2993([a, b, c, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_3125([a, b, c, d, e, j, l, k, f, h, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3146([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_776([a, i, j, e, h, b, f, g, c], !is_dual)
    } else {
        select_334([a, c, d, e, f, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3145([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3146([a, e, c, d, h, f, g, j, i, k], is_dual)
    } else {
        select_771([a, h, k, e, i, j, f, b, g], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3149([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_39([a, c, d, g, f, i], is_dual)
    } else {
        select_76([b, c, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3148([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1194([a, d, e, c, f, g, i, h], is_dual)
    } else {
        select_3149([b, d, a, e, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3151([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_91([d, b, c, g, f, e, h], is_dual)
    } else {
        select_73([c, a, e, f, h, d, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3150([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_1469([g, h, d, j, e, i, a, f], !is_dual)
    } else {
        select_3151([b, a, c, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3147([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3148([a, b, c, d, e, g, h, f, j, i], is_dual)
    } else {
        select_3150([f, b, d, a, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3144([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3145([a, d, b, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_3147([a, d, c, e, f, b, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3143([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < j) || (is_dual && b > j) {
        select_2433([a, f, c, g, h, j, i, b, k], is_dual)
    } else {
        select_3144([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3155([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_652([a, b, c, f, e, h, g, i], is_dual)
    } else {
        select_661([a, e, c, d, g, f, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3154([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_3155([a, f, d, e, b, g, h, i, j], is_dual)
    } else {
        select_1825([a, e, d, b, c, g, f, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3156([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_612([a, b, f, c, h, e, i, g, j], is_dual)
    } else {
        select_612([a, b, e, d, g, f, i, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3153([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3154([a, b, d, e, c, g, f, i, h, j], is_dual)
    } else {
        select_3156([a, b, c, d, h, g, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3152([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_425([a, b, f, g, e, c, h, j, i, k], is_dual)
    } else {
        select_3153([a, b, d, e, c, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3142([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_3143([a, b, d, e, f, c, h, g, i, j, k], is_dual)
    } else {
        select_3152([a, b, d, c, f, g, e, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3141([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3142([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_3142([a, b, d, e, f, g, c, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3140([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3141([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1317([a, b, c, d, f, h, i, j, e, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3164([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_629([a, d, c, e, f, h, g, j], is_dual)
    } else {
        select_141([b, c, e, f, g, h, d, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3165([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_57([i, d, j, f, e, g, a], !is_dual)
    } else {
        select_28([e, d, b, c, h, f, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_3163([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3164([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3165([j, g, k, d, h, e, i, a, b, f], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3167([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_629([b, d, c, e, f, h, i, j], is_dual)
    } else {
        select_202([a, c, e, d, f, g, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3166([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_3167([a, b, c, d, e, f, i, h, g, j, k], is_dual)
    } else {
        select_2931([d, h, k, g, i, a, f, e, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3162([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3163([a, b, c, d, e, f, g, j, i, k, h], is_dual)
    } else {
        select_3166([a, b, c, d, e, f, g, j, h, k, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3169([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3057([a, c, d, g, i, e, j, f, h], is_dual)
    } else {
        select_2714([e, b, c, f, d, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3168([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_470([d, b, f, e, a, j, g, i, h], is_dual)
    } else {
        select_3169([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3161([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3162([b, a, c, f, e, g, h, d, i, j, k], is_dual)
    } else {
        select_3168([i, h, k, f, e, j, d, a, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3173([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_48([b, g, i, a, j], is_dual)
    } else {
        select_2221([b, a, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3174([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_55([a, e, d, h, g, j, i], is_dual)
    } else {
        select_91([d, b, c, f, e, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3172([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_3173([a, b, c, d, f, e, h, g, i, j], is_dual)
    } else {
        select_3174([b, c, d, e, f, a, g, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3171([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_587([a, c, g, e, i, b, j], is_dual)
    } else {
        select_3172([a, c, b, d, e, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3170([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3171([d, i, h, k, e, j, f, a, b, g], !is_dual)
    } else {
        select_877([b, c, e, f, d, h, g, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3160([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3161([i, h, k, a, f, e, j, b, c, g, d], !is_dual)
    } else {
        select_3170([i, e, k, a, f, h, j, b, c, g, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3179([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_20([e, b, c, d, f, h, g], is_dual)
    } else {
        select_1162([h, f, j, e, i, a, b, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3178([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_286([d, e, j, k, g, h, a, b], !is_dual)
    } else {
        select_3179([i, g, j, k, d, e, h, a, f, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3181([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_87([a, f, c, d, g, e, i], is_dual)
    } else {
        select_52([d, e, b, h, f, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3180([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < i) || (is_dual && d > i) {
        select_38([g, h, d, e, i, a, f], !is_dual)
    } else {
        select_3181([b, c, a, e, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3177([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3178([g, j, k, e, f, i, a, h, b, c, d], !is_dual)
    } else {
        select_3180([e, j, k, g, f, i, a, b, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3183([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_453([a, b, f, e, c, g], is_dual)
    } else {
        select_354([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3185([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_564([c, b, a, f, d, g, e, h], is_dual)
    } else {
        select_124([d, g, i, a, e, f, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3184([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3185([b, f, c, g, a, e, i, j, h], is_dual)
    } else {
        select_1155([b, d, c, a, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3182([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3183([a, b, c, f, h, g, e, j], is_dual)
    } else {
        select_3184([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3176([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3177([b, c, a, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3182([e, h, j, k, f, i, b, a, c, g], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3188([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_2724([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_2724([a, b, c, e, f, d, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3187([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3188([b, c, d, a, e, f, g, h], is_dual)
    } else {
        select_2724([a, c, d, b, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3189([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_121([b, c, d, a, f, e, g, h], is_dual)
    } else {
        select_2948([a, b, c, d, f, g, h, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3186([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3187([b, a, d, c, e, f, h, g], is_dual)
    } else {
        select_3189([e, h, i, f, a, b, c, g, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3175([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3176([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_3186([a, e, i, j, f, b, g, h, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3159([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3160([b, a, c, d, g, e, h, i, f, j, k], is_dual)
    } else {
        select_3175([g, i, e, k, a, b, f, j, h, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3158([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3159([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3159([b, c, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3195([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_519([b, c, a, e, d, g, f, h], is_dual)
    } else {
        select_32([g, h, i, d, a, e, b, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3194([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_1477([a, c, b, e, d, f, h, i, g], is_dual)
    } else {
        select_3195([f, i, d, e, h, g, b, a, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3193([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2382([d, h, i, g, f, a, e, c], !is_dual)
    } else {
        select_3194([c, b, a, d, f, i, g, e, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3192([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3193([g, e, i, a, f, h, c, b, d], !is_dual)
    } else {
        select_3193([g, f, i, b, e, h, c, a, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3198([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1477([h, j, i, e, a, b, f, c, g], !is_dual)
    } else {
        select_31([b, c, a, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3197([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3198([a, c, b, d, f, e, g, j, i, h], is_dual)
    } else {
        select_2382([a, b, c, g, f, h, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3196([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3197([b, a, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3193([i, e, j, a, h, f, g, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3191([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3192([b, f, h, c, e, a, i, g, j], is_dual)
    } else {
        select_3196([b, a, c, d, e, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3190([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3191([a, b, d, e, c, f, g, h, i, j], is_dual)
    } else {
        select_3191([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3157([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < e) || (is_dual && c > e) {
        select_3158([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_3190([a, b, d, c, f, g, e, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3139([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < d) || (is_dual && j > d) {
        select_3140([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_3157([a, b, c, e, f, h, i, j, d, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3204([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_340([a, b, g, c, e, h, f, i], is_dual)
    } else {
        select_340([a, b, f, d, e, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3206([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_455([g, i, f, j, a, b, h, c], !is_dual)
    } else {
        select_766([a, c, b, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3207([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2559([g, i, f, b, a, h, c], !is_dual)
    } else {
        select_766([b, c, a, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3205([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3206([b, c, d, e, f, a, g, h, i, j], is_dual)
    } else {
        select_3207([a, b, d, e, f, c, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3203([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3204([a, c, b, d, f, e, g, h, i], is_dual)
    } else {
        select_3205([a, h, f, j, e, k, b, i, g, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3210([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_268([b, c, d, e, f, h, g], is_dual)
    } else {
        select_633([g, h, i, a, e, b, c], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3209([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_1722([a, c, b, d, e, g, f, h], is_dual)
    } else {
        select_3210([b, d, e, c, g, f, a, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3208([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3209([a, b, f, e, c, g, d, h, i], is_dual)
    } else {
        select_1896([a, b, e, f, d, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3202([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3203([a, c, b, d, f, e, g, h, i, j, k], is_dual)
    } else {
        select_3208([a, f, h, j, k, e, b, c, i, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3201([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3202([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_3202([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3214([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_513([f, a, j, k, e, i, h, b, g], !is_dual)
    } else {
        select_743([a, b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3213([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_687([a, e, j, k, b, h, i, f, g], !is_dual)
    } else {
        select_3214([a, h, j, k, e, b, i, f, g, c, d], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3217([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_109([a, b, c, d, e, f], is_dual)
    } else {
        select_233([a, b, h, i, g, f], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3216([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3217([a, e, c, d, f, g, i, h, j], is_dual)
    } else {
        select_1101([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3215([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_687([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_3216([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3212([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3213([a, b, d, c, e, g, f, i, h, j, k], is_dual)
    } else {
        select_3215([a, e, j, i, k, b, f, c, h, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3211([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3212([a, b, d, e, c, f, g, h, i, j, k], is_dual)
    } else {
        select_3212([a, c, d, e, b, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3200([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3201([a, b, c, e, f, d, g, h, i, j, k], is_dual)
    } else {
        select_3211([a, b, c, d, f, e, g, i, h, j, k], is_dual)
    }
}
/// n = 7, i = 2
fn select_3222([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_1854([a, f, c, g, e, b], is_dual)
    } else {
        select_514([a, c, b, d, e, f, g], is_dual)
    }
}
/// n = 8, i = 3
fn select_3221([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < d) || (is_dual && b > d) {
        select_2836([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_3222([a, c, b, e, d, f, g], is_dual)
    }
}
/// n = 6, i = 2
fn select_3224([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_420([a, b, c, d, e, f], is_dual)
    } else {
        select_420([a, b, c, e, d, f], is_dual)
    }
}
/// n = 8, i = 3
fn select_3223([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_3224([a, b, c, g, h, f], !is_dual)
    } else {
        select_495([a, b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3220([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_3221([a, b, c, g, i, d, h, f], !is_dual)
    } else {
        select_3223([a, b, d, c, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3225([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_2702([a, b, d, e, f, c, g, h, i], is_dual)
    } else {
        select_2702([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3219([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3220([a, b, c, g, e, h, d, i, j], is_dual)
    } else {
        select_3225([a, b, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3218([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_1317([a, b, c, d, e, f, g, i, h, j], is_dual)
    } else {
        select_3219([a, b, c, d, e, f, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3199([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3200([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    } else {
        select_3218([a, b, c, d, j, k, e, g, i, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3138([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < e) || (is_dual && k > e) {
        select_3139([a, b, c, d, f, e, g, h, i, j, k, l], is_dual)
    } else {
        select_3199([a, b, c, d, f, h, i, j, k, e, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_2991([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_2992([a, b, c, d, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3138([a, b, c, d, e, f, i, j, k, l, m, h], is_dual)
    }
}
/// n = 14, i = 5
fn select_2764([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < f) || (is_dual && n > f) {
        select_2765([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2991([a, b, c, d, e, i, g, k, j, l, m, n, f], is_dual)
    }
}
/// n = 14, i = 5
fn select_2309([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_2310([a, b, c, d, e, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_2764([a, b, c, d, e, f, i, h, j, k, g, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1597([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_1598([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_2309([a, b, c, d, e, f, g, i, j, k, l, m, h, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1596([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < l) || (is_dual && m > l) {
        select_1597([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_1536([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_394([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < n) || (is_dual && k > n) {
        select_395([a, b, c, d, e, f, g, h, i, j, l, m, n, k], is_dual)
    } else {
        select_1596([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < i) || (is_dual && n > i) {
        select_4([a, b, c, d, e, f, g, h, j, i, k, l, m, n], is_dual)
    } else {
        select_394([a, b, c, d, e, f, g, h, j, k, l, m, n, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_2([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3242([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_460([b, c, d, f, e, g, h, i], is_dual)
    } else {
        select_32([i, g, j, f, a, h, c, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3243([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_170([a, g, d, h, f], is_dual)
    } else {
        select_512([a, b, f, c, e, i, g, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3241([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3242([a, f, b, d, g, e, h, i, j, k], is_dual)
    } else {
        select_3243([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_3240([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_903([h, l, m, a, f, k, b, d], !is_dual)
    } else {
        select_3241([b, c, d, e, h, f, g, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3245([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_86([b, d, h, e, f, g, j, i, l], is_dual)
    } else {
        select_1467([a, c, d, i, f, k, h, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_3246([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_205([c, b, d, g, f, e, h], is_dual)
    } else {
        select_437([c, g, i, f, h, d, a, e], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3244([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3245([a, c, b, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_3246([h, m, a, k, l, f, b, i, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3239([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3240([a, b, d, e, c, f, g, i, h, j, l, k, m], is_dual)
    } else {
        select_3244([a, b, c, e, d, f, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3250([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_567([b, c, d, e, f, h, g], is_dual)
    } else {
        select_59([a, c, g, f, e, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3251([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_460([g, i, h, d, e, a, f, b], !is_dual)
    } else {
        select_466([a, c, b, d, e, g, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3249([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3250([b, c, d, a, e, g, f, h, i, j], is_dual)
    } else {
        select_3251([b, f, d, e, a, i, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3248([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3249([a, b, c, g, e, f, i, k, h, j], is_dual)
    } else {
        select_684([b, a, d, h, e, j, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3253([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_178([a, c, b, g, f, h, e, i], is_dual)
    } else {
        select_181([b, c, d, a, f, e, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3255([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_466([a, c, b, e, g, h, j, f, i], is_dual)
    } else {
        select_466([a, d, b, e, f, h, i, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3254([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3250([a, b, d, f, e, h, g, j, i, k], is_dual)
    } else {
        select_3255([a, g, c, d, e, f, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3252([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3253([a, c, d, i, e, f, j, h, k], is_dual)
    } else {
        select_3254([a, b, d, h, e, f, g, k, i, l, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3247([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3248([f, a, b, c, e, g, h, j, k, i, l], is_dual)
    } else {
        select_3252([a, b, c, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3238([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3239([b, a, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_3247([c, b, d, e, h, g, f, i, a, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3261([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_33([b, c, d, f, h, g, i], is_dual)
    } else {
        select_450([a, b, e, f, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3260([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_186([b, g, c, d, f, h, i], is_dual)
    } else {
        select_3261([a, b, c, d, e, f, h, g, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3259([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3260([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_3260([c, b, d, e, f, a, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3262([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_560([a, c, d, e, h, g, i], is_dual)
    } else {
        select_2528([a, b, i, c, f, g, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3258([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3259([a, b, d, c, g, f, h, j, l, i, k], is_dual)
    } else {
        select_3262([c, d, e, a, b, f, g, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3265([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_83([b, c, d, e, j, h, i], is_dual)
    } else {
        select_1013([f, a, i, b, c, g, h, j, k, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3266([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_519([a, b, c, f, g, i, j, k], is_dual)
    } else {
        select_234([b, c, d, e, i, g, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_3264([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3265([c, b, d, e, f, a, g, h, i, j, k, l], is_dual)
    } else {
        select_3266([a, c, h, e, f, g, b, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3263([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3259([a, b, c, d, h, g, j, k, l, i, m], is_dual)
    } else {
        select_3264([c, d, e, f, a, b, g, h, i, j, k, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3257([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3258([a, b, c, d, e, h, j, k, i, g, l, m], is_dual)
    } else {
        select_3263([a, b, d, e, f, c, h, g, i, k, j, m, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3269([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2540([b, d, h, e, g, f, j], is_dual)
    } else {
        select_2019([a, b, c, f, e, g, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3270([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2342([b, c, e, g, f, i, k, h, j], is_dual)
    } else {
        select_2019([a, c, h, d, f, j, i, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3268([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3269([c, f, e, d, a, g, j, h, i, k], is_dual)
    } else {
        select_3270([b, c, d, a, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3273([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_32([b, c, d, f, g, e, h, i], is_dual)
    } else {
        select_1779([a, e, c, f, d, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3274([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_32([a, c, h, f, g, e, i, j], is_dual)
    } else {
        select_973([b, c, d, e, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3272([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3273([c, a, b, h, e, f, i, j, k, g], is_dual)
    } else {
        select_3274([b, c, a, d, f, e, g, h, k, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3275([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3274([b, c, a, e, g, f, h, j, l, k, i], is_dual)
    } else {
        select_3274([a, c, b, d, f, g, i, j, k, l, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_3271([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3272([b, a, c, i, g, f, j, h, l, m, k], is_dual)
    } else {
        select_3275([a, b, d, h, e, f, g, k, j, i, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3267([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3268([a, c, d, g, e, h, i, j, f, k, l], is_dual)
    } else {
        select_3271([b, c, a, d, e, g, h, f, j, k, i, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3256([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3257([a, b, c, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_3267([c, b, d, e, f, h, g, i, a, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3237([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3238([b, c, d, e, j, g, a, h, i, l, k, m, n], is_dual)
    } else {
        select_3256([b, c, d, e, f, a, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3280([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_295([d, b, c, f, h, i, g], is_dual)
    } else {
        select_774([a, d, e, b, c, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3282([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_43([d, i, j, a, g, e, b], !is_dual)
    } else {
        select_276([d, c, b, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3281([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3282([a, c, b, h, f, e, i, j, g, k], is_dual)
    } else {
        select_550([b, a, f, d, e, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3279([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3280([c, a, d, b, e, f, g, h, i, j], is_dual)
    } else {
        select_3281([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3283([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2002([a, c, e, b, g, f, h, i, k, j], is_dual)
    } else {
        select_497([a, b, f, d, h, g, j, i, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3278([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3279([a, b, c, d, h, f, g, j, k, l, i], is_dual)
    } else {
        select_3283([a, b, c, e, d, f, h, g, j, i, l, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3287([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_87([b, c, d, f, g, e, h], is_dual)
    } else {
        select_1903([a, b, c, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3286([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_82([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_3287([a, b, i, c, g, h, f, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3289([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_40([j, i, a, g, h, b, e], !is_dual)
    } else {
        select_193([a, c, d, f, g, e, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3288([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1592([e, b, c, d, h, g, f, i, j], is_dual)
    } else {
        select_3289([f, a, c, d, g, e, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3285([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3286([b, c, d, a, e, f, g, i, h, j, l], is_dual)
    } else {
        select_3288([b, h, c, d, f, a, g, i, j, k, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3291([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_785([a, b, c, g, f, i, h, j], is_dual)
    } else {
        select_878([a, d, e, h, f, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3293([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_20([g, b, c, d, e, h, j], is_dual)
    } else {
        select_210([h, b, a, e, f, i, g, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3292([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_1991([k, l, e, h, g, a, i], !is_dual)
    } else {
        select_3293([b, a, c, d, e, f, g, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3290([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3291([b, a, c, d, e, f, h, g, j, i, l], is_dual)
    } else {
        select_3292([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3284([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3285([a, b, g, d, e, f, h, i, j, l, k, n], is_dual)
    } else {
        select_3290([a, b, c, h, i, f, g, k, l, m, j, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3277([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3278([a, c, b, d, i, f, h, j, k, g, l, m], is_dual)
    } else {
        select_3284([a, b, d, c, e, f, h, g, i, k, j, m, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3298([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_309([b, a, c, d, e, g, f, h, i], is_dual)
    } else {
        select_137([a, f, c, d, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3297([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3298([a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_1063([i, j, k, f, g, a, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3300([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_564([i, h, f, g, d, b, a, e], !is_dual)
    } else {
        select_96([b, d, c, f, g, e], is_dual)
    }
}
/// n = 11, i = 4
fn select_3299([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_2566([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    } else {
        select_3300([j, k, g, e, i, a, f, h, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3296([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3297([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3299([b, c, d, e, f, g, a, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3295([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_679([a, b, g, d, e, f, h, i, k], is_dual)
    } else {
        select_3296([a, b, c, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3304([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_128([d, b, c, e, f, g], is_dual)
    } else {
        select_335([f, a, g, d, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3303([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3304([a, f, g, e, i, j, k, l], is_dual)
    } else {
        select_1035([e, b, c, d, h, f, g, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3306([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_182([c, d, e, i, f, g], is_dual)
    } else {
        select_199([a, b, d, c, f, h, j, i, k], is_dual)
    }
}
/// n = 6, i = 2
fn select_3307([a, b, c, d, e, f]: [usize; 6], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_39([a, b, c, d, e, f], is_dual)
    } else {
        select_39([a, b, c, d, f, e], is_dual)
    }
}
/// n = 13, i = 5
fn select_3305([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3306([a, b, c, d, e, f, g, h, i, k, m], is_dual)
    } else {
        select_3307([l, m, a, j, b, k], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3302([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3303([b, c, d, e, f, g, h, a, i, j, k, m], is_dual)
    } else {
        select_3305([a, b, c, d, e, g, h, f, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3308([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_926([a, e, d, g, b, f, h, i], is_dual)
    } else {
        select_2893([a, c, b, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_3301([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3302([a, b, d, c, e, f, g, h, i, l, j, m, k], is_dual)
    } else {
        select_3308([a, c, b, h, f, j, i, k, g, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3294([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3295([a, c, b, d, j, g, f, l, h, m, k], is_dual)
    } else {
        select_3301([a, b, c, h, e, f, g, i, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3276([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3277([c, a, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3294([c, b, d, e, f, a, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3236([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_3237([b, c, a, d, f, e, g, h, j, i, l, k, m, n], is_dual)
    } else {
        select_3276([b, a, c, d, f, e, h, j, i, k, l, g, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_3313([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_427([a, c, b, g, e, h, f, i], is_dual)
    } else {
        select_1469([a, c, d, f, e, g, i, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3312([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3313([a, b, c, e, f, g, i, j, h], is_dual)
    } else {
        select_2425([f, j, g, l, a, b, k, i, h, d, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3311([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < g) || (is_dual && c > g) {
        select_2449([f, h, j, l, a, b, c, k, i, g, d], !is_dual)
    } else {
        select_3312([a, b, c, d, e, f, h, g, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 4
fn select_3319([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_35([d, b, c, e, f, g], is_dual)
    } else {
        select_36([d, h, i, a, g], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3320([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_21([i, j, e, d, h, a], !is_dual)
    } else {
        select_26([g, b, c, f], is_dual)
    }
}
/// n = 11, i = 5
fn select_3318([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3319([d, b, c, e, g, f, j, h, k], is_dual)
    } else {
        select_3320([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3317([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_1938([d, i, j, k, g, e, a, h, b, f], !is_dual)
    } else {
        select_3318([k, i, j, g, e, h, a, d, b, f, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3316([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_2010([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_3317([a, b, c, e, d, g, f, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3315([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3316([b, a, c, e, d, f, g, h, k, i, j], is_dual)
    } else {
        select_548([e, i, j, k, d, f, a, b, h], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3314([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3315([a, b, d, e, f, c, g, h, j, k, i], is_dual)
    } else {
        select_2008([a, c, d, e, b, g, f, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3310([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3311([a, b, c, e, d, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3314([a, b, c, d, f, h, i, j, k, g, l], is_dual)
    }
}
/// n = 10, i = 2
fn select_3326([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_234([c, d, e, f, g, h, i], is_dual)
    } else {
        select_234([a, b, g, h, e, f, j], is_dual)
    }
}
/// n = 11, i = 2
fn select_3325([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3326([a, f, c, d, e, j, g, h, i, k], is_dual)
    } else {
        select_3326([b, e, c, d, f, i, g, h, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3327([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1018([h, b, c, a, f, e, g, i, j], is_dual)
    } else {
        select_1018([g, b, d, a, f, e, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3324([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3325([b, c, a, d, f, g, e, h, i, j, k], is_dual)
    } else {
        select_3327([d, a, f, g, h, e, i, j, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3329([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_349([b, e, d, a, f, g, h, i], is_dual)
    } else {
        select_1005([b, a, c, d, f, g, h, e, i, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3328([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_2038([a, g, c, d, j, e, f, h, i, k, l], is_dual)
    } else {
        select_3329([e, a, h, b, k, f, g, i, j, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3323([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3324([b, c, d, e, a, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3328([c, d, a, e, b, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 10, i = 3
fn select_3332([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < f) || (is_dual && b > f) {
        select_86([a, f, d, e, b, g, h, i, j], is_dual)
    } else {
        select_1750([a, e, d, b, c, g, f, i, h, j], is_dual)
    }
}
/// n = 12, i = 3
fn select_3331([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_81([a, b, d, e, f, i, h, j], is_dual)
    } else {
        select_3332([a, b, c, j, d, g, h, i, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3330([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3331([a, b, e, f, c, d, g, h, i, j, k, l], is_dual)
    } else {
        select_263([b, c, d, e, a, h, g, i, k, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3322([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3323([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    } else {
        select_3330([b, c, a, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3335([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2908([g, a, b, c, e, f, h, i, j], is_dual)
    } else {
        select_2908([f, a, b, d, e, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3336([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3206([e, f, i, j, k, g, a, h, b, c], !is_dual)
    } else {
        select_3206([e, g, i, j, k, f, a, h, b, d], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3334([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3335([g, j, k, l, h, a, b, i, c, d], !is_dual)
    } else {
        select_3336([h, j, k, l, g, a, b, i, c, e, f], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3339([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_110([a, c, b, d, f, g, e, h, i], is_dual)
    } else {
        select_110([b, c, a, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3338([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_531([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_3339([b, c, d, e, a, f, g, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3337([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_418([a, b, c, e, d, f, g, h], is_dual)
    } else {
        select_3338([a, b, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3333([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3334([b, c, d, e, a, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3337([g, j, k, l, h, b, c, a, i], !is_dual)
    }
}
/// n = 14, i = 5
fn select_3321([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_3322([c, b, d, a, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3333([b, a, c, d, h, i, j, k, l, m, g, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3309([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && d < l) || (is_dual && d > l) {
        select_3310([a, b, c, h, i, g, j, k, l, d, m, n], is_dual)
    } else {
        select_3321([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3235([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < h) || (is_dual && m > h) {
        select_3236([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3309([a, c, b, d, e, f, g, i, j, k, l, m, h, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3346([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3298([c, a, d, e, f, b, g, h, j, i], is_dual)
    } else {
        select_3298([c, b, d, e, f, a, g, i, j, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3345([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3346([d, e, i, j, k, g, h, a, b, f], !is_dual)
    } else {
        select_409([d, e, j, g, k, f, c, h], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3344([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3345([j, l, m, a, b, k, h, g, d, c, i], !is_dual)
    } else {
        select_1576([a, b, d, e, g, f, j, h, i, l, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3348([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_353([a, c, d, b, g, f, e, i, h], is_dual)
    } else {
        select_1788([a, f, j, e, b, h, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3350([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_95([a, c, f, d, e, g, h, i], is_dual)
    } else {
        select_557([a, b, g, d, e, f, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3349([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3350([a, b, c, d, e, g, h, j, i, k, l], is_dual)
    } else {
        select_316([a, c, d, f, e, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3347([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < i) || (is_dual && b > i) {
        select_3348([a, c, d, i, g, b, h, k, j, l], is_dual)
    } else {
        select_3349([a, c, d, e, b, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3343([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3344([a, b, c, d, e, f, h, i, j, g, k, l, m], is_dual)
    } else {
        select_3347([b, c, a, d, e, f, g, i, j, h, k, m], is_dual)
    }
}
/// n = 11, i = 5
fn select_3353([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2938([d, i, j, g, k, a, e, b, h], !is_dual)
    } else {
        select_526([a, d, e, c, g, f, h, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3352([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3353([f, j, l, a, i, k, b, h, c, d, g], !is_dual)
    } else {
        select_526([a, f, i, l, b, k, g, e, h], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3356([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_1859([a, d, c, f, e, g, h, k, j, i], is_dual)
    } else {
        select_1862([k, l, g, h, a, i, b, e, c], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3355([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1898([b, d, g, f, a, i, j, h, l], is_dual)
    } else {
        select_3356([a, b, d, c, f, e, h, g, j, k, i, l], is_dual)
    }
}
/// n = 12, i = 5
fn select_3354([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3355([a, b, c, d, e, f, g, i, h, j, k, l], is_dual)
    } else {
        select_3132([a, g, d, h, b, f, j, l, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3351([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3352([b, c, d, a, e, f, h, g, i, k, j, l], is_dual)
    } else {
        select_3354([b, c, d, e, g, h, a, f, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3342([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < h) || (is_dual && k > h) {
        select_3343([a, c, b, d, e, f, g, h, i, j, l, k, m], is_dual)
    } else {
        select_3351([a, b, c, d, e, g, i, j, k, l, h, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3361([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_1281([a, c, d, e, b, f, g, h, j], is_dual)
    } else {
        select_2736([b, c, d, e, a, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3360([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_408([b, f, d, a, e, h, g, i], is_dual)
    } else {
        select_3361([b, a, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3359([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3360([a, b, d, c, e, f, g, h, i, k, j], is_dual)
    } else {
        select_848([b, a, c, f, e, h, g, j, l, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3363([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_408([b, f, d, a, e, h, g, i], is_dual)
    } else {
        select_2938([b, a, c, d, g, f, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3362([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3360([a, b, d, c, e, f, g, h, j, i, k], is_dual)
    } else {
        select_3363([a, c, d, b, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3358([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3359([a, b, c, e, d, h, g, i, f, k, j, l], is_dual)
    } else {
        select_3362([a, b, d, e, c, h, f, i, j, g, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3357([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3358([c, a, b, d, e, g, h, i, j, f, k, l], is_dual)
    } else {
        select_3358([c, b, a, d, e, f, h, i, j, g, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3341([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_3342([a, b, c, e, d, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_3357([a, b, c, e, i, g, h, j, d, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_3369([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_178([g, i, h, a, f, e, d, c], !is_dual)
    } else {
        select_3114([h, i, g, a, f, d, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3368([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_1062([b, c, d, a, f, e, g, i, h], is_dual)
    } else {
        select_3369([h, j, i, f, e, a, b, c, g], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3370([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3207([b, c, d, e, f, g, j, h, i], is_dual)
    } else {
        select_781([i, k, j, g, f, b, c, a, h], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3367([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3368([a, c, b, d, h, g, i, j, f, k], is_dual)
    } else {
        select_3370([a, c, b, d, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3373([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_520([b, c, d, e, f, g, a, h, i, j], is_dual)
    } else {
        select_2419([b, a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3372([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_3373([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3132([a, e, j, b, h, i, f, c, g], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3371([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_1412([e, h, f, j, k, a, b, i, c, g], !is_dual)
    } else {
        select_3372([b, a, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3366([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_3367([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3371([a, b, c, d, f, h, i, j, k, l, g], is_dual)
    }
}
/// n = 8, i = 2
fn select_3377([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_295([a, b, c, d, f, g, h], is_dual)
    } else {
        select_170([b, c, d, e, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_3376([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_699([a, b, c, d, e, f, h, i, j, g, k], is_dual)
    } else {
        select_3377([a, c, d, b, e, f, g, h], is_dual)
    }
}
/// n = 9, i = 4
fn select_3378([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_1528([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_52([a, c, f, e, d, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_3375([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3376([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3378([a, g, c, d, f, b, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3381([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_384([c, b, d, f, e, g, i, h, j, k], is_dual)
    } else {
        select_1987([b, h, c, a, e, g, f, j, i, k], is_dual)
    }
}
/// n = 10, i = 2
fn select_3382([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_258([e, b, d, g, f, h, i, j], is_dual)
    } else {
        select_258([f, a, c, h, e, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3380([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3381([c, b, e, d, a, f, h, g, j, i, k], is_dual)
    } else {
        select_3382([a, c, d, e, b, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3379([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_1368([b, c, d, a, e, h, f, i, g, j], is_dual)
    } else {
        select_3380([a, b, d, c, e, h, g, i, f, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3374([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && g < k) || (is_dual && g > k) {
        select_3375([a, b, c, h, i, f, j, k, l, m, g], is_dual)
    } else {
        select_3379([a, c, b, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3365([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < k) || (is_dual && h > k) {
        select_3366([a, b, c, d, i, f, g, j, k, l, h, m], is_dual)
    } else {
        select_3374([a, b, d, c, e, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_3386([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1401([g, a, b, e, d, f], is_dual)
    } else {
        select_1650([a, c, b, d, g, f, e, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3388([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_647([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_1098([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3387([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_1062([f, k, j, l, a, i, g, c, b], !is_dual)
    } else {
        select_3388([f, b, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3385([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3386([f, l, g, a, b, j, i, c, h], !is_dual)
    } else {
        select_3387([a, b, c, d, e, f, g, h, j, k, l, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3391([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_108([a, c, d, b, g, e, h, f], is_dual)
    } else {
        select_1567([a, b, d, c, g, f, h, e, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3390([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3391([b, c, a, d, f, e, g, h, i], is_dual)
    } else {
        select_2948([a, b, c, g, f, h, i, e, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3389([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_2443([f, e, i, j, a, b, h, d, g], !is_dual)
    } else {
        select_3390([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3384([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3385([a, b, c, d, e, f, g, h, j, k, i, l], is_dual)
    } else {
        select_3389([f, j, g, l, a, b, i, k, c, h], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3395([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_559([a, b, e, c, d, f, g, h], is_dual)
    } else {
        select_559([a, b, e, d, c, f, g, h], is_dual)
    }
}
/// n = 7, i = 2
fn select_3396([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_2168([a, b, c, d, e, f, g], is_dual)
    } else {
        select_48([a, g, f, b, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3394([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3395([g, e, i, j, f, a, h, b], !is_dual)
    } else {
        select_3396([e, b, f, c, d, g, h], is_dual)
    }
}
/// n = 13, i = 5
fn select_3393([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_947([b, e, f, c, d, i, g, h, j], is_dual)
    } else {
        select_3394([a, b, g, h, e, f, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3392([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3393([a, c, d, e, f, b, h, i, g, j, k, l, m], is_dual)
    } else {
        select_3393([b, c, d, e, g, a, h, i, f, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3383([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3384([a, b, c, d, i, f, g, j, l, m, h, k], is_dual)
    } else {
        select_3392([a, b, d, c, e, f, g, h, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3364([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3365([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    } else {
        select_3383([a, b, d, e, f, g, h, c, i, k, j, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3340([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_3341([a, b, d, e, c, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3364([a, b, d, c, e, f, g, h, i, k, l, m, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3234([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_3235([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_3340([a, b, c, d, e, j, g, h, l, m, n, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3402([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < j) || (is_dual && f > j) {
        select_3335([i, k, f, l, g, a, b, j, c, h], !is_dual)
    } else {
        select_1003([b, c, a, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3401([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < b) || (is_dual && e > b) {
        select_767([c, a, d, b, f, g, e, h, i, j, k], is_dual)
    } else {
        select_3402([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 9, i = 3
fn select_3406([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_204([f, a, b, d, e, g, h, i], is_dual)
    } else {
        select_2019([b, a, d, c, e, g, f, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3405([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_707([i, e, j, k, a, f, g, b, h], !is_dual)
    } else {
        select_3406([b, c, a, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3407([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_2248([a, b, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_1185([h, e, j, k, a, f, i, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3404([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3405([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_3407([a, b, c, d, e, f, h, i, j, k, g], is_dual)
    }
}
/// n = 11, i = 5
fn select_3408([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1302([a, b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_1302([a, b, c, d, e, f, g, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3403([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3404([a, b, d, e, f, c, g, h, i, j, k], is_dual)
    } else {
        select_3408([a, c, d, e, f, b, h, g, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3400([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_3401([b, c, d, a, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3403([b, c, d, e, h, g, i, j, a, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3399([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < l) || (is_dual && h > l) {
        select_3400([j, a, c, b, d, e, g, l, m, h, n, k], is_dual)
    } else {
        select_3321([a, b, c, e, f, d, g, i, h, j, k, l, n, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3414([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_2532([a, c, i, d, f, g, l, m, j], is_dual)
    } else {
        select_342([f, b, j, e, k, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3416([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_114([a, c, f, d, h, g], is_dual)
    } else {
        select_57([i, j, f, d, e, g, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3418([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_41([f, h, a, e, c], !is_dual)
    } else {
        select_26([g, d, i, b], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3417([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_104([a, c, d, h, g], is_dual)
    } else {
        select_3418([a, b, g, e, f, i, j, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3415([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3416([b, c, f, a, e, g, i, h, j, k], is_dual)
    } else {
        select_3417([b, c, a, d, e, g, f, h, i, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3413([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3414([a, b, c, d, e, f, g, h, j, i, k, l, m], is_dual)
    } else {
        select_3415([f, b, g, e, i, h, a, k, j, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_3421([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_187([a, j, c, e, k], is_dual)
    } else {
        select_449([b, c, d, e, f, g, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3422([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < d) || (is_dual && i > d) {
        select_460([d, a, c, f, e, g, h, j], is_dual)
    } else {
        select_25([i, b, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3420([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3421([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3422([b, e, d, g, f, a, i, h, j, k], is_dual)
    }
}
/// n = 13, i = 4
fn select_3419([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3420([a, b, e, d, h, g, j, i, l, k, m], is_dual)
    } else {
        select_926([a, c, e, k, f, h, m, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3412([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3413([a, d, c, e, f, b, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3419([a, d, b, f, e, c, h, g, j, i, l, k, m], is_dual)
    }
}
/// n = 10, i = 4
fn select_3424([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_353([b, c, a, e, f, d, g, h, i], is_dual)
    } else {
        select_676([c, b, d, e, f, a, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3423([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3424([a, b, c, d, g, f, h, j, i, k], is_dual)
    } else {
        select_1232([b, d, e, a, f, g, i, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_3411([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3412([a, b, c, d, e, f, g, h, i, j, l, m, k], is_dual)
    } else {
        select_3423([a, b, c, d, f, i, h, k, l, j, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_3427([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_888([b, d, c, e, a, f, g, h], is_dual)
    } else {
        select_479([d, b, e, a, c, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3426([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1712([c, a, e, f, g, i, h], is_dual)
    } else {
        select_3427([a, b, d, c, h, j, g, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3428([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_507([b, g, c, d, a, i, h], is_dual)
    } else {
        select_1248([b, a, e, c, d, f, g, h, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3425([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3426([a, c, d, b, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3428([a, d, e, f, c, g, b, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3410([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_3411([a, b, c, d, e, f, g, h, j, k, i, l, m], is_dual)
    } else {
        select_3425([b, a, d, c, e, i, k, g, m, j, l], is_dual)
    }
}
/// n = 11, i = 3
fn select_3433([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_383([a, c, d, e, b, f, g, i, h, j], is_dual)
    } else {
        select_832([a, b, c, i, f, h, j, g, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3435([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_745([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_745([a, b, c, d, f, g, e, h, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3436([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_87([b, f, d, e, a, g, i], is_dual)
    } else {
        select_88([c, a, d, b, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3434([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3435([a, d, c, g, e, i, f, h, j], is_dual)
    } else {
        select_3436([a, f, d, b, h, e, i, g, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3432([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_3433([a, c, d, b, e, f, h, i, g, j, k], is_dual)
    } else {
        select_3434([a, d, c, g, b, f, h, i, j, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3439([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_43([a, b, f, d, h, e, g], is_dual)
    } else {
        select_43([a, c, e, d, g, f, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3438([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < b) || (is_dual && g > b) {
        select_2643([a, c, b, d, e, f, g, h, i], is_dual)
    } else {
        select_3439([a, c, g, e, f, b, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3437([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3438([a, b, g, c, e, i, f, j, h], is_dual)
    } else {
        select_3438([a, b, f, d, e, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 3
fn select_3431([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3432([a, b, e, d, c, g, f, h, i, j, k], is_dual)
    } else {
        select_3437([a, b, c, e, h, j, g, f, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3443([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_91([d, b, c, f, e, g, i], is_dual)
    } else {
        select_629([g, i, k, d, j, h, a, e], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3445([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_21([d, h, i, g, a, f], !is_dual)
    } else {
        select_35([d, b, c, e, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3444([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1079([a, b, i, j], !is_dual)
    } else {
        select_3445([h, i, j, f, b, g, e, c, d], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3442([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3443([a, c, b, d, f, g, h, e, i, j, k], is_dual)
    } else {
        select_3444([g, h, i, k, j, d, f, a, b, e], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3447([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2139([a, h, c, e, f, i, g, k, l], is_dual)
    } else {
        select_347([a, b, d, g, e, h, j, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3446([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1575([f, b, c, e, h, g, j, k, i, l], is_dual)
    } else {
        select_3447([a, c, b, d, f, g, i, j, k, h, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3441([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3442([b, c, h, f, a, g, i, k, l, j, m], is_dual)
    } else {
        select_3446([b, c, d, e, a, f, g, i, j, h, k, l, m], is_dual)
    }
}
/// n = 11, i = 4
fn select_3450([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_347([a, b, d, h, f, g, j, k], is_dual)
    } else {
        select_347([a, c, e, g, f, h, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3449([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_511([c, d, f, e, a, g, h, i, j], is_dual)
    } else {
        select_3450([c, b, d, a, e, g, f, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3451([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_888([b, d, f, e, a, g, h, j], is_dual)
    } else {
        select_2696([c, d, b, a, e, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3448([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3449([b, e, d, a, c, g, f, h, k, j, i], is_dual)
    } else {
        select_3451([a, c, e, b, f, g, i, k, h, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3440([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3441([a, b, c, d, e, g, h, i, f, j, k, l, m], is_dual)
    } else {
        select_3448([f, a, b, c, d, h, i, g, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3430([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_3431([a, c, b, g, e, f, h, k, i, j, l], is_dual)
    } else {
        select_3440([a, b, d, c, h, i, f, g, l, k, m, j, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3455([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2480([g, i, d, e, h, a, b, f, c], !is_dual)
    } else {
        select_3251([g, h, i, e, d, f, b, a, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3454([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3455([i, j, h, a, f, e, c, b, g], !is_dual)
    } else {
        select_684([c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3458([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_48([a, c, d, f, h], is_dual)
    } else {
        select_57([g, f, h, d, e, c, b], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3457([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2506([h, g, i, e, d, f, b, a, c], !is_dual)
    } else {
        select_3458([h, d, i, e, g, a, b, f], !is_dual)
    }
}
/// n = 8, i = 3
fn select_3459([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_172([e, c, d, a, f, g], is_dual)
    } else {
        select_2453([b, a, c, d, e, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3456([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_3457([i, j, h, a, f, e, b, c, g], !is_dual)
    } else {
        select_3459([a, c, d, e, f, h, g, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3453([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3454([g, a, b, d, e, f, h, i, k, j], is_dual)
    } else {
        select_3456([f, a, c, d, e, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3462([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_2785([a, b, c, h, e, f, j, i, k], is_dual)
    } else {
        select_178([a, c, d, e, i, g, h, k], is_dual)
    }
}
/// n = 9, i = 4
fn select_3464([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_147([f, g, i, h, d, a, b, e], !is_dual)
    } else {
        select_50([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3463([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3464([a, c, d, e, f, g, i, k, h], is_dual)
    } else {
        select_927([a, b, d, g, h, j, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_3461([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3462([b, c, a, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3463([h, e, k, l, i, j, a, f, b, c, g], !is_dual)
    }
}
/// n = 10, i = 2
fn select_3466([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_258([a, c, e, f, h, g, i, j], is_dual)
    } else {
        select_258([a, b, d, g, h, f, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3467([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_1284([a, b, c, d, f, h, i, j, g], is_dual)
    } else {
        select_2869([b, c, e, a, d, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3465([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && l < i) || (is_dual && l > i) {
        select_3466([b, a, f, d, e, g, h, i, j, k], is_dual)
    } else {
        select_3467([a, c, b, g, h, f, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3460([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < k) || (is_dual && f > k) {
        select_3461([b, a, d, c, i, g, k, m, j, f, n, l], is_dual)
    } else {
        select_3465([b, c, d, e, a, g, h, f, j, i, l, k, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3452([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3453([c, i, b, d, k, a, f, g, m, j, l], is_dual)
    } else {
        select_3460([b, a, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3429([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3430([c, a, d, e, f, b, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3452([c, b, d, e, f, a, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3409([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3410([c, b, d, e, a, f, g, i, j, h, l, k, m], is_dual)
    } else {
        select_3429([a, b, c, e, d, f, h, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3398([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3399([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    } else {
        select_3409([a, c, d, b, e, f, g, h, j, k, i, l, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3475([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_2050([d, a, c, e, f, g, h, i, j], is_dual)
    } else {
        select_2204([d, i, j, g, f, b, c], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3476([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < f) || (is_dual && d > f) {
        select_128([d, h, i, f, a, b], !is_dual)
    } else {
        select_191([g, f, h, i, d, a, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3474([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_3475([b, a, c, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3476([a, f, b, h, e, g, d, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3473([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3474([j, i, l, a, g, k, b, c, e, h], !is_dual)
    } else {
        select_2917([a, c, d, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3478([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_511([b, c, g, d, a, f, h, i, j], is_dual)
    } else {
        select_774([b, c, d, a, e, f, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3477([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3478([a, d, c, b, e, g, h, f, j, i], is_dual)
    } else {
        select_710([a, d, f, e, g, b, h, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_3472([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3473([a, b, c, d, e, g, i, j, k, h, l, m], is_dual)
    } else {
        select_3477([c, d, b, a, f, i, h, g, k, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3471([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1243([c, d, a, e, f, g, i, h, k, l, j], is_dual)
    } else {
        select_3472([a, b, c, d, h, f, i, j, g, k, l, m, n], is_dual)
    }
}
/// n = 9, i = 4
fn select_3483([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_460([b, a, c, d, e, f, g, i], is_dual)
    } else {
        select_586([h, i, d, g, b, a, e], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3482([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_520([a, b, d, h, e, f, g, i, j, k], is_dual)
    } else {
        select_3483([g, i, k, h, j, a, e, c, b], !is_dual)
    }
}
/// n = 9, i = 2
fn select_3484([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_182([a, c, f, g, e, i], is_dual)
    } else {
        select_182([b, d, e, g, f, h], is_dual)
    }
}
/// n = 12, i = 4
fn select_3481([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3482([a, c, f, d, g, h, i, e, j, k, l], is_dual)
    } else {
        select_3484([b, e, c, d, g, h, f, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3486([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_420([b, g, c, d, f, h], is_dual)
    } else {
        select_1063([h, g, j, e, i, a, b, c], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3488([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_2617([a, b, c, e, f, g, i, j, k, l, m], is_dual)
    } else {
        select_521([b, c, d, f, g, h, i, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3489([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_104([d, b, c, e, f], is_dual)
    } else {
        select_20([d, i, e, h, g, a, f], !is_dual)
    }
}
/// n = 14, i = 5
fn select_3487([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3488([a, c, d, e, i, f, g, h, k, j, l, m, n], is_dual)
    } else {
        select_3489([i, m, n, a, j, l, f, b, c], !is_dual)
    }
}
/// n = 14, i = 5
fn select_3485([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && f < l) || (is_dual && f > l) {
        select_3486([k, m, n, j, i, f, a, b, l, g], !is_dual)
    } else {
        select_3487([a, c, e, b, d, h, f, g, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3480([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < f) || (is_dual && c > f) {
        select_3481([b, f, d, e, g, c, h, i, j, k, l, m], is_dual)
    } else {
        select_3485([a, b, c, e, d, g, i, h, f, k, j, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3491([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_687([a, c, b, h, i, f, k, m, n], is_dual)
    } else {
        select_1024([b, d, e, a, f, g, h, i, j, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3490([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_3465([b, c, a, d, e, f, h, i, g, j, k, l, m], is_dual)
    } else {
        select_3491([a, c, b, d, e, g, h, i, j, f, l, k, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3479([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3480([c, b, d, f, e, g, a, i, h, k, j, l, m, n], is_dual)
    } else {
        select_3490([c, a, d, e, f, g, b, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3470([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && m < k) || (is_dual && m > k) {
        select_3471([a, c, d, b, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_3479([a, b, c, d, e, f, g, h, i, j, l, m, n, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3495([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_854([b, a, f, d, e, h, i, j], is_dual)
    } else {
        select_662([a, d, e, c, g, f, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3497([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_2159([e, b, d, a, g, f, h, i, j], is_dual)
    } else {
        select_3100([b, a, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 5
fn select_3499([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_1923([i, j, k, h, f, a, d, e, b], !is_dual)
    } else {
        select_59([g, j, k, a, f, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3500([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_43([g, h, j, d, a, f, c], !is_dual)
    } else {
        select_202([i, g, j, h, d, e, a, b], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3498([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < g) || (is_dual && d > g) {
        select_3499([a, b, c, e, f, g, d, h, i, j, k], is_dual)
    } else {
        select_3500([a, b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3496([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3497([d, j, g, k, h, i, e, a, b, f], !is_dual)
    } else {
        select_3498([a, b, c, d, e, f, g, i, j, k, h], is_dual)
    }
}
/// n = 11, i = 5
fn select_3494([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3495([b, c, a, d, g, e, j, h, f, i], is_dual)
    } else {
        select_3496([a, c, b, d, g, f, j, i, e, h, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3502([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_2248([a, b, c, d, e, g, h, f, i, j], is_dual)
    } else {
        select_580([b, a, c, d, g, e, f, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3504([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_126([a, f, c, d, e, g, h, j], is_dual)
    } else {
        select_126([b, e, c, d, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3503([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_3504([a, b, c, d, f, g, h, e, i, j], is_dual)
    } else {
        select_531([a, b, c, d, f, g, e, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3501([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_3502([b, c, d, e, a, f, g, h, i, j], is_dual)
    } else {
        select_3503([a, c, d, e, f, b, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3493([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3494([k, i, l, a, g, f, j, c, b, d, h], !is_dual)
    } else {
        select_3501([a, d, c, e, f, i, g, h, j, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3507([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_505([a, c, d, e, b, f, g, h, j], is_dual)
    } else {
        select_505([a, b, d, e, c, f, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3509([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_95([a, c, b, d, e, f, g, h], is_dual)
    } else {
        select_652([a, f, d, e, b, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3508([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_408([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_3509([a, b, c, d, g, f, i, j, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3506([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_3507([a, b, c, f, e, h, g, j, l, i], is_dual)
    } else {
        select_3508([b, a, d, c, e, f, g, h, i, k, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3512([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < d) || (is_dual && h > d) {
        select_897([b, a, c, e, d, f, g, i, h], is_dual)
    } else {
        select_3004([a, b, f, e, h, i, g, d, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3513([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2724([a, b, f, e, h, g, i, d], is_dual)
    } else {
        select_897([a, b, c, e, d, f, g, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3511([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3512([a, b, c, d, f, g, e, h, i, j], is_dual)
    } else {
        select_3513([b, a, c, d, e, g, f, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3515([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_927([a, b, d, e, g, i, f], is_dual)
    } else {
        select_927([a, c, d, e, f, h, g], is_dual)
    }
}
/// n = 9, i = 3
fn select_3516([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_2540([b, c, e, d, f, g, h], is_dual)
    } else {
        select_489([a, b, g, d, f, e, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3514([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_3515([e, d, i, j, a, h, f, g, b], !is_dual)
    } else {
        select_3516([b, c, a, e, f, g, d, i, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3510([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3511([a, b, c, d, e, f, g, i, j, h], is_dual)
    } else {
        select_3514([a, c, b, d, e, g, f, h, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3505([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3506([b, a, d, c, e, f, g, h, j, i, l, k], is_dual)
    } else {
        select_3510([k, l, h, a, b, j, f, d, c, i], !is_dual)
    }
}
/// n = 12, i = 5
fn select_3492([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3493([b, c, a, d, e, g, f, h, i, k, j, l], is_dual)
    } else {
        select_3505([a, b, c, d, e, g, h, i, j, k, f, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3469([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < g) || (is_dual && l > g) {
        select_3470([a, b, d, e, c, f, h, g, i, j, k, m, l, n], is_dual)
    } else {
        select_3492([b, a, d, c, e, k, h, l, m, n, g, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3468([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3469([a, c, b, d, e, f, h, i, j, g, k, l, m, n], is_dual)
    } else {
        select_3469([b, c, a, d, e, f, g, i, j, h, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3397([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3398([a, b, c, e, f, d, g, h, j, i, l, k, m, n], is_dual)
    } else {
        select_3468([a, b, c, e, d, f, g, h, j, k, m, i, n, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3233([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < m) || (is_dual && k > m) {
        select_3234([d, e, b, f, c, a, i, j, h, g, l, m, n, k], is_dual)
    } else {
        select_3397([d, e, b, c, f, a, i, j, h, k, g, l, n, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_3526([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_586([e, b, a, d, g, f, h], is_dual)
    } else {
        select_33([b, a, c, d, f, e, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3525([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_888([a, b, e, d, f, g, i, j], is_dual)
    } else {
        select_3526([a, b, c, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3528([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_104([a, e, f, h, j], is_dual)
    } else {
        select_170([b, c, d, g, i], is_dual)
    }
}
/// n = 7, i = 2
fn select_3529([a, b, c, d, e, f, g]: [usize; 7], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_140([a, b, c, d, e, g, f], is_dual)
    } else {
        select_355([a, b, c, f, g, e], is_dual)
    }
}
/// n = 10, i = 3
fn select_3527([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3528([b, c, d, f, a, e, g, h, i, j], is_dual)
    } else {
        select_3529([c, d, g, f, a, i, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3524([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3525([b, c, d, e, h, a, g, i, j, k], is_dual)
    } else {
        select_3527([b, c, a, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3523([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3524([a, b, d, c, e, g, i, j, k, h, l], is_dual)
    } else {
        select_3477([a, c, d, b, f, i, h, g, k, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3532([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3528([d, b, c, e, a, f, g, h, i, j], is_dual)
    } else {
        select_1467([b, c, g, e, a, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3531([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_3525([a, d, c, f, g, b, h, i, j, k], is_dual)
    } else {
        select_3532([a, c, b, d, e, f, h, g, i, j, l], is_dual)
    }
}
/// n = 11, i = 4
fn select_3533([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_676([c, b, g, e, f, a, h, i, k], is_dual)
    } else {
        select_3478([b, c, d, a, e, f, h, g, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_3530([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3531([a, b, c, d, g, e, j, i, k, h, l, m], is_dual)
    } else {
        select_3533([c, b, a, d, f, h, i, g, k, j, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3522([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3523([b, a, d, e, f, c, g, i, j, h, k, l], is_dual)
    } else {
        select_3530([a, b, c, e, f, d, h, i, j, g, l, k, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3521([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_3522([a, b, c, d, f, g, h, e, i, j, k, l, m], is_dual)
    } else {
        select_3522([a, b, c, e, f, g, h, d, i, j, k, l, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3539([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_88([e, b, c, d, g, f, h, i], is_dual)
    } else {
        select_512([a, d, f, c, g, e, i, h, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3538([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3539([a, b, h, c, e, f, g, j, i, k], is_dual)
    } else {
        select_681([a, f, d, i, e, h, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3540([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3539([a, b, g, d, e, f, h, i, k, j], is_dual)
    } else {
        select_35([a, c, j, e, g, k], is_dual)
    }
}
/// n = 11, i = 3
fn select_3537([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3538([c, a, d, e, f, b, g, h, i, j, k], is_dual)
    } else {
        select_3540([c, b, e, d, f, a, h, g, j, i, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3543([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_32([e, a, b, f, h, d, i, g], is_dual)
    } else {
        select_32([d, a, c, f, g, e, i, h], is_dual)
    }
}
/// n = 10, i = 3
fn select_3544([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_91([a, f, b, e, g, i, j], is_dual)
    } else {
        select_521([a, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3542([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3543([d, b, f, e, a, g, j, i, h], is_dual)
    } else {
        select_3544([b, a, d, c, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3541([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < c) || (is_dual && b > c) {
        select_3542([a, d, c, e, f, b, g, h, i, j], is_dual)
    } else {
        select_1986([a, d, b, e, f, c, g, h, i, j], is_dual)
    }
}
/// n = 11, i = 3
fn select_3536([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < f) || (is_dual && i > f) {
        select_3537([b, c, a, e, d, f, h, g, j, i, k], is_dual)
    } else {
        select_3541([a, b, c, g, e, i, h, f, j, k], is_dual)
    }
}
/// n = 12, i = 3
fn select_3535([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < a) || (is_dual && j > a) {
        select_79([b, c, d, a, e, f, g, h, i, k, j, l], is_dual)
    } else {
        select_3536([b, c, d, i, e, g, j, h, a, k, l], is_dual)
    }
}
/// n = 12, i = 3
fn select_3534([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3535([a, b, d, e, f, g, c, h, i, j, k, l], is_dual)
    } else {
        select_3535([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3520([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_3521([a, b, c, d, e, f, i, h, k, l, j, m, n], is_dual)
    } else {
        select_3534([b, d, e, a, f, g, c, i, h, j, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3550([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_350([a, c, d, e, g, f, i, h], is_dual)
    } else {
        select_633([f, j, g, a, d, h, b], !is_dual)
    }
}
/// n = 9, i = 3
fn select_3552([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_460([a, c, d, f, e, g, h, i], is_dual)
    } else {
        select_49([a, b, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3551([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_1078([b, c, e, g, a, i, f, h], is_dual)
    } else {
        select_3552([b, c, a, d, e, f, h, g, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3549([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3550([b, d, c, e, f, a, g, h, i, j], is_dual)
    } else {
        select_3551([b, a, c, d, e, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3548([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < c) || (is_dual && f > c) {
        select_3549([a, b, d, e, g, f, i, h, j, k], is_dual)
    } else {
        select_1073([a, k, j, b, h, i, c, g, e], !is_dual)
    }
}
/// n = 8, i = 2
fn select_3556([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_306([a, b, c, d, f, g, e, h], is_dual)
    } else {
        select_306([b, a, c, d, e, g, f, h], is_dual)
    }
}
/// n = 8, i = 2
fn select_3555([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3556([a, c, d, e, b, f, g, h], is_dual)
    } else {
        select_3556([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 12, i = 3
fn select_3554([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_1228([a, d, b, h, e, f, g, i, j], is_dual)
    } else {
        select_3555([a, b, c, d, j, h, k, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3558([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_972([a, b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_1363([b, a, c, e, g, f, i, j], is_dual)
    }
}
/// n = 13, i = 4
fn select_3557([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1167([a, b, d, e, f, i, j], is_dual)
    } else {
        select_3558([a, b, j, c, g, k, h, l, i, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3553([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3554([b, a, d, c, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3557([b, c, d, e, f, g, h, i, a, j, k, l, m], is_dual)
    }
}
/// n = 13, i = 4
fn select_3547([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < j) || (is_dual && d > j) {
        select_3548([a, b, c, e, j, h, d, i, k, l, m], is_dual)
    } else {
        select_3553([a, b, c, e, d, f, g, h, i, j, k, l, m], is_dual)
    }
}
/// n = 8, i = 3
fn select_3563([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_162([b, e, c, a, f, g, h], is_dual)
    } else {
        select_367([b, a, c, d, f, e, g, h], is_dual)
    }
}
/// n = 9, i = 3
fn select_3562([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_770([a, e, d, c, g, f, i, h], is_dual)
    } else {
        select_3563([a, f, b, d, g, e, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3561([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3562([a, b, c, h, e, f, i, l, j], is_dual)
    } else {
        select_2348([e, f, a, d, j, g, h, k, l, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3566([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_564([a, c, b, e, f, h, i, g], is_dual)
    } else {
        select_21([e, d, b, g, h, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_3565([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3566([b, c, d, a, e, f, h, i, g], is_dual)
    } else {
        select_56([f, b, d, a, e, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3568([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_91([a, g, c, d, e, i, k], is_dual)
    } else {
        select_2213([e, a, b, d, f, h, g, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3569([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3072([e, a, b, f, g, d, i, j, h, k], is_dual)
    } else {
        select_3072([d, a, c, f, g, e, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3567([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3568([c, d, a, e, b, f, g, h, j, k, i], is_dual)
    } else {
        select_3569([d, b, c, a, e, f, g, i, j, h, k], is_dual)
    }
}
/// n = 13, i = 5
fn select_3564([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_3565([a, c, h, b, f, i, e, k, j, m], is_dual)
    } else {
        select_3567([a, e, c, d, f, g, h, j, i, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3560([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3561([a, d, b, e, f, c, g, h, j, i, k, l], is_dual)
    } else {
        select_3564([a, d, c, e, f, b, g, h, j, i, l, k, m], is_dual)
    }
}
/// n = 9, i = 4
fn select_3572([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_1199([a, b, c, d, f, e, g, h], is_dual)
    } else {
        select_927([d, e, c, a, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3573([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_370([b, c, d, e, f, a, g, h, j], is_dual)
    } else {
        select_370([a, c, d, e, f, b, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3571([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < h) || (is_dual && b > h) {
        select_3572([g, j, k, a, b, i, c, d, h], !is_dual)
    } else {
        select_3573([a, c, d, b, e, f, g, h, j, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_3570([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_1266([c, g, d, e, a, b, h, i, k, j], is_dual)
    } else {
        select_3571([a, b, c, f, d, h, g, j, l, i, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3559([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < i) || (is_dual && a > i) {
        select_3560([b, c, d, f, e, g, h, i, j, a, k, l, m], is_dual)
    } else {
        select_3570([b, c, d, a, e, f, g, h, j, i, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3546([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3547([b, e, c, d, f, a, g, h, j, i, k, l, m], is_dual)
    } else {
        select_3559([b, c, d, e, f, i, a, h, j, k, l, m, n], is_dual)
    }
}
/// n = 12, i = 4
fn select_3577([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2270([a, c, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_2270([b, c, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 8, i = 3
fn select_3579([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_2431([c, d, a, e, b, f, h, g], is_dual)
    } else {
        select_2431([c, d, b, e, a, f, h, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3578([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_3395([a, c, e, f, g, i, h, j], is_dual)
    } else {
        select_3579([a, c, b, d, h, j, k, g], is_dual)
    }
}
/// n = 13, i = 5
fn select_3576([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3577([a, b, c, e, f, d, g, h, j, l, i, m], is_dual)
    } else {
        select_3578([c, e, d, f, a, b, j, i, l, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3582([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_785([c, d, e, g, f, j, h, i], is_dual)
    } else {
        select_2431([a, b, c, h, f, i, g, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3584([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_170([b, c, a, h, j], is_dual)
    } else {
        select_170([e, f, d, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3585([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_278([c, a, b, d, e, f, g, h], is_dual)
    } else {
        select_140([a, b, e, d, f, g, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3583([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3584([e, a, b, f, c, d, g, h, i, j], is_dual)
    } else {
        select_3585([c, d, b, f, g, a, h, j, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3581([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3582([b, e, c, a, d, g, j, i, k, l, h], is_dual)
    } else {
        select_3583([a, d, b, e, g, f, h, j, i, l], is_dual)
    }
}
/// n = 10, i = 4
fn select_3586([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_785([b, c, d, e, f, h, g, i], is_dual)
    } else {
        select_871([i, h, j, a, f, g, b, c, e], !is_dual)
    }
}
/// n = 13, i = 5
fn select_3580([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < b) || (is_dual && h > b) {
        select_3581([a, c, d, b, e, f, g, h, i, j, k, l], is_dual)
    } else {
        select_3586([a, h, c, e, f, b, j, i, l, m], is_dual)
    }
}
/// n = 13, i = 5
fn select_3575([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3576([c, d, b, a, e, f, g, h, i, j, k, l, m], is_dual)
    } else {
        select_3580([c, d, e, b, f, g, h, a, i, j, k, m, l], is_dual)
    }
}
/// n = 11, i = 5
fn select_3590([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && d < h) || (is_dual && d > h) {
        select_2969([g, d, j, k, i, e, h, a, b, f], !is_dual)
    } else {
        select_2676([b, a, c, e, d, f, g, h, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3591([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_2321([d, j, g, k, i, a, h, e, f, b], !is_dual)
    } else {
        select_2218([a, e, c, d, g, f, i, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3589([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3590([i, k, l, a, j, g, b, h, e, f, c], !is_dual)
    } else {
        select_3591([i, k, l, a, j, h, b, g, f, e, d], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3592([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_1495([a, b, c, f, e, g, i, j, k], is_dual)
    } else {
        select_662([b, g, a, d, h, f, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3588([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_3589([a, b, d, c, g, f, i, h, j, e, k, l], is_dual)
    } else {
        select_3592([a, c, d, b, g, e, i, j, f, h, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3587([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3588([a, b, c, e, f, d, g, h, i, j, k, l], is_dual)
    } else {
        select_3588([a, b, d, e, f, c, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3574([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < b) || (is_dual && i > b) {
        select_3575([a, c, d, e, f, b, g, h, j, i, l, k, m], is_dual)
    } else {
        select_3587([a, c, d, e, f, h, i, j, b, k, m, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3545([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3546([b, a, e, f, d, c, g, h, i, j, l, n, k, m], is_dual)
    } else {
        select_3574([a, b, c, e, f, d, i, h, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3519([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3520([a, b, c, e, f, g, d, h, i, k, l, j, m, n], is_dual)
    } else {
        select_3545([a, b, c, d, e, f, g, h, j, k, i, m, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3518([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3519([a, c, d, b, e, f, g, j, i, k, l, h, m, n], is_dual)
    } else {
        select_3519([b, c, d, a, e, f, g, j, h, k, l, i, m, n], is_dual)
    }
}
/// n = 9, i = 3
fn select_3600([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_478([a, b, d, e, f, g, h, i], is_dual)
    } else {
        select_980([b, c, d, e, f, g, h], is_dual)
    }
}
/// n = 11, i = 3
fn select_3599([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_2917([a, g, b, f, i, k, h], is_dual)
    } else {
        select_3600([a, c, d, e, h, g, j, i, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3603([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_128([e, c, d, a, f, h], is_dual)
    } else {
        select_1949([a, b, c, d, e, f, g], is_dual)
    }
}
/// n = 10, i = 4
fn select_3602([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3603([a, j, h, i, f, b, g, c], !is_dual)
    } else {
        select_560([b, c, a, d, e, f, g], is_dual)
    }
}
/// n = 11, i = 4
fn select_3601([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_257([g, b, c, e, a, f, h, i], is_dual)
    } else {
        select_3602([f, a, d, b, c, g, i, h, j, k], is_dual)
    }
}
/// n = 12, i = 4
fn select_3598([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < a) || (is_dual && h > a) {
        select_3599([b, c, d, e, f, a, g, h, j, i, k], is_dual)
    } else {
        select_3601([b, d, e, h, f, g, a, i, j, l, k], is_dual)
    }
}
/// n = 8, i = 3
fn select_3607([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_87([a, b, c, d, e, f, g], is_dual)
    } else {
        select_335([d, b, f, g, h], is_dual)
    }
}
/// n = 8, i = 3
fn select_3606([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && a < b) || (is_dual && a > b) {
        select_371([c, d, b, e, f, a, g, h], is_dual)
    } else {
        select_3607([c, d, a, e, f, b, g, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3605([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_3606([j, k, g, l, b, a, i, d], !is_dual)
    } else {
        select_949([a, c, b, e, g, f, h, j, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3610([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_519([b, c, d, e, f, g, h, j], is_dual)
    } else {
        select_464([a, c, d, g, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3609([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_3610([a, c, d, b, f, e, i, g, j, h], is_dual)
    } else {
        select_1063([b, c, a, f, g, i, h, e], is_dual)
    }
}
/// n = 10, i = 4
fn select_3608([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < c) || (is_dual && e > c) {
        select_3609([a, b, d, c, f, g, e, h, i, j], is_dual)
    } else {
        select_1064([b, d, e, f, h, g, c, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3604([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3605([a, b, c, e, d, f, h, i, j, k, l, g], is_dual)
    } else {
        select_3608([b, a, c, d, h, g, f, i, k, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3597([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < g) || (is_dual && j > g) {
        select_3598([a, c, d, e, f, g, i, h, k, j, l, m], is_dual)
    } else {
        select_3604([a, b, c, d, j, h, l, g, i, k, m, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3614([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_573([g, i, j, e, d, f, h, a, c], !is_dual)
    } else {
        select_3004([e, a, b, f, h, d, g, i, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3613([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_340([d, j, k, e, f, a, i, h], !is_dual)
    } else {
        select_3614([a, b, c, d, f, e, g, h, j, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_3617([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_20([a, b, d, e, f, i, h], is_dual)
    } else {
        select_109([a, c, d, e, g, h], is_dual)
    }
}
/// n = 9, i = 2
fn select_3616([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_122([a, h, b, e, g, f, i], is_dual)
    } else {
        select_3617([b, a, e, c, d, f, g, h, i], is_dual)
    }
}
/// n = 12, i = 4
fn select_3615([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < j) || (is_dual && h > j) {
        select_3373([i, a, b, c, f, g, j, h, k, l], is_dual)
    } else {
        select_3616([b, c, d, e, f, g, h, i, j], is_dual)
    }
}
/// n = 13, i = 5
fn select_3612([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_3613([h, m, l, i, f, a, b, k, g, j, c], !is_dual)
    } else {
        select_3615([b, c, a, d, e, f, g, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 5
fn select_3611([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && d < c) || (is_dual && d > c) {
        select_3612([a, b, c, e, f, g, d, h, i, j, k, l, m], is_dual)
    } else {
        select_3612([a, b, d, e, f, g, c, h, i, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3596([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3597([a, b, c, f, d, e, g, h, i, j, l, m, k, n], is_dual)
    } else {
        select_3611([a, b, d, e, c, h, g, i, l, k, j, m, n], is_dual)
    }
}
/// n = 8, i = 3
fn select_3623([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && e < a) || (is_dual && e > a) {
        select_39([b, c, d, f, e, g], is_dual)
    } else {
        select_114([d, f, h, a, g, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3622([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_3623([a, e, c, g, f, d, h, j], is_dual)
    } else {
        select_1779([b, d, c, f, e, h, g, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3625([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < d) || (is_dual && f > d) {
        select_39([b, c, e, h, f, g], is_dual)
    } else {
        select_40([i, h, g, d, e, a, b], !is_dual)
    }
}
/// n = 10, i = 3
fn select_3624([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_268([b, c, d, i, f, g, h], is_dual)
    } else {
        select_3625([a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3621([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < j) || (is_dual && g > j) {
        select_3622([a, b, c, e, f, h, i, j, g, k], is_dual)
    } else {
        select_3624([b, c, d, a, f, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3627([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1886([a, b, d, c, f, e, g, i, h, k, j], is_dual)
    } else {
        select_581([a, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3628([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1892([a, d, b, c, e, f, g, h, i], is_dual)
    } else {
        select_437([b, c, a, f, e, h, g, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3626([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3627([b, a, c, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_3628([a, b, g, c, e, f, j, i, k, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3620([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3621([a, c, b, d, e, g, h, i, j, f, k], is_dual)
    } else {
        select_3626([a, b, c, d, e, g, f, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 5
fn select_3631([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_478([b, c, e, d, f, g, h, i], is_dual)
    } else {
        select_1567([g, i, k, f, j, e, b, a, h], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3632([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_453([f, d, i, a, g, b], !is_dual)
    } else {
        select_2379([h, f, i, d, e, g, a, c], !is_dual)
    }
}
/// n = 11, i = 5
fn select_3630([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3631([h, g, j, k, e, b, a, i, c, f, d], !is_dual)
    } else {
        select_3632([b, c, f, e, g, a, i, h, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3629([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3630([a, b, f, d, e, g, i, h, j, k, l], is_dual)
    } else {
        select_1185([a, d, e, c, g, h, i, f], is_dual)
    }
}
/// n = 12, i = 5
fn select_3619([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3620([b, a, c, d, e, f, g, h, i, j, k], is_dual)
    } else {
        select_3629([a, b, d, c, e, f, g, h, j, k, l, i], is_dual)
    }
}
/// n = 9, i = 3
fn select_3637([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_567([b, c, d, e, f, h, g], is_dual)
    } else {
        select_96([a, c, g, f, e, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3638([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && e < d) || (is_dual && e > d) {
        select_96([a, c, d, f, e, g], is_dual)
    } else {
        select_2062([b, c, e, f, d, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3636([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3637([b, c, d, a, e, g, f, h, i], is_dual)
    } else {
        select_3638([b, f, d, a, e, i, g, h, j], is_dual)
    }
}
/// n = 11, i = 5
fn select_3635([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3636([e, h, j, k, f, i, a, b, c, g], !is_dual)
    } else {
        select_684([a, c, d, f, e, h, g, i], is_dual)
    }
}
/// n = 13, i = 5
fn select_3634([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_1412([b, a, d, e, h, f, j, i, m, k], is_dual)
    } else {
        select_3635([k, l, m, j, a, f, h, b, g, c, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3641([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_354([a, c, d, e, g, h, j, i], is_dual)
    } else {
        select_2495([a, b, d, e, f, i, h, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3640([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3641([a, d, b, e, f, g, c, i, h, j, k], is_dual)
    } else {
        select_3641([a, d, c, e, f, g, b, i, h, j, k], is_dual)
    }
}
/// n = 8, i = 2
fn select_3642([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_710([a, b, d, e, c, f, g, h], is_dual)
    } else {
        select_710([a, c, d, e, b, f, g, h], is_dual)
    }
}
/// n = 13, i = 4
fn select_3639([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3640([a, b, c, d, e, i, g, l, j, k, m], is_dual)
    } else {
        select_3642([a, b, c, j, f, k, h, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_3633([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < k) || (is_dual && i > k) {
        select_3634([a, b, e, c, d, g, h, j, k, l, m, i, n], is_dual)
    } else {
        select_3639([a, c, d, e, f, b, h, g, i, j, l, k, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3618([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < j) || (is_dual && c > j) {
        select_3619([a, b, f, j, g, c, h, i, l, n, k, m], is_dual)
    } else {
        select_3633([a, b, d, e, f, c, g, h, i, k, j, m, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3595([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3596([a, b, d, e, f, c, g, h, j, k, l, i, m, n], is_dual)
    } else {
        select_3618([a, b, c, e, f, d, g, i, j, k, h, m, l, n], is_dual)
    }
}
/// n = 10, i = 4
fn select_3649([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < f) || (is_dual && e > f) {
        select_32([b, c, d, f, e, g, i, h], is_dual)
    } else {
        select_2787([b, a, d, c, e, g, f, i, j, h], is_dual)
    }
}
/// n = 11, i = 4
fn select_3648([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < g) || (is_dual && b > g) {
        select_270([f, b, c, e, i, h], is_dual)
    } else {
        select_3649([a, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 10, i = 3
fn select_3651([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_87([c, g, d, f, h, e, i], is_dual)
    } else {
        select_114([a, b, i, f, j, g], is_dual)
    }
}
/// n = 10, i = 3
fn select_3650([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && c < b) || (is_dual && c > b) {
        select_3651([a, d, e, b, c, f, g, h, i, j], is_dual)
    } else {
        select_3651([a, d, e, c, b, f, g, h, i, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3647([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_3648([a, c, d, g, e, h, f, j, i, k, l], is_dual)
    } else {
        select_3650([b, c, d, f, e, i, g, h, j, k], is_dual)
    }
}
/// n = 9, i = 2
fn select_3653([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_342([a, b, c, f, h, i, g], is_dual)
    } else {
        select_258([a, d, b, e, h, g, f, i], is_dual)
    }
}
/// n = 9, i = 2
fn select_3652([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_3653([a, b, c, d, e, g, f, h, i], is_dual)
    } else {
        select_710([a, f, d, e, b, h, g, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_3646([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < l) || (is_dual && j > l) {
        select_3647([c, d, a, b, h, f, g, i, k, l, m, n], is_dual)
    } else {
        select_3652([a, b, g, f, e, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3656([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_518([c, a, d, e, f, g, h, i, k], is_dual)
    } else {
        select_661([a, b, d, e, h, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3658([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_209([b, i, d, e, g, h, k], is_dual)
    } else {
        select_1013([a, c, g, d, e, f, h, i, j, l], is_dual)
    }
}
/// n = 12, i = 4
fn select_3657([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3658([c, a, d, e, f, g, b, h, i, j, k, l], is_dual)
    } else {
        select_3658([c, b, d, e, f, g, a, h, i, j, k, l], is_dual)
    }
}
/// n = 13, i = 4
fn select_3655([a, b, c, d, e, f, g, h, i, j, k, l, m]: [usize; 13], is_dual: bool) -> usize {
    if (!is_dual && j < k) || (is_dual && j > k) {
        select_3656([a, b, c, i, d, g, h, k, l, j, m], is_dual)
    } else {
        select_3657([a, b, c, h, e, f, g, i, j, l, k, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3662([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_33([a, d, e, g, h, f, j], is_dual)
    } else {
        select_36([a, b, c, i, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3661([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_490([f, d, e, a, h, g, i], is_dual)
    } else {
        select_3662([b, a, c, d, e, g, f, h, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3660([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_172([b, c, a, j, i, k], is_dual)
    } else {
        select_3661([a, b, c, d, e, f, g, h, j, k], is_dual)
    }
}
/// n = 9, i = 3
fn select_3663([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_1284([a, b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_1284([a, b, c, d, f, e, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3659([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3660([b, c, a, d, e, f, h, g, j, i, k], is_dual)
    } else {
        select_3663([b, f, d, e, a, g, h, i, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3654([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < i) || (is_dual && k > i) {
        select_3655([c, d, e, f, a, b, g, h, i, j, l, k, m], is_dual)
    } else {
        select_3659([a, b, e, c, d, g, j, k, n, m, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_3645([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_3646([c, d, e, b, f, h, g, i, a, j, k, l, n, m], is_dual)
    } else {
        select_3654([b, a, c, d, e, f, h, i, g, k, l, j, m, n], is_dual)
    }
}
/// n = 10, i = 3
fn select_3668([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_367([a, b, h, c, i, g, f, j], is_dual)
    } else {
        select_357([b, d, e, f, g, h, i], is_dual)
    }
}
/// n = 8, i = 3
fn select_3669([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_147([a, b, c, d, e, g, f, h], is_dual)
    } else {
        select_40([e, h, a, g, f, b, c], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3667([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && j < f) || (is_dual && j > f) {
        select_3668([a, c, b, d, e, f, g, h, i, k], is_dual)
    } else {
        select_3669([a, b, h, c, i, j, g, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3670([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < g) || (is_dual && a > g) {
        select_122([e, h, i, j, f, a, b], !is_dual)
    } else {
        select_324([e, b, c, d, f, g, h, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3666([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3667([b, c, a, d, e, g, f, h, j, i, k], is_dual)
    } else {
        select_3670([b, f, d, e, g, a, h, j, k, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3673([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < h) || (is_dual && e > h) {
        select_355([b, h, d, f, e, j], is_dual)
    } else {
        select_2474([a, c, b, d, e, f, g, i, h, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3672([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3673([c, a, d, e, b, f, g, h, i, j, k], is_dual)
    } else {
        select_3673([c, b, d, e, a, f, g, h, i, j, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3674([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1898([k, j, i, h, a, b, f, d, c], !is_dual)
    } else {
        select_437([a, b, d, e, h, g, i, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3671([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < h) || (is_dual && f > h) {
        select_3672([a, b, c, d, e, g, h, f, i, j, k], is_dual)
    } else {
        select_3674([a, b, c, d, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3665([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && f < i) || (is_dual && f > i) {
        select_3666([a, b, e, c, d, g, h, i, f, j, l], is_dual)
    } else {
        select_3671([c, d, e, b, a, g, f, h, i, k, j], is_dual)
    }
}
/// n = 12, i = 5
fn select_3676([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && i < a) || (is_dual && i > a) {
        select_3656([b, c, d, a, e, f, g, h, i, j, k], is_dual)
    } else {
        select_21([f, l, k, a, d, i], !is_dual)
    }
}
/// n = 11, i = 4
fn select_3679([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_40([a, b, i, e, f, j, k], is_dual)
    } else {
        select_50([a, c, d, f, h, g, j, i], is_dual)
    }
}
/// n = 11, i = 4
fn select_3678([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < j) || (is_dual && e > j) {
        select_172([k, i, e, f, j, a], !is_dual)
    } else {
        select_3679([a, b, c, d, f, e, g, h, i, k, j], is_dual)
    }
}
/// n = 9, i = 3
fn select_3681([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_490([a, c, d, e, f, g, i], is_dual)
    } else {
        select_96([a, g, b, h, f, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3682([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && e < i) || (is_dual && e > i) {
        select_729([h, a, b, i, j], is_dual)
    } else {
        select_870([a, b, c, d, e, f, g, h, j], is_dual)
    }
}
/// n = 11, i = 4
fn select_3680([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3681([e, b, c, d, f, h, g, i, j], is_dual)
    } else {
        select_3682([a, f, c, d, e, g, h, j, i, k], is_dual)
    }
}
/// n = 11, i = 4
fn select_3677([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && b < a) || (is_dual && b > a) {
        select_3678([c, a, d, e, f, b, g, h, k, i, j], is_dual)
    } else {
        select_3680([c, b, d, e, f, a, g, h, k, j, i], is_dual)
    }
}
/// n = 12, i = 5
fn select_3675([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3676([d, b, c, e, a, g, f, i, h, l, j, k], is_dual)
    } else {
        select_3677([a, d, e, b, c, g, h, i, f, j, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3664([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < c) || (is_dual && a > c) {
        select_3665([b, d, e, f, c, g, a, h, i, k, l, j], is_dual)
    } else {
        select_3675([b, e, f, d, a, g, c, i, h, k, j, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3644([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < h) || (is_dual && j > h) {
        select_3645([a, b, d, e, c, f, g, h, i, k, j, l, m, n], is_dual)
    } else {
        select_3664([a, b, j, c, d, e, g, h, l, m, n, k], is_dual)
    }
}
/// n = 10, i = 4
fn select_3686([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && i < g) || (is_dual && i > g) {
        select_854([e, a, c, f, g, d, h, j], is_dual)
    } else {
        select_1058([d, b, a, e, h, f, i, j], is_dual)
    }
}
/// n = 8, i = 3
fn select_3688([a, b, c, d, e, f, g, h]: [usize; 8], is_dual: bool) -> usize {
    if (!is_dual && b < e) || (is_dual && b > e) {
        select_172([c, a, e, f, b, g], is_dual)
    } else {
        select_2495([a, c, b, d, f, e, h, g], is_dual)
    }
}
/// n = 9, i = 4
fn select_3687([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && c < i) || (is_dual && c > i) {
        select_3688([h, g, f, c, i, d, e, a], !is_dual)
    } else {
        select_684([f, g, h, i, d, c, e, b], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3685([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < a) || (is_dual && f > a) {
        select_3686([b, c, a, d, e, h, i, f, g, j], is_dual)
    } else {
        select_3687([f, c, g, a, e, d, j, h, i], is_dual)
    }
}
/// n = 9, i = 4
fn select_3691([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < a) || (is_dual && d > a) {
        select_1861([g, f, i, d, h, b, a, e, c], !is_dual)
    } else {
        select_1080([b, c, d, e, a, f, g, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3692([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < f) || (is_dual && g > f) {
        select_867([g, j, b, f, a, i, c], !is_dual)
    } else {
        select_1312([h, j, f, a, i, g, b, e, d], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3690([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < e) || (is_dual && a > e) {
        select_3691([b, e, d, a, f, h, g, i, j], is_dual)
    } else {
        select_3692([b, a, c, d, f, g, e, h, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3689([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3368([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_3690([b, a, c, d, f, g, h, i, j, e], is_dual)
    }
}
/// n = 11, i = 5
fn select_3684([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3685([a, b, c, d, g, e, h, i, j, f], is_dual)
    } else {
        select_3689([d, i, k, h, a, j, e, b, g, f], !is_dual)
    }
}
/// n = 9, i = 4
fn select_3697([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && d < e) || (is_dual && d > e) {
        select_39([i, h, a, f, d, b], !is_dual)
    } else {
        select_52([g, h, f, a, e, c], !is_dual)
    }
}
/// n = 10, i = 4
fn select_3696([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < b) || (is_dual && f > b) {
        select_2857([a, c, b, d, e, f, g, h, i, j], is_dual)
    } else {
        select_3697([a, c, f, e, b, h, g, i, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3695([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < g) || (is_dual && f > g) {
        select_1401([b, a, d, g, h, f], is_dual)
    } else {
        select_3696([a, b, c, d, e, f, h, i, g, j], is_dual)
    }
}
/// n = 9, i = 4
fn select_3700([a, b, c, d, e, f, g, h, i]: [usize; 9], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_91([b, a, c, d, e, f, g], is_dual)
    } else {
        select_59([a, b, e, d, g, h, i], is_dual)
    }
}
/// n = 10, i = 4
fn select_3699([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < d) || (is_dual && g > d) {
        select_3700([a, d, c, f, e, h, i, g, j], is_dual)
    } else {
        select_2559([a, b, g, i, j, d, f], is_dual)
    }
}
/// n = 10, i = 4
fn select_3701([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_1284([a, b, c, d, e, f, g, i, j], is_dual)
    } else {
        select_212([c, d, f, a, h], is_dual)
    }
}
/// n = 10, i = 4
fn select_3698([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && a < f) || (is_dual && a > f) {
        select_3699([b, c, d, e, f, g, a, i, j, h], is_dual)
    } else {
        select_3701([b, c, a, d, e, g, f, i, h, j], is_dual)
    }
}
/// n = 10, i = 4
fn select_3694([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && f < e) || (is_dual && f > e) {
        select_3695([c, b, d, a, g, e, h, j, f, i], is_dual)
    } else {
        select_3698([a, c, d, b, g, f, h, e, j, i], is_dual)
    }
}
/// n = 10, i = 3
fn select_3705([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && g < e) || (is_dual && g > e) {
        select_490([b, c, d, f, h, g, i], is_dual)
    } else {
        select_632([i, a, b, e, f, h, j], is_dual)
    }
}
/// n = 10, i = 3
fn select_3704([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && j < e) || (is_dual && j > e) {
        select_3705([b, a, c, d, f, e, g, h, i, j], is_dual)
    } else {
        select_59([f, g, a, i, h, j, e], is_dual)
    }
}
/// n = 12, i = 4
fn select_3707([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < i) || (is_dual && g > i) {
        select_20([a, b, c, i, f, g, l], is_dual)
    } else {
        select_1000([b, g, d, e, f, h, j, i, k], is_dual)
    }
}
/// n = 12, i = 5
fn select_3708([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_303([b, c, d, e, f, g, h, i, k, j], is_dual)
    } else {
        select_32([j, k, l, f, a, i, c, b], !is_dual)
    }
}
/// n = 14, i = 5
fn select_3706([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_3707([a, c, f, d, e, g, i, h, j, k, n, l], is_dual)
    } else {
        select_3708([a, b, g, d, e, i, h, k, l, m, n, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3703([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3704([h, d, e, f, a, g, i, k, j, m], is_dual)
    } else {
        select_3706([b, c, d, e, f, a, g, i, h, j, k, l, n, m], is_dual)
    }
}
/// n = 10, i = 3
fn select_3711([a, b, c, d, e, f, g, h, i, j]: [usize; 10], is_dual: bool) -> usize {
    if (!is_dual && h < e) || (is_dual && h > e) {
        select_278([b, c, d, e, f, g, h, i], is_dual)
    } else {
        select_2297([a, h, b, f, e, i, g, j], is_dual)
    }
}
/// n = 12, i = 4
fn select_3713([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && h < g) || (is_dual && h > g) {
        select_33([b, c, d, f, i, h, k], is_dual)
    } else {
        select_1558([a, b, e, f, g, j, k, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3712([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < j) || (is_dual && i > j) {
        select_1778([a, b, d, e, f, j, h, i, k, m, n], is_dual)
    } else {
        select_3713([b, c, d, e, f, g, i, h, j, k, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3710([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && a < h) || (is_dual && a > h) {
        select_3711([h, c, d, e, a, g, j, i, k, n], is_dual)
    } else {
        select_3712([a, b, c, d, e, f, g, i, h, j, l, k, m, n], is_dual)
    }
}
/// n = 11, i = 4
fn select_3715([a, b, c, d, e, f, g, h, i, j, k]: [usize; 11], is_dual: bool) -> usize {
    if (!is_dual && e < g) || (is_dual && e > g) {
        select_567([a, g, c, d, e, h, j], is_dual)
    } else {
        select_279([a, d, b, e, f, i, g, j, k, h], is_dual)
    }
}
/// n = 12, i = 5
fn select_3714([a, b, c, d, e, f, g, h, i, j, k, l]: [usize; 12], is_dual: bool) -> usize {
    if (!is_dual && a < j) || (is_dual && a > j) {
        select_172([h, a, l, g, e, j], !is_dual)
    } else {
        select_3715([a, b, d, c, e, f, g, h, i, j, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_3709([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < j) || (is_dual && l > j) {
        select_3710([a, b, c, d, e, g, f, h, i, j, k, m, n, l], is_dual)
    } else {
        select_3714([a, b, i, c, f, g, h, k, m, l, n, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3702([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3703([b, c, a, d, e, f, h, g, i, k, j, m, l, n], is_dual)
    } else {
        select_3709([b, c, d, e, f, h, g, a, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3693([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_3694([a, d, c, b, k, h, l, m, n, g], is_dual)
    } else {
        select_3702([a, b, d, c, e, f, h, g, i, j, k, n, l, m], is_dual)
    }
}
/// n = 14, i = 5
fn select_3683([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < l) || (is_dual && g > l) {
        select_3684([k, n, j, a, m, h, g, c, b, l, d], !is_dual)
    } else {
        select_3693([a, c, d, b, e, f, h, g, i, j, k, m, n, l], is_dual)
    }
}
/// n = 14, i = 5
fn select_3643([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < g) || (is_dual && k > g) {
        select_3644([a, c, d, e, f, b, h, i, g, j, l, k, m, n], is_dual)
    } else {
        select_3683([a, c, b, d, e, f, h, i, k, l, m, n, g, j], is_dual)
    }
}
/// n = 14, i = 5
fn select_3594([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && c < a) || (is_dual && c > a) {
        select_3595([b, d, e, a, f, g, h, i, c, j, k, l, m, n], is_dual)
    } else {
        select_3643([b, d, e, c, f, g, h, i, a, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3593([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < i) || (is_dual && h > i) {
        select_3594([a, c, d, e, b, f, g, j, i, k, l, h, m, n], is_dual)
    } else {
        select_3594([b, c, d, e, a, f, g, j, h, k, l, i, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3517([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < k) || (is_dual && l > k) {
        select_3518([e, f, c, d, a, b, g, i, j, h, k, m, l, n], is_dual)
    } else {
        select_3593([e, f, c, g, d, a, b, i, j, h, m, l, n, k], is_dual)
    }
}
/// n = 14, i = 5
fn select_3232([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < h) || (is_dual && g > h) {
        select_3233([a, b, c, d, e, f, h, i, j, k, l, m, g, n], is_dual)
    } else {
        select_3517([a, g, b, c, d, e, f, i, j, k, l, h, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3231([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && j < i) || (is_dual && j > i) {
        select_3232([b, c, a, d, e, f, g, i, h, k, l, m, n, j], is_dual)
    } else {
        select_3232([c, b, a, d, e, f, g, j, h, k, l, m, n, i], is_dual)
    }
}
/// n = 14, i = 5
fn select_3230([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && h < f) || (is_dual && h > f) {
        select_3231([a, b, c, d, e, f, g, i, j, k, l, m, h, n], is_dual)
    } else {
        select_3231([a, b, c, d, e, h, g, i, j, k, l, m, f, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3229([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < e) || (is_dual && i > e) {
        select_3230([a, b, c, d, e, f, g, h, j, k, l, m, i, n], is_dual)
    } else {
        select_3230([a, b, c, d, i, f, g, h, j, k, l, m, e, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3228([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && g < a) || (is_dual && g > a) {
        select_3229([j, a, h, i, b, c, d, e, f, m, g, k, l, n], is_dual)
    } else {
        select_3229([j, g, h, i, b, c, d, e, f, m, a, k, l, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3227([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && i < h) || (is_dual && i > h) {
        select_3228([a, b, c, d, e, f, g, h, j, k, i, l, m, n], is_dual)
    } else {
        select_3228([a, b, c, d, e, f, g, i, j, k, h, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_3226([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && k < j) || (is_dual && k > j) {
        select_3227([a, b, c, d, e, f, g, h, i, j, l, k, m, n], is_dual)
    } else {
        select_3227([a, b, c, d, e, f, g, h, i, k, l, j, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_1([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && l < m) || (is_dual && l > m) {
        select_2([a, b, c, d, e, f, g, h, i, j, k, m, l, n], is_dual)
    } else {
        select_3226([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    }
}
/// n = 14, i = 5
fn select_0([a, b, c, d, e, f, g, h, i, j, k, l, m, n]: [usize; 14], is_dual: bool) -> usize {
    if (!is_dual && n < m) || (is_dual && n > m) {
        select_1([a, b, c, d, e, f, g, h, i, j, k, l, m, n], is_dual)
    } else {
        select_1([a, b, c, d, e, f, g, h, i, j, k, l, n, m], is_dual)
    }
}
